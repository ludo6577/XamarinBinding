//using System;
//using System.Runtime.InteropServices;
//using CFNetwork;
//using CoreAnimation;
//using CoreFoundation;
//using CoreGraphics;
//using CoreText;
//using CoreVideo;
//using Darwin;
//using Dispatch;
//using Foundation;
//using IOSurface;
//using ImageIO;
//using Metal;
//using ObjCRuntime;
//using ObjectiveC;
//using OpenGLES;
//using Security;
//using UIKit;

//static class CFunctions
//{
//	// extern _Complex float cacosf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cacosf ([unsupported Complex: _Complex float]);

//	// extern _Complex float cacosf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cacosf ([unsupported Complex: _Complex float]);

//	// extern _Complex double cacos (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cacos ([unsupported Complex: _Complex double]);

//	// extern _Complex double cacos (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cacos ([unsupported Complex: _Complex double]);

//	// extern _Complex long double cacosl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cacosl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double cacosl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cacosl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float casinf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] casinf ([unsupported Complex: _Complex float]);

//	// extern _Complex float casinf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] casinf ([unsupported Complex: _Complex float]);

//	// extern _Complex double casin (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] casin ([unsupported Complex: _Complex double]);

//	// extern _Complex double casin (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] casin ([unsupported Complex: _Complex double]);

//	// extern _Complex long double casinl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] casinl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double casinl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] casinl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float catanf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] catanf ([unsupported Complex: _Complex float]);

//	// extern _Complex float catanf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] catanf ([unsupported Complex: _Complex float]);

//	// extern _Complex double catan (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] catan ([unsupported Complex: _Complex double]);

//	// extern _Complex double catan (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] catan ([unsupported Complex: _Complex double]);

//	// extern _Complex long double catanl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] catanl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double catanl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] catanl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float ccosf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ccosf ([unsupported Complex: _Complex float]);

//	// extern _Complex float ccosf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ccosf ([unsupported Complex: _Complex float]);

//	// extern _Complex double ccos (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ccos ([unsupported Complex: _Complex double]);

//	// extern _Complex double ccos (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ccos ([unsupported Complex: _Complex double]);

//	// extern _Complex long double ccosl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ccosl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double ccosl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ccosl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float csinf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] csinf ([unsupported Complex: _Complex float]);

//	// extern _Complex float csinf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] csinf ([unsupported Complex: _Complex float]);

//	// extern _Complex double csin (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] csin ([unsupported Complex: _Complex double]);

//	// extern _Complex double csin (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] csin ([unsupported Complex: _Complex double]);

//	// extern _Complex long double csinl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] csinl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double csinl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] csinl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float ctanf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ctanf ([unsupported Complex: _Complex float]);

//	// extern _Complex float ctanf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ctanf ([unsupported Complex: _Complex float]);

//	// extern _Complex double ctan (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ctan ([unsupported Complex: _Complex double]);

//	// extern _Complex double ctan (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ctan ([unsupported Complex: _Complex double]);

//	// extern _Complex long double ctanl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ctanl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double ctanl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ctanl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float cacoshf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cacoshf ([unsupported Complex: _Complex float]);

//	// extern _Complex float cacoshf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cacoshf ([unsupported Complex: _Complex float]);

//	// extern _Complex double cacosh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cacosh ([unsupported Complex: _Complex double]);

//	// extern _Complex double cacosh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cacosh ([unsupported Complex: _Complex double]);

//	// extern _Complex long double cacoshl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cacoshl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double cacoshl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cacoshl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float casinhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] casinhf ([unsupported Complex: _Complex float]);

//	// extern _Complex float casinhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] casinhf ([unsupported Complex: _Complex float]);

//	// extern _Complex double casinh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] casinh ([unsupported Complex: _Complex double]);

//	// extern _Complex double casinh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] casinh ([unsupported Complex: _Complex double]);

//	// extern _Complex long double casinhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] casinhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double casinhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] casinhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float catanhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] catanhf ([unsupported Complex: _Complex float]);

//	// extern _Complex float catanhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] catanhf ([unsupported Complex: _Complex float]);

//	// extern _Complex double catanh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] catanh ([unsupported Complex: _Complex double]);

//	// extern _Complex double catanh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] catanh ([unsupported Complex: _Complex double]);

//	// extern _Complex long double catanhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] catanhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double catanhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] catanhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float ccoshf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ccoshf ([unsupported Complex: _Complex float]);

//	// extern _Complex float ccoshf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ccoshf ([unsupported Complex: _Complex float]);

//	// extern _Complex double ccosh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ccosh ([unsupported Complex: _Complex double]);

//	// extern _Complex double ccosh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ccosh ([unsupported Complex: _Complex double]);

//	// extern _Complex long double ccoshl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ccoshl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double ccoshl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ccoshl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float csinhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] csinhf ([unsupported Complex: _Complex float]);

//	// extern _Complex float csinhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] csinhf ([unsupported Complex: _Complex float]);

//	// extern _Complex double csinh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] csinh ([unsupported Complex: _Complex double]);

//	// extern _Complex double csinh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] csinh ([unsupported Complex: _Complex double]);

//	// extern _Complex long double csinhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] csinhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double csinhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] csinhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float ctanhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ctanhf ([unsupported Complex: _Complex float]);

//	// extern _Complex float ctanhf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] ctanhf ([unsupported Complex: _Complex float]);

//	// extern _Complex double ctanh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ctanh ([unsupported Complex: _Complex double]);

//	// extern _Complex double ctanh (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] ctanh ([unsupported Complex: _Complex double]);

//	// extern _Complex long double ctanhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ctanhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double ctanhl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] ctanhl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float cexpf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cexpf ([unsupported Complex: _Complex float]);

//	// extern _Complex float cexpf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cexpf ([unsupported Complex: _Complex float]);

//	// extern _Complex double cexp (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cexp ([unsupported Complex: _Complex double]);

//	// extern _Complex double cexp (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cexp ([unsupported Complex: _Complex double]);

//	// extern _Complex long double cexpl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cexpl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double cexpl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cexpl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float clogf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] clogf ([unsupported Complex: _Complex float]);

//	// extern _Complex float clogf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] clogf ([unsupported Complex: _Complex float]);

//	// extern _Complex double clog (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] clog ([unsupported Complex: _Complex double]);

//	// extern _Complex double clog (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] clog ([unsupported Complex: _Complex double]);

//	// extern _Complex long double clogl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] clogl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double clogl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] clogl ([unsupported Complex: _Complex long double]);

//	// extern float cabsf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cabsf ([unsupported Complex: _Complex float]);

//	// extern float cabsf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cabsf ([unsupported Complex: _Complex float]);

//	// extern double cabs (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cabs ([unsupported Complex: _Complex double]);

//	// extern double cabs (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cabs ([unsupported Complex: _Complex double]);

//	// extern long double cabsl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cabsl ([unsupported Complex: _Complex long double]);

//	// extern long double cabsl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cabsl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float cpowf (_Complex float, _Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cpowf ([unsupported Complex: _Complex float], [unsupported Complex: _Complex float]);

//	// extern _Complex float cpowf (_Complex float, _Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cpowf ([unsupported Complex: _Complex float], [unsupported Complex: _Complex float]);

//	// extern _Complex double cpow (_Complex double, _Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cpow ([unsupported Complex: _Complex double], [unsupported Complex: _Complex double]);

//	// extern _Complex double cpow (_Complex double, _Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cpow ([unsupported Complex: _Complex double], [unsupported Complex: _Complex double]);

//	// extern _Complex long double cpowl (_Complex long double, _Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cpowl ([unsupported Complex: _Complex long double], [unsupported Complex: _Complex long double]);

//	// extern _Complex long double cpowl (_Complex long double, _Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cpowl ([unsupported Complex: _Complex long double], [unsupported Complex: _Complex long double]);

//	// extern _Complex float csqrtf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] csqrtf ([unsupported Complex: _Complex float]);

//	// extern _Complex float csqrtf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] csqrtf ([unsupported Complex: _Complex float]);

//	// extern _Complex double csqrt (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] csqrt ([unsupported Complex: _Complex double]);

//	// extern _Complex double csqrt (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] csqrt ([unsupported Complex: _Complex double]);

//	// extern _Complex long double csqrtl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] csqrtl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double csqrtl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] csqrtl ([unsupported Complex: _Complex long double]);

//	// extern float cargf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cargf ([unsupported Complex: _Complex float]);

//	// extern float cargf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cargf ([unsupported Complex: _Complex float]);

//	// extern double carg (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double carg ([unsupported Complex: _Complex double]);

//	// extern double carg (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double carg ([unsupported Complex: _Complex double]);

//	// extern long double cargl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cargl ([unsupported Complex: _Complex long double]);

//	// extern long double cargl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cargl ([unsupported Complex: _Complex long double]);

//	// extern float cimagf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cimagf ([unsupported Complex: _Complex float]);

//	// extern float cimagf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cimagf ([unsupported Complex: _Complex float]);

//	// extern double cimag (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cimag ([unsupported Complex: _Complex double]);

//	// extern double cimag (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cimag ([unsupported Complex: _Complex double]);

//	// extern long double cimagl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cimagl ([unsupported Complex: _Complex long double]);

//	// extern long double cimagl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cimagl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float conjf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] conjf ([unsupported Complex: _Complex float]);

//	// extern _Complex float conjf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] conjf ([unsupported Complex: _Complex float]);

//	// extern _Complex double conj (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] conj ([unsupported Complex: _Complex double]);

//	// extern _Complex double conj (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] conj ([unsupported Complex: _Complex double]);

//	// extern _Complex long double conjl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] conjl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double conjl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] conjl ([unsupported Complex: _Complex long double]);

//	// extern _Complex float cprojf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cprojf ([unsupported Complex: _Complex float]);

//	// extern _Complex float cprojf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] cprojf ([unsupported Complex: _Complex float]);

//	// extern _Complex double cproj (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cproj ([unsupported Complex: _Complex double]);

//	// extern _Complex double cproj (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] cproj ([unsupported Complex: _Complex double]);

//	// extern _Complex long double cprojl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cprojl ([unsupported Complex: _Complex long double]);

//	// extern _Complex long double cprojl (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] cprojl ([unsupported Complex: _Complex long double]);

//	// extern float crealf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float crealf ([unsupported Complex: _Complex float]);

//	// extern float crealf (_Complex float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float crealf ([unsupported Complex: _Complex float]);

//	// extern double creal (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double creal ([unsupported Complex: _Complex double]);

//	// extern double creal (_Complex double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double creal ([unsupported Complex: _Complex double]);

//	// extern long double creall (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] creall ([unsupported Complex: _Complex long double]);

//	// extern long double creall (_Complex long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] creall ([unsupported Complex: _Complex long double]);

//	// extern int copyfile (const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int copyfile (sbyte* from, sbyte* to, copyfile_state_t* state, uint flags);

//	// extern int fcopyfile (int from_fd, int to_fd, copyfile_state_t, copyfile_flags_t flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fcopyfile (int from_fd, int to_fd, copyfile_state_t*, uint flags);

//	// extern int copyfile_state_free (copyfile_state_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int copyfile_state_free (copyfile_state_t*);

//	// extern copyfile_state_t copyfile_state_alloc ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe copyfile_state_t* copyfile_state_alloc ();

//	// extern int copyfile_state_get (copyfile_state_t s, uint32_t flag, void *dst);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int copyfile_state_get (copyfile_state_t* s, uint flag, void* dst);

//	// extern int copyfile_state_set (copyfile_state_t s, uint32_t flag, const void *src);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int copyfile_state_set (copyfile_state_t* s, uint flag, void* src);

//	// extern unsigned long ___runetype (__darwin_ct_rune_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint ___runetype (int);

//	// extern __darwin_ct_rune_t ___tolower (__darwin_ct_rune_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ___tolower (int);

//	// extern __darwin_ct_rune_t ___toupper (__darwin_ct_rune_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ___toupper (int);

//	// extern int isascii (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isascii (int _c);

//	// extern int __maskrune (__darwin_ct_rune_t, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __maskrune (int, nuint);

//	// extern int __istype (__darwin_ct_rune_t _c, unsigned long _f);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __istype (int _c, nuint _f);

//	// extern __darwin_ct_rune_t __isctype (__darwin_ct_rune_t _c, unsigned long _f);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __isctype (int _c, nuint _f);

//	// extern __darwin_ct_rune_t __toupper (__darwin_ct_rune_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __toupper (int);

//	// extern __darwin_ct_rune_t __tolower (__darwin_ct_rune_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __tolower (int);

//	// extern int __wcwidth (__darwin_ct_rune_t _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __wcwidth (int _c);

//	// extern int isalnum (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isalnum (int);

//	// extern int isalnum (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isalnum (int _c);

//	// extern int isalpha (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isalpha (int);

//	// extern int isalpha (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isalpha (int _c);

//	// extern int isblank (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isblank (int);

//	// extern int isblank (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isblank (int _c);

//	// extern int iscntrl (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iscntrl (int);

//	// extern int iscntrl (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iscntrl (int _c);

//	// extern int isdigit (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isdigit (int);

//	// extern int isdigit (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isdigit (int _c);

//	// extern int isgraph (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isgraph (int);

//	// extern int isgraph (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isgraph (int _c);

//	// extern int islower (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int islower (int);

//	// extern int islower (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int islower (int _c);

//	// extern int isprint (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isprint (int);

//	// extern int isprint (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isprint (int _c);

//	// extern int ispunct (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ispunct (int);

//	// extern int ispunct (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ispunct (int _c);

//	// extern int isspace (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isspace (int);

//	// extern int isspace (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isspace (int _c);

//	// extern int isupper (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isupper (int);

//	// extern int isupper (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isupper (int _c);

//	// extern int isxdigit (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isxdigit (int);

//	// extern int isxdigit (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isxdigit (int _c);

//	// extern int toascii (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int toascii (int _c);

//	// extern int tolower (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tolower (int);

//	// extern int tolower (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tolower (int _c);

//	// extern int toupper (int) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int toupper (int);

//	// extern int toupper (int _c) __attribute__((nothrow)) __attribute__((pure));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int toupper (int _c);

//	// extern int digittoint (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int digittoint (int _c);

//	// extern int ishexnumber (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ishexnumber (int _c);

//	// extern int isideogram (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isideogram (int _c);

//	// extern int isnumber (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isnumber (int _c);

//	// extern int isphonogram (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isphonogram (int _c);

//	// extern int isrune (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isrune (int _c);

//	// extern int isspecial (int _c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isspecial (int _c);

//	// extern void err (int, const char *, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void err (int, sbyte*, IntPtr varArgs);

//	// extern void verr (int, const char *, __darwin_va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void verr (int, sbyte*, sbyte*);

//	// extern void errc (int, int, const char *, ...) __attribute__((format(printf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void errc (int, int, sbyte*, IntPtr varArgs);

//	// extern void verrc (int, int, const char *, __darwin_va_list) __attribute__((format(printf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void verrc (int, int, sbyte*, sbyte*);

//	// extern void errx (int, const char *, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void errx (int, sbyte*, IntPtr varArgs);

//	// extern void verrx (int, const char *, __darwin_va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void verrx (int, sbyte*, sbyte*);

//	// extern void warn (const char *, ...) __attribute__((format(printf, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void warn (sbyte*, IntPtr varArgs);

//	// extern void vwarn (const char *, __darwin_va_list) __attribute__((format(printf, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void vwarn (sbyte*, sbyte*);

//	// extern void warnc (int, const char *, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void warnc (int, sbyte*, IntPtr varArgs);

//	// extern void vwarnc (int, const char *, __darwin_va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void vwarnc (int, sbyte*, sbyte*);

//	// extern void warnx (const char *, ...) __attribute__((format(printf, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void warnx (sbyte*, IntPtr varArgs);

//	// extern void vwarnx (const char *, __darwin_va_list) __attribute__((format(printf, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void vwarnx (sbyte*, sbyte*);

//	// extern void err_set_file (void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void err_set_file (void*);

//	// extern void err_set_exit (void (* _Nullable)(int));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void err_set_exit ([NullAllowed] Action<int>*);

//	// extern void err_set_exit_b (void (^ _Nullable)(int)) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void err_set_exit_b ([NullAllowed] Action<int>);

//	// extern int * __error ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* __error ();

//	// extern int feclearexcept (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int feclearexcept (int);

//	// extern int fegetexceptflag (fexcept_t *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fegetexceptflag (ushort*, int);

//	// extern int feraiseexcept (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int feraiseexcept (int);

//	// extern int fesetexceptflag (const fexcept_t *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fesetexceptflag (ushort*, int);

//	// extern int fetestexcept (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fetestexcept (int);

//	// extern int fegetround ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fegetround ();

//	// extern int fesetround (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fesetround (int);

//	// extern int fegetenv (fenv_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fegetenv (fenv_t*);

//	// extern int feholdexcept (fenv_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int feholdexcept (fenv_t*);

//	// extern int fesetenv (const fenv_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fesetenv (fenv_t*);

//	// extern int feupdateenv (const fenv_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int feupdateenv (fenv_t*);

//	// extern intmax_t imaxabs (intmax_t j) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint imaxabs (nint j);

//	// extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern imaxdiv_t imaxdiv (nint __numer, nint __denom);

//	// extern intmax_t strtoimax (const char *__restrict __nptr, char **__restrict __endptr, int __base) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint strtoimax (sbyte* __nptr, sbyte** __endptr, int __base);

//	// extern uintmax_t strtoumax (const char *__restrict __nptr, char **__restrict __endptr, int __base) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strtoumax (sbyte* __nptr, sbyte** __endptr, int __base);

//	// extern intmax_t wcstoimax (const wchar_t *__restrict __nptr, wchar_t **__restrict __endptr, int __base) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint wcstoimax (int* __nptr, int** __endptr, int __base);

//	// extern uintmax_t wcstoumax (const wchar_t *__restrict __nptr, wchar_t **__restrict __endptr, int __base) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcstoumax (int* __nptr, int** __endptr, int __base);

//	// extern struct lconv * localeconv ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe lconv* localeconv ();

//	// extern char * setlocale (int, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* setlocale (int, sbyte*);

//	// extern int __math_errhandling ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __math_errhandling ();

//	// extern int __fpclassifyf (float);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __fpclassifyf (float);

//	// extern int __fpclassifyd (double);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __fpclassifyd (double);

//	// extern int __fpclassifyl (long double);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __fpclassifyl ([unsupported Builtin: long double]);

//	// extern int __inline_isfinitef (float) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isfinitef (float);

//	// extern int __inline_isfinited (double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isfinited (double);

//	// extern int __inline_isfinitel (long double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isfinitel ([unsupported Builtin: long double]);

//	// extern int __inline_isinff (float) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isinff (float);

//	// extern int __inline_isinfd (double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isinfd (double);

//	// extern int __inline_isinfl (long double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isinfl ([unsupported Builtin: long double]);

//	// extern int __inline_isnanf (float) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnanf (float);

//	// extern int __inline_isnand (double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnand (double);

//	// extern int __inline_isnanl (long double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnanl ([unsupported Builtin: long double]);

//	// extern int __inline_isnormalf (float) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnormalf (float);

//	// extern int __inline_isnormald (double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnormald (double);

//	// extern int __inline_isnormall (long double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnormall ([unsupported Builtin: long double]);

//	// extern int __inline_signbitf (float) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_signbitf (float);

//	// extern int __inline_signbitd (double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_signbitd (double);

//	// extern int __inline_signbitl (long double) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_signbitl ([unsupported Builtin: long double]);

//	// extern int __inline_isfinitef (float __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isfinitef (float __x);

//	// extern float __builtin_fabsf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __builtin_fabsf (float);

//	// extern float __builtin_inff () __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __builtin_inff ();

//	// extern int __inline_isfinited (double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isfinited (double __x);

//	// extern double __builtin_fabs (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __builtin_fabs (double);

//	// extern double __builtin_inf () __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __builtin_inf ();

//	// extern int __inline_isfinitel (long double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isfinitel ([unsupported Builtin: long double] __x);

//	// extern long double __builtin_fabsl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __builtin_fabsl ([unsupported Builtin: long double]);

//	// extern long double __builtin_infl () __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __builtin_infl ();

//	// extern int __inline_isinff (float __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isinff (float __x);

//	// extern int __inline_isinfd (double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isinfd (double __x);

//	// extern int __inline_isinfl (long double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isinfl ([unsupported Builtin: long double] __x);

//	// extern int __inline_isnanf (float __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnanf (float __x);

//	// extern int __inline_isnand (double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnand (double __x);

//	// extern int __inline_isnanl (long double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnanl ([unsupported Builtin: long double] __x);

//	// extern int __inline_signbitf (float __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_signbitf (float __x);

//	// extern int __inline_signbitd (double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_signbitd (double __x);

//	// extern int __inline_signbitl (long double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_signbitl ([unsupported Builtin: long double] __x);

//	// extern int __inline_isnormalf (float __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnormalf (float __x);

//	// extern int __inline_isnormald (double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnormald (double __x);

//	// extern int __inline_isnormall (long double __x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __inline_isnormall ([unsupported Builtin: long double] __x);

//	// extern float acosf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float acosf (float);

//	// extern float acosf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float acosf (float);

//	// extern double acos (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double acos (double);

//	// extern double acos (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double acos (double);

//	// extern long double acosl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] acosl ([unsupported Builtin: long double]);

//	// extern long double acosl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] acosl ([unsupported Builtin: long double]);

//	// extern float asinf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float asinf (float);

//	// extern float asinf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float asinf (float);

//	// extern double asin (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double asin (double);

//	// extern double asin (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double asin (double);

//	// extern long double asinl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] asinl ([unsupported Builtin: long double]);

//	// extern long double asinl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] asinl ([unsupported Builtin: long double]);

//	// extern float atanf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float atanf (float);

//	// extern float atanf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float atanf (float);

//	// extern double atan (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double atan (double);

//	// extern double atan (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double atan (double);

//	// extern long double atanl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] atanl ([unsupported Builtin: long double]);

//	// extern long double atanl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] atanl ([unsupported Builtin: long double]);

//	// extern float atan2f (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float atan2f (float, float);

//	// extern float atan2f (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float atan2f (float, float);

//	// extern double atan2 (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double atan2 (double, double);

//	// extern double atan2 (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double atan2 (double, double);

//	// extern long double atan2l (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] atan2l ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double atan2l (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] atan2l ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float cosf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cosf (float);

//	// extern float cosf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cosf (float);

//	// extern double cos (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cos (double);

//	// extern double cos (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cos (double);

//	// extern long double cosl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cosl ([unsupported Builtin: long double]);

//	// extern long double cosl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cosl ([unsupported Builtin: long double]);

//	// extern float sinf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float sinf (float);

//	// extern float sinf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float sinf (float);

//	// extern double sin (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double sin (double);

//	// extern double sin (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double sin (double);

//	// extern long double sinl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] sinl ([unsupported Builtin: long double]);

//	// extern long double sinl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] sinl ([unsupported Builtin: long double]);

//	// extern float tanf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float tanf (float);

//	// extern float tanf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float tanf (float);

//	// extern double tan (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double tan (double);

//	// extern double tan (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double tan (double);

//	// extern long double tanl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] tanl ([unsupported Builtin: long double]);

//	// extern long double tanl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] tanl ([unsupported Builtin: long double]);

//	// extern float acoshf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float acoshf (float);

//	// extern float acoshf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float acoshf (float);

//	// extern double acosh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double acosh (double);

//	// extern double acosh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double acosh (double);

//	// extern long double acoshl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] acoshl ([unsupported Builtin: long double]);

//	// extern long double acoshl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] acoshl ([unsupported Builtin: long double]);

//	// extern float asinhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float asinhf (float);

//	// extern float asinhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float asinhf (float);

//	// extern double asinh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double asinh (double);

//	// extern double asinh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double asinh (double);

//	// extern long double asinhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] asinhl ([unsupported Builtin: long double]);

//	// extern long double asinhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] asinhl ([unsupported Builtin: long double]);

//	// extern float atanhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float atanhf (float);

//	// extern float atanhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float atanhf (float);

//	// extern double atanh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double atanh (double);

//	// extern double atanh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double atanh (double);

//	// extern long double atanhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] atanhl ([unsupported Builtin: long double]);

//	// extern long double atanhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] atanhl ([unsupported Builtin: long double]);

//	// extern float coshf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float coshf (float);

//	// extern float coshf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float coshf (float);

//	// extern double cosh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cosh (double);

//	// extern double cosh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cosh (double);

//	// extern long double coshl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] coshl ([unsupported Builtin: long double]);

//	// extern long double coshl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] coshl ([unsupported Builtin: long double]);

//	// extern float sinhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float sinhf (float);

//	// extern float sinhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float sinhf (float);

//	// extern double sinh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double sinh (double);

//	// extern double sinh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double sinh (double);

//	// extern long double sinhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] sinhl ([unsupported Builtin: long double]);

//	// extern long double sinhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] sinhl ([unsupported Builtin: long double]);

//	// extern float tanhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float tanhf (float);

//	// extern float tanhf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float tanhf (float);

//	// extern double tanh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double tanh (double);

//	// extern double tanh (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double tanh (double);

//	// extern long double tanhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] tanhl ([unsupported Builtin: long double]);

//	// extern long double tanhl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] tanhl ([unsupported Builtin: long double]);

//	// extern float expf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float expf (float);

//	// extern float expf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float expf (float);

//	// extern double exp (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double exp (double);

//	// extern double exp (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double exp (double);

//	// extern long double expl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] expl ([unsupported Builtin: long double]);

//	// extern long double expl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] expl ([unsupported Builtin: long double]);

//	// extern float exp2f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float exp2f (float);

//	// extern float exp2f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float exp2f (float);

//	// extern double exp2 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double exp2 (double);

//	// extern double exp2 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double exp2 (double);

//	// extern long double exp2l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] exp2l ([unsupported Builtin: long double]);

//	// extern long double exp2l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] exp2l ([unsupported Builtin: long double]);

//	// extern float expm1f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float expm1f (float);

//	// extern float expm1f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float expm1f (float);

//	// extern double expm1 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double expm1 (double);

//	// extern double expm1 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double expm1 (double);

//	// extern long double expm1l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] expm1l ([unsupported Builtin: long double]);

//	// extern long double expm1l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] expm1l ([unsupported Builtin: long double]);

//	// extern float logf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float logf (float);

//	// extern float logf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float logf (float);

//	// extern double log (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log (double);

//	// extern double log (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log (double);

//	// extern long double logl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] logl ([unsupported Builtin: long double]);

//	// extern long double logl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] logl ([unsupported Builtin: long double]);

//	// extern float log10f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float log10f (float);

//	// extern float log10f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float log10f (float);

//	// extern double log10 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log10 (double);

//	// extern double log10 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log10 (double);

//	// extern long double log10l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] log10l ([unsupported Builtin: long double]);

//	// extern long double log10l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] log10l ([unsupported Builtin: long double]);

//	// extern float log2f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float log2f (float);

//	// extern float log2f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float log2f (float);

//	// extern double log2 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log2 (double);

//	// extern double log2 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log2 (double);

//	// extern long double log2l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] log2l ([unsupported Builtin: long double]);

//	// extern long double log2l (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] log2l ([unsupported Builtin: long double]);

//	// extern float log1pf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float log1pf (float);

//	// extern float log1pf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float log1pf (float);

//	// extern double log1p (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log1p (double);

//	// extern double log1p (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double log1p (double);

//	// extern long double log1pl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] log1pl ([unsupported Builtin: long double]);

//	// extern long double log1pl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] log1pl ([unsupported Builtin: long double]);

//	// extern float logbf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float logbf (float);

//	// extern float logbf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float logbf (float);

//	// extern double logb (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double logb (double);

//	// extern double logb (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double logb (double);

//	// extern long double logbl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] logbl ([unsupported Builtin: long double]);

//	// extern long double logbl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] logbl ([unsupported Builtin: long double]);

//	// extern float modff (float, float *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float modff (float, float*);

//	// extern float modff (float, float *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float modff (float, float*);

//	// extern double modf (double, double *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double modf (double, double*);

//	// extern double modf (double, double *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double modf (double, double*);

//	// extern long double modfl (long double, long double *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] modfl ([unsupported Builtin: long double], [unsupported Builtin: long double]*);

//	// extern long double modfl (long double, long double *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] modfl ([unsupported Builtin: long double], [unsupported Builtin: long double]*);

//	// extern float ldexpf (float, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float ldexpf (float, int);

//	// extern float ldexpf (float, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float ldexpf (float, int);

//	// extern double ldexp (double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double ldexp (double, int);

//	// extern double ldexp (double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double ldexp (double, int);

//	// extern long double ldexpl (long double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] ldexpl ([unsupported Builtin: long double], int);

//	// extern long double ldexpl (long double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] ldexpl ([unsupported Builtin: long double], int);

//	// extern float frexpf (float, int *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float frexpf (float, int*);

//	// extern float frexpf (float, int *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float frexpf (float, int*);

//	// extern double frexp (double, int *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double frexp (double, int*);

//	// extern double frexp (double, int *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double frexp (double, int*);

//	// extern long double frexpl (long double, int *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] frexpl ([unsupported Builtin: long double], int*);

//	// extern long double frexpl (long double, int *) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] frexpl ([unsupported Builtin: long double], int*);

//	// extern int ilogbf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ilogbf (float);

//	// extern int ilogbf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ilogbf (float);

//	// extern int ilogb (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ilogb (double);

//	// extern int ilogb (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ilogb (double);

//	// extern int ilogbl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ilogbl ([unsupported Builtin: long double]);

//	// extern int ilogbl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ilogbl ([unsupported Builtin: long double]);

//	// extern float scalbnf (float, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float scalbnf (float, int);

//	// extern float scalbnf (float, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float scalbnf (float, int);

//	// extern double scalbn (double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double scalbn (double, int);

//	// extern double scalbn (double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double scalbn (double, int);

//	// extern long double scalbnl (long double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] scalbnl ([unsupported Builtin: long double], int);

//	// extern long double scalbnl (long double, int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] scalbnl ([unsupported Builtin: long double], int);

//	// extern float scalblnf (float, long) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float scalblnf (float, nint);

//	// extern float scalblnf (float, long) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float scalblnf (float, nint);

//	// extern double scalbln (double, long) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double scalbln (double, nint);

//	// extern double scalbln (double, long) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double scalbln (double, nint);

//	// extern long double scalblnl (long double, long) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] scalblnl ([unsupported Builtin: long double], nint);

//	// extern long double scalblnl (long double, long) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] scalblnl ([unsupported Builtin: long double], nint);

//	// extern float fabsf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fabsf (float);

//	// extern float fabsf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fabsf (float);

//	// extern double fabs (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fabs (double);

//	// extern double fabs (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fabs (double);

//	// extern long double fabsl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fabsl ([unsupported Builtin: long double]);

//	// extern long double fabsl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fabsl ([unsupported Builtin: long double]);

//	// extern float cbrtf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cbrtf (float);

//	// extern float cbrtf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float cbrtf (float);

//	// extern double cbrt (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cbrt (double);

//	// extern double cbrt (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double cbrt (double);

//	// extern long double cbrtl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cbrtl ([unsupported Builtin: long double]);

//	// extern long double cbrtl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] cbrtl ([unsupported Builtin: long double]);

//	// extern float hypotf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float hypotf (float, float);

//	// extern float hypotf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float hypotf (float, float);

//	// extern double hypot (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double hypot (double, double);

//	// extern double hypot (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double hypot (double, double);

//	// extern long double hypotl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] hypotl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double hypotl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] hypotl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float powf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float powf (float, float);

//	// extern float powf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float powf (float, float);

//	// extern double pow (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double pow (double, double);

//	// extern double pow (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double pow (double, double);

//	// extern long double powl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] powl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double powl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] powl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float sqrtf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float sqrtf (float);

//	// extern float sqrtf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float sqrtf (float);

//	// extern double sqrt (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double sqrt (double);

//	// extern double sqrt (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double sqrt (double);

//	// extern long double sqrtl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] sqrtl ([unsupported Builtin: long double]);

//	// extern long double sqrtl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] sqrtl ([unsupported Builtin: long double]);

//	// extern float erff (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float erff (float);

//	// extern float erff (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float erff (float);

//	// extern double erf (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double erf (double);

//	// extern double erf (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double erf (double);

//	// extern long double erfl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] erfl ([unsupported Builtin: long double]);

//	// extern long double erfl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] erfl ([unsupported Builtin: long double]);

//	// extern float erfcf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float erfcf (float);

//	// extern float erfcf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float erfcf (float);

//	// extern double erfc (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double erfc (double);

//	// extern double erfc (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double erfc (double);

//	// extern long double erfcl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] erfcl ([unsupported Builtin: long double]);

//	// extern long double erfcl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] erfcl ([unsupported Builtin: long double]);

//	// extern float lgammaf (float) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float lgammaf (float);

//	// extern float lgammaf (float) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float lgammaf (float);

//	// extern double lgamma (double) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double lgamma (double);

//	// extern double lgamma (double) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double lgamma (double);

//	// extern long double lgammal (long double) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] lgammal ([unsupported Builtin: long double]);

//	// extern long double lgammal (long double) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] lgammal ([unsupported Builtin: long double]);

//	// extern float tgammaf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float tgammaf (float);

//	// extern float tgammaf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float tgammaf (float);

//	// extern double tgamma (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double tgamma (double);

//	// extern double tgamma (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double tgamma (double);

//	// extern long double tgammal (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] tgammal ([unsupported Builtin: long double]);

//	// extern long double tgammal (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] tgammal ([unsupported Builtin: long double]);

//	// extern float ceilf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float ceilf (float);

//	// extern float ceilf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float ceilf (float);

//	// extern double ceil (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double ceil (double);

//	// extern double ceil (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double ceil (double);

//	// extern long double ceill (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] ceill ([unsupported Builtin: long double]);

//	// extern long double ceill (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] ceill ([unsupported Builtin: long double]);

//	// extern float floorf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float floorf (float);

//	// extern float floorf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float floorf (float);

//	// extern double floor (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double floor (double);

//	// extern double floor (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double floor (double);

//	// extern long double floorl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] floorl ([unsupported Builtin: long double]);

//	// extern long double floorl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] floorl ([unsupported Builtin: long double]);

//	// extern float nearbyintf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float nearbyintf (float);

//	// extern float nearbyintf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float nearbyintf (float);

//	// extern double nearbyint (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double nearbyint (double);

//	// extern double nearbyint (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double nearbyint (double);

//	// extern long double nearbyintl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] nearbyintl ([unsupported Builtin: long double]);

//	// extern long double nearbyintl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] nearbyintl ([unsupported Builtin: long double]);

//	// extern float rintf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float rintf (float);

//	// extern float rintf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float rintf (float);

//	// extern double rint (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double rint (double);

//	// extern double rint (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double rint (double);

//	// extern long double rintl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] rintl ([unsupported Builtin: long double]);

//	// extern long double rintl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] rintl ([unsupported Builtin: long double]);

//	// extern long lrintf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lrintf (float);

//	// extern long lrintf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lrintf (float);

//	// extern long lrint (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lrint (double);

//	// extern long lrint (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lrint (double);

//	// extern long lrintl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lrintl ([unsupported Builtin: long double]);

//	// extern long lrintl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lrintl ([unsupported Builtin: long double]);

//	// extern float roundf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float roundf (float);

//	// extern float roundf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float roundf (float);

//	// extern double round (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double round (double);

//	// extern double round (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double round (double);

//	// extern long double roundl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] roundl ([unsupported Builtin: long double]);

//	// extern long double roundl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] roundl ([unsupported Builtin: long double]);

//	// extern long lroundf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lroundf (float);

//	// extern long lroundf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lroundf (float);

//	// extern long lround (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lround (double);

//	// extern long lround (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lround (double);

//	// extern long lroundl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lroundl ([unsupported Builtin: long double]);

//	// extern long lroundl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lroundl ([unsupported Builtin: long double]);

//	// extern long long llrintf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llrintf (float);

//	// extern long long llrintf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llrintf (float);

//	// extern long long llrint (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llrint (double);

//	// extern long long llrint (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llrint (double);

//	// extern long long llrintl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llrintl ([unsupported Builtin: long double]);

//	// extern long long llrintl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llrintl ([unsupported Builtin: long double]);

//	// extern long long llroundf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llroundf (float);

//	// extern long long llroundf (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llroundf (float);

//	// extern long long llround (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llround (double);

//	// extern long long llround (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llround (double);

//	// extern long long llroundl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llroundl ([unsupported Builtin: long double]);

//	// extern long long llroundl (long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llroundl ([unsupported Builtin: long double]);

//	// extern float truncf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float truncf (float);

//	// extern float truncf (float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float truncf (float);

//	// extern double trunc (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double trunc (double);

//	// extern double trunc (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double trunc (double);

//	// extern long double truncl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] truncl ([unsupported Builtin: long double]);

//	// extern long double truncl (long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] truncl ([unsupported Builtin: long double]);

//	// extern float fmodf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fmodf (float, float);

//	// extern float fmodf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fmodf (float, float);

//	// extern double fmod (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fmod (double, double);

//	// extern double fmod (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fmod (double, double);

//	// extern long double fmodl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fmodl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double fmodl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fmodl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float remainderf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float remainderf (float, float);

//	// extern float remainderf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float remainderf (float, float);

//	// extern double remainder (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double remainder (double, double);

//	// extern double remainder (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double remainder (double, double);

//	// extern long double remainderl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] remainderl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double remainderl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] remainderl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float remquof (float, float, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float remquof (float, float, int*);

//	// extern double remquo (double, double, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double remquo (double, double, int*);

//	// extern long double remquol (long double, long double, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] remquol ([unsupported Builtin: long double], [unsupported Builtin: long double], int*);

//	// extern float copysignf (float, float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float copysignf (float, float);

//	// extern float copysignf (float, float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float copysignf (float, float);

//	// extern double copysign (double, double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double copysign (double, double);

//	// extern double copysign (double, double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double copysign (double, double);

//	// extern long double copysignl (long double, long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] copysignl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double copysignl (long double, long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] copysignl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float nanf (const char *) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float nanf (sbyte*);

//	// extern float nanf (const char *) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float nanf (sbyte*);

//	// extern double nan (const char *) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double nan (sbyte*);

//	// extern double nan (const char *) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double nan (sbyte*);

//	// extern long double nanl (const char *) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] nanl (sbyte*);

//	// extern long double nanl (const char *) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] nanl (sbyte*);

//	// extern float nextafterf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float nextafterf (float, float);

//	// extern float nextafterf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float nextafterf (float, float);

//	// extern double nextafter (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double nextafter (double, double);

//	// extern double nextafter (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double nextafter (double, double);

//	// extern long double nextafterl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] nextafterl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double nextafterl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] nextafterl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern double nexttoward (double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double nexttoward (double, [unsupported Builtin: long double]);

//	// extern double nexttoward (double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double nexttoward (double, [unsupported Builtin: long double]);

//	// extern float nexttowardf (float, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float nexttowardf (float, [unsupported Builtin: long double]);

//	// extern float nexttowardf (float, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float nexttowardf (float, [unsupported Builtin: long double]);

//	// extern long double nexttowardl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] nexttowardl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double nexttowardl (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] nexttowardl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float fdimf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fdimf (float, float);

//	// extern float fdimf (float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fdimf (float, float);

//	// extern double fdim (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fdim (double, double);

//	// extern double fdim (double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fdim (double, double);

//	// extern long double fdiml (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fdiml ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double fdiml (long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fdiml ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float fmaxf (float, float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fmaxf (float, float);

//	// extern float fmaxf (float, float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fmaxf (float, float);

//	// extern double fmax (double, double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fmax (double, double);

//	// extern double fmax (double, double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fmax (double, double);

//	// extern long double fmaxl (long double, long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fmaxl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double fmaxl (long double, long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fmaxl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float fminf (float, float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fminf (float, float);

//	// extern float fminf (float, float) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fminf (float, float);

//	// extern double fmin (double, double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fmin (double, double);

//	// extern double fmin (double, double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fmin (double, double);

//	// extern long double fminl (long double, long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fminl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double fminl (long double, long double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fminl ([unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float fmaf (float, float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fmaf (float, float, float);

//	// extern float fmaf (float, float, float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float fmaf (float, float, float);

//	// extern double fma (double, double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fma (double, double, double);

//	// extern double fma (double, double, double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double fma (double, double, double);

//	// extern long double fmal (long double, long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fmal ([unsupported Builtin: long double], [unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern long double fmal (long double, long double, long double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] fmal ([unsupported Builtin: long double], [unsupported Builtin: long double], [unsupported Builtin: long double]);

//	// extern float __inff () __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __inff ();

//	// extern double __inf () __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __inf ();

//	// extern long double __infl () __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __infl ();

//	// extern float __nan () __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __nan ();

//	// extern float __exp10f (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __exp10f (float);

//	// extern float __exp10f (float) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __exp10f (float);

//	// extern double __exp10 (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __exp10 (double);

//	// extern double __exp10 (double) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __exp10 (double);

//	// extern void __sincosf (float __x, float *__sinp, float *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincosf (float __x, float* __sinp, float* __cosp);

//	// extern void __sincos (double __x, double *__sinp, double *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincos (double __x, double* __sinp, double* __cosp);

//	// extern float __cospif (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __cospif (float);

//	// extern float __cospif (float) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __cospif (float);

//	// extern double __cospi (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __cospi (double);

//	// extern double __cospi (double) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __cospi (double);

//	// extern float __sinpif (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __sinpif (float);

//	// extern float __sinpif (float) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __sinpif (float);

//	// extern double __sinpi (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __sinpi (double);

//	// extern double __sinpi (double) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __sinpi (double);

//	// extern float __tanpif (float) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tanpif (float);

//	// extern float __tanpif (float) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tanpif (float);

//	// extern double __tanpi (double) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tanpi (double);

//	// extern double __tanpi (double) __attribute__((availability(ios, introduced=7.0))) __attribute__((const)) __attribute__((nothrow));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tanpi (double);

//	// extern void __sincospif (float __x, float *__sinp, float *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincospif (float __x, float* __sinp, float* __cosp);

//	// extern void __sincospi (double __x, double *__sinp, double *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincospi (double __x, double* __sinp, double* __cosp);

//	// extern struct __float2 __sincosf_stret (float);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern __float2 __sincosf_stret (float);

//	// extern struct __double2 __sincos_stret (double);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern __double2 __sincos_stret (double);

//	// extern struct __float2 __sincospif_stret (float);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern __float2 __sincospif_stret (float);

//	// extern struct __double2 __sincospi_stret (double);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern __double2 __sincospi_stret (double);

//	// extern void __sincosf (float __x, float *__sinp, float *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincosf (float __x, float* __sinp, float* __cosp);

//	// extern void __sincos (double __x, double *__sinp, double *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincos (double __x, double* __sinp, double* __cosp);

//	// extern void __sincospif (float __x, float *__sinp, float *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincospif (float __x, float* __sinp, float* __cosp);

//	// extern void __sincospi (double __x, double *__sinp, double *__cosp) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __sincospi (double __x, double* __sinp, double* __cosp);

//	// extern double j0 (double) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double j0 (double);

//	// extern double j1 (double) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double j1 (double);

//	// extern double jn (int, double) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double jn (int, double);

//	// extern double y0 (double) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double y0 (double);

//	// extern double y1 (double) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double y1 (double);

//	// extern double yn (int, double) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double yn (int, double);

//	// extern double scalb (double, double);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double scalb (double, double);

//	// extern long rinttol (double) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint rinttol (double);

//	// extern long roundtol (double) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint roundtol (double);

//	// extern double drem (double, double) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double drem (double, double);

//	// extern int finite (double) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int finite (double);

//	// extern int finite (double) __attribute__((availability(ios, unavailable))) __attribute__((nothrow)) __attribute__((const));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int finite (double);

//	// extern double gamma (double) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double gamma (double);

//	// extern double significand (double) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double significand (double);

//	// extern int matherr (struct exception *) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int matherr (exception*);

//	// extern char * readpassphrase (const char *, char *, size_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* readpassphrase (sbyte*, sbyte*, nuint, int);

//	// extern int setjmp (int *) __attribute__((returns_twice));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setjmp (int*);

//	// extern int setjmp (int *) __attribute__((returns_twice));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setjmp (int[]);

//	// extern void longjmp (int *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void longjmp (int*, int);

//	// extern void longjmp (int *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void longjmp (int[], int);

//	// extern int _setjmp (int *) __attribute__((returns_twice));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int _setjmp (int*);

//	// extern int _setjmp (int *) __attribute__((returns_twice));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _setjmp (int[]);

//	// extern void _longjmp (int *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _longjmp (int*, int);

//	// extern void _longjmp (int *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _longjmp (int[], int);

//	// extern int sigsetjmp (int *, int) __attribute__((returns_twice));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigsetjmp (int*, int);

//	// extern int sigsetjmp (int *, int) __attribute__((returns_twice));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sigsetjmp (int[], int);

//	// extern void siglongjmp (int *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void siglongjmp (int*, int);

//	// extern void siglongjmp (int *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void siglongjmp (int[], int);

//	// extern void longjmperror ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void longjmperror ();

//	// extern void (*)(int) signal (int, void (*)(int));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Action<int>* signal (int, Action<int>*);

//	// extern int raise (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int raise (int);

//	// extern void (* _Nullable)(int) bsd_signal (int, void (* _Nullable)(int));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Action<int>* bsd_signal (int, [NullAllowed] Action<int>*);

//	// extern int kill (pid_t, int) asm("_kill");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int kill (int, int);

//	// extern int killpg (pid_t, int) asm("_killpg");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int killpg (int, int);

//	// extern int pthread_kill (pthread_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_kill (pthread_t*, int);

//	// extern int pthread_sigmask (int, const sigset_t *, sigset_t *) asm("_pthread_sigmask");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_sigmask (int, uint*, uint*);

//	// extern int sigaction (int, const struct sigaction *__restrict, struct sigaction *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigaction (int, sigaction*, sigaction*);

//	// extern int sigaddset (sigset_t *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigaddset (uint*, int);

//	// extern int sigaltstack (const stack_t *__restrict, stack_t *__restrict) asm("_sigaltstack") __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigaltstack (stack_t*, stack_t*);

//	// extern int sigdelset (sigset_t *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigdelset (uint*, int);

//	// extern int sigemptyset (sigset_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigemptyset (uint*);

//	// extern int sigfillset (sigset_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigfillset (uint*);

//	// extern int sighold (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sighold (int);

//	// extern int sigignore (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sigignore (int);

//	// extern int siginterrupt (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int siginterrupt (int, int);

//	// extern int sigismember (const sigset_t *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigismember (uint*, int);

//	// extern int sigpause (int) asm("_sigpause");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sigpause (int);

//	// extern int sigpending (sigset_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigpending (uint*);

//	// extern int sigprocmask (int, const sigset_t *__restrict, sigset_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigprocmask (int, uint*, uint*);

//	// extern int sigrelse (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sigrelse (int);

//	// extern void (* _Nullable)(int) sigset (int, void (* _Nullable)(int));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Action<int>* sigset (int, [NullAllowed] Action<int>*);

//	// extern int sigsuspend (const sigset_t *) asm("_sigsuspend");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigsuspend (uint*);

//	// extern int sigwait (const sigset_t *__restrict, int *__restrict) asm("_sigwait");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigwait (uint*, int*);

//	// extern void psignal (unsigned int, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void psignal (uint, sbyte*);

//	// extern int sigblock (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sigblock (int);

//	// extern int sigsetmask (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sigsetmask (int);

//	// extern int sigvec (int, struct sigvec *, struct sigvec *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sigvec (int, sigvec*, sigvec*);

//	// extern void atomic_thread_fence (memory_order);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void atomic_thread_fence (memory_order);

//	// extern void atomic_signal_fence (memory_order);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void atomic_signal_fence (memory_order);

//	// extern _Bool atomic_flag_test_and_set (volatile atomic_flag *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool atomic_flag_test_and_set (atomic_flag*);

//	// extern _Bool atomic_flag_test_and_set_explicit (volatile atomic_flag *, memory_order);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool atomic_flag_test_and_set_explicit (atomic_flag*, memory_order);

//	// extern void atomic_flag_clear (volatile atomic_flag *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void atomic_flag_clear (atomic_flag*);

//	// extern void atomic_flag_clear_explicit (volatile atomic_flag *, memory_order);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void atomic_flag_clear_explicit (atomic_flag*, memory_order);

//	// extern int renameat (int, const char *, int, const char *) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int renameat (int, sbyte*, int, sbyte*);

//	// extern int renamex_np (const char *, const char *, unsigned int) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int renamex_np (sbyte*, sbyte*, uint);

//	// extern int renameatx_np (int, const char *, int, const char *, unsigned int) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int renameatx_np (int, sbyte*, int, sbyte*, uint);

//	// extern void clearerr (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void clearerr (FILE*);

//	// extern int fclose (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fclose (FILE*);

//	// extern int feof (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int feof (FILE*);

//	// extern int ferror (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ferror (FILE*);

//	// extern int fflush (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fflush (FILE*);

//	// extern int fgetc (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fgetc (FILE*);

//	// extern int fgetpos (FILE *__restrict, fpos_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fgetpos (FILE*, long*);

//	// extern char * fgets (char *__restrict, int, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* fgets (sbyte*, int, FILE*);

//	// extern FILE * fopen (const char *__restrict __filename, const char *__restrict __mode) asm("_fopen");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* fopen (sbyte* __filename, sbyte* __mode);

//	// extern int fprintf (FILE *, const char *, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fprintf (FILE*, sbyte*, IntPtr varArgs);

//	// extern int fprintf (FILE *__restrict, const char *__restrict, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fprintf (FILE*, sbyte*, IntPtr varArgs);

//	// extern int fputc (int, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fputc (int, FILE*);

//	// extern int fputs (const char *__restrict, FILE *__restrict) asm("_fputs");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fputs (sbyte*, FILE*);

//	// extern size_t fread (void *__restrict __ptr, size_t __size, size_t __nitems, FILE *__restrict __stream);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint fread (void* __ptr, nuint __size, nuint __nitems, FILE* __stream);

//	// extern FILE * freopen (const char *__restrict, const char *__restrict, FILE *__restrict) asm("_freopen");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* freopen (sbyte*, sbyte*, FILE*);

//	// extern int fscanf (FILE *__restrict, const char *__restrict, ...) __attribute__((format(scanf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fscanf (FILE*, sbyte*, IntPtr varArgs);

//	// extern int fscanf (FILE *__restrict, const char *__restrict, ...) __attribute__((format(scanf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fscanf (FILE*, sbyte*, IntPtr varArgs);

//	// extern int fseek (FILE *, long, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fseek (FILE*, nint, int);

//	// extern int fsetpos (FILE *, const fpos_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fsetpos (FILE*, long*);

//	// extern long ftell (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint ftell (FILE*);

//	// extern size_t fwrite (const void *__restrict __ptr, size_t __size, size_t __nitems, FILE *__restrict __stream) asm("_fwrite");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint fwrite (void* __ptr, nuint __size, nuint __nitems, FILE* __stream);

//	// extern int getc (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getc (FILE*);

//	// extern int getchar ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getchar ();

//	// extern char * gets (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* gets (sbyte*);

//	// extern void perror (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void perror (sbyte*);

//	// extern int printf (const char *, ...) __attribute__((format(printf, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int printf (sbyte*, IntPtr varArgs);

//	// extern int printf (const char *__restrict, ...) __attribute__((format(printf, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int printf (sbyte*, IntPtr varArgs);

//	// extern int putc (int, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int putc (int, FILE*);

//	// extern int putchar (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int putchar (int);

//	// extern int puts (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int puts (sbyte*);

//	// extern int remove (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int remove (sbyte*);

//	// extern int rename (const char *__old, const char *__new);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int rename (sbyte* __old, sbyte* __new);

//	// extern void rewind (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void rewind (FILE*);

//	// extern int scanf (const char *__restrict, ...) __attribute__((format(scanf, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int scanf (sbyte*, IntPtr varArgs);

//	// extern int scanf (const char *__restrict, ...) __attribute__((format(scanf, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int scanf (sbyte*, IntPtr varArgs);

//	// extern void setbuf (FILE *__restrict, char *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void setbuf (FILE*, sbyte*);

//	// extern int setvbuf (FILE *__restrict, char *__restrict, int, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setvbuf (FILE*, sbyte*, int, nuint);

//	// extern int sprintf (char *, const char *, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sprintf (sbyte*, sbyte*, IntPtr varArgs);

//	// extern int sprintf (char *__restrict, const char *__restrict, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sprintf (sbyte*, sbyte*, IntPtr varArgs);

//	// extern int sscanf (const char *__restrict, const char *__restrict, ...) __attribute__((format(scanf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sscanf (sbyte*, sbyte*, IntPtr varArgs);

//	// extern int sscanf (const char *__restrict, const char *__restrict, ...) __attribute__((format(scanf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sscanf (sbyte*, sbyte*, IntPtr varArgs);

//	// extern FILE * tmpfile ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* tmpfile ();

//	// extern char * tmpnam (char *) __attribute__((deprecated("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* tmpnam (sbyte*);

//	// extern int ungetc (int, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ungetc (int, FILE*);

//	// extern int vfprintf (FILE *, const char *, __builtin_va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfprintf (FILE*, sbyte*, sbyte*);

//	// extern int vfprintf (FILE *__restrict, const char *__restrict, va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfprintf (FILE*, sbyte*, sbyte*);

//	// extern int vprintf (const char *, __builtin_va_list) __attribute__((format(printf, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vprintf (sbyte*, sbyte*);

//	// extern int vprintf (const char *__restrict, va_list) __attribute__((format(printf, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vprintf (sbyte*, sbyte*);

//	// extern int vsprintf (char *, const char *, __builtin_va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsprintf (sbyte*, sbyte*, sbyte*);

//	// extern int vsprintf (char *__restrict, const char *__restrict, va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsprintf (sbyte*, sbyte*, sbyte*);

//	// extern char * ctermid (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ctermid (sbyte*);

//	// extern FILE * fdopen (int, const char *) asm("_fdopen");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* fdopen (int, sbyte*);

//	// extern int fileno (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fileno (FILE*);

//	// extern int pclose (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pclose (FILE*);

//	// extern FILE * popen (const char *, const char *) asm("_popen");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* popen (sbyte*, sbyte*);

//	// extern int __srget (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __srget (FILE*);

//	// extern int __svfscanf (FILE *, const char *, va_list) __attribute__((format(scanf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __svfscanf (FILE*, sbyte*, sbyte*);

//	// extern int __swbuf (int, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __swbuf (int, FILE*);

//	// extern int __sputc (int _c, FILE *_p) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __sputc (int _c, FILE* _p);

//	// extern void flockfile (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void flockfile (FILE*);

//	// extern int ftrylockfile (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ftrylockfile (FILE*);

//	// extern void funlockfile (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void funlockfile (FILE*);

//	// extern int getc_unlocked (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getc_unlocked (FILE*);

//	// extern int getchar_unlocked ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getchar_unlocked ();

//	// extern int putc_unlocked (int, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int putc_unlocked (int, FILE*);

//	// extern int putchar_unlocked (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int putchar_unlocked (int);

//	// extern int getw (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getw (FILE*);

//	// extern int putw (int, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int putw (int, FILE*);

//	// extern char * tempnam (const char *__dir, const char *__prefix) asm("_tempnam") __attribute__((deprecated("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* tempnam (sbyte* __dir, sbyte* __prefix);

//	// extern int fseeko (FILE *__stream, off_t __offset, int __whence);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fseeko (FILE* __stream, long __offset, int __whence);

//	// extern off_t ftello (FILE *__stream);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long ftello (FILE* __stream);

//	// extern int snprintf (char *, unsigned long, const char *, ...) __attribute__((format(printf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int snprintf (sbyte*, nuint, sbyte*, IntPtr varArgs);

//	// extern int snprintf (char *__restrict __str, size_t __size, const char *__restrict __format, ...) __attribute__((format(printf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int snprintf (sbyte* __str, nuint __size, sbyte* __format, IntPtr varArgs);

//	// extern int vfscanf (FILE *__restrict, const char *__restrict, __builtin_va_list) __attribute__((format(scanf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfscanf (FILE*, sbyte*, sbyte*);

//	// extern int vfscanf (FILE *__restrict __stream, const char *__restrict __format, va_list) __attribute__((format(scanf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfscanf (FILE* __stream, sbyte* __format, sbyte*);

//	// extern int vscanf (const char *__restrict, __builtin_va_list) __attribute__((format(scanf, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vscanf (sbyte*, sbyte*);

//	// extern int vscanf (const char *__restrict __format, va_list) __attribute__((format(scanf, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vscanf (sbyte* __format, sbyte*);

//	// extern int vsnprintf (char *, unsigned long, const char *, __builtin_va_list) __attribute__((format(printf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsnprintf (sbyte*, nuint, sbyte*, sbyte*);

//	// extern int vsnprintf (char *__restrict __str, size_t __size, const char *__restrict __format, va_list) __attribute__((format(printf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsnprintf (sbyte* __str, nuint __size, sbyte* __format, sbyte*);

//	// extern int vsscanf (const char *__restrict, const char *__restrict, __builtin_va_list) __attribute__((format(scanf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsscanf (sbyte*, sbyte*, sbyte*);

//	// extern int vsscanf (const char *__restrict __str, const char *__restrict __format, va_list) __attribute__((format(scanf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsscanf (sbyte* __str, sbyte* __format, sbyte*);

//	// extern int dprintf (int, const char *__restrict, ...) __attribute__((availability(ios, introduced=4.3))) __attribute__((format(printf, 2, 3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dprintf (int, sbyte*, IntPtr varArgs);

//	// extern int vdprintf (int, const char *__restrict, va_list) __attribute__((availability(ios, introduced=4.3))) __attribute__((format(printf, 2, 0)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vdprintf (int, sbyte*, sbyte*);

//	// extern ssize_t getdelim (char **__restrict __linep, size_t *__restrict __linecapp, int __delimiter, FILE *__restrict __stream) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint getdelim (sbyte** __linep, nuint* __linecapp, int __delimiter, FILE* __stream);

//	// extern ssize_t getline (char **__restrict __linep, size_t *__restrict __linecapp, FILE *__restrict __stream) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint getline (sbyte** __linep, nuint* __linecapp, FILE* __stream);

//	// extern FILE * fmemopen (void *__restrict __buf, size_t __size, const char *__restrict __mode) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* fmemopen (void* __buf, nuint __size, sbyte* __mode);

//	// extern FILE * open_memstream (char **__bufp, size_t *__sizep) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* open_memstream (sbyte** __bufp, nuint* __sizep);

//	// extern int asprintf (char **__restrict, const char *__restrict, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int asprintf (sbyte**, sbyte*, IntPtr varArgs);

//	// extern char * ctermid_r (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ctermid_r (sbyte*);

//	// extern char * fgetln (FILE *, size_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* fgetln (FILE*, nuint*);

//	// extern const char * fmtcheck (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* fmtcheck (sbyte*, sbyte*);

//	// extern int fpurge (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fpurge (FILE*);

//	// extern void setbuffer (FILE *, char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void setbuffer (FILE*, sbyte*, int);

//	// extern int setlinebuf (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setlinebuf (FILE*);

//	// extern int vasprintf (char **__restrict, const char *__restrict, va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vasprintf (sbyte**, sbyte*, sbyte*);

//	// extern FILE * zopen (const char *, const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* zopen (sbyte*, sbyte*, int);

//	// extern FILE * funopen (const void *, int (* _Nullable)(void *, char *, int), int (* _Nullable)(void *, const char *, int), fpos_t (* _Nullable)(void *, fpos_t, int), int (* _Nullable)(void *));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* funopen (void*, [NullAllowed] Func<void*, sbyte*, int, int>*, [NullAllowed] Func<void*, sbyte*, int, int>*, [NullAllowed] Func<void*, long, int, long>*, [NullAllowed] Func<void*, int>*);

//	// extern int __sprintf_chk (char *__restrict, int, size_t, const char *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __sprintf_chk (sbyte*, int, nuint, sbyte*, IntPtr varArgs);

//	// extern int __snprintf_chk (char *__restrict, size_t, int, size_t, const char *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __snprintf_chk (sbyte*, nuint, int, nuint, sbyte*, IntPtr varArgs);

//	// extern int __vsprintf_chk (char *__restrict, int, size_t, const char *__restrict, va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __vsprintf_chk (sbyte*, int, nuint, sbyte*, sbyte*);

//	// extern int __vsnprintf_chk (char *__restrict, size_t, int, size_t, const char *__restrict, va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __vsnprintf_chk (sbyte*, nuint, int, nuint, sbyte*, sbyte*);

//	// extern int getpriority (int, id_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getpriority (int, uint);

//	// extern int getiopolicy_np (int, int) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getiopolicy_np (int, int);

//	// extern int getrlimit (int, struct rlimit *) asm("_getrlimit");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getrlimit (int, rlimit*);

//	// extern int getrusage (int, struct rusage *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getrusage (int, rusage*);

//	// extern int setpriority (int, id_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setpriority (int, uint, int);

//	// extern int setiopolicy_np (int, int, int) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setiopolicy_np (int, int, int);

//	// extern int setrlimit (int, const struct rlimit *) asm("_setrlimit");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setrlimit (int, rlimit*);

//	// uint16_t _OSSwapInt16 (uint16_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort _OSSwapInt16 (ushort data);

//	// uint32_t _OSSwapInt32 (uint32_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint _OSSwapInt32 (uint data);

//	// extern unsigned int __builtin_bswap32 (unsigned int) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint __builtin_bswap32 (uint);

//	// uint64_t _OSSwapInt64 (uint64_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong _OSSwapInt64 (ulong data);

//	// extern unsigned long long __builtin_bswap64 (unsigned long long) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong __builtin_bswap64 (ulong);

//	// uint16_t OSReadSwapInt16 (const volatile void *base, uintptr_t offset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort OSReadSwapInt16 (void* @base, UIntPtr offset);

//	// uint32_t OSReadSwapInt32 (const volatile void *base, uintptr_t offset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint OSReadSwapInt32 (void* @base, UIntPtr offset);

//	// uint64_t OSReadSwapInt64 (const volatile void *base, uintptr_t offset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong OSReadSwapInt64 (void* @base, UIntPtr offset);

//	// void OSWriteSwapInt16 (volatile void *base, uintptr_t offset, uint16_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void OSWriteSwapInt16 (void* @base, UIntPtr offset, ushort data);

//	// void OSWriteSwapInt32 (volatile void *base, uintptr_t offset, uint32_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void OSWriteSwapInt32 (void* @base, UIntPtr offset, uint data);

//	// void OSWriteSwapInt64 (volatile void *base, uintptr_t offset, uint64_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void OSWriteSwapInt64 (void* @base, UIntPtr offset, ulong data);

//	// extern pid_t wait (int *) asm("_wait");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wait (int*);

//	// extern pid_t waitpid (pid_t, int *, int) asm("_waitpid");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int waitpid (int, int*, int);

//	// extern int waitid (idtype_t, id_t, siginfo_t *, int) asm("_waitid");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int waitid (idtype_t, uint, siginfo_t*, int);

//	// extern pid_t wait3 (int *, int, struct rusage *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wait3 (int*, int, rusage*);

//	// extern pid_t wait4 (pid_t, int *, int, struct rusage *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wait4 (int, int*, int, rusage*);

//	// extern void * alloca (unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* alloca (nuint);

//	// extern void * alloca (size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* alloca (nuint);

//	// extern void abort ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void abort ();

//	// extern void abort ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void abort ();

//	// extern int abs (int) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int abs (int);

//	// extern int abs (int) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int abs (int);

//	// extern int atexit (void (* _Nonnull)(void));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int atexit (Action*);

//	// extern double atof (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double atof (sbyte*);

//	// extern int atoi (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int atoi (sbyte*);

//	// extern long atol (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint atol (sbyte*);

//	// extern long long atoll (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long atoll (sbyte*);

//	// extern void * bsearch (const void *__key, const void *__base, size_t __nel, size_t __width, int (* _Nonnull)(const void *, const void *) __compar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* bsearch (void* __key, void* __base, nuint __nel, nuint __width, Func<void*, void*, int>* __compar);

//	// extern void * calloc (unsigned long, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* calloc (nuint, nuint);

//	// extern void * calloc (size_t __count, size_t __size) __attribute__((alloc_size(1, 2))) __attribute__((warn_unused_result));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* calloc (nuint __count, nuint __size);

//	// extern div_t div (int, int) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern div_t div (int, int);

//	// extern void exit (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void exit (int);

//	// extern void exit (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void exit (int);

//	// extern void free (void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void free (void*);

//	// extern char * getenv (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getenv (sbyte*);

//	// extern long labs (long) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint labs (nint);

//	// extern long labs (long) __attribute__((const)) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint labs (nint);

//	// extern ldiv_t ldiv (long, long) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ldiv_t ldiv (nint, nint);

//	// extern long long llabs (long long) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llabs (long);

//	// extern long long llabs (long long) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long llabs (long);

//	// extern lldiv_t lldiv (long long, long long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern lldiv_t lldiv (long, long);

//	// extern void * malloc (unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* malloc (nuint);

//	// extern void * malloc (size_t __size) __attribute__((alloc_size(1, 0))) __attribute__((warn_unused_result));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* malloc (nuint __size);

//	// extern int mblen (const char *__s, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mblen (sbyte* __s, nuint __n);

//	// extern size_t mbstowcs (wchar_t *__restrict, const char *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbstowcs (int*, sbyte*, nuint);

//	// extern int mbtowc (wchar_t *__restrict, const char *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mbtowc (int*, sbyte*, nuint);

//	// extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_memalign (void** __memptr, nuint __alignment, nuint __size);

//	// extern void qsort (void *__base, size_t __nel, size_t __width, int (* _Nonnull)(const void *, const void *) __compar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void qsort (void* __base, nuint __nel, nuint __width, Func<void*, void*, int>* __compar);

//	// extern int rand ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int rand ();

//	// extern void * realloc (void *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* realloc (void*, nuint);

//	// extern void * realloc (void *__ptr, size_t __size) __attribute__((alloc_size(2, 0))) __attribute__((warn_unused_result));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* realloc (void* __ptr, nuint __size);

//	// extern void srand (unsigned int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void srand (uint);

//	// extern double strtod (const char *, char **) asm("_strtod");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double strtod (sbyte*, sbyte**);

//	// extern float strtof (const char *, char **) asm("_strtof");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float strtof (sbyte*, sbyte**);

//	// extern long strtol (const char *__str, char **__endptr, int __base);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint strtol (sbyte* __str, sbyte** __endptr, int __base);

//	// extern long double strtold (const char *, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] strtold (sbyte*, sbyte**);

//	// extern long long strtoll (const char *__str, char **__endptr, int __base);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long strtoll (sbyte* __str, sbyte** __endptr, int __base);

//	// extern unsigned long strtoul (const char *__str, char **__endptr, int __base);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strtoul (sbyte* __str, sbyte** __endptr, int __base);

//	// extern unsigned long long strtoull (const char *__str, char **__endptr, int __base);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong strtoull (sbyte* __str, sbyte** __endptr, int __base);

//	// extern int system (const char *) asm("_system") __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.0)));
//	[NoWatch, NoTV, NoiOS, Mac (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int system (sbyte*);

//	// extern size_t wcstombs (char *__restrict, const wchar_t *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcstombs (sbyte*, int*, nuint);

//	// extern int wctomb (char *, wchar_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wctomb (sbyte*, int);

//	// extern void _Exit (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _Exit (int);

//	// extern void _Exit (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _Exit (int);

//	// extern long a64l (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint a64l (sbyte*);

//	// extern double drand48 ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double drand48 ();

//	// extern char * ecvt (double, int, int *__restrict, int *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ecvt (double, int, int*, int*);

//	// extern double erand48 (unsigned short *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double erand48 (ushort[]);

//	// extern char * fcvt (double, int, int *__restrict, int *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* fcvt (double, int, int*, int*);

//	// extern char * gcvt (double, int, char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* gcvt (double, int, sbyte*);

//	// extern int getsubopt (char **, char *const *, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getsubopt (sbyte**, sbyte**, sbyte**);

//	// extern int grantpt (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int grantpt (int);

//	// extern char * initstate (unsigned int, char *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* initstate (uint, sbyte*, nuint);

//	// extern long jrand48 (unsigned short *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint jrand48 (ushort[]);

//	// extern char * l64a (long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* l64a (nint);

//	// extern void lcong48 (unsigned short *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void lcong48 (ushort[]);

//	// extern long lrand48 ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint lrand48 ();

//	// extern char * mktemp (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* mktemp (sbyte*);

//	// extern int mkstemp (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkstemp (sbyte*);

//	// extern long mrand48 ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint mrand48 ();

//	// extern long nrand48 (unsigned short *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint nrand48 (ushort[]);

//	// extern int posix_openpt (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int posix_openpt (int);

//	// extern char * ptsname (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ptsname (int);

//	// extern int putenv (char *) asm("_putenv");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int putenv (sbyte*);

//	// extern long random ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint random ();

//	// extern int rand_r (unsigned int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int rand_r (uint*);

//	// extern char * realpath (const char *__restrict, char *__restrict) asm("_realpath$DARWIN_EXTSN");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* realpath (sbyte*, sbyte*);

//	// extern unsigned short * seed48 (unsigned short *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort* seed48 (ushort[]);

//	// extern int setenv (const char *__name, const char *__value, int __overwrite) asm("_setenv");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setenv (sbyte* __name, sbyte* __value, int __overwrite);

//	// extern void setkey (const char *) asm("_setkey");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void setkey (sbyte*);

//	// extern char * setstate (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* setstate (sbyte*);

//	// extern void srand48 (long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void srand48 (nint);

//	// extern void srandom (unsigned int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void srandom (uint);

//	// extern int unlockpt (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int unlockpt (int);

//	// extern int unsetenv (const char *) asm("_unsetenv");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int unsetenv (sbyte*);

//	// extern uint32_t arc4random ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint arc4random ();

//	// extern void arc4random_addrandom (unsigned char *, int) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(tvos, introduced=2.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, deprecated=10.12))) __attribute__((availability(macos, introduced=10.0)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "use arc4random_stir")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "use arc4random_stir")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "use arc4random_stir")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "use arc4random_stir")]
//	[Watch (1,0), TV (2,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void arc4random_addrandom (byte*, int);

//	// extern void arc4random_buf (void *__buf, size_t __nbytes) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void arc4random_buf (void* __buf, nuint __nbytes);

//	// extern void arc4random_stir ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void arc4random_stir ();

//	// extern uint32_t arc4random_uniform (uint32_t __upper_bound) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint arc4random_uniform (uint __upper_bound);

//	// extern int atexit_b (void (^ _Nonnull)(void)) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int atexit_b (Action);

//	// extern void * bsearch_b (const void *__key, const void *__base, size_t __nel, size_t __width, int (^ _Nonnull)(const void *, const void *) __compar) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* bsearch_b (void* __key, void* __base, nuint __nel, nuint __width, Func<void*, void*, int> __compar);

//	// extern char * cgetcap (char *, const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* cgetcap (sbyte*, sbyte*, int);

//	// extern int cgetclose ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int cgetclose ();

//	// extern int cgetent (char **, char **, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetent (sbyte**, sbyte**, sbyte*);

//	// extern int cgetfirst (char **, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetfirst (sbyte**, sbyte**);

//	// extern int cgetmatch (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetmatch (sbyte*, sbyte*);

//	// extern int cgetnext (char **, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetnext (sbyte**, sbyte**);

//	// extern int cgetnum (char *, const char *, long *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetnum (sbyte*, sbyte*, nint*);

//	// extern int cgetset (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetset (sbyte*);

//	// extern int cgetstr (char *, const char *, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetstr (sbyte*, sbyte*, sbyte**);

//	// extern int cgetustr (char *, const char *, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cgetustr (sbyte*, sbyte*, sbyte**);

//	// extern int daemon (int, int) asm("_daemon") __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=2.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use posix_spawn APIs instead.")]
//	[Deprecated (PlatformName.iOS, 2, 0, message: "Use posix_spawn APIs instead.")]
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int daemon (int, int);

//	// extern char * devname (dev_t, mode_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* devname (int, ushort);

//	// extern char * devname_r (dev_t, mode_t, char *buf, int len);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* devname_r (int, ushort, sbyte* buf, int len);

//	// extern char * getbsize (int *, long *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getbsize (int*, nint*);

//	// extern int getloadavg (double *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getloadavg (double[], int);

//	// extern const char * getprogname ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getprogname ();

//	// extern int heapsort (void *__base, size_t __nel, size_t __width, int (* _Nonnull)(const void *, const void *) __compar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int heapsort (void* __base, nuint __nel, nuint __width, Func<void*, void*, int>* __compar);

//	// extern int heapsort_b (void *__base, size_t __nel, size_t __width, int (^ _Nonnull)(const void *, const void *) __compar) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int heapsort_b (void* __base, nuint __nel, nuint __width, Func<void*, void*, int> __compar);

//	// extern int mergesort (void *__base, size_t __nel, size_t __width, int (* _Nonnull)(const void *, const void *) __compar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mergesort (void* __base, nuint __nel, nuint __width, Func<void*, void*, int>* __compar);

//	// extern int mergesort_b (void *__base, size_t __nel, size_t __width, int (^ _Nonnull)(const void *, const void *) __compar) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mergesort_b (void* __base, nuint __nel, nuint __width, Func<void*, void*, int> __compar);

//	// extern void psort (void *__base, size_t __nel, size_t __width, int (* _Nonnull)(const void *, const void *) __compar) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void psort (void* __base, nuint __nel, nuint __width, Func<void*, void*, int>* __compar);

//	// extern void psort_b (void *__base, size_t __nel, size_t __width, int (^ _Nonnull)(const void *, const void *) __compar) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void psort_b (void* __base, nuint __nel, nuint __width, Func<void*, void*, int> __compar);

//	// extern void psort_r (void *__base, size_t __nel, size_t __width, void *, int (* _Nonnull)(void *, const void *, const void *) __compar) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void psort_r (void* __base, nuint __nel, nuint __width, void*, Func<void*, void*, void*, int>* __compar);

//	// extern void qsort_b (void *__base, size_t __nel, size_t __width, int (^ _Nonnull)(const void *, const void *) __compar) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void qsort_b (void* __base, nuint __nel, nuint __width, Func<void*, void*, int> __compar);

//	// extern void qsort_r (void *__base, size_t __nel, size_t __width, void *, int (* _Nonnull)(void *, const void *, const void *) __compar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void qsort_r (void* __base, nuint __nel, nuint __width, void*, Func<void*, void*, void*, int>* __compar);

//	// extern int radixsort (const unsigned char **__base, int __nel, const unsigned char *__table, unsigned int __endbyte);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int radixsort (byte** __base, int __nel, byte* __table, uint __endbyte);

//	// extern void setprogname (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void setprogname (sbyte*);

//	// extern int sradixsort (const unsigned char **__base, int __nel, const unsigned char *__table, unsigned int __endbyte);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sradixsort (byte** __base, int __nel, byte* __table, uint __endbyte);

//	// extern void sranddev ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void sranddev ();

//	// extern void srandomdev ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void srandomdev ();

//	// extern void * reallocf (void *__ptr, size_t __size) __attribute__((alloc_size(2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* reallocf (void* __ptr, nuint __size);

//	// extern long long strtoq (const char *__str, char **__endptr, int __base);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long strtoq (sbyte* __str, sbyte** __endptr, int __base);

//	// extern unsigned long long strtouq (const char *__str, char **__endptr, int __base);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong strtouq (sbyte* __str, sbyte** __endptr, int __base);

//	// extern void * valloc (size_t) __attribute__((alloc_size(1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* valloc (nuint);

//	// extern void * memchr (const void *, int, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memchr (void*, int, nuint);

//	// extern void * memchr (const void *__s, int __c, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memchr (void* __s, int __c, nuint __n);

//	// extern int memcmp (const void *, const void *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int memcmp (void*, void*, nuint);

//	// extern int memcmp (const void *__s1, const void *__s2, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int memcmp (void* __s1, void* __s2, nuint __n);

//	// extern void * memcpy (void *, const void *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memcpy (void*, void*, nuint);

//	// extern void * memcpy (void *__dst, const void *__src, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memcpy (void* __dst, void* __src, nuint __n);

//	// extern void * memmove (void *, const void *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memmove (void*, void*, nuint);

//	// extern void * memmove (void *__dst, const void *__src, size_t __len);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memmove (void* __dst, void* __src, nuint __len);

//	// extern void * memset (void *, int, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memset (void*, int, nuint);

//	// extern void * memset (void *__b, int __c, size_t __len);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memset (void* __b, int __c, nuint __len);

//	// extern char * strcat (char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strcat (sbyte*, sbyte*);

//	// extern char * strcat (char *__s1, const char *__s2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strcat (sbyte* __s1, sbyte* __s2);

//	// extern char * strchr (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strchr (sbyte*, int);

//	// extern char * strchr (const char *__s, int __c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strchr (sbyte* __s, int __c);

//	// extern int strcmp (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strcmp (sbyte*, sbyte*);

//	// extern int strcmp (const char *__s1, const char *__s2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strcmp (sbyte* __s1, sbyte* __s2);

//	// extern int strcoll (const char *__s1, const char *__s2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strcoll (sbyte* __s1, sbyte* __s2);

//	// extern char * strcpy (char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strcpy (sbyte*, sbyte*);

//	// extern char * strcpy (char *__dst, const char *__src);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strcpy (sbyte* __dst, sbyte* __src);

//	// extern unsigned long strcspn (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strcspn (sbyte*, sbyte*);

//	// extern unsigned long strcspn (const char *__s, const char *__charset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strcspn (sbyte* __s, sbyte* __charset);

//	// extern char * strerror (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strerror (int);

//	// extern char * strerror (int __errnum) asm("_strerror");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strerror (int __errnum);

//	// extern unsigned long strlen (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strlen (sbyte*);

//	// extern unsigned long strlen (const char *__s);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strlen (sbyte* __s);

//	// extern char * strncat (char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strncat (sbyte*, sbyte*, nuint);

//	// extern char * strncat (char *__s1, const char *__s2, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strncat (sbyte* __s1, sbyte* __s2, nuint __n);

//	// extern int strncmp (const char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strncmp (sbyte*, sbyte*, nuint);

//	// extern int strncmp (const char *__s1, const char *__s2, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strncmp (sbyte* __s1, sbyte* __s2, nuint __n);

//	// extern char * strncpy (char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strncpy (sbyte*, sbyte*, nuint);

//	// extern char * strncpy (char *__dst, const char *__src, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strncpy (sbyte* __dst, sbyte* __src, nuint __n);

//	// extern char * strpbrk (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strpbrk (sbyte*, sbyte*);

//	// extern char * strpbrk (const char *__s, const char *__charset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strpbrk (sbyte* __s, sbyte* __charset);

//	// extern char * strrchr (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strrchr (sbyte*, int);

//	// extern char * strrchr (const char *__s, int __c);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strrchr (sbyte* __s, int __c);

//	// extern unsigned long strspn (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strspn (sbyte*, sbyte*);

//	// extern unsigned long strspn (const char *__s, const char *__charset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strspn (sbyte* __s, sbyte* __charset);

//	// extern char * strstr (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strstr (sbyte*, sbyte*);

//	// extern char * strstr (const char *__big, const char *__little);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strstr (sbyte* __big, sbyte* __little);

//	// extern char * strtok (char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strtok (sbyte*, sbyte*);

//	// extern char * strtok (char *__str, const char *__sep);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strtok (sbyte* __str, sbyte* __sep);

//	// extern unsigned long strxfrm (char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strxfrm (sbyte*, sbyte*, nuint);

//	// extern unsigned long strxfrm (char *__s1, const char *__s2, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strxfrm (sbyte* __s1, sbyte* __s2, nuint __n);

//	// extern char * strtok_r (char *__str, const char *__sep, char **__lasts);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strtok_r (sbyte* __str, sbyte* __sep, sbyte** __lasts);

//	// extern int strerror_r (int __errnum, char *__strerrbuf, size_t __buflen);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strerror_r (int __errnum, sbyte* __strerrbuf, nuint __buflen);

//	// extern char * strdup (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strdup (sbyte*);

//	// extern char * strdup (const char *__s1);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strdup (sbyte* __s1);

//	// extern void * memccpy (void *__dst, const void *__src, int __c, size_t __n);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memccpy (void* __dst, void* __src, int __c, nuint __n);

//	// extern char * stpcpy (char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* stpcpy (sbyte*, sbyte*);

//	// extern char * stpcpy (char *__dst, const char *__src);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* stpcpy (sbyte* __dst, sbyte* __src);

//	// extern char * stpncpy (char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* stpncpy (sbyte*, sbyte*, nuint);

//	// extern char * stpncpy (char *__dst, const char *__src, size_t __n) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* stpncpy (sbyte* __dst, sbyte* __src, nuint __n);

//	// extern char * strndup (const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strndup (sbyte*, nuint);

//	// extern char * strndup (const char *__s1, size_t __n) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strndup (sbyte* __s1, nuint __n);

//	// extern size_t strnlen (const char *__s1, size_t __n) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strnlen (sbyte* __s1, nuint __n);

//	// extern char * strsignal (int __sig);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strsignal (int __sig);

//	// extern errno_t memset_s (void *__s, rsize_t __smax, int __c, rsize_t __n) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int memset_s (void* __s, nuint __smax, int __c, nuint __n);

//	// extern void * memmem (const void *__big, size_t __big_len, const void *__little, size_t __little_len) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* memmem (void* __big, nuint __big_len, void* __little, nuint __little_len);

//	// extern void memset_pattern4 (void *__b, const void *__pattern4, size_t __len) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void memset_pattern4 (void* __b, void* __pattern4, nuint __len);

//	// extern void memset_pattern8 (void *__b, const void *__pattern8, size_t __len) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void memset_pattern8 (void* __b, void* __pattern8, nuint __len);

//	// extern void memset_pattern16 (void *__b, const void *__pattern16, size_t __len) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void memset_pattern16 (void* __b, void* __pattern16, nuint __len);

//	// extern char * strcasestr (const char *__big, const char *__little);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strcasestr (sbyte* __big, sbyte* __little);

//	// extern char * strnstr (const char *__big, const char *__little, size_t __len);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strnstr (sbyte* __big, sbyte* __little, nuint __len);

//	// extern unsigned long strlcat (char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strlcat (sbyte*, sbyte*, nuint);

//	// extern unsigned long strlcat (char *__dst, const char *__source, size_t __size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strlcat (sbyte* __dst, sbyte* __source, nuint __size);

//	// extern unsigned long strlcpy (char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strlcpy (sbyte*, sbyte*, nuint);

//	// extern unsigned long strlcpy (char *__dst, const char *__source, size_t __size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strlcpy (sbyte* __dst, sbyte* __source, nuint __size);

//	// extern void strmode (int __mode, char *__bp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void strmode (int __mode, sbyte* __bp);

//	// extern char * strsep (char **__stringp, const char *__delim);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strsep (sbyte** __stringp, sbyte* __delim);

//	// extern void swab (const void *__restrict, void *__restrict, ssize_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void swab (void*, void*, nint);

//	// extern int timingsafe_bcmp (const void *__b1, const void *__b2, size_t __len) __attribute__((availability(watchos, introduced=3.1))) __attribute__((availability(tvos, introduced=10.0.1))) __attribute__((availability(ios, introduced=10.1))) __attribute__((availability(macos, introduced=10.12.1)));
//	[Watch (3,1), TV (10,0,1), Mac (10,12,1), iOS (10,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int timingsafe_bcmp (void* __b1, void* __b2, nuint __len);

//	// extern int bcmp (const void *, const void *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int bcmp (void*, void*, nuint);

//	// extern void bcopy (const void *, void *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void bcopy (void*, void*, nuint);

//	// extern void bzero (void *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void bzero (void*, nuint);

//	// extern void bzero (void *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void bzero (void*, nuint);

//	// extern char * index (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* index (sbyte*, int);

//	// extern char * index (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* index (sbyte*, int);

//	// extern char * rindex (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* rindex (sbyte*, int);

//	// extern char * rindex (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* rindex (sbyte*, int);

//	// extern int ffs (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ffs (int);

//	// extern int strcasecmp (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strcasecmp (sbyte*, sbyte*);

//	// extern int strcasecmp (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strcasecmp (sbyte*, sbyte*);

//	// extern int strncasecmp (const char *, const char *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strncasecmp (sbyte*, sbyte*, nuint);

//	// extern int strncasecmp (const char *, const char *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strncasecmp (sbyte*, sbyte*, nuint);

//	// extern int ffsl (long) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ffsl (nint);

//	// extern int ffsll (long long) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ffsll (long);

//	// extern int fls (int) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fls (int);

//	// extern int flsl (long) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int flsl (nint);

//	// extern int flsll (long long) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int flsll (long);

//	// double __tg_promote (int) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_promote (int);

//	// double __tg_promote (unsigned int) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_promote (uint);

//	// double __tg_promote (long) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_promote (nint);

//	// double __tg_promote (unsigned long) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_promote (nuint);

//	// double __tg_promote (long long) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_promote (long);

//	// double __tg_promote (unsigned long long) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_promote (ulong);

//	// float __tg_promote (float) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_promote (float);

//	// double __tg_promote (double) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_promote (double);

//	// long double __tg_promote (long double) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_promote ([unsupported Builtin: long double]);

//	// _Complex float __tg_promote (_Complex float) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_promote ([unsupported Complex: _Complex float]);

//	// _Complex double __tg_promote (_Complex double) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_promote ([unsupported Complex: _Complex double]);

//	// _Complex long double __tg_promote (_Complex long double) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_promote ([unsupported Complex: _Complex long double]);

//	// float __tg_acos (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_acos (float __x);

//	// double __tg_acos (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_acos (double __x);

//	// long double __tg_acos (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_acos ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_acos (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_acos ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_acos (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_acos ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_acos (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_acos ([unsupported Complex: _Complex long double] __x);

//	// float __tg_asin (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_asin (float __x);

//	// double __tg_asin (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_asin (double __x);

//	// long double __tg_asin (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_asin ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_asin (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_asin ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_asin (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_asin ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_asin (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_asin ([unsupported Complex: _Complex long double] __x);

//	// float __tg_atan (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_atan (float __x);

//	// double __tg_atan (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_atan (double __x);

//	// long double __tg_atan (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_atan ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_atan (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_atan ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_atan (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_atan ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_atan (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_atan ([unsupported Complex: _Complex long double] __x);

//	// float __tg_acosh (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_acosh (float __x);

//	// double __tg_acosh (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_acosh (double __x);

//	// long double __tg_acosh (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_acosh ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_acosh (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_acosh ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_acosh (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_acosh ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_acosh (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_acosh ([unsupported Complex: _Complex long double] __x);

//	// float __tg_asinh (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_asinh (float __x);

//	// double __tg_asinh (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_asinh (double __x);

//	// long double __tg_asinh (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_asinh ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_asinh (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_asinh ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_asinh (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_asinh ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_asinh (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_asinh ([unsupported Complex: _Complex long double] __x);

//	// float __tg_atanh (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_atanh (float __x);

//	// double __tg_atanh (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_atanh (double __x);

//	// long double __tg_atanh (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_atanh ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_atanh (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_atanh ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_atanh (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_atanh ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_atanh (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_atanh ([unsupported Complex: _Complex long double] __x);

//	// float __tg_cos (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_cos (float __x);

//	// double __tg_cos (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_cos (double __x);

//	// long double __tg_cos (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_cos ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_cos (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_cos ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_cos (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_cos ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_cos (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_cos ([unsupported Complex: _Complex long double] __x);

//	// float __tg_sin (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_sin (float __x);

//	// double __tg_sin (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_sin (double __x);

//	// long double __tg_sin (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_sin ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_sin (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_sin ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_sin (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_sin ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_sin (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_sin ([unsupported Complex: _Complex long double] __x);

//	// float __tg_tan (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_tan (float __x);

//	// double __tg_tan (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_tan (double __x);

//	// long double __tg_tan (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_tan ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_tan (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_tan ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_tan (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_tan ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_tan (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_tan ([unsupported Complex: _Complex long double] __x);

//	// float __tg_cosh (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_cosh (float __x);

//	// double __tg_cosh (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_cosh (double __x);

//	// long double __tg_cosh (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_cosh ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_cosh (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_cosh ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_cosh (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_cosh ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_cosh (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_cosh ([unsupported Complex: _Complex long double] __x);

//	// float __tg_sinh (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_sinh (float __x);

//	// double __tg_sinh (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_sinh (double __x);

//	// long double __tg_sinh (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_sinh ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_sinh (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_sinh ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_sinh (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_sinh ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_sinh (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_sinh ([unsupported Complex: _Complex long double] __x);

//	// float __tg_tanh (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_tanh (float __x);

//	// double __tg_tanh (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_tanh (double __x);

//	// long double __tg_tanh (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_tanh ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_tanh (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_tanh ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_tanh (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_tanh ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_tanh (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_tanh ([unsupported Complex: _Complex long double] __x);

//	// float __tg_exp (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_exp (float __x);

//	// double __tg_exp (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_exp (double __x);

//	// long double __tg_exp (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_exp ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_exp (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_exp ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_exp (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_exp ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_exp (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_exp ([unsupported Complex: _Complex long double] __x);

//	// float __tg_log (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_log (float __x);

//	// double __tg_log (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_log (double __x);

//	// long double __tg_log (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_log ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_log (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_log ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_log (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_log ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_log (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_log ([unsupported Complex: _Complex long double] __x);

//	// float __tg_pow (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_pow (float __x, float __y);

//	// double __tg_pow (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_pow (double __x, double __y);

//	// long double __tg_pow (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_pow ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// _Complex float __tg_pow (_Complex float __x, _Complex float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_pow ([unsupported Complex: _Complex float] __x, [unsupported Complex: _Complex float] __y);

//	// _Complex double __tg_pow (_Complex double __x, _Complex double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_pow ([unsupported Complex: _Complex double] __x, [unsupported Complex: _Complex double] __y);

//	// _Complex long double __tg_pow (_Complex long double __x, _Complex long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_pow ([unsupported Complex: _Complex long double] __x, [unsupported Complex: _Complex long double] __y);

//	// float __tg_sqrt (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_sqrt (float __x);

//	// double __tg_sqrt (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_sqrt (double __x);

//	// long double __tg_sqrt (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_sqrt ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_sqrt (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_sqrt ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_sqrt (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_sqrt ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_sqrt (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_sqrt ([unsupported Complex: _Complex long double] __x);

//	// float __tg_fabs (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_fabs (float __x);

//	// double __tg_fabs (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_fabs (double __x);

//	// long double __tg_fabs (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_fabs ([unsupported Builtin: long double] __x);

//	// float __tg_fabs (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_fabs ([unsupported Complex: _Complex float] __x);

//	// double __tg_fabs (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_fabs ([unsupported Complex: _Complex double] __x);

//	// long double __tg_fabs (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_fabs ([unsupported Complex: _Complex long double] __x);

//	// float __tg_atan2 (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_atan2 (float __x, float __y);

//	// double __tg_atan2 (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_atan2 (double __x, double __y);

//	// long double __tg_atan2 (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_atan2 ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_cbrt (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_cbrt (float __x);

//	// double __tg_cbrt (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_cbrt (double __x);

//	// long double __tg_cbrt (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_cbrt ([unsupported Builtin: long double] __x);

//	// float __tg_ceil (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_ceil (float __x);

//	// double __tg_ceil (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_ceil (double __x);

//	// long double __tg_ceil (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_ceil ([unsupported Builtin: long double] __x);

//	// float __tg_copysign (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_copysign (float __x, float __y);

//	// double __tg_copysign (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_copysign (double __x, double __y);

//	// long double __tg_copysign (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_copysign ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_erf (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_erf (float __x);

//	// double __tg_erf (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_erf (double __x);

//	// long double __tg_erf (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_erf ([unsupported Builtin: long double] __x);

//	// float __tg_erfc (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_erfc (float __x);

//	// double __tg_erfc (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_erfc (double __x);

//	// long double __tg_erfc (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_erfc ([unsupported Builtin: long double] __x);

//	// float __tg_exp2 (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_exp2 (float __x);

//	// double __tg_exp2 (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_exp2 (double __x);

//	// long double __tg_exp2 (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_exp2 ([unsupported Builtin: long double] __x);

//	// float __tg_expm1 (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_expm1 (float __x);

//	// double __tg_expm1 (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_expm1 (double __x);

//	// long double __tg_expm1 (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_expm1 ([unsupported Builtin: long double] __x);

//	// float __tg_fdim (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_fdim (float __x, float __y);

//	// double __tg_fdim (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_fdim (double __x, double __y);

//	// long double __tg_fdim (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_fdim ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_floor (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_floor (float __x);

//	// double __tg_floor (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_floor (double __x);

//	// long double __tg_floor (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_floor ([unsupported Builtin: long double] __x);

//	// float __tg_fma (float __x, float __y, float __z) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_fma (float __x, float __y, float __z);

//	// double __tg_fma (double __x, double __y, double __z) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_fma (double __x, double __y, double __z);

//	// long double __tg_fma (long double __x, long double __y, long double __z) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_fma ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y, [unsupported Builtin: long double] __z);

//	// float __tg_fmax (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_fmax (float __x, float __y);

//	// double __tg_fmax (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_fmax (double __x, double __y);

//	// long double __tg_fmax (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_fmax ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_fmin (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_fmin (float __x, float __y);

//	// double __tg_fmin (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_fmin (double __x, double __y);

//	// long double __tg_fmin (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_fmin ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_fmod (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_fmod (float __x, float __y);

//	// double __tg_fmod (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_fmod (double __x, double __y);

//	// long double __tg_fmod (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_fmod ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_frexp (float __x, int *__y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float __tg_frexp (float __x, int* __y);

//	// double __tg_frexp (double __x, int *__y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double __tg_frexp (double __x, int* __y);

//	// long double __tg_frexp (long double __x, int *__y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] __tg_frexp ([unsupported Builtin: long double] __x, int* __y);

//	// float __tg_hypot (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_hypot (float __x, float __y);

//	// double __tg_hypot (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_hypot (double __x, double __y);

//	// long double __tg_hypot (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_hypot ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// int __tg_ilogb (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __tg_ilogb (float __x);

//	// int __tg_ilogb (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __tg_ilogb (double __x);

//	// int __tg_ilogb (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __tg_ilogb ([unsupported Builtin: long double] __x);

//	// float __tg_ldexp (float __x, int __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_ldexp (float __x, int __y);

//	// double __tg_ldexp (double __x, int __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_ldexp (double __x, int __y);

//	// long double __tg_ldexp (long double __x, int __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_ldexp ([unsupported Builtin: long double] __x, int __y);

//	// float __tg_lgamma (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_lgamma (float __x);

//	// double __tg_lgamma (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_lgamma (double __x);

//	// long double __tg_lgamma (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_lgamma ([unsupported Builtin: long double] __x);

//	// long long __tg_llrint (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long __tg_llrint (float __x);

//	// long long __tg_llrint (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long __tg_llrint (double __x);

//	// long long __tg_llrint (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long __tg_llrint ([unsupported Builtin: long double] __x);

//	// long long __tg_llround (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long __tg_llround (float __x);

//	// long long __tg_llround (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long __tg_llround (double __x);

//	// long long __tg_llround (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long __tg_llround ([unsupported Builtin: long double] __x);

//	// float __tg_log10 (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_log10 (float __x);

//	// double __tg_log10 (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_log10 (double __x);

//	// long double __tg_log10 (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_log10 ([unsupported Builtin: long double] __x);

//	// float __tg_log1p (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_log1p (float __x);

//	// double __tg_log1p (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_log1p (double __x);

//	// long double __tg_log1p (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_log1p ([unsupported Builtin: long double] __x);

//	// float __tg_log2 (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_log2 (float __x);

//	// double __tg_log2 (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_log2 (double __x);

//	// long double __tg_log2 (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_log2 ([unsupported Builtin: long double] __x);

//	// float __tg_logb (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_logb (float __x);

//	// double __tg_logb (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_logb (double __x);

//	// long double __tg_logb (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_logb ([unsupported Builtin: long double] __x);

//	// long __tg_lrint (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint __tg_lrint (float __x);

//	// long __tg_lrint (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint __tg_lrint (double __x);

//	// long __tg_lrint (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint __tg_lrint ([unsupported Builtin: long double] __x);

//	// long __tg_lround (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint __tg_lround (float __x);

//	// long __tg_lround (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint __tg_lround (double __x);

//	// long __tg_lround (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint __tg_lround ([unsupported Builtin: long double] __x);

//	// float __tg_nearbyint (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_nearbyint (float __x);

//	// double __tg_nearbyint (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_nearbyint (double __x);

//	// long double __tg_nearbyint (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_nearbyint ([unsupported Builtin: long double] __x);

//	// float __tg_nextafter (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_nextafter (float __x, float __y);

//	// double __tg_nextafter (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_nextafter (double __x, double __y);

//	// long double __tg_nextafter (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_nextafter ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_nexttoward (float __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_nexttoward (float __x, [unsupported Builtin: long double] __y);

//	// double __tg_nexttoward (double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_nexttoward (double __x, [unsupported Builtin: long double] __y);

//	// long double __tg_nexttoward (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_nexttoward ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_remainder (float __x, float __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_remainder (float __x, float __y);

//	// double __tg_remainder (double __x, double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_remainder (double __x, double __y);

//	// long double __tg_remainder (long double __x, long double __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_remainder ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y);

//	// float __tg_remquo (float __x, float __y, int *__z) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float __tg_remquo (float __x, float __y, int* __z);

//	// double __tg_remquo (double __x, double __y, int *__z) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double __tg_remquo (double __x, double __y, int* __z);

//	// long double __tg_remquo (long double __x, long double __y, int *__z) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] __tg_remquo ([unsupported Builtin: long double] __x, [unsupported Builtin: long double] __y, int* __z);

//	// float __tg_rint (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_rint (float __x);

//	// double __tg_rint (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_rint (double __x);

//	// long double __tg_rint (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_rint ([unsupported Builtin: long double] __x);

//	// float __tg_round (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_round (float __x);

//	// double __tg_round (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_round (double __x);

//	// long double __tg_round (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_round ([unsupported Builtin: long double] __x);

//	// float __tg_scalbn (float __x, int __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_scalbn (float __x, int __y);

//	// double __tg_scalbn (double __x, int __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_scalbn (double __x, int __y);

//	// long double __tg_scalbn (long double __x, int __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_scalbn ([unsupported Builtin: long double] __x, int __y);

//	// float __tg_scalbln (float __x, long __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_scalbln (float __x, nint __y);

//	// double __tg_scalbln (double __x, long __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_scalbln (double __x, nint __y);

//	// long double __tg_scalbln (long double __x, long __y) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_scalbln ([unsupported Builtin: long double] __x, nint __y);

//	// float __tg_tgamma (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_tgamma (float __x);

//	// double __tg_tgamma (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_tgamma (double __x);

//	// long double __tg_tgamma (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_tgamma ([unsupported Builtin: long double] __x);

//	// float __tg_trunc (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_trunc (float __x);

//	// double __tg_trunc (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_trunc (double __x);

//	// long double __tg_trunc (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_trunc ([unsupported Builtin: long double] __x);

//	// float __tg_carg (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_carg (float __x);

//	// double __tg_carg (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_carg (double __x);

//	// long double __tg_carg (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_carg ([unsupported Builtin: long double] __x);

//	// float __tg_carg (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_carg ([unsupported Complex: _Complex float] __x);

//	// double __tg_carg (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_carg ([unsupported Complex: _Complex double] __x);

//	// long double __tg_carg (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_carg ([unsupported Complex: _Complex long double] __x);

//	// float __tg_cimag (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_cimag (float __x);

//	// double __tg_cimag (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_cimag (double __x);

//	// long double __tg_cimag (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_cimag ([unsupported Builtin: long double] __x);

//	// float __tg_cimag (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_cimag ([unsupported Complex: _Complex float] __x);

//	// double __tg_cimag (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_cimag ([unsupported Complex: _Complex double] __x);

//	// long double __tg_cimag (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_cimag ([unsupported Complex: _Complex long double] __x);

//	// _Complex float __tg_conj (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_conj (float __x);

//	// _Complex double __tg_conj (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_conj (double __x);

//	// _Complex long double __tg_conj (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_conj ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_conj (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_conj ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_conj (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_conj ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_conj (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_conj ([unsupported Complex: _Complex long double] __x);

//	// _Complex float __tg_cproj (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_cproj (float __x);

//	// _Complex double __tg_cproj (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_cproj (double __x);

//	// _Complex long double __tg_cproj (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_cproj ([unsupported Builtin: long double] __x);

//	// _Complex float __tg_cproj (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex float] __tg_cproj ([unsupported Complex: _Complex float] __x);

//	// _Complex double __tg_cproj (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex double] __tg_cproj ([unsupported Complex: _Complex double] __x);

//	// _Complex long double __tg_cproj (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Complex: _Complex long double] __tg_cproj ([unsupported Complex: _Complex long double] __x);

//	// float __tg_creal (float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_creal (float __x);

//	// double __tg_creal (double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_creal (double __x);

//	// long double __tg_creal (long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_creal ([unsupported Builtin: long double] __x);

//	// float __tg_creal (_Complex float __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float __tg_creal ([unsupported Complex: _Complex float] __x);

//	// double __tg_creal (_Complex double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double __tg_creal ([unsupported Complex: _Complex double] __x);

//	// long double __tg_creal (_Complex long double __x) __attribute__((always_inline)) __attribute__((overloadable));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern [unsupported Builtin: long double] __tg_creal ([unsupported Complex: _Complex long double] __x);

//	// extern char * asctime (const struct tm *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* asctime (tm*);

//	// extern clock_t clock () asm("_clock");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint clock ();

//	// extern char * ctime (const time_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ctime (nint*);

//	// extern double difftime (time_t, time_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double difftime (nint, nint);

//	// extern struct tm * getdate (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe tm* getdate (sbyte*);

//	// extern struct tm * gmtime (const time_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe tm* gmtime (nint*);

//	// extern struct tm * localtime (const time_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe tm* localtime (nint*);

//	// extern time_t mktime (struct tm *) asm("_mktime");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint mktime (tm*);

//	// extern size_t strftime (char *__restrict, size_t, const char *__restrict, const struct tm *__restrict) asm("_strftime");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strftime (sbyte*, nuint, sbyte*, tm*);

//	// extern char * strptime (const char *__restrict, const char *__restrict, struct tm *__restrict) asm("_strptime");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strptime (sbyte*, sbyte*, tm*);

//	// extern time_t time (time_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint time (nint*);

//	// extern void tzset ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void tzset ();

//	// extern char * asctime_r (const struct tm *__restrict, char *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* asctime_r (tm*, sbyte*);

//	// extern char * ctime_r (const time_t *, char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ctime_r (nint*, sbyte*);

//	// extern struct tm * gmtime_r (const time_t *__restrict, struct tm *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe tm* gmtime_r (nint*, tm*);

//	// extern struct tm * localtime_r (const time_t *__restrict, struct tm *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe tm* localtime_r (nint*, tm*);

//	// extern time_t posix2time (time_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint posix2time (nint);

//	// extern void tzsetwall ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void tzsetwall ();

//	// extern time_t time2posix (time_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint time2posix (nint);

//	// extern time_t timelocal (struct tm *const);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint timelocal (tm*);

//	// extern time_t timegm (struct tm *const);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint timegm (tm*);

//	// extern int nanosleep (const struct timespec *__rqtp, struct timespec *__rmtp) asm("_nanosleep");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int nanosleep (timespec* __rqtp, timespec* __rmtp);

//	// extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_getres (clockid_t __clock_id, timespec* __res);

//	// extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_gettime (clockid_t __clock_id, timespec* __tp);

//	// extern __uint64_t clock_gettime_nsec_np (clockid_t __clock_id) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong clock_gettime_nsec_np (clockid_t __clock_id);

//	// extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.12)));
//	[NoWatch, NoTV, NoiOS, Mac (10,12)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_settime (clockid_t __clock_id, timespec* __tp);

//	// int __darwin_fd_isset (int _n, const struct fd_set *_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __darwin_fd_isset (int _n, fd_set* _p);

//	// extern struct passwd * getpwuid (uid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe passwd* getpwuid (uint);

//	// extern struct passwd * getpwnam (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe passwd* getpwnam (sbyte*);

//	// extern int getpwuid_r (uid_t, struct passwd *, char *, size_t, struct passwd **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getpwuid_r (uint, passwd*, sbyte*, nuint, passwd**);

//	// extern int getpwnam_r (const char *, struct passwd *, char *, size_t, struct passwd **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getpwnam_r (sbyte*, passwd*, sbyte*, nuint, passwd**);

//	// extern struct passwd * getpwent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe passwd* getpwent ();

//	// extern void setpwent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setpwent ();

//	// extern void endpwent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endpwent ();

//	// extern void uuid_clear (unsigned char *uu);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_clear (byte[] uu);

//	// extern int uuid_compare (const unsigned char *uu1, const unsigned char *uu2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int uuid_compare (byte[] uu1, byte[] uu2);

//	// extern void uuid_copy (unsigned char *dst, const unsigned char *src);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_copy (byte[] dst, byte[] src);

//	// extern void uuid_generate (unsigned char *out);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_generate (byte[] @out);

//	// extern void uuid_generate_random (unsigned char *out);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_generate_random (byte[] @out);

//	// extern void uuid_generate_time (unsigned char *out);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_generate_time (byte[] @out);

//	// extern int uuid_is_null (const unsigned char *uu);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int uuid_is_null (byte[] uu);

//	// extern int uuid_parse (const char *in, unsigned char *uu);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int uuid_parse (sbyte[] @in, byte[] uu);

//	// extern void uuid_unparse (const unsigned char *uu, char *out);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_unparse (byte[] uu, sbyte[] @out);

//	// extern void uuid_unparse_lower (const unsigned char *uu, char *out);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_unparse_lower (byte[] uu, sbyte[] @out);

//	// extern void uuid_unparse_upper (const unsigned char *uu, char *out);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void uuid_unparse_upper (byte[] uu, sbyte[] @out);

//	// extern int setpassent (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setpassent (int);

//	// extern char * user_from_uid (uid_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* user_from_uid (uint, int);

//	// extern struct passwd * getpwuuid (unsigned char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe passwd* getpwuuid (byte[]);

//	// extern int getpwuuid_r (unsigned char *, struct passwd *, char *, size_t, struct passwd **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getpwuuid_r (byte[], passwd*, sbyte*, nuint, passwd**);

//	// extern speed_t cfgetispeed (const struct termios *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint cfgetispeed (termios*);

//	// extern speed_t cfgetospeed (const struct termios *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint cfgetospeed (termios*);

//	// extern int cfsetispeed (struct termios *, speed_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cfsetispeed (termios*, nuint);

//	// extern int cfsetospeed (struct termios *, speed_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cfsetospeed (termios*, nuint);

//	// extern int tcgetattr (int, struct termios *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int tcgetattr (int, termios*);

//	// extern int tcsetattr (int, int, const struct termios *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int tcsetattr (int, int, termios*);

//	// extern int tcdrain (int) asm("_tcdrain");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tcdrain (int);

//	// extern int tcflow (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tcflow (int, int);

//	// extern int tcflush (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tcflush (int, int);

//	// extern int tcsendbreak (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tcsendbreak (int, int);

//	// extern void cfmakeraw (struct termios *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void cfmakeraw (termios*);

//	// extern int cfsetspeed (struct termios *, speed_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int cfsetspeed (termios*, nuint);

//	// extern pid_t tcgetsid (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tcgetsid (int);

//	// extern int login_tty (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int login_tty (int);

//	// extern void logwtmp (const char *, const char *, const char *) __attribute__((availability(ios, introduced=2.0, deprecated=2.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 2, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void logwtmp (sbyte*, sbyte*, sbyte*);

//	// extern int opendev (char *, int, int, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int opendev (sbyte*, int, int, sbyte**);

//	// extern int openpty (int *, int *, char *, struct termios *, struct winsize *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int openpty (int*, int*, sbyte*, termios*, winsize*);

//	// extern char * fparseln (FILE *, size_t *, size_t *, const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* fparseln (FILE*, nuint*, nuint*, sbyte[], int);

//	// extern pid_t forkpty (int *, char *, struct termios *, struct winsize *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int forkpty (int*, sbyte*, termios*, winsize*);

//	// extern int pidlock (const char *, int, pid_t *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pidlock (sbyte*, int, int*, sbyte*);

//	// extern int ttylock (const char *, int, pid_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ttylock (sbyte*, int, int*);

//	// extern int ttyunlock (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ttyunlock (sbyte*);

//	// extern int ttyaction (char *tty, char *act, char *user);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ttyaction (sbyte* tty, sbyte* act, sbyte* user);

//	// extern char * ttymsg (struct iovec *, int, const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ttymsg (iovec*, int, sbyte*, int);

//	// extern int iswalnum (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswalnum (int _wc);

//	// extern int iswalpha (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswalpha (int _wc);

//	// extern int iswcntrl (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswcntrl (int _wc);

//	// extern int iswctype (wint_t _wc, wctype_t _charclass);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswctype (int _wc, uint _charclass);

//	// extern int iswdigit (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswdigit (int _wc);

//	// extern int iswgraph (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswgraph (int _wc);

//	// extern int iswlower (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswlower (int _wc);

//	// extern int iswprint (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswprint (int _wc);

//	// extern int iswpunct (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswpunct (int _wc);

//	// extern int iswspace (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswspace (int _wc);

//	// extern int iswupper (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswupper (int _wc);

//	// extern int iswxdigit (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswxdigit (int _wc);

//	// extern wint_t towlower (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int towlower (int _wc);

//	// extern wint_t towupper (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int towupper (int _wc);

//	// extern wctype_t wctype (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint wctype (sbyte*);

//	// extern wint_t btowc (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int btowc (int);

//	// extern wint_t fgetwc (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fgetwc (FILE*);

//	// extern wchar_t * fgetws (wchar_t *__restrict, int, FILE *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* fgetws (int*, int, FILE*);

//	// extern wint_t fputwc (wchar_t, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fputwc (int, FILE*);

//	// extern int fputws (const wchar_t *__restrict, FILE *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fputws (int*, FILE*);

//	// extern int fwide (FILE *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fwide (FILE*, int);

//	// extern int fwprintf (FILE *__restrict, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fwprintf (FILE*, int*, IntPtr varArgs);

//	// extern int fwscanf (FILE *__restrict, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fwscanf (FILE*, int*, IntPtr varArgs);

//	// extern wint_t getwc (FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getwc (FILE*);

//	// extern wint_t getwchar ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getwchar ();

//	// extern size_t mbrlen (const char *__restrict, size_t, mbstate_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbrlen (sbyte*, nuint, mbstate_t*);

//	// extern size_t mbrtowc (wchar_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbrtowc (int*, sbyte*, nuint, mbstate_t*);

//	// extern int mbsinit (const mbstate_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mbsinit (mbstate_t*);

//	// extern size_t mbsrtowcs (wchar_t *__restrict, const char **__restrict, size_t, mbstate_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbsrtowcs (int*, sbyte**, nuint, mbstate_t*);

//	// extern wint_t putwc (wchar_t, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int putwc (int, FILE*);

//	// extern wint_t putwchar (wchar_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int putwchar (int);

//	// extern int swprintf (wchar_t *__restrict, size_t, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int swprintf (int*, nuint, int*, IntPtr varArgs);

//	// extern int swscanf (const wchar_t *__restrict, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int swscanf (int*, int*, IntPtr varArgs);

//	// extern wint_t ungetwc (wint_t, FILE *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ungetwc (int, FILE*);

//	// extern int vfwprintf (FILE *__restrict, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfwprintf (FILE*, int*, sbyte*);

//	// extern int vswprintf (wchar_t *__restrict, size_t, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vswprintf (int*, nuint, int*, sbyte*);

//	// extern int vwprintf (const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vwprintf (int*, sbyte*);

//	// extern size_t wcrtomb (char *__restrict, wchar_t, mbstate_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcrtomb (sbyte*, int, mbstate_t*);

//	// extern wchar_t * wcscat (wchar_t *__restrict, const wchar_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcscat (int*, int*);

//	// extern int * wcschr (const int *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcschr (int*, int);

//	// extern int * wcschr (const wchar_t *, wchar_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcschr (int*, int);

//	// extern int wcscmp (const int *, const int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcscmp (int*, int*);

//	// extern int wcscmp (const wchar_t *, const wchar_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcscmp (int*, int*);

//	// extern int wcscoll (const wchar_t *, const wchar_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcscoll (int*, int*);

//	// extern wchar_t * wcscpy (wchar_t *__restrict, const wchar_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcscpy (int*, int*);

//	// extern size_t wcscspn (const wchar_t *, const wchar_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcscspn (int*, int*);

//	// extern size_t wcsftime (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict) asm("_wcsftime");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsftime (int*, nuint, int*, tm*);

//	// extern unsigned long wcslen (const int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcslen (int*);

//	// extern unsigned long wcslen (const wchar_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcslen (int*);

//	// extern wchar_t * wcsncat (wchar_t *__restrict, const wchar_t *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcsncat (int*, int*, nuint);

//	// extern int wcsncmp (const int *, const int *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcsncmp (int*, int*, nuint);

//	// extern int wcsncmp (const wchar_t *, const wchar_t *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcsncmp (int*, int*, nuint);

//	// extern wchar_t * wcsncpy (wchar_t *__restrict, const wchar_t *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcsncpy (int*, int*, nuint);

//	// extern wchar_t * wcspbrk (const wchar_t *, const wchar_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcspbrk (int*, int*);

//	// extern wchar_t * wcsrchr (const wchar_t *, wchar_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcsrchr (int*, int);

//	// extern size_t wcsrtombs (char *__restrict, const wchar_t **__restrict, size_t, mbstate_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsrtombs (sbyte*, int**, nuint, mbstate_t*);

//	// extern size_t wcsspn (const wchar_t *, const wchar_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsspn (int*, int*);

//	// extern wchar_t * wcsstr (const wchar_t *__restrict, const wchar_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcsstr (int*, int*);

//	// extern size_t wcsxfrm (wchar_t *__restrict, const wchar_t *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsxfrm (int*, int*, nuint);

//	// extern int wctob (wint_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int wctob (int);

//	// extern double wcstod (const wchar_t *__restrict, wchar_t **__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double wcstod (int*, int**);

//	// extern wchar_t * wcstok (wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcstok (int*, int*, int**);

//	// extern long wcstol (const wchar_t *__restrict, wchar_t **__restrict, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint wcstol (int*, int**, int);

//	// extern unsigned long wcstoul (const wchar_t *__restrict, wchar_t **__restrict, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcstoul (int*, int**, int);

//	// extern int * wmemchr (const int *, int, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wmemchr (int*, int, nuint);

//	// extern int * wmemchr (const wchar_t *, wchar_t, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wmemchr (int*, int, nuint);

//	// extern int wmemcmp (const int *, const int *, unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wmemcmp (int*, int*, nuint);

//	// extern int wmemcmp (const wchar_t *, const wchar_t *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wmemcmp (int*, int*, nuint);

//	// extern wchar_t * wmemcpy (wchar_t *__restrict, const wchar_t *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wmemcpy (int*, int*, nuint);

//	// extern wchar_t * wmemmove (wchar_t *, const wchar_t *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wmemmove (int*, int*, nuint);

//	// extern wchar_t * wmemset (wchar_t *, wchar_t, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wmemset (int*, int, nuint);

//	// extern int wprintf (const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wprintf (int*, IntPtr varArgs);

//	// extern int wscanf (const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wscanf (int*, IntPtr varArgs);

//	// extern int wcswidth (const wchar_t *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcswidth (int*, nuint);

//	// extern int wcwidth (wchar_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int wcwidth (int);

//	// extern int vfwscanf (FILE *__restrict, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfwscanf (FILE*, int*, sbyte*);

//	// extern int vswscanf (const wchar_t *__restrict, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vswscanf (int*, int*, sbyte*);

//	// extern int vwscanf (const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vwscanf (int*, sbyte*);

//	// extern float wcstof (const wchar_t *__restrict, wchar_t **__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float wcstof (int*, int**);

//	// extern long double wcstold (const wchar_t *__restrict, wchar_t **__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] wcstold (int*, int**);

//	// extern long long wcstoll (const wchar_t *__restrict, wchar_t **__restrict, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long wcstoll (int*, int**, int);

//	// extern unsigned long long wcstoull (const wchar_t *__restrict, wchar_t **__restrict, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong wcstoull (int*, int**, int);

//	// extern size_t mbsnrtowcs (wchar_t *__restrict, const char **__restrict, size_t, size_t, mbstate_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbsnrtowcs (int*, sbyte**, nuint, nuint, mbstate_t*);

//	// extern wchar_t * wcpcpy (wchar_t *__restrict, const wchar_t *__restrict) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcpcpy (int*, int*);

//	// extern wchar_t * wcpncpy (wchar_t *__restrict, const wchar_t *__restrict, size_t) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcpncpy (int*, int*, nuint);

//	// extern wchar_t * wcsdup (const wchar_t *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* wcsdup (int*);

//	// extern int wcscasecmp (const wchar_t *, const wchar_t *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcscasecmp (int*, int*);

//	// extern int wcsncasecmp (const wchar_t *, const wchar_t *, size_t n) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcsncasecmp (int*, int*, nuint n);

//	// extern size_t wcsnlen (const wchar_t *, size_t) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsnlen (int*, nuint);

//	// extern size_t wcsnrtombs (char *__restrict, const wchar_t **__restrict, size_t, size_t, mbstate_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsnrtombs (sbyte*, int**, nuint, nuint, mbstate_t*);

//	// extern FILE * open_wmemstream (wchar_t **__bufp, size_t *__sizep) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe FILE* open_wmemstream (int** __bufp, nuint* __sizep);

//	// extern wchar_t * fgetwln (FILE *__restrict, size_t *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* fgetwln (FILE*, nuint*);

//	// extern size_t wcslcat (wchar_t *, const wchar_t *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcslcat (int*, int*, nuint);

//	// extern size_t wcslcpy (wchar_t *, const wchar_t *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcslcpy (int*, int*, nuint);

//	// extern int iswblank (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswblank (int _wc);

//	// extern int iswascii (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswascii (int _wc);

//	// extern int iswhexnumber (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswhexnumber (int _wc);

//	// extern int iswideogram (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswideogram (int _wc);

//	// extern int iswnumber (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswnumber (int _wc);

//	// extern int iswphonogram (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswphonogram (int _wc);

//	// extern int iswrune (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswrune (int _wc);

//	// extern int iswspecial (wint_t _wc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int iswspecial (int _wc);

//	// extern wint_t nextwctype (wint_t, wctype_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int nextwctype (int, uint);

//	// extern wint_t towctrans (wint_t, wctrans_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int towctrans (int, int);

//	// extern wctrans_t wctrans (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wctrans (sbyte*);

//	// extern int ___mb_cur_max ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ___mb_cur_max ();

//	// extern int ___mb_cur_max_l (locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ___mb_cur_max_l (locale_t*);

//	// extern locale_t duplocale (locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe locale_t* duplocale (locale_t*);

//	// extern int freelocale (locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int freelocale (locale_t*);

//	// extern struct lconv * localeconv_l (locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe lconv* localeconv_l (locale_t*);

//	// extern locale_t newlocale (int, const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe locale_t* newlocale (int, sbyte*, locale_t*);

//	// extern const char * querylocale (int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* querylocale (int, locale_t*);

//	// extern locale_t uselocale (locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe locale_t* uselocale (locale_t*);

//	// extern unsigned long ___runetype_l (__darwin_ct_rune_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint ___runetype_l (int, locale_t*);

//	// extern __darwin_ct_rune_t ___tolower_l (__darwin_ct_rune_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ___tolower_l (int, locale_t*);

//	// extern __darwin_ct_rune_t ___toupper_l (__darwin_ct_rune_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ___toupper_l (int, locale_t*);

//	// extern int __maskrune_l (__darwin_ct_rune_t, unsigned long, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __maskrune_l (int, nuint, locale_t*);

//	// extern int __istype_l (__darwin_ct_rune_t _c, unsigned long _f, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __istype_l (int _c, nuint _f, locale_t* _l);

//	// extern __darwin_ct_rune_t __toupper_l (__darwin_ct_rune_t _c, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __toupper_l (int _c, locale_t* _l);

//	// extern __darwin_ct_rune_t __tolower_l (__darwin_ct_rune_t _c, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __tolower_l (int _c, locale_t* _l);

//	// extern int __wcwidth_l (__darwin_ct_rune_t _c, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int __wcwidth_l (int _c, locale_t* _l);

//	// extern int digittoint_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int digittoint_l (int c, locale_t* l);

//	// extern int isalnum_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isalnum_l (int c, locale_t* l);

//	// extern int isalpha_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isalpha_l (int c, locale_t* l);

//	// extern int isblank_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isblank_l (int c, locale_t* l);

//	// extern int iscntrl_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iscntrl_l (int c, locale_t* l);

//	// extern int isdigit_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isdigit_l (int c, locale_t* l);

//	// extern int isgraph_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isgraph_l (int c, locale_t* l);

//	// extern int ishexnumber_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ishexnumber_l (int c, locale_t* l);

//	// extern int isideogram_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isideogram_l (int c, locale_t* l);

//	// extern int islower_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int islower_l (int c, locale_t* l);

//	// extern int isnumber_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isnumber_l (int c, locale_t* l);

//	// extern int isphonogram_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isphonogram_l (int c, locale_t* l);

//	// extern int isprint_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isprint_l (int c, locale_t* l);

//	// extern int ispunct_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ispunct_l (int c, locale_t* l);

//	// extern int isrune_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isrune_l (int c, locale_t* l);

//	// extern int isspace_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isspace_l (int c, locale_t* l);

//	// extern int isspecial_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isspecial_l (int c, locale_t* l);

//	// extern int isupper_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isupper_l (int c, locale_t* l);

//	// extern int isxdigit_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int isxdigit_l (int c, locale_t* l);

//	// extern int tolower_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int tolower_l (int c, locale_t* l);

//	// extern int toupper_l (int c, locale_t l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int toupper_l (int c, locale_t* l);

//	// extern int iswalnum_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswalnum_l (int _wc, locale_t* _l);

//	// extern int iswalpha_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswalpha_l (int _wc, locale_t* _l);

//	// extern int iswcntrl_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswcntrl_l (int _wc, locale_t* _l);

//	// extern int iswctype_l (wint_t _wc, wctype_t _charclass, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswctype_l (int _wc, uint _charclass, locale_t* _l);

//	// extern int iswdigit_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswdigit_l (int _wc, locale_t* _l);

//	// extern int iswgraph_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswgraph_l (int _wc, locale_t* _l);

//	// extern int iswlower_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswlower_l (int _wc, locale_t* _l);

//	// extern int iswprint_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswprint_l (int _wc, locale_t* _l);

//	// extern int iswpunct_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswpunct_l (int _wc, locale_t* _l);

//	// extern int iswspace_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswspace_l (int _wc, locale_t* _l);

//	// extern int iswupper_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswupper_l (int _wc, locale_t* _l);

//	// extern int iswxdigit_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswxdigit_l (int _wc, locale_t* _l);

//	// extern wint_t towlower_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int towlower_l (int _wc, locale_t* _l);

//	// extern wint_t towupper_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int towupper_l (int _wc, locale_t* _l);

//	// extern wctype_t wctype_l (const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint wctype_l (sbyte*, locale_t*);

//	// extern intmax_t strtoimax_l (const char *__restrict nptr, char **__restrict endptr, int base, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint strtoimax_l (sbyte* nptr, sbyte** endptr, int @base, locale_t*);

//	// extern uintmax_t strtoumax_l (const char *__restrict nptr, char **__restrict endptr, int base, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strtoumax_l (sbyte* nptr, sbyte** endptr, int @base, locale_t*);

//	// extern intmax_t wcstoimax_l (const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint wcstoimax_l (int* nptr, int** endptr, int @base, locale_t*);

//	// extern uintmax_t wcstoumax_l (const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcstoumax_l (int* nptr, int** endptr, int @base, locale_t*);

//	// extern int fprintf_l (FILE *__restrict, __restrict locale_t, const char *__restrict, ...) __attribute__((format(printf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fprintf_l (FILE*, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int fscanf_l (FILE *__restrict, __restrict locale_t, const char *__restrict, ...) __attribute__((format(scanf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fscanf_l (FILE*, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int printf_l (__restrict locale_t, const char *__restrict, ...) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int printf_l (locale_t*, sbyte*, IntPtr varArgs);

//	// extern int scanf_l (__restrict locale_t, const char *__restrict, ...) __attribute__((format(scanf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int scanf_l (locale_t*, sbyte*, IntPtr varArgs);

//	// extern int sprintf_l (char *__restrict, __restrict locale_t, const char *__restrict, ...) __attribute__((format(printf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sprintf_l (sbyte*, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int sscanf_l (const char *__restrict, __restrict locale_t, const char *__restrict, ...) __attribute__((format(scanf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sscanf_l (sbyte*, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int vfprintf_l (FILE *__restrict, __restrict locale_t, const char *__restrict, va_list) __attribute__((format(printf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfprintf_l (FILE*, locale_t*, sbyte*, sbyte*);

//	// extern int vprintf_l (__restrict locale_t, const char *__restrict, va_list) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vprintf_l (locale_t*, sbyte*, sbyte*);

//	// extern int vsprintf_l (char *__restrict, __restrict locale_t, const char *__restrict, va_list) __attribute__((format(printf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsprintf_l (sbyte*, locale_t*, sbyte*, sbyte*);

//	// extern int snprintf_l (char *__restrict, size_t, __restrict locale_t, const char *__restrict, ...) __attribute__((format(printf, 4, 5)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int snprintf_l (sbyte*, nuint, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int vfscanf_l (FILE *__restrict, __restrict locale_t, const char *__restrict, va_list) __attribute__((format(scanf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfscanf_l (FILE*, locale_t*, sbyte*, sbyte*);

//	// extern int vscanf_l (__restrict locale_t, const char *__restrict, va_list) __attribute__((format(scanf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vscanf_l (locale_t*, sbyte*, sbyte*);

//	// extern int vsnprintf_l (char *__restrict, size_t, __restrict locale_t, const char *__restrict, va_list) __attribute__((format(printf, 4, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsnprintf_l (sbyte*, nuint, locale_t*, sbyte*, sbyte*);

//	// extern int vsscanf_l (const char *__restrict, __restrict locale_t, const char *__restrict, va_list) __attribute__((format(scanf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vsscanf_l (sbyte*, locale_t*, sbyte*, sbyte*);

//	// extern int dprintf_l (int, __restrict locale_t, const char *__restrict, ...) __attribute__((availability(ios, introduced=4.3))) __attribute__((format(printf, 3, 4)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dprintf_l (int, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int vdprintf_l (int, __restrict locale_t, const char *__restrict, va_list) __attribute__((availability(ios, introduced=4.3))) __attribute__((format(printf, 3, 0)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vdprintf_l (int, locale_t*, sbyte*, sbyte*);

//	// extern int asprintf_l (char **__restrict, __restrict locale_t, const char *__restrict, ...) __attribute__((format(printf, 3, 4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int asprintf_l (sbyte**, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int vasprintf_l (char **__restrict, __restrict locale_t, const char *__restrict, va_list) __attribute__((format(printf, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vasprintf_l (sbyte**, locale_t*, sbyte*, sbyte*);

//	// extern double atof_l (const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double atof_l (sbyte*, locale_t*);

//	// extern int atoi_l (const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int atoi_l (sbyte*, locale_t*);

//	// extern long atol_l (const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint atol_l (sbyte*, locale_t*);

//	// extern long long atoll_l (const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long atoll_l (sbyte*, locale_t*);

//	// extern int mblen_l (const char *, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mblen_l (sbyte*, nuint, locale_t*);

//	// extern size_t mbstowcs_l (wchar_t *__restrict, const char *__restrict, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbstowcs_l (int*, sbyte*, nuint, locale_t*);

//	// extern int mbtowc_l (wchar_t *__restrict, const char *__restrict, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mbtowc_l (int*, sbyte*, nuint, locale_t*);

//	// extern double strtod_l (const char *, char **, locale_t) asm("_strtod_l");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double strtod_l (sbyte*, sbyte**, locale_t*);

//	// extern float strtof_l (const char *, char **, locale_t) asm("_strtof_l");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float strtof_l (sbyte*, sbyte**, locale_t*);

//	// extern long strtol_l (const char *, char **, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint strtol_l (sbyte*, sbyte**, int, locale_t*);

//	// extern long double strtold_l (const char *, char **, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] strtold_l (sbyte*, sbyte**, locale_t*);

//	// extern long long strtoll_l (const char *, char **, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long strtoll_l (sbyte*, sbyte**, int, locale_t*);

//	// extern long long strtoq_l (const char *, char **, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long strtoq_l (sbyte*, sbyte**, int, locale_t*);

//	// extern unsigned long strtoul_l (const char *, char **, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strtoul_l (sbyte*, sbyte**, int, locale_t*);

//	// extern unsigned long long strtoull_l (const char *, char **, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong strtoull_l (sbyte*, sbyte**, int, locale_t*);

//	// extern unsigned long long strtouq_l (const char *, char **, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong strtouq_l (sbyte*, sbyte**, int, locale_t*);

//	// extern size_t wcstombs_l (char *__restrict, const wchar_t *__restrict, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcstombs_l (sbyte*, int*, nuint, locale_t*);

//	// extern int wctomb_l (char *, wchar_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wctomb_l (sbyte*, int, locale_t*);

//	// extern int strcoll_l (const char *, const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strcoll_l (sbyte*, sbyte*, locale_t*);

//	// extern size_t strxfrm_l (char *, const char *, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strxfrm_l (sbyte*, sbyte*, nuint, locale_t*);

//	// extern int strcasecmp_l (const char *, const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strcasecmp_l (sbyte*, sbyte*, locale_t*);

//	// extern char * strcasestr_l (const char *, const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strcasestr_l (sbyte*, sbyte*, locale_t*);

//	// extern int strncasecmp_l (const char *, const char *, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strncasecmp_l (sbyte*, sbyte*, nuint, locale_t*);

//	// extern size_t strftime_l (char *__restrict, size_t, const char *__restrict, const struct tm *__restrict, locale_t) asm("_strftime_l") __attribute__((format(strftime, 3, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint strftime_l (sbyte*, nuint, sbyte*, tm*, locale_t*);

//	// extern char * strptime_l (const char *__restrict, const char *__restrict, struct tm *__restrict, locale_t) asm("_strptime_l") __attribute__((format(strftime, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* strptime_l (sbyte*, sbyte*, tm*, locale_t*);

//	// extern wint_t btowc_l (int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int btowc_l (int, locale_t*);

//	// extern wint_t fgetwc_l (FILE *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fgetwc_l (FILE*, locale_t*);

//	// extern wchar_t * fgetws_l (wchar_t *__restrict, int, FILE *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* fgetws_l (int*, int, FILE*, locale_t*);

//	// extern wint_t fputwc_l (wchar_t, FILE *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fputwc_l (int, FILE*, locale_t*);

//	// extern int fputws_l (const wchar_t *__restrict, FILE *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fputws_l (int*, FILE*, locale_t*);

//	// extern int fwprintf_l (FILE *__restrict, locale_t, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fwprintf_l (FILE*, locale_t*, int*, IntPtr varArgs);

//	// extern int fwscanf_l (FILE *__restrict, locale_t, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fwscanf_l (FILE*, locale_t*, int*, IntPtr varArgs);

//	// extern wint_t getwc_l (FILE *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getwc_l (FILE*, locale_t*);

//	// extern wint_t getwchar_l (locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getwchar_l (locale_t*);

//	// extern size_t mbrlen_l (const char *__restrict, size_t, mbstate_t *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbrlen_l (sbyte*, nuint, mbstate_t*, locale_t*);

//	// extern size_t mbrtowc_l (wchar_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbrtowc_l (int*, sbyte*, nuint, mbstate_t*, locale_t*);

//	// extern int mbsinit_l (const mbstate_t *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mbsinit_l (mbstate_t*, locale_t*);

//	// extern size_t mbsrtowcs_l (wchar_t *__restrict, const char **__restrict, size_t, mbstate_t *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbsrtowcs_l (int*, sbyte**, nuint, mbstate_t*, locale_t*);

//	// extern wint_t putwc_l (wchar_t, FILE *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int putwc_l (int, FILE*, locale_t*);

//	// extern wint_t putwchar_l (wchar_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int putwchar_l (int, locale_t*);

//	// extern int swprintf_l (wchar_t *__restrict, size_t n, locale_t, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int swprintf_l (int*, nuint n, locale_t*, int*, IntPtr varArgs);

//	// extern int swscanf_l (const wchar_t *__restrict, locale_t, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int swscanf_l (int*, locale_t*, int*, IntPtr varArgs);

//	// extern wint_t ungetwc_l (wint_t, FILE *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ungetwc_l (int, FILE*, locale_t*);

//	// extern int vfwprintf_l (FILE *__restrict, locale_t, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfwprintf_l (FILE*, locale_t*, int*, sbyte*);

//	// extern int vswprintf_l (wchar_t *__restrict, size_t n, locale_t, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vswprintf_l (int*, nuint n, locale_t*, int*, sbyte*);

//	// extern int vwprintf_l (locale_t, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vwprintf_l (locale_t*, int*, sbyte*);

//	// extern size_t wcrtomb_l (char *__restrict, wchar_t, mbstate_t *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcrtomb_l (sbyte*, int, mbstate_t*, locale_t*);

//	// extern int wcscoll_l (const wchar_t *, const wchar_t *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcscoll_l (int*, int*, locale_t*);

//	// extern size_t wcsftime_l (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict, locale_t) asm("_wcsftime_l");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsftime_l (int*, nuint, int*, tm*, locale_t*);

//	// extern size_t wcsrtombs_l (char *__restrict, const wchar_t **__restrict, size_t, mbstate_t *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsrtombs_l (sbyte*, int**, nuint, mbstate_t*, locale_t*);

//	// extern double wcstod_l (const wchar_t *__restrict, wchar_t **__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double wcstod_l (int*, int**, locale_t*);

//	// extern long wcstol_l (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint wcstol_l (int*, int**, int, locale_t*);

//	// extern unsigned long wcstoul_l (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcstoul_l (int*, int**, int, locale_t*);

//	// extern int wcswidth_l (const wchar_t *, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcswidth_l (int*, nuint, locale_t*);

//	// extern size_t wcsxfrm_l (wchar_t *__restrict, const wchar_t *__restrict, size_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsxfrm_l (int*, int*, nuint, locale_t*);

//	// extern int wctob_l (wint_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wctob_l (int, locale_t*);

//	// extern int wcwidth_l (wchar_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcwidth_l (int, locale_t*);

//	// extern int wprintf_l (locale_t, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wprintf_l (locale_t*, int*, IntPtr varArgs);

//	// extern int wscanf_l (locale_t, const wchar_t *__restrict, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wscanf_l (locale_t*, int*, IntPtr varArgs);

//	// extern int vfwscanf_l (FILE *__restrict, locale_t, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vfwscanf_l (FILE*, locale_t*, int*, sbyte*);

//	// extern int vswscanf_l (const wchar_t *__restrict, locale_t, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vswscanf_l (int*, locale_t*, int*, sbyte*);

//	// extern int vwscanf_l (locale_t, const wchar_t *__restrict, __darwin_va_list);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vwscanf_l (locale_t*, int*, sbyte*);

//	// extern float wcstof_l (const wchar_t *__restrict, wchar_t **__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe float wcstof_l (int*, int**, locale_t*);

//	// extern long double wcstold_l (const wchar_t *__restrict, wchar_t **__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe [unsupported Builtin: long double] wcstold_l (int*, int**, locale_t*);

//	// extern long long wcstoll_l (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long wcstoll_l (int*, int**, int, locale_t*);

//	// extern unsigned long long wcstoull_l (const wchar_t *__restrict, wchar_t **__restrict, int, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong wcstoull_l (int*, int**, int, locale_t*);

//	// extern size_t mbsnrtowcs_l (wchar_t *__restrict, const char **__restrict, size_t, size_t, mbstate_t *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint mbsnrtowcs_l (int*, sbyte**, nuint, nuint, mbstate_t*, locale_t*);

//	// extern int wcscasecmp_l (const wchar_t *, const wchar_t *, locale_t) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcscasecmp_l (int*, int*, locale_t*);

//	// extern int wcsncasecmp_l (const wchar_t *, const wchar_t *, size_t n, locale_t) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wcsncasecmp_l (int*, int*, nuint n, locale_t*);

//	// extern size_t wcsnrtombs_l (char *__restrict, const wchar_t **__restrict, size_t, size_t, mbstate_t *__restrict, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint wcsnrtombs_l (sbyte*, int**, nuint, nuint, mbstate_t*, locale_t*);

//	// extern wchar_t * fgetwln_l (FILE *__restrict, size_t *, locale_t) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* fgetwln_l (FILE*, nuint*, locale_t*);

//	// extern int iswblank_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswblank_l (int _wc, locale_t* _l);

//	// extern int iswhexnumber_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswhexnumber_l (int _wc, locale_t* _l);

//	// extern int iswideogram_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswideogram_l (int _wc, locale_t* _l);

//	// extern int iswnumber_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswnumber_l (int _wc, locale_t* _l);

//	// extern int iswphonogram_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswphonogram_l (int _wc, locale_t* _l);

//	// extern int iswrune_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswrune_l (int _wc, locale_t* _l);

//	// extern int iswspecial_l (wint_t _wc, locale_t _l);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iswspecial_l (int _wc, locale_t* _l);

//	// extern wint_t nextwctype_l (wint_t, wctype_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int nextwctype_l (int, uint, locale_t*);

//	// extern wint_t towctrans_l (wint_t, wctrans_t, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int towctrans_l (int, int, locale_t*);

//	// extern wctrans_t wctrans_l (const char *, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wctrans_l (sbyte*, locale_t*);

//	// extern int xattr_preserve_for_intent (const char *, xattr_operation_intent_t) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int xattr_preserve_for_intent (sbyte*, uint);

//	// extern char * xattr_name_with_flags (const char *, xattr_flags_t) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* xattr_name_with_flags (sbyte*, ulong);

//	// extern char * xattr_name_without_flags (const char *) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* xattr_name_without_flags (sbyte*);

//	// extern xattr_flags_t xattr_flags_from_name (const char *) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong xattr_flags_from_name (sbyte*);

//	// extern int xattr_intent_with_flags (xattr_operation_intent_t, xattr_flags_t) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int xattr_intent_with_flags (uint, ulong);

//	// extern int aio_cancel (int fd, struct aiocb *aiocbp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int aio_cancel (int fd, aiocb* aiocbp);

//	// extern int aio_error (const struct aiocb *aiocbp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int aio_error (aiocb* aiocbp);

//	// extern int aio_fsync (int op, struct aiocb *aiocbp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int aio_fsync (int op, aiocb* aiocbp);

//	// extern int aio_read (struct aiocb *aiocbp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int aio_read (aiocb* aiocbp);

//	// extern ssize_t aio_return (struct aiocb *aiocbp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint aio_return (aiocb* aiocbp);

//	// extern int aio_suspend (const struct aiocb *const *aiocblist, int nent, const struct timespec *timeoutp) asm("_aio_suspend");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int aio_suspend (aiocb*[] aiocblist, int nent, timespec* timeoutp);

//	// extern int aio_write (struct aiocb *aiocbp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int aio_write (aiocb* aiocbp);

//	// extern int lio_listio (int mode, struct aiocb *const *aiocblist, int nent, struct sigevent *sigp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lio_listio (int mode, aiocb*[] aiocblist, int nent, sigevent* sigp);

//	// extern int accept (int, struct sockaddr *__restrict, socklen_t *__restrict) asm("_accept");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int accept (int, sockaddr*, uint*);

//	// extern int bind (int, const struct sockaddr *, socklen_t) asm("_bind");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int bind (int, sockaddr*, uint);

//	// extern int connect (int, const struct sockaddr *, socklen_t) asm("_connect");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int connect (int, sockaddr*, uint);

//	// extern int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict) asm("_getpeername");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getpeername (int, sockaddr*, uint*);

//	// extern int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict) asm("_getsockname");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getsockname (int, sockaddr*, uint*);

//	// extern int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getsockopt (int, int, int, void*, uint*);

//	// extern int listen (int, int) asm("_listen");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int listen (int, int);

//	// extern ssize_t recv (int, void *, size_t, int) asm("_recv");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint recv (int, void*, nuint, int);

//	// extern ssize_t recvfrom (int, void *, size_t, int, struct sockaddr *__restrict, socklen_t *__restrict) asm("_recvfrom");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint recvfrom (int, void*, nuint, int, sockaddr*, uint*);

//	// extern ssize_t recvmsg (int, struct msghdr *, int) asm("_recvmsg");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint recvmsg (int, msghdr*, int);

//	// extern ssize_t send (int, const void *, size_t, int) asm("_send");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint send (int, void*, nuint, int);

//	// extern ssize_t sendmsg (int, const struct msghdr *, int) asm("_sendmsg");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint sendmsg (int, msghdr*, int);

//	// extern ssize_t sendto (int, const void *, size_t, int, const struct sockaddr *, socklen_t) asm("_sendto");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint sendto (int, void*, nuint, int, sockaddr*, uint);

//	// extern int setsockopt (int, int, int, const void *, socklen_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setsockopt (int, int, int, void*, uint);

//	// extern int shutdown (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int shutdown (int, int);

//	// extern int sockatmark (int) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sockatmark (int);

//	// extern int socket (int, int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int socket (int, int, int);

//	// extern int socketpair (int, int, int, int *) asm("_socketpair");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int socketpair (int, int, int, int*);

//	// extern int sendfile (int, int, off_t, off_t *, struct sf_hdtr *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sendfile (int, int, long, long*, sf_hdtr*, int);

//	// extern void pfctlinput (int, struct sockaddr *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void pfctlinput (int, sockaddr*);

//	// extern int connectx (int, const sa_endpoints_t *, sae_associd_t, unsigned int, const struct iovec *, unsigned int, size_t *, sae_connid_t *) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(macos, introduced=10.11)));
//	[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int connectx (int, sa_endpoints_t*, uint, uint, iovec*, uint, nuint*, uint*);

//	// extern int disconnectx (int, sae_associd_t, sae_connid_t) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(macos, introduced=10.11)));
//	[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int disconnectx (int, uint, uint);

//	// extern int setipv4sourcefilter (int, struct in_addr, struct in_addr, uint32_t, uint32_t, struct in_addr *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setipv4sourcefilter (int, in_addr, in_addr, uint, uint, in_addr*);

//	// extern int getipv4sourcefilter (int, struct in_addr, struct in_addr, uint32_t *, uint32_t *, struct in_addr *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getipv4sourcefilter (int, in_addr, in_addr, uint*, uint*, in_addr*);

//	// extern int setsourcefilter (int, uint32_t, struct sockaddr *, socklen_t, uint32_t, uint32_t, struct sockaddr_storage *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setsourcefilter (int, uint, sockaddr*, uint, uint, uint, sockaddr_storage*);

//	// extern int getsourcefilter (int, uint32_t, struct sockaddr *, socklen_t, uint32_t *, uint32_t *, struct sockaddr_storage *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getsourcefilter (int, uint, sockaddr*, uint, uint*, uint*, sockaddr_storage*);

//	// extern int inet6_option_space (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int inet6_option_space (int);

//	// extern int inet6_option_init (void *, struct cmsghdr **, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_option_init (void*, cmsghdr**, int);

//	// extern int inet6_option_append (struct cmsghdr *, const __uint8_t *, int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_option_append (cmsghdr*, byte*, int, int);

//	// extern __uint8_t * inet6_option_alloc (struct cmsghdr *, int, int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* inet6_option_alloc (cmsghdr*, int, int, int);

//	// extern int inet6_option_next (const struct cmsghdr *, __uint8_t **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_option_next (cmsghdr*, byte**);

//	// extern int inet6_option_find (const struct cmsghdr *, __uint8_t **, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_option_find (cmsghdr*, byte**, int);

//	// extern size_t inet6_rthdr_space (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint inet6_rthdr_space (int, int);

//	// extern struct cmsghdr * inet6_rthdr_init (void *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe cmsghdr* inet6_rthdr_init (void*, int);

//	// extern int inet6_rthdr_add (struct cmsghdr *, const struct in6_addr *, unsigned int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_rthdr_add (cmsghdr*, in6_addr*, uint);

//	// extern int inet6_rthdr_lasthop (struct cmsghdr *, unsigned int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_rthdr_lasthop (cmsghdr*, uint);

//	// extern int inet6_rthdr_segments (const struct cmsghdr *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_rthdr_segments (cmsghdr*);

//	// extern struct in6_addr * inet6_rthdr_getaddr (struct cmsghdr *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe in6_addr* inet6_rthdr_getaddr (cmsghdr*, int);

//	// extern int inet6_rthdr_getflags (const struct cmsghdr *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_rthdr_getflags (cmsghdr*, int);

//	// extern int inet6_opt_init (void *, socklen_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_opt_init (void*, uint);

//	// extern int inet6_opt_append (void *, socklen_t, int, __uint8_t, socklen_t, __uint8_t, void **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_opt_append (void*, uint, int, byte, uint, byte, void**);

//	// extern int inet6_opt_finish (void *, socklen_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_opt_finish (void*, uint, int);

//	// extern int inet6_opt_set_val (void *, int, void *, socklen_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_opt_set_val (void*, int, void*, uint);

//	// extern int inet6_opt_next (void *, socklen_t, int, __uint8_t *, socklen_t *, void **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_opt_next (void*, uint, int, byte*, uint*, void**);

//	// extern int inet6_opt_find (void *, socklen_t, int, __uint8_t, socklen_t *, void **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_opt_find (void*, uint, int, byte, uint*, void**);

//	// extern int inet6_opt_get_val (void *, int, void *, socklen_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_opt_get_val (void*, int, void*, uint);

//	// extern socklen_t inet6_rth_space (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint inet6_rth_space (int, int);

//	// extern void * inet6_rth_init (void *, socklen_t, int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* inet6_rth_init (void*, uint, int, int);

//	// extern int inet6_rth_add (void *, const struct in6_addr *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_rth_add (void*, in6_addr*);

//	// extern int inet6_rth_reverse (const void *, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_rth_reverse (void*, void*);

//	// extern int inet6_rth_segments (const void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet6_rth_segments (void*);

//	// extern struct in6_addr * inet6_rth_getaddr (const void *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe in6_addr* inet6_rth_getaddr (void*, int);

//	// extern void addrsel_policy_init ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void addrsel_policy_init ();

//	// extern int bindresvport (int, struct sockaddr_in *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int bindresvport (int, sockaddr_in*);

//	// extern int bindresvport_sa (int, struct sockaddr *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int bindresvport_sa (int, sockaddr*);

//	// extern in_addr_t inet_addr (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint inet_addr (sbyte*);

//	// extern char * inet_ntoa (struct in_addr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* inet_ntoa (in_addr);

//	// extern const char * inet_ntop (int, const void *, char *, socklen_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* inet_ntop (int, void*, sbyte*, uint);

//	// extern int inet_pton (int, const char *, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet_pton (int, sbyte*, void*);

//	// extern int ascii2addr (int, const char *, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ascii2addr (int, sbyte*, void*);

//	// extern char * addr2ascii (int, const void *, int, char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* addr2ascii (int, void*, int, sbyte*);

//	// extern int inet_aton (const char *, struct in_addr *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet_aton (sbyte*, in_addr*);

//	// extern in_addr_t inet_lnaof (struct in_addr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint inet_lnaof (in_addr);

//	// extern struct in_addr inet_makeaddr (in_addr_t, in_addr_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern in_addr inet_makeaddr (uint, uint);

//	// extern in_addr_t inet_netof (struct in_addr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint inet_netof (in_addr);

//	// extern in_addr_t inet_network (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint inet_network (sbyte*);

//	// extern char * inet_net_ntop (int, const void *, int, char *, __darwin_size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* inet_net_ntop (int, void*, int, sbyte*, nuint);

//	// extern int inet_net_pton (int, const char *, void *, __darwin_size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int inet_net_pton (int, sbyte*, void*, nuint);

//	// extern char * inet_neta (in_addr_t, char *, __darwin_size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* inet_neta (uint, sbyte*, nuint);

//	// extern unsigned int inet_nsap_addr (const char *, unsigned char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint inet_nsap_addr (sbyte*, byte*, int);

//	// extern char * inet_nsap_ntoa (int, const unsigned char *, char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* inet_nsap_ntoa (int, byte*, sbyte*);

//	// extern int closedir (DIR *) asm("_closedir");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int closedir (DIR*);

//	// extern DIR * opendir (const char *) asm("_opendir");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DIR* opendir (sbyte*);

//	// extern struct dirent * readdir (DIR *) asm("_readdir");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe dirent* readdir (DIR*);

//	// extern int readdir_r (DIR *, struct dirent *, struct dirent **) asm("_readdir_r");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int readdir_r (DIR*, dirent*, dirent**);

//	// extern void rewinddir (DIR *) asm("_rewinddir");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void rewinddir (DIR*);

//	// extern void seekdir (DIR *, long) asm("_seekdir");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void seekdir (DIR*, nint);

//	// extern long telldir (DIR *) asm("_telldir");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint telldir (DIR*);

//	// extern DIR * fdopendir (int) asm("_fdopendir") __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DIR* fdopendir (int);

//	// extern int alphasort (const struct dirent **, const struct dirent **) asm("_alphasort");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int alphasort (dirent**, dirent**);

//	// extern int dirfd (DIR *dirp) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dirfd (DIR* dirp);

//	// extern int scandir (const char *, struct dirent ***, int (*)(const struct dirent *), int (*)(const struct dirent **, const struct dirent **)) asm("_scandir");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int scandir (sbyte*, dirent***, Func<Darwin.dirent*, int>*, Func<Darwin.dirent**, Darwin.dirent**, int>*);

//	// extern int scandir_b (const char *, struct dirent ***, int (^)(const struct dirent *), int (^)(const struct dirent **, const struct dirent **)) asm("_scandir_b") __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int scandir_b (sbyte*, dirent***, Func<Darwin.dirent*, int>, Func<Darwin.dirent**, Darwin.dirent**, int>);

//	// extern int getdirentries (int, char *, int, long *) asm("_getdirentries_is_not_available_when_64_bit_inodes_are_in_effect");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getdirentries (int, sbyte*, int, nint*);

//	// extern DIR * __opendir2 (const char *, int) asm("___opendir2");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DIR* __opendir2 (sbyte*, int);

//	// extern int dladdr (const void *, Dl_info *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dladdr (void*, Dl_info*);

//	// extern int dlclose (void *__handle);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dlclose (void* __handle);

//	// extern char * dlerror ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* dlerror ();

//	// extern void * dlopen (const char *__path, int __mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* dlopen (sbyte* __path, int __mode);

//	// extern void * dlsym (void *__handle, const char *__symbol);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* dlsym (void* __handle, sbyte* __symbol);

//	// extern _Bool dlopen_preflight (const char *__path) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool dlopen_preflight (sbyte* __path);

//	// extern int open (const char *, int, ...) asm("_open");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int open (sbyte*, int, IntPtr varArgs);

//	// extern int openat (int, const char *, int, ...) asm("_openat") __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int openat (int, sbyte*, int, IntPtr varArgs);

//	// extern int creat (const char *, mode_t) asm("_creat");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int creat (sbyte*, ushort);

//	// extern int fcntl (int, int, ...) asm("_fcntl");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fcntl (int, int, IntPtr varArgs);

//	// extern int openx_np (const char *, int, filesec_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int openx_np (sbyte*, int, filesec_t*);

//	// extern int open_dprotected_np (const char *, int, int, int, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int open_dprotected_np (sbyte*, int, int, int, IntPtr varArgs);

//	// extern int flock (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int flock (int, int);

//	// extern filesec_t filesec_init ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe filesec_t* filesec_init ();

//	// extern filesec_t filesec_dup (filesec_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe filesec_t* filesec_dup (filesec_t*);

//	// extern void filesec_free (filesec_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void filesec_free (filesec_t*);

//	// extern int filesec_get_property (filesec_t, filesec_property_t, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int filesec_get_property (filesec_t*, filesec_property_t, void*);

//	// extern int filesec_query_property (filesec_t, filesec_property_t, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int filesec_query_property (filesec_t*, filesec_property_t, int*);

//	// extern int filesec_set_property (filesec_t, filesec_property_t, const void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int filesec_set_property (filesec_t*, filesec_property_t, void*);

//	// extern int filesec_unset_property (filesec_t, filesec_property_t) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int filesec_unset_property (filesec_t*, filesec_property_t);

//	// extern int fmtmsg (long, const char *, int, const char *, const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fmtmsg (nint, sbyte*, int, sbyte*, sbyte*, sbyte*);

//	// extern int fnmatch (const char *, const char *, int) asm("_fnmatch");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fnmatch (sbyte*, sbyte*, int);

//	// extern int chmod (const char *, mode_t) asm("_chmod");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int chmod (sbyte*, ushort);

//	// extern int fchmod (int, mode_t) asm("_fchmod");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fchmod (int, ushort);

//	// extern int fstat (int, struct stat *) asm("_fstat");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fstat (int, stat*);

//	// extern int lstat (const char *, struct stat *) asm("_lstat");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lstat (sbyte*, stat*);

//	// extern int mkdir (const char *, mode_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkdir (sbyte*, ushort);

//	// extern int mkfifo (const char *, mode_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkfifo (sbyte*, ushort);

//	// extern int stat (const char *, struct stat *) asm("_stat");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int stat (sbyte*, stat*);

//	// extern int mknod (const char *, mode_t, dev_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mknod (sbyte*, ushort, int);

//	// extern mode_t umask (mode_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort umask (ushort);

//	// extern int fchmodat (int, const char *, mode_t, int) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fchmodat (int, sbyte*, ushort, int);

//	// extern int fstatat (int, const char *, struct stat *, int) asm("_fstatat") __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fstatat (int, sbyte*, stat*, int);

//	// extern int mkdirat (int, const char *, mode_t) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkdirat (int, sbyte*, ushort);

//	// extern int futimens (int __fd, const struct timespec *__times) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int futimens (int __fd, timespec[] __times);

//	// extern int utimensat (int __fd, const char *__path, const struct timespec *__times, int __flag) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int utimensat (int __fd, sbyte* __path, timespec[] __times, int __flag);

//	// extern int chflags (const char *, __uint32_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int chflags (sbyte*, uint);

//	// extern int chmodx_np (const char *, filesec_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int chmodx_np (sbyte*, filesec_t*);

//	// extern int fchflags (int, __uint32_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fchflags (int, uint);

//	// extern int fchmodx_np (int, filesec_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fchmodx_np (int, filesec_t*);

//	// extern int fstatx_np (int, struct stat *, filesec_t) asm("_fstatx_np");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fstatx_np (int, stat*, filesec_t*);

//	// extern int lchflags (const char *, __uint32_t) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lchflags (sbyte*, uint);

//	// extern int lchmod (const char *, mode_t) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lchmod (sbyte*, ushort);

//	// extern int lstatx_np (const char *, struct stat *, filesec_t) asm("_lstatx_np");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lstatx_np (sbyte*, stat*, filesec_t*);

//	// extern int mkdirx_np (const char *, filesec_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkdirx_np (sbyte*, filesec_t*);

//	// extern int mkfifox_np (const char *, filesec_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkfifox_np (sbyte*, filesec_t*);

//	// extern int statx_np (const char *, struct stat *, filesec_t) asm("_statx_np");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int statx_np (sbyte*, stat*, filesec_t*);

//	// extern int umaskx_np (filesec_t) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int umaskx_np (filesec_t*);

//	// extern int ftw (const char *, int (*)(const char *, const struct stat *, int), int) asm("_ftw");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ftw (sbyte*, Func<sbyte*, Darwin.stat*, int, int>*, int);

//	// extern int nftw (const char *, int (*)(const char *, const struct stat *, int, struct FTW *), int, int) asm("_nftw");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int nftw (sbyte*, Func<sbyte*, Darwin.stat*, int, Darwin.FTW*, int>*, int, int);

//	// extern int glob (const char *__restrict, int, int (*)(const char *, int), glob_t *__restrict) asm("_glob");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int glob (sbyte*, int, Func<sbyte*, int, int>*, glob_t*);

//	// extern int glob_b (const char *__restrict, int, int (^)(const char *, int), glob_t *__restrict) asm("_glob_b") __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int glob_b (sbyte*, int, Func<sbyte*, int, int>, glob_t*);

//	// extern void globfree (glob_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void globfree (glob_t*);

//	// extern struct group * getgrgid (gid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe group* getgrgid (uint);

//	// extern struct group * getgrnam (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe group* getgrnam (sbyte*);

//	// extern int getgrgid_r (gid_t, struct group *, char *, size_t, struct group **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getgrgid_r (uint, group*, sbyte*, nuint, group**);

//	// extern int getgrnam_r (const char *, struct group *, char *, size_t, struct group **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getgrnam_r (sbyte*, group*, sbyte*, nuint, group**);

//	// extern struct group * getgrent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe group* getgrent ();

//	// extern void setgrent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setgrent ();

//	// extern void endgrent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endgrent ();

//	// extern char * group_from_gid (gid_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* group_from_gid (uint, int);

//	// extern struct group * getgruuid (unsigned char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe group* getgruuid (byte[]);

//	// extern int getgruuid_r (unsigned char *, struct group *, char *, size_t, struct group **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getgruuid_r (byte[], group*, sbyte*, nuint, group**);

//	// extern void setgrfile (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void setgrfile (sbyte*);

//	// extern int setgroupent (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setgroupent (int);

//	// extern iconv_t iconv_open (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* iconv_open (sbyte*, sbyte*);

//	// extern size_t iconv (iconv_t, char **__restrict, size_t *__restrict, char **__restrict, size_t *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint iconv (void*, sbyte**, nuint*, sbyte**, nuint*);

//	// extern int iconv_close (iconv_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iconv_close (void*);

//	// extern int iconvctl (iconv_t, int, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iconvctl (void*, int, void*);

//	// extern void iconvlist (int (*)(unsigned int, const char *const *, void *), void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void iconvlist (Func<uint, sbyte**, void*, int>*, void*);

//	// extern const char * iconv_canonicalize (const char *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* iconv_canonicalize (sbyte* name);

//	// extern void libiconv_set_relocation_prefix (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void libiconv_set_relocation_prefix (sbyte*, sbyte*);

//	// extern int getifaddrs (struct ifaddrs **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getifaddrs (ifaddrs**);

//	// extern void freeifaddrs (struct ifaddrs *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void freeifaddrs (ifaddrs*);

//	// extern int getifmaddrs (struct ifmaddrs **) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getifmaddrs (ifmaddrs**);

//	// extern void freeifmaddrs (struct ifmaddrs *) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void freeifmaddrs (ifmaddrs*);

//	// extern int ioctl (int, unsigned long, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ioctl (int, nuint, IntPtr varArgs);

//	// extern char * nl_langinfo (nl_item);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* nl_langinfo (int);

//	// extern char * nl_langinfo_l (nl_item, locale_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* nl_langinfo_l (int, locale_t*);

//	// extern char * basename (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* basename (sbyte*);

//	// extern char * dirname (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* dirname (sbyte*);

//	// extern char * basename_r (const char *, char *) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* basename_r (sbyte*, sbyte*);

//	// extern char * dirname_r (const char *, char *) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* dirname_r (sbyte*, sbyte*);

//	// extern ssize_t strfmon (char *, size_t, const char *, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint strfmon (sbyte*, nuint, sbyte*, IntPtr varArgs);

//	// extern ssize_t strfmon_l (char *, size_t, locale_t, const char *, ...) __attribute__((format(strfmon, 4, 5)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint strfmon_l (sbyte*, nuint, locale_t*, sbyte*, IntPtr varArgs);

//	// extern int dbm_clearerr (DBM *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dbm_clearerr (DBM*);

//	// extern void dbm_close (DBM *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dbm_close (DBM*);

//	// extern int dbm_delete (DBM *, datum);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dbm_delete (DBM*, datum);

//	// extern int dbm_dirfno (DBM *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dbm_dirfno (DBM*);

//	// extern int dbm_error (DBM *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dbm_error (DBM*);

//	// extern datum dbm_fetch (DBM *, datum);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe datum dbm_fetch (DBM*, datum);

//	// extern datum dbm_firstkey (DBM *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe datum dbm_firstkey (DBM*);

//	// extern long dbm_forder (DBM *, datum);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint dbm_forder (DBM*, datum);

//	// extern datum dbm_nextkey (DBM *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe datum dbm_nextkey (DBM*);

//	// extern DBM * dbm_open (const char *, int, mode_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DBM* dbm_open (sbyte*, int, ushort);

//	// extern int dbm_store (DBM *, datum, datum, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int dbm_store (DBM*, datum, datum, int);

//	// extern void endhostent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endhostent ();

//	// extern void endnetent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endnetent ();

//	// extern void endprotoent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endprotoent ();

//	// extern void endservent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endservent ();

//	// extern void freeaddrinfo (struct addrinfo *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void freeaddrinfo (addrinfo*);

//	// extern const char * gai_strerror (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* gai_strerror (int);

//	// extern int getaddrinfo (const char *__restrict, const char *__restrict, const struct addrinfo *__restrict, struct addrinfo **__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getaddrinfo (sbyte*, sbyte*, addrinfo*, addrinfo**);

//	// extern struct hostent * gethostbyaddr (const void *, socklen_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe hostent* gethostbyaddr (void*, uint, int);

//	// extern struct hostent * gethostbyname (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe hostent* gethostbyname (sbyte*);

//	// extern struct hostent * gethostent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe hostent* gethostent ();

//	// extern int getnameinfo (const struct sockaddr *__restrict, socklen_t, char *__restrict, socklen_t, char *__restrict, socklen_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getnameinfo (sockaddr*, uint, sbyte*, uint, sbyte*, uint, int);

//	// extern struct netent * getnetbyaddr (uint32_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe netent* getnetbyaddr (uint, int);

//	// extern struct netent * getnetbyname (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe netent* getnetbyname (sbyte*);

//	// extern struct netent * getnetent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe netent* getnetent ();

//	// extern struct protoent * getprotobyname (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe protoent* getprotobyname (sbyte*);

//	// extern struct protoent * getprotobynumber (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe protoent* getprotobynumber (int);

//	// extern struct protoent * getprotoent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe protoent* getprotoent ();

//	// extern struct servent * getservbyname (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe servent* getservbyname (sbyte*, sbyte*);

//	// extern struct servent * getservbyport (int, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe servent* getservbyport (int, sbyte*);

//	// extern struct servent * getservent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe servent* getservent ();

//	// extern void sethostent (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void sethostent (int);

//	// extern void setnetent (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setnetent (int);

//	// extern void setprotoent (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setprotoent (int);

//	// extern void setservent (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setservent (int);

//	// extern void freehostent (struct hostent *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void freehostent (hostent*);

//	// extern struct hostent * gethostbyname2 (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe hostent* gethostbyname2 (sbyte*, int);

//	// extern struct hostent * getipnodebyaddr (const void *, size_t, int, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe hostent* getipnodebyaddr (void*, nuint, int, int*);

//	// extern struct hostent * getipnodebyname (const char *, int, int, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe hostent* getipnodebyname (sbyte*, int, int, int*);

//	// extern struct rpcent * getrpcbyname (const char *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe rpcent* getrpcbyname (sbyte* name);

//	// extern struct rpcent * getrpcbynumber (int number);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe rpcent* getrpcbynumber (int number);

//	// extern struct rpcent * getrpcent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe rpcent* getrpcent ();

//	// extern void setrpcent (int stayopen);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setrpcent (int stayopen);

//	// extern void endrpcent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endrpcent ();

//	// extern void herror (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void herror (sbyte*);

//	// extern const char * hstrerror (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* hstrerror (int);

//	// extern int innetgr (const char *, const char *, const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int innetgr (sbyte*, sbyte*, sbyte*, sbyte*);

//	// extern int getnetgrent (char **, char **, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getnetgrent (sbyte**, sbyte**, sbyte**);

//	// extern void endnetgrent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endnetgrent ();

//	// extern void setnetgrent (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void setnetgrent (sbyte*);

//	// extern void link_addr (const char *, struct sockaddr_dl *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void link_addr (sbyte*, sockaddr_dl*);

//	// extern char * link_ntoa (const struct sockaddr_dl *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* link_ntoa (sockaddr_dl*);

//	// extern int adjtime (const struct timeval *, struct timeval *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int adjtime (timeval*, timeval*);

//	// extern int futimes (int, const struct timeval *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int futimes (int, timeval*);

//	// extern int lutimes (const char *, const struct timeval *) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lutimes (sbyte*, timeval*);

//	// extern int settimeofday (const struct timeval *, const struct timezone *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int settimeofday (timeval*, timezone*);

//	// extern int getitimer (int, struct itimerval *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getitimer (int, itimerval*);

//	// extern int gettimeofday (struct timeval *__restrict, void *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int gettimeofday (timeval*, void*);

//	// extern int select (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, struct timeval *__restrict) asm("_select");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int select (int, fd_set*, fd_set*, fd_set*, timeval*);

//	// extern int setitimer (int, const struct itimerval *__restrict, struct itimerval *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setitimer (int, itimerval*, itimerval*);

//	// extern int utimes (const char *, const struct timeval *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int utimes (sbyte*, timeval*);

//	// extern unsigned int if_nametoindex (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint if_nametoindex (sbyte*);

//	// extern char * if_indextoname (unsigned int, char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* if_indextoname (uint, sbyte*);

//	// extern struct if_nameindex * if_nameindex ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe if_nameindex* if_nameindex ();

//	// extern void if_freenameindex (struct if_nameindex *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void if_freenameindex (if_nameindex*);

//	// extern nl_catd catopen (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nl_catd* catopen (sbyte*, int);

//	// extern char * catgets (nl_catd, int, int, const char *) __attribute__((format_arg(4)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* catgets (nl_catd*, int, int, sbyte*);

//	// extern int catclose (nl_catd);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int catclose (nl_catd*);

//	// extern int poll (struct pollfd *, nfds_t, int) asm("_poll");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int poll (pollfd*, uint, int);

//	// extern int sched_yield ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sched_yield ();

//	// extern int sched_get_priority_min (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sched_get_priority_min (int);

//	// extern int sched_get_priority_max (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int sched_get_priority_max (int);

//	// extern qos_class_t qos_class_self () __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern qos_class_t qos_class_self ();

//	// extern qos_class_t qos_class_main () __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern qos_class_t qos_class_main ();

//	// extern int pthread_attr_set_qos_class_np (pthread_attr_t * _Nonnull __attr, qos_class_t __qos_class, int __relative_priority) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_set_qos_class_np (pthread_attr_t* __attr, qos_class_t __qos_class, int __relative_priority);

//	// extern int pthread_attr_get_qos_class_np (pthread_attr_t *__restrict _Nonnull __attr, qos_class_t *__restrict _Nullable __qos_class, int *__restrict _Nullable __relative_priority) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_get_qos_class_np (pthread_attr_t* __attr, [NullAllowed] qos_class_t* __qos_class, [NullAllowed] int* __relative_priority);

//	// extern int pthread_set_qos_class_self_np (qos_class_t __qos_class, int __relative_priority) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pthread_set_qos_class_self_np (qos_class_t __qos_class, int __relative_priority);

//	// extern int pthread_get_qos_class_np (pthread_t _Nonnull __pthread, qos_class_t *__restrict _Nullable __qos_class, int *__restrict _Nullable __relative_priority) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_get_qos_class_np (pthread_t* __pthread, [NullAllowed] qos_class_t* __qos_class, [NullAllowed] int* __relative_priority);

//	// extern pthread_override_t _Nonnull pthread_override_qos_class_start_np (pthread_t _Nonnull __pthread, qos_class_t __qos_class, int __relative_priority) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe pthread_override_t* pthread_override_qos_class_start_np (pthread_t* __pthread, qos_class_t __qos_class, int __relative_priority);

//	// extern int pthread_override_qos_class_end_np (pthread_override_t _Nonnull __override) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_override_qos_class_end_np (pthread_override_t* __override);

//	// extern int pthread_atfork (void (* _Nullable)(void), void (* _Nullable)(void), void (* _Nullable)(void)) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_atfork ([NullAllowed] Action*, [NullAllowed] Action*, [NullAllowed] Action*);

//	// extern int pthread_attr_destroy (pthread_attr_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_destroy (pthread_attr_t*);

//	// extern int pthread_attr_getdetachstate (const pthread_attr_t * _Nonnull, int * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getdetachstate (pthread_attr_t*, int*);

//	// extern int pthread_attr_getguardsize (const pthread_attr_t *__restrict _Nonnull, size_t *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getguardsize (pthread_attr_t*, nuint*);

//	// extern int pthread_attr_getinheritsched (const pthread_attr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getinheritsched (pthread_attr_t*, int*);

//	// extern int pthread_attr_getschedparam (const pthread_attr_t *__restrict _Nonnull, struct sched_param *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getschedparam (pthread_attr_t*, sched_param*);

//	// extern int pthread_attr_getschedpolicy (const pthread_attr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getschedpolicy (pthread_attr_t*, int*);

//	// extern int pthread_attr_getscope (const pthread_attr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getscope (pthread_attr_t*, int*);

//	// extern int pthread_attr_getstack (const pthread_attr_t *__restrict _Nonnull, void * _Nullable *__restrict _Nonnull, size_t *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getstack (pthread_attr_t*, [NullAllowed] void**, nuint*);

//	// extern int pthread_attr_getstackaddr (const pthread_attr_t *__restrict _Nonnull, void * _Nullable *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getstackaddr (pthread_attr_t*, [NullAllowed] void**);

//	// extern int pthread_attr_getstacksize (const pthread_attr_t *__restrict _Nonnull, size_t *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_getstacksize (pthread_attr_t*, nuint*);

//	// extern int pthread_attr_init (pthread_attr_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_init (pthread_attr_t*);

//	// extern int pthread_attr_setdetachstate (pthread_attr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setdetachstate (pthread_attr_t*, int);

//	// extern int pthread_attr_setguardsize (pthread_attr_t * _Nonnull, size_t) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setguardsize (pthread_attr_t*, nuint);

//	// extern int pthread_attr_setinheritsched (pthread_attr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setinheritsched (pthread_attr_t*, int);

//	// extern int pthread_attr_setschedparam (pthread_attr_t *__restrict _Nonnull, const struct sched_param *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setschedparam (pthread_attr_t*, sched_param*);

//	// extern int pthread_attr_setschedpolicy (pthread_attr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setschedpolicy (pthread_attr_t*, int);

//	// extern int pthread_attr_setscope (pthread_attr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setscope (pthread_attr_t*, int);

//	// extern int pthread_attr_setstack (pthread_attr_t * _Nonnull, void * _Nonnull, size_t) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setstack (pthread_attr_t*, void*, nuint);

//	// extern int pthread_attr_setstackaddr (pthread_attr_t * _Nonnull, void * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setstackaddr (pthread_attr_t*, void*);

//	// extern int pthread_attr_setstacksize (pthread_attr_t * _Nonnull, size_t) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_attr_setstacksize (pthread_attr_t*, nuint);

//	// extern int pthread_cancel (pthread_t _Nonnull) asm("_pthread_cancel") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cancel (pthread_t*);

//	// extern int pthread_cond_broadcast (pthread_cond_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_broadcast (pthread_cond_t*);

//	// extern int pthread_cond_destroy (pthread_cond_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_destroy (pthread_cond_t*);

//	// extern int pthread_cond_init (pthread_cond_t *__restrict _Nonnull, const pthread_condattr_t *__restrict _Nullable) asm("_pthread_cond_init") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_init (pthread_cond_t*, [NullAllowed] pthread_condattr_t*);

//	// extern int pthread_cond_signal (pthread_cond_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_signal (pthread_cond_t*);

//	// extern int pthread_cond_timedwait (pthread_cond_t *__restrict _Nonnull, pthread_mutex_t *__restrict _Nonnull, const struct timespec *__restrict _Nullable) asm("_pthread_cond_timedwait") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_timedwait (pthread_cond_t*, pthread_mutex_t*, [NullAllowed] timespec*);

//	// extern int pthread_cond_wait (pthread_cond_t *__restrict _Nonnull, pthread_mutex_t *__restrict _Nonnull) asm("_pthread_cond_wait") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_wait (pthread_cond_t*, pthread_mutex_t*);

//	// extern int pthread_condattr_destroy (pthread_condattr_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_condattr_destroy (pthread_condattr_t*);

//	// extern int pthread_condattr_init (pthread_condattr_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_condattr_init (pthread_condattr_t*);

//	// extern int pthread_condattr_getpshared (const pthread_condattr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_condattr_getpshared (pthread_condattr_t*, int*);

//	// extern int pthread_condattr_setpshared (pthread_condattr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_condattr_setpshared (pthread_condattr_t*, int);

//	// extern int pthread_create (pthread_t  _Nullable *__restrict _Nonnull, const pthread_attr_t *__restrict _Nullable, void * _Nullable (* _Nonnull)(void * _Nullable), void *__restrict _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_create ([NullAllowed] pthread_t**, [NullAllowed] pthread_attr_t*, Func<void*, void*>*, [NullAllowed] void*);

//	// extern int pthread_detach (pthread_t _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_detach (pthread_t*);

//	// extern int pthread_equal (pthread_t _Nullable, pthread_t _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_equal ([NullAllowed] pthread_t*, [NullAllowed] pthread_t*);

//	// extern void pthread_exit (void * _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void pthread_exit ([NullAllowed] void*);

//	// extern int pthread_getconcurrency () __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pthread_getconcurrency ();

//	// extern int pthread_getschedparam (pthread_t _Nonnull, int *__restrict _Nullable, struct sched_param *__restrict _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_getschedparam (pthread_t*, [NullAllowed] int*, [NullAllowed] sched_param*);

//	// extern void * _Nullable pthread_getspecific (pthread_key_t) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* pthread_getspecific (nuint);

//	// extern int pthread_join (pthread_t _Nonnull, void * _Nullable * _Nullable) asm("_pthread_join") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_join (pthread_t*, [NullAllowed] void**);

//	// extern int pthread_key_create (pthread_key_t * _Nonnull, void (* _Nullable)(void * _Nonnull)) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_key_create (nuint*, [NullAllowed] Action<void*>*);

//	// extern int pthread_key_delete (pthread_key_t) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pthread_key_delete (nuint);

//	// extern int pthread_mutex_destroy (pthread_mutex_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutex_destroy (pthread_mutex_t*);

//	// extern int pthread_mutex_getprioceiling (const pthread_mutex_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutex_getprioceiling (pthread_mutex_t*, int*);

//	// extern int pthread_mutex_init (pthread_mutex_t *__restrict _Nonnull, const pthread_mutexattr_t *__restrict _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutex_init (pthread_mutex_t*, [NullAllowed] pthread_mutexattr_t*);

//	// extern int pthread_mutex_lock (pthread_mutex_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutex_lock (pthread_mutex_t*);

//	// extern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict _Nonnull, int, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutex_setprioceiling (pthread_mutex_t*, int, int*);

//	// extern int pthread_mutex_trylock (pthread_mutex_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutex_trylock (pthread_mutex_t*);

//	// extern int pthread_mutex_unlock (pthread_mutex_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutex_unlock (pthread_mutex_t*);

//	// extern int pthread_mutexattr_destroy (pthread_mutexattr_t * _Nonnull) asm("_pthread_mutexattr_destroy") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_destroy (pthread_mutexattr_t*);

//	// extern int pthread_mutexattr_getprioceiling (const pthread_mutexattr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_getprioceiling (pthread_mutexattr_t*, int*);

//	// extern int pthread_mutexattr_getprotocol (const pthread_mutexattr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_getprotocol (pthread_mutexattr_t*, int*);

//	// extern int pthread_mutexattr_getpshared (const pthread_mutexattr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_getpshared (pthread_mutexattr_t*, int*);

//	// extern int pthread_mutexattr_gettype (const pthread_mutexattr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_gettype (pthread_mutexattr_t*, int*);

//	// extern int pthread_mutexattr_init (pthread_mutexattr_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_init (pthread_mutexattr_t*);

//	// extern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_setprioceiling (pthread_mutexattr_t*, int);

//	// extern int pthread_mutexattr_setprotocol (pthread_mutexattr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_setprotocol (pthread_mutexattr_t*, int);

//	// extern int pthread_mutexattr_setpshared (pthread_mutexattr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_setpshared (pthread_mutexattr_t*, int);

//	// extern int pthread_mutexattr_settype (pthread_mutexattr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_settype (pthread_mutexattr_t*, int);

//	// extern int pthread_once (pthread_once_t * _Nonnull, void (* _Nonnull)(void)) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_once (pthread_once_t*, Action*);

//	// extern int pthread_rwlock_destroy (pthread_rwlock_t * _Nonnull) asm("_pthread_rwlock_destroy") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlock_destroy (pthread_rwlock_t*);

//	// extern int pthread_rwlock_init (pthread_rwlock_t *__restrict _Nonnull, const pthread_rwlockattr_t *__restrict _Nullable) asm("_pthread_rwlock_init") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlock_init (pthread_rwlock_t*, [NullAllowed] pthread_rwlockattr_t*);

//	// extern int pthread_rwlock_rdlock (pthread_rwlock_t * _Nonnull) asm("_pthread_rwlock_rdlock") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlock_rdlock (pthread_rwlock_t*);

//	// extern int pthread_rwlock_tryrdlock (pthread_rwlock_t * _Nonnull) asm("_pthread_rwlock_tryrdlock") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlock_tryrdlock (pthread_rwlock_t*);

//	// extern int pthread_rwlock_trywrlock (pthread_rwlock_t * _Nonnull) asm("_pthread_rwlock_trywrlock") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlock_trywrlock (pthread_rwlock_t*);

//	// extern int pthread_rwlock_wrlock (pthread_rwlock_t * _Nonnull) asm("_pthread_rwlock_wrlock") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlock_wrlock (pthread_rwlock_t*);

//	// extern int pthread_rwlock_unlock (pthread_rwlock_t * _Nonnull) asm("_pthread_rwlock_unlock") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlock_unlock (pthread_rwlock_t*);

//	// extern int pthread_rwlockattr_destroy (pthread_rwlockattr_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlockattr_destroy (pthread_rwlockattr_t*);

//	// extern int pthread_rwlockattr_getpshared (const pthread_rwlockattr_t *__restrict _Nonnull, int *__restrict _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlockattr_getpshared (pthread_rwlockattr_t*, int*);

//	// extern int pthread_rwlockattr_init (pthread_rwlockattr_t * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlockattr_init (pthread_rwlockattr_t*);

//	// extern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t * _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_rwlockattr_setpshared (pthread_rwlockattr_t*, int);

//	// extern pthread_t _Nonnull pthread_self () __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe pthread_t* pthread_self ();

//	// extern int pthread_setcancelstate (int, int * _Nullable) asm("_pthread_setcancelstate") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_setcancelstate (int, [NullAllowed] int*);

//	// extern int pthread_setcanceltype (int, int * _Nullable) asm("_pthread_setcanceltype") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_setcanceltype (int, [NullAllowed] int*);

//	// extern int pthread_setconcurrency (int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pthread_setconcurrency (int);

//	// extern int pthread_setschedparam (pthread_t _Nonnull, int, const struct sched_param * _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_setschedparam (pthread_t*, int, sched_param*);

//	// extern int pthread_setspecific (pthread_key_t, const void * _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_setspecific (nuint, [NullAllowed] void*);

//	// extern void pthread_testcancel () asm("_pthread_testcancel") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void pthread_testcancel ();

//	// extern int pthread_is_threaded_np () __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pthread_is_threaded_np ();

//	// extern int pthread_threadid_np (pthread_t _Nullable, __uint64_t * _Nullable) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_threadid_np ([NullAllowed] pthread_t*, [NullAllowed] ulong*);

//	// extern int pthread_getname_np (pthread_t _Nonnull, char * _Nonnull, size_t) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_getname_np (pthread_t*, sbyte*, nuint);

//	// extern int pthread_setname_np (const char * _Nonnull) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_setname_np (sbyte*);

//	// extern int pthread_main_np () __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pthread_main_np ();

//	// extern mach_port_t pthread_mach_thread_np (pthread_t _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint pthread_mach_thread_np (pthread_t*);

//	// extern size_t pthread_get_stacksize_np (pthread_t _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint pthread_get_stacksize_np (pthread_t*);

//	// extern void * _Nonnull pthread_get_stackaddr_np (pthread_t _Nonnull) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* pthread_get_stackaddr_np (pthread_t*);

//	// extern int pthread_cond_signal_thread_np (pthread_cond_t * _Nonnull, pthread_t _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_signal_thread_np (pthread_cond_t*, [NullAllowed] pthread_t*);

//	// extern int pthread_cond_timedwait_relative_np (pthread_cond_t * _Nonnull, pthread_mutex_t * _Nonnull, const struct timespec * _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_cond_timedwait_relative_np (pthread_cond_t*, pthread_mutex_t*, [NullAllowed] timespec*);

//	// extern int pthread_create_suspended_np (pthread_t  _Nullable * _Nonnull, const pthread_attr_t * _Nullable, void * _Nullable (* _Nonnull)(void * _Nullable), void * _Nullable) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_create_suspended_np ([NullAllowed] pthread_t**, [NullAllowed] pthread_attr_t*, Func<void*, void*>*, [NullAllowed] void*);

//	// extern int pthread_kill (pthread_t _Nonnull, int) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_kill (pthread_t*, int);

//	// extern pthread_t _Nullable pthread_from_mach_thread_np (mach_port_t) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe pthread_t* pthread_from_mach_thread_np (uint);

//	// extern int pthread_sigmask (int, const sigset_t * _Nullable, sigset_t * _Nullable) asm("_pthread_sigmask") __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_sigmask (int, [NullAllowed] uint*, [NullAllowed] uint*);

//	// extern void pthread_yield_np () __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.4)));
//	[Mac (10,4), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void pthread_yield_np ();

//	// extern int pthread_mutexattr_setpolicy_np (pthread_mutexattr_t * _Nonnull, int) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_mutexattr_setpolicy_np (pthread_mutexattr_t*, int);

//	// extern void _pthread_mutex_enable_legacy_mode () __attribute__((availability(macos, introduced=10.11)));
//	[Mac (10,11)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _pthread_mutex_enable_legacy_mode ();

//	// extern int pthread_create_from_mach_thread (pthread_t  _Nullable *__restrict _Nonnull, const pthread_attr_t *__restrict _Nullable, void * _Nullable (* _Nonnull)(void * _Nullable), void *__restrict _Nullable) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_create_from_mach_thread ([NullAllowed] pthread_t**, [NullAllowed] pthread_attr_t*, Func<void*, void*>*, [NullAllowed] void*);

//	// extern int posix_spawn (pid_t *__restrict, const char *__restrict, const posix_spawn_file_actions_t *, const posix_spawnattr_t *__restrict, char *const *__restrict __argv, char *const *__restrict __envp) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawn (int*, sbyte*, void**, void**, sbyte*[] __argv, sbyte*[] __envp);

//	// extern int posix_spawnp (pid_t *__restrict, const char *__restrict, const posix_spawn_file_actions_t *, const posix_spawnattr_t *__restrict, char *const *__restrict __argv, char *const *__restrict __envp) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnp (int*, sbyte*, void**, void**, sbyte*[] __argv, sbyte*[] __envp);

//	// extern int posix_spawn_file_actions_addclose (posix_spawn_file_actions_t *, int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawn_file_actions_addclose (void**, int);

//	// extern int posix_spawn_file_actions_adddup2 (posix_spawn_file_actions_t *, int, int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawn_file_actions_adddup2 (void**, int, int);

//	// extern int posix_spawn_file_actions_addopen (posix_spawn_file_actions_t *__restrict, int, const char *__restrict, int, mode_t) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawn_file_actions_addopen (void**, int, sbyte*, int, ushort);

//	// extern int posix_spawn_file_actions_destroy (posix_spawn_file_actions_t *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawn_file_actions_destroy (void**);

//	// extern int posix_spawn_file_actions_init (posix_spawn_file_actions_t *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawn_file_actions_init (void**);

//	// extern int posix_spawnattr_destroy (posix_spawnattr_t *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_destroy (void**);

//	// extern int posix_spawnattr_getsigdefault (const posix_spawnattr_t *__restrict, sigset_t *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_getsigdefault (void**, uint*);

//	// extern int posix_spawnattr_getflags (const posix_spawnattr_t *__restrict, short *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_getflags (void**, short*);

//	// extern int posix_spawnattr_getpgroup (const posix_spawnattr_t *__restrict, pid_t *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_getpgroup (void**, int*);

//	// extern int posix_spawnattr_getsigmask (const posix_spawnattr_t *__restrict, sigset_t *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_getsigmask (void**, uint*);

//	// extern int posix_spawnattr_init (posix_spawnattr_t *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_init (void**);

//	// extern int posix_spawnattr_setsigdefault (posix_spawnattr_t *__restrict, const sigset_t *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setsigdefault (void**, uint*);

//	// extern int posix_spawnattr_setflags (posix_spawnattr_t *, short) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setflags (void**, short);

//	// extern int posix_spawnattr_setpgroup (posix_spawnattr_t *, pid_t) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setpgroup (void**, int);

//	// extern int posix_spawnattr_setsigmask (posix_spawnattr_t *__restrict, const sigset_t *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setsigmask (void**, uint*);

//	// extern mach_msg_return_t mach_msg_overwrite (mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify, mach_msg_header_t *rcv_msg, mach_msg_size_t rcv_limit) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_msg_overwrite (mach_msg_header_t* msg, int option, uint send_size, uint rcv_size, uint rcv_name, uint timeout, uint notify, mach_msg_header_t* rcv_msg, uint rcv_limit);

//	// extern mach_msg_return_t mach_msg (mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_msg (mach_msg_header_t* msg, int option, uint send_size, uint rcv_size, uint rcv_name, uint timeout, uint notify);

//	// extern kern_return_t mach_voucher_deallocate (mach_port_name_t voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_voucher_deallocate (uint voucher);

//	// extern int posix_spawnattr_getbinpref_np (const posix_spawnattr_t *__restrict, size_t, cpu_type_t *__restrict, size_t *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_getbinpref_np (void**, nuint, int*, nuint*);

//	// extern int posix_spawnattr_setauditsessionport_np (posix_spawnattr_t *__restrict, mach_port_t) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=3.2)));
//	[NoWatch, NoTV, iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setauditsessionport_np (void**, uint);

//	// extern int posix_spawnattr_setbinpref_np (posix_spawnattr_t *__restrict, size_t, cpu_type_t *__restrict, size_t *__restrict) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setbinpref_np (void**, nuint, int*, nuint*);

//	// extern int posix_spawnattr_setexceptionports_np (posix_spawnattr_t *__restrict, exception_mask_t, mach_port_t, exception_behavior_t, thread_state_flavor_t) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setexceptionports_np (void**, uint, uint, int, int);

//	// extern int posix_spawnattr_setspecialport_np (posix_spawnattr_t *__restrict, mach_port_t, int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=2.0)));
//	[NoWatch, NoTV, iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_setspecialport_np (void**, uint, int);

//	// extern int posix_spawn_file_actions_addinherit_np (posix_spawn_file_actions_t *, int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=4.3)));
//	[NoWatch, NoTV, iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawn_file_actions_addinherit_np (void**, int);

//	// extern int posix_spawnattr_set_qos_class_np (posix_spawnattr_t *__restrict __attr, qos_class_t __qos_class) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_set_qos_class_np (void** __attr, qos_class_t __qos_class);

//	// extern int posix_spawnattr_get_qos_class_np (const posix_spawnattr_t *__restrict __attr, qos_class_t *__restrict __qos_class) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_spawnattr_get_qos_class_np (void** __attr, qos_class_t* __qos_class);

//	// extern int regcomp (regex_t *__restrict, const char *__restrict, int) asm("_regcomp");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regcomp (regex_t*, sbyte*, int);

//	// extern size_t regerror (int, const regex_t *__restrict, char *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint regerror (int, regex_t*, sbyte*, nuint);

//	// extern int regexec (const regex_t *__restrict, const char *__restrict, size_t, regmatch_t *__restrict __pmatch, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regexec (regex_t*, sbyte*, nuint, regmatch_t[] __pmatch, int);

//	// extern void regfree (regex_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void regfree (regex_t*);

//	// extern int regncomp (regex_t *__restrict, const char *__restrict, size_t, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regncomp (regex_t*, sbyte*, nuint, int);

//	// extern int regnexec (const regex_t *__restrict, const char *__restrict, size_t, size_t, regmatch_t *__restrict __pmatch, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regnexec (regex_t*, sbyte*, nuint, nuint, regmatch_t[] __pmatch, int);

//	// extern int regwcomp (regex_t *__restrict, const wchar_t *__restrict, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regwcomp (regex_t*, int*, int);

//	// extern int regwexec (const regex_t *__restrict, const wchar_t *__restrict, size_t, regmatch_t *__restrict __pmatch, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regwexec (regex_t*, int*, nuint, regmatch_t[] __pmatch, int);

//	// extern int regwncomp (regex_t *__restrict, const wchar_t *__restrict, size_t, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regwncomp (regex_t*, int*, nuint, int);

//	// extern int regwnexec (const regex_t *__restrict, const wchar_t *__restrict, size_t, size_t, regmatch_t *__restrict __pmatch, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regwnexec (regex_t*, int*, nuint, nuint, regmatch_t[] __pmatch, int);

//	// extern int regcomp_l (regex_t *__restrict, const char *__restrict, int, __restrict locale_t) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regcomp_l (regex_t*, sbyte*, int, locale_t*);

//	// extern int regncomp_l (regex_t *__restrict, const char *__restrict, size_t, int, __restrict locale_t) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regncomp_l (regex_t*, sbyte*, nuint, int, locale_t*);

//	// extern int regwcomp_l (regex_t *__restrict, const wchar_t *__restrict, int, __restrict locale_t) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regwcomp_l (regex_t*, int*, int, locale_t*);

//	// extern int regwnexec_l (const regex_t *__restrict, const wchar_t *__restrict, size_t, size_t, regmatch_t *__restrict __pmatch, int, __restrict locale_t) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int regwnexec_l (regex_t*, int*, nuint, nuint, regmatch_t[] __pmatch, int, locale_t*);

//	// extern int hcreate (size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int hcreate (nuint);

//	// extern void hdestroy ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void hdestroy ();

//	// extern ENTRY * hsearch (ENTRY, ACTION);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ENTRY* hsearch (ENTRY, ACTION);

//	// extern void insque (void *, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void insque (void*, void*);

//	// extern void * lfind (const void *, const void *, size_t *, size_t, int (*)(const void *, const void *));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* lfind (void*, void*, nuint*, nuint, Func<void*, void*, int>*);

//	// extern void * lsearch (const void *, void *, size_t *, size_t, int (*)(const void *, const void *));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* lsearch (void*, void*, nuint*, nuint, Func<void*, void*, int>*);

//	// extern void remque (void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void remque (void*);

//	// extern void * tdelete (const void *__restrict, void **__restrict, int (*)(const void *, const void *));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* tdelete (void*, void**, Func<void*, void*, int>*);

//	// extern void * tfind (const void *, void *const *, int (*)(const void *, const void *));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* tfind (void*, void**, Func<void*, void*, int>*);

//	// extern void * tsearch (const void *, void **, int (*)(const void *, const void *));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* tsearch (void*, void**, Func<void*, void*, int>*);

//	// extern void twalk (const void *, void (*)(const void *, VISIT, int));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void twalk (void*, Action<void*, VISIT, int>*);

//	// extern int sem_close (sem_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_close (int*);

//	// extern int sem_destroy (sem_t *) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_destroy (int*);

//	// extern int sem_getvalue (sem_t *__restrict, int *__restrict) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_getvalue (int*, int*);

//	// extern int sem_init (sem_t *, int, unsigned int) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_init (int*, int, uint);

//	// extern sem_t * sem_open (const char *, int, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int* sem_open (sbyte*, int, IntPtr varArgs);

//	// extern int sem_post (sem_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_post (int*);

//	// extern int sem_trywait (sem_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_trywait (int*);

//	// extern int sem_unlink (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_unlink (sbyte*);

//	// extern int sem_wait (sem_t *) asm("_sem_wait");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sem_wait (int*);

//	// extern key_t ftok (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ftok (sbyte*, int);

//	// extern int mlockall (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mlockall (int);

//	// extern int munlockall ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int munlockall ();

//	// extern int mlock (const void *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mlock (void*, nuint);

//	// extern void * mmap (void *, size_t, int, int, int, off_t) asm("_mmap");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* mmap (void*, nuint, int, int, int, long);

//	// extern int mprotect (void *, size_t, int) asm("_mprotect");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mprotect (void*, nuint, int);

//	// extern int msync (void *, size_t, int) asm("_msync");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int msync (void*, nuint, int);

//	// extern int munlock (const void *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int munlock (void*, nuint);

//	// extern int munmap (void *, size_t) asm("_munmap");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int munmap (void*, nuint);

//	// extern int shm_open (const char *, int, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int shm_open (sbyte*, int, IntPtr varArgs);

//	// extern int shm_unlink (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int shm_unlink (sbyte*);

//	// extern int posix_madvise (void *, size_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int posix_madvise (void*, nuint, int);

//	// extern int madvise (void *, size_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int madvise (void*, nuint, int);

//	// extern int mincore (const void *, size_t, char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mincore (void*, nuint, sbyte*);

//	// extern int minherit (void *, size_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int minherit (void*, nuint, int);

//	// extern int msgsys (int, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int msgsys (int, IntPtr varArgs);

//	// extern int msgctl (int, int, struct __msqid_ds_new *) asm("_msgctl");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int msgctl (int, int, __msqid_ds_new*);

//	// extern int msgget (key_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int msgget (int, int);

//	// extern ssize_t msgrcv (int, void *, size_t, long, int) asm("_msgrcv");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint msgrcv (int, void*, nuint, nint, int);

//	// extern int msgsnd (int, const void *, size_t, int) asm("_msgsnd");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int msgsnd (int, void*, nuint, int);

//	// extern int pselect (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, const struct timespec *__restrict, const sigset_t *__restrict) asm("_pselect");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pselect (int, fd_set*, fd_set*, fd_set*, timespec*, uint*);

//	// extern int semsys (int, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semsys (int, IntPtr varArgs);

//	// extern int semctl (int, int, int, ...) asm("_semctl");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semctl (int, int, int, IntPtr varArgs);

//	// extern int semget (key_t, int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semget (int, int, int);

//	// extern int semop (int, struct sembuf *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int semop (int, sembuf*, nuint);

//	// extern int shmsys (int, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int shmsys (int, IntPtr varArgs);

//	// extern void * shmat (int, const void *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* shmat (int, void*, int);

//	// extern int shmctl (int, int, struct __shmid_ds_new *) asm("_shmctl");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int shmctl (int, int, __shmid_ds_new*);

//	// extern int shmdt (const void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int shmdt (void*);

//	// extern int shmget (key_t, size_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int shmget (int, nuint, int);

//	// extern int fstatvfs (int, struct statvfs *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fstatvfs (int, statvfs*);

//	// extern int statvfs (const char *__restrict, struct statvfs *__restrict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int statvfs (sbyte*, statvfs*);

//	// extern clock_t times (struct tms *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint times (tms*);

//	// extern ssize_t readv (int, const struct iovec *, int) asm("_readv");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint readv (int, iovec*, int);

//	// extern ssize_t writev (int, const struct iovec *, int) asm("_writev");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint writev (int, iovec*, int);

//	// extern int uname (struct utsname *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int uname (utsname*);

//	// extern ssize_t getxattr (const char *path, const char *name, void *value, size_t size, u_int32_t position, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint getxattr (sbyte* path, sbyte* name, void* value, nuint size, uint position, int options);

//	// extern ssize_t fgetxattr (int fd, const char *name, void *value, size_t size, u_int32_t position, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint fgetxattr (int fd, sbyte* name, void* value, nuint size, uint position, int options);

//	// extern int setxattr (const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setxattr (sbyte* path, sbyte* name, void* value, nuint size, uint position, int options);

//	// extern int fsetxattr (int fd, const char *name, const void *value, size_t size, u_int32_t position, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fsetxattr (int fd, sbyte* name, void* value, nuint size, uint position, int options);

//	// extern int removexattr (const char *path, const char *name, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int removexattr (sbyte* path, sbyte* name, int options);

//	// extern int fremovexattr (int fd, const char *name, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fremovexattr (int fd, sbyte* name, int options);

//	// extern ssize_t listxattr (const char *path, char *namebuff, size_t size, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint listxattr (sbyte* path, sbyte* namebuff, nuint size, int options);

//	// extern ssize_t flistxattr (int fd, char *namebuff, size_t size, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint flistxattr (int fd, sbyte* namebuff, nuint size, int options);

//	// extern void closelog ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void closelog ();

//	// extern void openlog (const char *, int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void openlog (sbyte*, int, int);

//	// extern int setlogmask (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setlogmask (int);

//	// extern void syslog (int, const char *, ...) __attribute__((not_tail_called)) __attribute__((format(printf, 2, 3)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void syslog (int, sbyte*, IntPtr varArgs);

//	// extern void vsyslog (int, const char *, __darwin_va_list) __attribute__((not_tail_called)) __attribute__((format(printf, 2, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void vsyslog (int, sbyte*, sbyte*);

//	// extern long ulimit (int, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint ulimit (int, IntPtr varArgs);

//	// extern int getattrlistbulk (int, void *, void *, size_t, uint64_t) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getattrlistbulk (int, void*, void*, nuint, ulong);

//	// extern int getattrlistat (int, const char *, void *, void *, size_t, unsigned long) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getattrlistat (int, sbyte*, void*, void*, nuint, nuint);

//	// extern int setattrlistat (int, const char *, void *, void *, size_t, uint32_t) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setattrlistat (int, sbyte*, void*, void*, nuint, uint);

//	// extern int faccessat (int, const char *, int, int) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int faccessat (int, sbyte*, int, int);

//	// extern int fchownat (int, const char *, uid_t, gid_t, int) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fchownat (int, sbyte*, uint, uint, int);

//	// extern int linkat (int, const char *, int, const char *, int) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int linkat (int, sbyte*, int, sbyte*, int);

//	// extern ssize_t readlinkat (int, const char *, char *, size_t) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint readlinkat (int, sbyte*, sbyte*, nuint);

//	// extern int symlinkat (const char *, int, const char *) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int symlinkat (sbyte*, int, sbyte*);

//	// extern int unlinkat (int, const char *, int) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int unlinkat (int, sbyte*, int);

//	// extern void _exit (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _exit (int);

//	// extern void _exit (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _exit (int);

//	// extern int access (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int access (sbyte*, int);

//	// extern unsigned int alarm (unsigned int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint alarm (uint);

//	// extern int chdir (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int chdir (sbyte*);

//	// extern int chown (const char *, uid_t, gid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int chown (sbyte*, uint, uint);

//	// extern int close (int) asm("_close");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int close (int);

//	// extern int dup (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int dup (int);

//	// extern int dup2 (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int dup2 (int, int);

//	// extern int execl (const char *__path, const char *__arg0, ...) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int execl (sbyte* __path, sbyte* __arg0, IntPtr varArgs);

//	// extern int execle (const char *__path, const char *__arg0, ...) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int execle (sbyte* __path, sbyte* __arg0, IntPtr varArgs);

//	// extern int execlp (const char *__file, const char *__arg0, ...) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int execlp (sbyte* __file, sbyte* __arg0, IntPtr varArgs);

//	// extern int execv (const char *__path, char *const *__argv) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int execv (sbyte* __path, sbyte** __argv);

//	// extern int execve (const char *__file, char *const *__argv, char *const *__envp) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int execve (sbyte* __file, sbyte** __argv, sbyte** __envp);

//	// extern int execvp (const char *__file, char *const *__argv) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int execvp (sbyte* __file, sbyte** __argv);

//	// extern pid_t fork () __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fork ();

//	// extern long fpathconf (int, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint fpathconf (int, int);

//	// extern char * getcwd (char *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getcwd (sbyte*, nuint);

//	// extern gid_t getegid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint getegid ();

//	// extern uid_t geteuid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint geteuid ();

//	// extern gid_t getgid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint getgid ();

//	// extern int getgroups (int, gid_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getgroups (int, uint[]);

//	// extern char * getlogin ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getlogin ();

//	// extern pid_t getpgrp ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getpgrp ();

//	// extern pid_t getpid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getpid ();

//	// extern pid_t getppid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getppid ();

//	// extern uid_t getuid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint getuid ();

//	// extern int isatty (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int isatty (int);

//	// extern int link (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int link (sbyte*, sbyte*);

//	// extern off_t lseek (int, off_t, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern long lseek (int, long, int);

//	// extern long pathconf (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint pathconf (sbyte*, int);

//	// extern int pause () asm("_pause");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pause ();

//	// extern int pipe (int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pipe (int[]);

//	// extern ssize_t read (int, void *, size_t) asm("_read");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint read (int, void*, nuint);

//	// extern int rmdir (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int rmdir (sbyte*);

//	// extern int setgid (gid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setgid (uint);

//	// extern int setpgid (pid_t, pid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setpgid (int, int);

//	// extern pid_t setsid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setsid ();

//	// extern int setuid (uid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setuid (uint);

//	// extern unsigned int sleep (unsigned int) asm("_sleep");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint sleep (uint);

//	// extern long sysconf (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint sysconf (int);

//	// extern pid_t tcgetpgrp (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tcgetpgrp (int);

//	// extern int tcsetpgrp (int, pid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int tcsetpgrp (int, int);

//	// extern char * ttyname (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* ttyname (int);

//	// extern int ttyname_r (int, char *, size_t) asm("_ttyname_r");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ttyname_r (int, sbyte*, nuint);

//	// extern int unlink (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int unlink (sbyte*);

//	// extern ssize_t write (int __fd, const void *__buf, size_t __nbyte) asm("_write");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint write (int __fd, void* __buf, nuint __nbyte);

//	// extern size_t confstr (int, char *, size_t) asm("_confstr");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint confstr (int, sbyte*, nuint);

//	// extern int getopt (int, char *const *, const char *) asm("_getopt");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getopt (int, sbyte*[], sbyte*);

//	// extern void * brk (const void *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((deprecated("")));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* brk (void*);

//	// extern int chroot (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int chroot (sbyte*);

//	// extern char * crypt (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* crypt (sbyte*, sbyte*);

//	// extern void encrypt (char *, int) asm("_encrypt");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void encrypt (sbyte*, int);

//	// extern int fchdir (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fchdir (int);

//	// extern long gethostid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint gethostid ();

//	// extern pid_t getpgid (pid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getpgid (int);

//	// extern pid_t getsid (pid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getsid (int);

//	// extern int getdtablesize ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getdtablesize ();

//	// extern int getpagesize () __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getpagesize ();

//	// extern char * getpass (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getpass (sbyte*);

//	// extern char * getwd (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getwd (sbyte*);

//	// extern int lchown (const char *, uid_t, gid_t) asm("_lchown");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lchown (sbyte*, uint, uint);

//	// extern int lockf (int, int, off_t) asm("_lockf");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lockf (int, int, long);

//	// extern int nice (int) asm("_nice");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int nice (int);

//	// extern ssize_t pread (int __fd, void *__buf, size_t __nbyte, off_t __offset) asm("_pread");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint pread (int __fd, void* __buf, nuint __nbyte, long __offset);

//	// extern ssize_t pwrite (int __fd, const void *__buf, size_t __nbyte, off_t __offset) asm("_pwrite");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint pwrite (int __fd, void* __buf, nuint __nbyte, long __offset);

//	// extern void * sbrk (int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((deprecated("")));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* sbrk (int);

//	// extern pid_t setpgrp () asm("_setpgrp");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setpgrp ();

//	// extern int setregid (gid_t, gid_t) asm("_setregid");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setregid (uint, uint);

//	// extern int setreuid (uid_t, uid_t) asm("_setreuid");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setreuid (uint, uint);

//	// extern void swab (const void *__restrict, void *__restrict, ssize_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void swab (void*, void*, nint);

//	// extern void sync ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void sync ();

//	// extern int truncate (const char *, off_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int truncate (sbyte*, long);

//	// extern useconds_t ualarm (useconds_t, useconds_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint ualarm (uint, uint);

//	// extern int usleep (useconds_t) asm("_usleep");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int usleep (uint);

//	// extern int vfork () __attribute__((returns_twice));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vfork ();

//	// extern int vfork () __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((returns_twice));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vfork ();

//	// extern int fsync (int) asm("_fsync");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fsync (int);

//	// extern int ftruncate (int, off_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ftruncate (int, long);

//	// extern int getlogin_r (char *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getlogin_r (sbyte*, nuint);

//	// extern int fchown (int, uid_t, gid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fchown (int, uint, uint);

//	// extern int gethostname (char *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int gethostname (sbyte*, nuint);

//	// extern ssize_t readlink (const char *__restrict, char *__restrict, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint readlink (sbyte*, sbyte*, nuint);

//	// extern int setegid (gid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setegid (uint);

//	// extern int seteuid (uid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int seteuid (uint);

//	// extern int symlink (const char *, const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int symlink (sbyte*, sbyte*);

//	// extern void _Exit (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _Exit (int);

//	// extern int accessx_np (const struct accessx_descriptor *, size_t, int *, uid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int accessx_np (accessx_descriptor*, nuint, int*, uint);

//	// extern int acct (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acct (sbyte*);

//	// extern int add_profil (char *, size_t, unsigned long, unsigned int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int add_profil (sbyte*, nuint, nuint, uint);

//	// extern void endusershell ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endusershell ();

//	// extern int execvP (const char *__file, const char *__searchpath, char *const *__argv) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int execvP (sbyte* __file, sbyte* __searchpath, sbyte** __argv);

//	// extern char * fflagstostr (unsigned long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* fflagstostr (nuint);

//	// extern int getdomainname (char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getdomainname (sbyte*, int);

//	// extern int getgrouplist (const char *, int, int *, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getgrouplist (sbyte*, int, int*, int*);

//	// extern int gethostuuid (unsigned char *, const struct timespec *) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int gethostuuid (byte[], timespec*);

//	// extern mode_t getmode (const void *, mode_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort getmode (void*, ushort);

//	// extern int getpeereid (int, uid_t *, gid_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getpeereid (int, uint*, uint*);

//	// extern int getsgroups_np (int *, unsigned char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getsgroups_np (int*, byte[]);

//	// extern char * getusershell ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* getusershell ();

//	// extern int getwgroups_np (int *, unsigned char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getwgroups_np (int*, byte[]);

//	// extern int initgroups (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int initgroups (sbyte*, int);

//	// extern int issetugid ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int issetugid ();

//	// extern char * mkdtemp (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* mkdtemp (sbyte*);

//	// extern int mknod (const char *, mode_t, dev_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mknod (sbyte*, ushort, int);

//	// extern int mkpath_np (const char *path, mode_t omode) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkpath_np (sbyte* path, ushort omode);

//	// extern int mkpathat_np (int dfd, const char *path, mode_t omode) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkpathat_np (int dfd, sbyte* path, ushort omode);

//	// extern int mkstemp (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkstemp (sbyte*);

//	// extern int mkstemps (char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkstemps (sbyte*, int);

//	// extern char * mktemp (char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* mktemp (sbyte*);

//	// extern int mkostemp (char *path, int oflags) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkostemp (sbyte* path, int oflags);

//	// extern int mkostemps (char *path, int slen, int oflags) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkostemps (sbyte* path, int slen, int oflags);

//	// extern int mkstemp_dprotected_np (char *path, int dpclass, int dpflags) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, unavailable)));
//	[Watch (3,0), TV (10,0), NoMac, iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkstemp_dprotected_np (sbyte* path, int dpclass, int dpflags);

//	// extern char * mkdtempat_np (int dfd, char *path) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* mkdtempat_np (int dfd, sbyte* path);

//	// extern int mkstempsat_np (int dfd, char *path, int slen) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkstempsat_np (int dfd, sbyte* path, int slen);

//	// extern int mkostempsat_np (int dfd, char *path, int slen, int oflags) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mkostempsat_np (int dfd, sbyte* path, int slen, int oflags);

//	// extern int nfssvc (int, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int nfssvc (int, void*);

//	// extern int profil (char *, size_t, unsigned long, unsigned int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int profil (sbyte*, nuint, nuint, uint);

//	// extern int pthread_setugid_np (uid_t, gid_t) __attribute__((deprecated("Use of per-thread security contexts is error-prone and discouraged.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int pthread_setugid_np (uint, uint);

//	// extern int pthread_getugid_np (uid_t *, gid_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pthread_getugid_np (uint*, uint*);

//	// extern int reboot (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int reboot (int);

//	// extern int revoke (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int revoke (sbyte*);

//	// extern int rcmd (char **, int, const char *, const char *, const char *, int *) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int rcmd (sbyte**, int, sbyte*, sbyte*, sbyte*, int*);

//	// extern int rcmd_af (char **, int, const char *, const char *, const char *, int *, int) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int rcmd_af (sbyte**, int, sbyte*, sbyte*, sbyte*, int*, int);

//	// extern int rresvport (int *) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int rresvport (int*);

//	// extern int rresvport_af (int *, int) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int rresvport_af (int*, int);

//	// extern int iruserok (unsigned long, int, const char *, const char *) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iruserok (nuint, int, sbyte*, sbyte*);

//	// extern int iruserok_sa (const void *, int, int, const char *, const char *) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int iruserok_sa (void*, int, int, sbyte*, sbyte*);

//	// extern int ruserok (const char *, int, const char *, const char *) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ruserok (sbyte*, int, sbyte*, sbyte*);

//	// extern int setdomainname (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setdomainname (sbyte*, int);

//	// extern int setgroups (int, const gid_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setgroups (int, uint*);

//	// extern void sethostid (long);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void sethostid (nint);

//	// extern int sethostname (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sethostname (sbyte*, int);

//	// extern void setkey (const char *) asm("_setkey");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void setkey (sbyte*);

//	// extern int setlogin (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setlogin (sbyte*);

//	// extern void * setmode (const char *) asm("_setmode");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* setmode (sbyte*);

//	// extern int setrgid (gid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setrgid (uint);

//	// extern int setruid (uid_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setruid (uint);

//	// extern int setsgroups_np (int, const unsigned char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setsgroups_np (int, byte[]);

//	// extern void setusershell ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setusershell ();

//	// extern int setwgroups_np (int, const unsigned char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setwgroups_np (int, byte[]);

//	// extern int strtofflags (char **, unsigned long *, unsigned long *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int strtofflags (sbyte**, nuint*, nuint*);

//	// extern int swapon (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int swapon (sbyte*);

//	// extern int ttyslot ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int ttyslot ();

//	// extern int undelete (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int undelete (sbyte*);

//	// extern int unwhiteout (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int unwhiteout (sbyte*);

//	// extern void * valloc (size_t) __attribute__((alloc_size(1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* valloc (nuint);

//	// extern int syscall (int, ...) __attribute__((availability(macos, deprecated=10.12))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "syscall(2) is unsupported; please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "syscall(2) is unsupported; please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")]
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int syscall (int, IntPtr varArgs);

//	// extern int getsubopt (char **, char *const *, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getsubopt (sbyte**, sbyte**, sbyte**);

//	// extern int fgetattrlist (int, void *, void *, size_t, unsigned int) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fgetattrlist (int, void*, void*, nuint, uint);

//	// extern int fsetattrlist (int, void *, void *, size_t, unsigned int) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fsetattrlist (int, void*, void*, nuint, uint);

//	// extern int getattrlist (const char *, void *, void *, size_t, unsigned int) asm("_getattrlist");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getattrlist (sbyte*, void*, void*, nuint, uint);

//	// extern int setattrlist (const char *, void *, void *, size_t, unsigned int) asm("_setattrlist");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setattrlist (sbyte*, void*, void*, nuint, uint);

//	// extern int exchangedata (const char *, const char *, unsigned int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int exchangedata (sbyte*, sbyte*, uint);

//	// extern int getdirentriesattr (int, void *, void *, size_t, unsigned int *, unsigned int *, unsigned int *, unsigned int) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getdirentriesattr (int, void*, void*, nuint, uint*, uint*, uint*, uint);

//	// extern int searchfs (const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int searchfs (sbyte*, fssearchblock*, nuint*, uint, uint, searchstate*);

//	// extern int fsctl (const char *, unsigned long, void *, unsigned int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fsctl (sbyte*, nuint, void*, uint);

//	// extern int ffsctl (int, unsigned long, void *, unsigned int) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ffsctl (int, nuint, void*, uint);

//	// extern int fsync_volume_np (int, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int fsync_volume_np (int, int);

//	// extern int sync_volume_np (const char *, int) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sync_volume_np (sbyte*, int);

//	// extern int utime (const char *, const struct utimbuf *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int utime (sbyte*, utimbuf*);

//	// extern void endutxent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endutxent ();

//	// extern void endutxent_wtmp () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void endutxent_wtmp ();

//	// extern struct lastlogx * getlastlogx (uid_t, struct lastlogx *) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe lastlogx* getlastlogx (uint, lastlogx*);

//	// extern struct lastlogx * getlastlogxbyname (const char *, struct lastlogx *) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe lastlogx* getlastlogxbyname (sbyte*, lastlogx*);

//	// extern struct utmpx * getutxent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe utmpx* getutxent ();

//	// extern struct utmpx * getutxent_wtmp () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe utmpx* getutxent_wtmp ();

//	// extern struct utmpx * getutxid (const struct utmpx *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe utmpx* getutxid (utmpx*);

//	// extern struct utmpx * getutxline (const struct utmpx *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe utmpx* getutxline (utmpx*);

//	// extern struct utmpx * pututxline (const struct utmpx *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe utmpx* pututxline (utmpx*);

//	// extern void setutxent ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setutxent ();

//	// extern void setutxent_wtmp (int) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void setutxent_wtmp (int);

//	// extern int utmpxname (const char *) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int utmpxname (sbyte*);

//	// extern int wtmpxname (const char *) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wtmpxname (sbyte*);

//	// extern int wordexp (const char *__restrict, wordexp_t *__restrict, int) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int wordexp (sbyte*, wordexp_t*, int);

//	// extern void wordfree (wordexp_t *) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void wordfree (wordexp_t*);

//	// extern int getopt_long (int, char *const *, const char *, const struct option *, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getopt_long (int, sbyte**, sbyte*, option*, int*);

//	// extern int getopt_long_only (int, char *const *, const char *, const struct option *, int *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getopt_long_only (int, sbyte**, sbyte*, option*, int*);

//	// extern int getopt (int, char *const *, const char *) asm("_getopt");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getopt (int, sbyte*[], sbyte*);

//	// extern void Debugger () __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void Debugger ();

//	// extern void DebugStr (ConstStr255Param debuggerMsg) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void DebugStr (byte* debuggerMsg);

//	// extern void SysBreak () __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void SysBreak ();

//	// extern void SysBreakStr (ConstStr255Param debuggerMsg) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void SysBreakStr (byte* debuggerMsg);

//	// extern void SysBreakFunc (ConstStr255Param debuggerMsg) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void SysBreakFunc (byte* debuggerMsg);

//	// int32_t OSHostByteOrder ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int OSHostByteOrder ();

//	// uint16_t _OSReadInt16 (const volatile void *base, uintptr_t byteOffset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort _OSReadInt16 (void* @base, UIntPtr byteOffset);

//	// uint32_t _OSReadInt32 (const volatile void *base, uintptr_t byteOffset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint _OSReadInt32 (void* @base, UIntPtr byteOffset);

//	// uint64_t _OSReadInt64 (const volatile void *base, uintptr_t byteOffset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong _OSReadInt64 (void* @base, UIntPtr byteOffset);

//	// void _OSWriteInt16 (volatile void *base, uintptr_t byteOffset, uint16_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _OSWriteInt16 (void* @base, UIntPtr byteOffset, ushort data);

//	// void _OSWriteInt32 (volatile void *base, uintptr_t byteOffset, uint32_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _OSWriteInt32 (void* @base, UIntPtr byteOffset, uint data);

//	// void _OSWriteInt64 (volatile void *base, uintptr_t byteOffset, uint64_t data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _OSWriteInt64 (void* @base, UIntPtr byteOffset, ulong data);

//	// extern mach_port_t mig_get_reply_port ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint mig_get_reply_port ();

//	// extern void mig_dealloc_reply_port (mach_port_t reply_port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void mig_dealloc_reply_port (uint reply_port);

//	// extern void mig_put_reply_port (mach_port_t reply_port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void mig_put_reply_port (uint reply_port);

//	// extern int mig_strncpy (char *dest, const char *src, int len);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mig_strncpy (sbyte* dest, sbyte* src, int len);

//	// extern int mig_strncpy_zerofill (char *dest, const char *src, int len);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mig_strncpy_zerofill (sbyte* dest, sbyte* src, int len);

//	// extern void mig_allocate (vm_address_t *, vm_size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void mig_allocate (UIntPtr*, UIntPtr);

//	// extern void mig_deallocate (vm_address_t, vm_size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void mig_deallocate (UIntPtr, UIntPtr);

//	// void __NDR_convert__mig_reply_error_t (mig_reply_error_t *x);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __NDR_convert__mig_reply_error_t (mig_reply_error_t* x);

//	// extern int mig_strncpy_zerofill (char *dest, const char *src, int len) __attribute__((weak_import));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mig_strncpy_zerofill (sbyte* dest, sbyte* src, int len);

//	// extern kern_return_t clock_set_time (clock_ctrl_t clock_ctrl, mach_timespec_t new_time);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int clock_set_time (uint clock_ctrl, mach_timespec_t new_time);

//	// extern kern_return_t clock_set_attributes (clock_ctrl_t clock_ctrl, clock_flavor_t flavor, clock_attr_t clock_attr, mach_msg_type_number_t clock_attrCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_set_attributes (uint clock_ctrl, int flavor, int* clock_attr, uint clock_attrCnt);

//	// extern kern_return_t host_get_boot_info (host_priv_t host_priv, char *boot_info);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_get_boot_info (uint host_priv, sbyte[] boot_info);

//	// extern kern_return_t host_reboot (host_priv_t host_priv, int options);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_reboot (uint host_priv, int options);

//	// extern kern_return_t host_priv_statistics (host_priv_t host_priv, host_flavor_t flavor, host_info_t host_info_out, mach_msg_type_number_t *host_info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_priv_statistics (uint host_priv, int flavor, int* host_info_out, uint* host_info_outCnt);

//	// extern kern_return_t host_default_memory_manager (host_priv_t host_priv, memory_object_default_t *default_manager, memory_object_cluster_size_t cluster_size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_default_memory_manager (uint host_priv, uint* default_manager, uint cluster_size);

//	// extern kern_return_t vm_wire (host_priv_t host_priv, vm_map_t task, vm_address_t address, vm_size_t size, vm_prot_t desired_access);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_wire (uint host_priv, uint task, UIntPtr address, UIntPtr size, int desired_access);

//	// extern kern_return_t thread_wire (host_priv_t host_priv, thread_act_t thread, boolean_t wired);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_wire (uint host_priv, uint thread, int wired);

//	// extern kern_return_t vm_allocate_cpm (host_priv_t host_priv, vm_map_t task, vm_address_t *address, vm_size_t size, int flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_allocate_cpm (uint host_priv, uint task, UIntPtr* address, UIntPtr size, int flags);

//	// extern kern_return_t host_processors (host_priv_t host_priv, processor_array_t *out_processor_list, mach_msg_type_number_t *out_processor_listCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_processors (uint host_priv, uint** out_processor_list, uint* out_processor_listCnt);

//	// extern kern_return_t host_get_clock_control (host_priv_t host_priv, clock_id_t clock_id, clock_ctrl_t *clock_ctrl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_clock_control (uint host_priv, int clock_id, uint* clock_ctrl);

//	// extern kern_return_t kmod_create (host_priv_t host_priv, vm_address_t info, kmod_t *module);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int kmod_create (uint host_priv, UIntPtr info, int* module);

//	// extern kern_return_t kmod_destroy (host_priv_t host_priv, kmod_t module);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int kmod_destroy (uint host_priv, int module);

//	// extern kern_return_t kmod_control (host_priv_t host_priv, kmod_t module, kmod_control_flavor_t flavor, kmod_args_t *data, mach_msg_type_number_t *dataCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int kmod_control (uint host_priv, int module, int flavor, void** data, uint* dataCnt);

//	// extern kern_return_t host_get_special_port (host_priv_t host_priv, int node, int which, mach_port_t *port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_special_port (uint host_priv, int node, int which, uint* port);

//	// extern kern_return_t host_set_special_port (host_priv_t host_priv, int which, mach_port_t port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_set_special_port (uint host_priv, int which, uint port);

//	// extern kern_return_t host_set_exception_ports (host_priv_t host_priv, exception_mask_t exception_mask, mach_port_t new_port, exception_behavior_t behavior, thread_state_flavor_t new_flavor);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_set_exception_ports (uint host_priv, uint exception_mask, uint new_port, int behavior, int new_flavor);

//	// extern kern_return_t host_get_exception_ports (host_priv_t host_priv, exception_mask_t exception_mask, exception_mask_array_t masks, mach_msg_type_number_t *masksCnt, exception_handler_array_t old_handlers, exception_behavior_array_t old_behaviors, exception_flavor_array_t old_flavors);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_exception_ports (uint host_priv, uint exception_mask, uint* masks, uint* masksCnt, uint* old_handlers, int* old_behaviors, int* old_flavors);

//	// extern kern_return_t host_swap_exception_ports (host_priv_t host_priv, exception_mask_t exception_mask, mach_port_t new_port, exception_behavior_t behavior, thread_state_flavor_t new_flavor, exception_mask_array_t masks, mach_msg_type_number_t *masksCnt, exception_handler_array_t old_handlerss, exception_behavior_array_t old_behaviors, exception_flavor_array_t old_flavors);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_swap_exception_ports (uint host_priv, uint exception_mask, uint new_port, int behavior, int new_flavor, uint* masks, uint* masksCnt, uint* old_handlerss, int* old_behaviors, int* old_flavors);

//	// extern kern_return_t mach_vm_wire (host_priv_t host_priv, vm_map_t task, mach_vm_address_t address, mach_vm_size_t size, vm_prot_t desired_access);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_vm_wire (uint host_priv, uint task, ulong address, ulong size, int desired_access);

//	// extern kern_return_t host_processor_sets (host_priv_t host_priv, processor_set_name_array_t *processor_sets, mach_msg_type_number_t *processor_setsCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_processor_sets (uint host_priv, uint** processor_sets, uint* processor_setsCnt);

//	// extern kern_return_t host_processor_set_priv (host_priv_t host_priv, processor_set_name_t set_name, processor_set_t *set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_processor_set_priv (uint host_priv, uint set_name, uint* set);

//	// extern kern_return_t host_set_UNDServer (host_priv_t host, UNDServerRef server);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_set_UNDServer (uint host, uint server);

//	// extern kern_return_t host_get_UNDServer (host_priv_t host, UNDServerRef *server);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_UNDServer (uint host, uint* server);

//	// extern kern_return_t kext_request (host_priv_t host_priv, uint32_t user_log_flags, vm_offset_t request_data, mach_msg_type_number_t request_dataCnt, vm_offset_t *response_data, mach_msg_type_number_t *response_dataCnt, vm_offset_t *log_data, mach_msg_type_number_t *log_dataCnt, kern_return_t *op_result);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int kext_request (uint host_priv, uint user_log_flags, UIntPtr request_data, uint request_dataCnt, UIntPtr* response_data, uint* response_dataCnt, UIntPtr* log_data, uint* log_dataCnt, int* op_result);

//	// extern kern_return_t host_security_create_task_token (host_security_t host_security, task_t parent_task, security_token_t sec_token, audit_token_t audit_token, host_t host, ledger_array_t ledgers, mach_msg_type_number_t ledgersCnt, boolean_t inherit_memory, task_t *child_task);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_security_create_task_token (uint host_security, uint parent_task, security_token_t sec_token, audit_token_t audit_token, uint host, uint* ledgers, uint ledgersCnt, int inherit_memory, uint* child_task);

//	// extern kern_return_t host_security_set_task_token (host_security_t host_security, task_t target_task, security_token_t sec_token, audit_token_t audit_token, host_t host);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_security_set_task_token (uint host_security, uint target_task, security_token_t sec_token, audit_token_t audit_token, uint host);

//	// extern kern_return_t lock_acquire (lock_set_t lock_set, int lock_id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lock_acquire (uint lock_set, int lock_id);

//	// extern kern_return_t lock_release (lock_set_t lock_set, int lock_id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lock_release (uint lock_set, int lock_id);

//	// extern kern_return_t lock_try (lock_set_t lock_set, int lock_id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lock_try (uint lock_set, int lock_id);

//	// extern kern_return_t lock_make_stable (lock_set_t lock_set, int lock_id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lock_make_stable (uint lock_set, int lock_id);

//	// extern kern_return_t lock_handoff (lock_set_t lock_set, int lock_id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lock_handoff (uint lock_set, int lock_id);

//	// extern kern_return_t lock_handoff_accept (lock_set_t lock_set, int lock_id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lock_handoff_accept (uint lock_set, int lock_id);

//	// extern kern_return_t processor_start (processor_t processor);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int processor_start (uint processor);

//	// extern kern_return_t processor_exit (processor_t processor);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int processor_exit (uint processor);

//	// extern kern_return_t processor_info (processor_t processor, processor_flavor_t flavor, host_t *host, processor_info_t processor_info_out, mach_msg_type_number_t *processor_info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_info (uint processor, int flavor, uint* host, int* processor_info_out, uint* processor_info_outCnt);

//	// extern kern_return_t processor_control (processor_t processor, processor_info_t processor_cmd, mach_msg_type_number_t processor_cmdCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_control (uint processor, int* processor_cmd, uint processor_cmdCnt);

//	// extern kern_return_t processor_assign (processor_t processor, processor_set_t new_set, boolean_t wait);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int processor_assign (uint processor, uint new_set, int wait);

//	// extern kern_return_t processor_get_assignment (processor_t processor, processor_set_name_t *assigned_set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_get_assignment (uint processor, uint* assigned_set);

//	// extern kern_return_t processor_set_statistics (processor_set_name_t pset, processor_set_flavor_t flavor, processor_set_info_t info_out, mach_msg_type_number_t *info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_statistics (uint pset, int flavor, int* info_out, uint* info_outCnt);

//	// extern kern_return_t processor_set_destroy (processor_set_t set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int processor_set_destroy (uint set);

//	// extern kern_return_t processor_set_max_priority (processor_set_t processor_set, int max_priority, boolean_t change_threads);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int processor_set_max_priority (uint processor_set, int max_priority, int change_threads);

//	// extern kern_return_t processor_set_policy_enable (processor_set_t processor_set, int policy);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int processor_set_policy_enable (uint processor_set, int policy);

//	// extern kern_return_t processor_set_policy_disable (processor_set_t processor_set, int policy, boolean_t change_threads);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int processor_set_policy_disable (uint processor_set, int policy, int change_threads);

//	// extern kern_return_t processor_set_tasks (processor_set_t processor_set, task_array_t *task_list, mach_msg_type_number_t *task_listCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_tasks (uint processor_set, uint** task_list, uint* task_listCnt);

//	// extern kern_return_t processor_set_threads (processor_set_t processor_set, thread_act_array_t *thread_list, mach_msg_type_number_t *thread_listCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_threads (uint processor_set, uint** thread_list, uint* thread_listCnt);

//	// extern kern_return_t processor_set_policy_control (processor_set_t pset, processor_set_flavor_t flavor, processor_set_info_t policy_info, mach_msg_type_number_t policy_infoCnt, boolean_t change);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_policy_control (uint pset, int flavor, int* policy_info, uint policy_infoCnt, int change);

//	// extern kern_return_t processor_set_stack_usage (processor_set_t pset, unsigned int *ltotal, vm_size_t *space, vm_size_t *resident, vm_size_t *maxusage, vm_offset_t *maxstack);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_stack_usage (uint pset, uint* ltotal, UIntPtr* space, UIntPtr* resident, UIntPtr* maxusage, UIntPtr* maxstack);

//	// extern kern_return_t processor_set_info (processor_set_name_t set_name, int flavor, host_t *host, processor_set_info_t info_out, mach_msg_type_number_t *info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_info (uint set_name, int flavor, uint* host, int* info_out, uint* info_outCnt);

//	// extern kern_return_t semaphore_signal (semaphore_t semaphore);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_signal (uint semaphore);

//	// extern kern_return_t semaphore_signal_all (semaphore_t semaphore);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_signal_all (uint semaphore);

//	// extern kern_return_t semaphore_wait (semaphore_t semaphore);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_wait (uint semaphore);

//	// extern kern_return_t semaphore_timedwait (semaphore_t semaphore, mach_timespec_t wait_time);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_timedwait (uint semaphore, mach_timespec_t wait_time);

//	// extern kern_return_t semaphore_timedwait_signal (semaphore_t wait_semaphore, semaphore_t signal_semaphore, mach_timespec_t wait_time);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_timedwait_signal (uint wait_semaphore, uint signal_semaphore, mach_timespec_t wait_time);

//	// extern kern_return_t semaphore_wait_signal (semaphore_t wait_semaphore, semaphore_t signal_semaphore);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_wait_signal (uint wait_semaphore, uint signal_semaphore);

//	// extern kern_return_t semaphore_signal_thread (semaphore_t semaphore, thread_t thread);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_signal_thread (uint semaphore, uint thread);

//	// extern kern_return_t task_create (task_t target_task, ledger_array_t ledgers, mach_msg_type_number_t ledgersCnt, boolean_t inherit_memory, task_t *child_task);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_create (uint target_task, uint* ledgers, uint ledgersCnt, int inherit_memory, uint* child_task);

//	// extern kern_return_t task_terminate (task_t target_task);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_terminate (uint target_task);

//	// extern kern_return_t task_threads (task_inspect_t target_task, thread_act_array_t *act_list, mach_msg_type_number_t *act_listCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_threads (uint target_task, uint** act_list, uint* act_listCnt);

//	// extern kern_return_t mach_ports_register (task_t target_task, mach_port_array_t init_port_set, mach_msg_type_number_t init_port_setCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_ports_register (uint target_task, uint* init_port_set, uint init_port_setCnt);

//	// extern kern_return_t mach_ports_lookup (task_t target_task, mach_port_array_t *init_port_set, mach_msg_type_number_t *init_port_setCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_ports_lookup (uint target_task, uint** init_port_set, uint* init_port_setCnt);

//	// extern kern_return_t task_info (task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_info (uint target_task, uint flavor, int* task_info_out, uint* task_info_outCnt);

//	// extern kern_return_t task_set_info (task_t target_task, task_flavor_t flavor, task_info_t task_info_in, mach_msg_type_number_t task_info_inCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_set_info (uint target_task, uint flavor, int* task_info_in, uint task_info_inCnt);

//	// extern kern_return_t task_suspend (task_t target_task) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_suspend (uint target_task);

//	// extern kern_return_t task_resume (task_t target_task) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_resume (uint target_task);

//	// extern kern_return_t task_get_special_port (task_inspect_t task, int which_port, mach_port_t *special_port) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_get_special_port (uint task, int which_port, uint* special_port);

//	// extern kern_return_t task_set_special_port (task_t task, int which_port, mach_port_t special_port) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_set_special_port (uint task, int which_port, uint special_port);

//	// extern kern_return_t thread_create (task_t parent_task, thread_act_t *child_act) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_create (uint parent_task, uint* child_act);

//	// extern kern_return_t thread_create_running (task_t parent_task, thread_state_flavor_t flavor, thread_state_t new_state, mach_msg_type_number_t new_stateCnt, thread_act_t *child_act) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_create_running (uint parent_task, int flavor, uint* new_state, uint new_stateCnt, uint* child_act);

//	// extern kern_return_t task_set_exception_ports (task_t task, exception_mask_t exception_mask, mach_port_t new_port, exception_behavior_t behavior, thread_state_flavor_t new_flavor) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_set_exception_ports (uint task, uint exception_mask, uint new_port, int behavior, int new_flavor);

//	// extern kern_return_t task_get_exception_ports (task_inspect_t task, exception_mask_t exception_mask, exception_mask_array_t masks, mach_msg_type_number_t *masksCnt, exception_handler_array_t old_handlers, exception_behavior_array_t old_behaviors, exception_flavor_array_t old_flavors) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_get_exception_ports (uint task, uint exception_mask, uint* masks, uint* masksCnt, uint* old_handlers, int* old_behaviors, int* old_flavors);

//	// extern kern_return_t task_swap_exception_ports (task_t task, exception_mask_t exception_mask, mach_port_t new_port, exception_behavior_t behavior, thread_state_flavor_t new_flavor, exception_mask_array_t masks, mach_msg_type_number_t *masksCnt, exception_handler_array_t old_handlerss, exception_behavior_array_t old_behaviors, exception_flavor_array_t old_flavors) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_swap_exception_ports (uint task, uint exception_mask, uint new_port, int behavior, int new_flavor, uint* masks, uint* masksCnt, uint* old_handlerss, int* old_behaviors, int* old_flavors);

//	// extern kern_return_t lock_set_create (task_t task, lock_set_t *new_lock_set, int n_ulocks, int policy);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int lock_set_create (uint task, uint* new_lock_set, int n_ulocks, int policy);

//	// extern kern_return_t lock_set_destroy (task_t task, lock_set_t lock_set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int lock_set_destroy (uint task, uint lock_set);

//	// extern kern_return_t semaphore_create (task_t task, semaphore_t *semaphore, int policy, int value);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int semaphore_create (uint task, uint* semaphore, int policy, int value);

//	// extern kern_return_t semaphore_destroy (task_t task, semaphore_t semaphore);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int semaphore_destroy (uint task, uint semaphore);

//	// extern kern_return_t task_policy_set (task_t task, task_policy_flavor_t flavor, task_policy_t policy_info, mach_msg_type_number_t policy_infoCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_policy_set (uint task, uint flavor, int* policy_info, uint policy_infoCnt);

//	// extern kern_return_t task_policy_get (task_t task, task_policy_flavor_t flavor, task_policy_t policy_info, mach_msg_type_number_t *policy_infoCnt, boolean_t *get_default) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_policy_get (uint task, uint flavor, int* policy_info, uint* policy_infoCnt, int* get_default);

//	// extern kern_return_t task_sample (task_t task, mach_port_t reply);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_sample (uint task, uint reply);

//	// extern kern_return_t task_policy (task_t task, policy_t policy, policy_base_t base, mach_msg_type_number_t baseCnt, boolean_t set_limit, boolean_t change);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_policy (uint task, int policy, int* @base, uint baseCnt, int set_limit, int change);

//	// extern kern_return_t task_set_emulation (task_t target_port, vm_address_t routine_entry_pt, int routine_number);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_set_emulation (uint target_port, UIntPtr routine_entry_pt, int routine_number);

//	// extern kern_return_t task_get_emulation_vector (task_t task, int *vector_start, emulation_vector_t *emulation_vector, mach_msg_type_number_t *emulation_vectorCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_get_emulation_vector (uint task, int* vector_start, ulong** emulation_vector, uint* emulation_vectorCnt);

//	// extern kern_return_t task_set_emulation_vector (task_t task, int vector_start, emulation_vector_t emulation_vector, mach_msg_type_number_t emulation_vectorCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_set_emulation_vector (uint task, int vector_start, ulong* emulation_vector, uint emulation_vectorCnt);

//	// extern kern_return_t task_set_ras_pc (task_t target_task, vm_address_t basepc, vm_address_t boundspc);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_set_ras_pc (uint target_task, UIntPtr basepc, UIntPtr boundspc);

//	// extern kern_return_t task_zone_info (task_t target_task, mach_zone_name_array_t *names, mach_msg_type_number_t *namesCnt, task_zone_info_array_t *info, mach_msg_type_number_t *infoCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_zone_info (uint target_task, mach_zone_name_array_t** names, uint* namesCnt, task_zone_info_array_t** info, uint* infoCnt);

//	// extern kern_return_t task_assign (task_t task, processor_set_t new_set, boolean_t assign_threads);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_assign (uint task, uint new_set, int assign_threads);

//	// extern kern_return_t task_assign_default (task_t task, boolean_t assign_threads);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_assign_default (uint task, int assign_threads);

//	// extern kern_return_t task_get_assignment (task_t task, processor_set_name_t *assigned_set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_get_assignment (uint task, uint* assigned_set);

//	// extern kern_return_t task_set_policy (task_t task, processor_set_t pset, policy_t policy, policy_base_t base, mach_msg_type_number_t baseCnt, policy_limit_t limit, mach_msg_type_number_t limitCnt, boolean_t change);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_set_policy (uint task, uint pset, int policy, int* @base, uint baseCnt, int* limit, uint limitCnt, int change);

//	// extern kern_return_t task_get_state (task_t task, thread_state_flavor_t flavor, thread_state_t old_state, mach_msg_type_number_t *old_stateCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_get_state (uint task, int flavor, uint* old_state, uint* old_stateCnt);

//	// extern kern_return_t task_set_state (task_t task, thread_state_flavor_t flavor, thread_state_t new_state, mach_msg_type_number_t new_stateCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_set_state (uint task, int flavor, uint* new_state, uint new_stateCnt);

//	// extern kern_return_t task_set_phys_footprint_limit (task_t task, int new_limit, int *old_limit) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_set_phys_footprint_limit (uint task, int new_limit, int* old_limit);

//	// extern kern_return_t task_suspend2 (task_t target_task, task_suspension_token_t *suspend_token) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_suspend2 (uint target_task, uint* suspend_token);

//	// extern kern_return_t task_resume2 (task_suspension_token_t suspend_token) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_resume2 (uint suspend_token);

//	// extern kern_return_t task_purgable_info (task_t task, task_purgable_info_t *stats);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_purgable_info (uint task, task_purgable_info_t* stats);

//	// extern kern_return_t task_get_mach_voucher (task_t task, mach_voucher_selector_t which, ipc_voucher_t *voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_get_mach_voucher (uint task, uint which, uint* voucher);

//	// extern kern_return_t task_set_mach_voucher (task_t task, ipc_voucher_t voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_set_mach_voucher (uint task, uint voucher);

//	// extern kern_return_t task_swap_mach_voucher (task_t task, ipc_voucher_t new_voucher, ipc_voucher_t *old_voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_swap_mach_voucher (uint task, uint new_voucher, uint* old_voucher);

//	// extern kern_return_t task_generate_corpse (task_t task, mach_port_t *corpse_task_port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_generate_corpse (uint task, uint* corpse_task_port);

//	// extern kern_return_t task_map_corpse_info (task_t task, task_t corspe_task, vm_address_t *kcd_addr_begin, uint32_t *kcd_size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_map_corpse_info (uint task, uint corspe_task, UIntPtr* kcd_addr_begin, uint* kcd_size);

//	// extern kern_return_t task_register_dyld_image_infos (task_t task, dyld_kernel_image_info_array_t dyld_images, mach_msg_type_number_t dyld_imagesCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_register_dyld_image_infos (uint task, dyld_kernel_image_info_array_t* dyld_images, uint dyld_imagesCnt);

//	// extern kern_return_t task_unregister_dyld_image_infos (task_t task, dyld_kernel_image_info_array_t dyld_images, mach_msg_type_number_t dyld_imagesCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_unregister_dyld_image_infos (uint task, dyld_kernel_image_info_array_t* dyld_images, uint dyld_imagesCnt);

//	// extern kern_return_t task_get_dyld_image_infos (task_inspect_t task, dyld_kernel_image_info_array_t *dyld_images, mach_msg_type_number_t *dyld_imagesCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_get_dyld_image_infos (uint task, dyld_kernel_image_info_array_t** dyld_images, uint* dyld_imagesCnt);

//	// extern kern_return_t task_register_dyld_shared_cache_image_info (task_t task, dyld_kernel_image_info_t dyld_cache_image, boolean_t no_cache, boolean_t private_cache);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_register_dyld_shared_cache_image_info (uint task, dyld_kernel_image_info_t dyld_cache_image, int no_cache, int private_cache);

//	// extern kern_return_t task_register_dyld_set_dyld_state (task_t task, uint8_t dyld_state);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_register_dyld_set_dyld_state (uint task, byte dyld_state);

//	// extern kern_return_t task_register_dyld_get_process_state (task_t task, dyld_kernel_process_info_t *dyld_process_state);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_register_dyld_get_process_state (uint task, dyld_kernel_process_info_t* dyld_process_state);

//	// extern kern_return_t task_map_corpse_info_64 (task_t task, task_t corspe_task, mach_vm_address_t *kcd_addr_begin, mach_vm_size_t *kcd_size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_map_corpse_info_64 (uint task, uint corspe_task, ulong* kcd_addr_begin, ulong* kcd_size);

//	// extern kern_return_t task_inspect (task_inspect_t task, task_inspect_flavor_t flavor, task_inspect_info_t info_out, mach_msg_type_number_t *info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_inspect (uint task, uint flavor, int* info_out, uint* info_outCnt);

//	// extern kern_return_t thread_terminate (thread_act_t target_act) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_terminate (uint target_act);

//	// extern kern_return_t act_get_state (thread_act_t target_act, int flavor, thread_state_t old_state, mach_msg_type_number_t *old_stateCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int act_get_state (uint target_act, int flavor, uint* old_state, uint* old_stateCnt);

//	// extern kern_return_t act_set_state (thread_act_t target_act, int flavor, thread_state_t new_state, mach_msg_type_number_t new_stateCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int act_set_state (uint target_act, int flavor, uint* new_state, uint new_stateCnt);

//	// extern kern_return_t thread_get_state (thread_act_t target_act, thread_state_flavor_t flavor, thread_state_t old_state, mach_msg_type_number_t *old_stateCnt) __attribute__((availability(watchos, unavailable)));
//	[NoWatch]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_get_state (uint target_act, int flavor, uint* old_state, uint* old_stateCnt);

//	// extern kern_return_t thread_set_state (thread_act_t target_act, thread_state_flavor_t flavor, thread_state_t new_state, mach_msg_type_number_t new_stateCnt) __attribute__((availability(watchos, unavailable)));
//	[NoWatch]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_set_state (uint target_act, int flavor, uint* new_state, uint new_stateCnt);

//	// extern kern_return_t thread_suspend (thread_act_t target_act) __attribute__((availability(watchos, unavailable)));
//	[NoWatch]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_suspend (uint target_act);

//	// extern kern_return_t thread_resume (thread_act_t target_act) __attribute__((availability(watchos, unavailable)));
//	[NoWatch]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_resume (uint target_act);

//	// extern kern_return_t thread_abort (thread_act_t target_act) __attribute__((availability(watchos, unavailable)));
//	[NoWatch]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_abort (uint target_act);

//	// extern kern_return_t thread_abort_safely (thread_act_t target_act) __attribute__((availability(watchos, unavailable)));
//	[NoWatch]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_abort_safely (uint target_act);

//	// extern kern_return_t thread_depress_abort (thread_act_t thread) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_depress_abort (uint thread);

//	// extern kern_return_t thread_get_special_port (thread_act_t thr_act, int which_port, mach_port_t *special_port) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_get_special_port (uint thr_act, int which_port, uint* special_port);

//	// extern kern_return_t thread_set_special_port (thread_act_t thr_act, int which_port, mach_port_t special_port) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_set_special_port (uint thr_act, int which_port, uint special_port);

//	// extern kern_return_t thread_info (thread_inspect_t target_act, thread_flavor_t flavor, thread_info_t thread_info_out, mach_msg_type_number_t *thread_info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_info (uint target_act, uint flavor, int* thread_info_out, uint* thread_info_outCnt);

//	// extern kern_return_t thread_set_exception_ports (thread_act_t thread, exception_mask_t exception_mask, mach_port_t new_port, exception_behavior_t behavior, thread_state_flavor_t new_flavor) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_set_exception_ports (uint thread, uint exception_mask, uint new_port, int behavior, int new_flavor);

//	// extern kern_return_t thread_get_exception_ports (thread_inspect_t thread, exception_mask_t exception_mask, exception_mask_array_t masks, mach_msg_type_number_t *masksCnt, exception_handler_array_t old_handlers, exception_behavior_array_t old_behaviors, exception_flavor_array_t old_flavors) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_get_exception_ports (uint thread, uint exception_mask, uint* masks, uint* masksCnt, uint* old_handlers, int* old_behaviors, int* old_flavors);

//	// extern kern_return_t thread_swap_exception_ports (thread_act_t thread, exception_mask_t exception_mask, mach_port_t new_port, exception_behavior_t behavior, thread_state_flavor_t new_flavor, exception_mask_array_t masks, mach_msg_type_number_t *masksCnt, exception_handler_array_t old_handlers, exception_behavior_array_t old_behaviors, exception_flavor_array_t old_flavors) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_swap_exception_ports (uint thread, uint exception_mask, uint new_port, int behavior, int new_flavor, uint* masks, uint* masksCnt, uint* old_handlers, int* old_behaviors, int* old_flavors);

//	// extern kern_return_t thread_policy (thread_act_t thr_act, policy_t policy, policy_base_t base, mach_msg_type_number_t baseCnt, boolean_t set_limit);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_policy (uint thr_act, int policy, int* @base, uint baseCnt, int set_limit);

//	// extern kern_return_t thread_policy_set (thread_act_t thread, thread_policy_flavor_t flavor, thread_policy_t policy_info, mach_msg_type_number_t policy_infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_policy_set (uint thread, uint flavor, int* policy_info, uint policy_infoCnt);

//	// extern kern_return_t thread_policy_get (thread_inspect_t thread, thread_policy_flavor_t flavor, thread_policy_t policy_info, mach_msg_type_number_t *policy_infoCnt, boolean_t *get_default);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_policy_get (uint thread, uint flavor, int* policy_info, uint* policy_infoCnt, int* get_default);

//	// extern kern_return_t thread_sample (thread_act_t thread, mach_port_t reply);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_sample (uint thread, uint reply);

//	// extern kern_return_t etap_trace_thread (thread_act_t target_act, boolean_t trace_status);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int etap_trace_thread (uint target_act, int trace_status);

//	// extern kern_return_t thread_assign (thread_act_t thread, processor_set_t new_set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_assign (uint thread, uint new_set);

//	// extern kern_return_t thread_assign_default (thread_act_t thread);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_assign_default (uint thread);

//	// extern kern_return_t thread_get_assignment (thread_act_t thread, processor_set_name_t *assigned_set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_get_assignment (uint thread, uint* assigned_set);

//	// extern kern_return_t thread_set_policy (thread_act_t thr_act, processor_set_t pset, policy_t policy, policy_base_t base, mach_msg_type_number_t baseCnt, policy_limit_t limit, mach_msg_type_number_t limitCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_set_policy (uint thr_act, uint pset, int policy, int* @base, uint baseCnt, int* limit, uint limitCnt);

//	// extern kern_return_t thread_get_mach_voucher (thread_act_t thr_act, mach_voucher_selector_t which, ipc_voucher_t *voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_get_mach_voucher (uint thr_act, uint which, uint* voucher);

//	// extern kern_return_t thread_set_mach_voucher (thread_act_t thr_act, ipc_voucher_t voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_set_mach_voucher (uint thr_act, uint voucher);

//	// extern kern_return_t thread_swap_mach_voucher (thread_act_t thr_act, ipc_voucher_t new_voucher, ipc_voucher_t *old_voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int thread_swap_mach_voucher (uint thr_act, uint new_voucher, uint* old_voucher);

//	// extern kern_return_t vm_region (vm_map_t target_task, vm_address_t *address, vm_size_t *size, vm_region_flavor_t flavor, vm_region_info_t info, mach_msg_type_number_t *infoCnt, mach_port_t *object_name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_region (uint target_task, UIntPtr* address, UIntPtr* size, int flavor, int* info, uint* infoCnt, uint* object_name);

//	// extern kern_return_t vm_allocate (vm_map_t target_task, vm_address_t *address, vm_size_t size, int flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_allocate (uint target_task, UIntPtr* address, UIntPtr size, int flags);

//	// extern kern_return_t vm_deallocate (vm_map_t target_task, vm_address_t address, vm_size_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_deallocate (uint target_task, UIntPtr address, UIntPtr size);

//	// extern kern_return_t vm_protect (vm_map_t target_task, vm_address_t address, vm_size_t size, boolean_t set_maximum, vm_prot_t new_protection);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_protect (uint target_task, UIntPtr address, UIntPtr size, int set_maximum, int new_protection);

//	// extern kern_return_t vm_inherit (vm_map_t target_task, vm_address_t address, vm_size_t size, vm_inherit_t new_inheritance);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_inherit (uint target_task, UIntPtr address, UIntPtr size, uint new_inheritance);

//	// extern kern_return_t vm_read (vm_map_t target_task, vm_address_t address, vm_size_t size, vm_offset_t *data, mach_msg_type_number_t *dataCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_read (uint target_task, UIntPtr address, UIntPtr size, UIntPtr* data, uint* dataCnt);

//	// extern kern_return_t vm_read_list (vm_map_t target_task, struct vm_read_entry *data_list, natural_t count);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_read_list (uint target_task, vm_read_entry_t[] data_list, uint count);

//	// extern kern_return_t vm_write (vm_map_t target_task, vm_address_t address, vm_offset_t data, mach_msg_type_number_t dataCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_write (uint target_task, UIntPtr address, UIntPtr data, uint dataCnt);

//	// extern kern_return_t vm_copy (vm_map_t target_task, vm_address_t source_address, vm_size_t size, vm_address_t dest_address);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_copy (uint target_task, UIntPtr source_address, UIntPtr size, UIntPtr dest_address);

//	// extern kern_return_t vm_read_overwrite (vm_map_t target_task, vm_address_t address, vm_size_t size, vm_address_t data, vm_size_t *outsize);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_read_overwrite (uint target_task, UIntPtr address, UIntPtr size, UIntPtr data, UIntPtr* outsize);

//	// extern kern_return_t vm_msync (vm_map_t target_task, vm_address_t address, vm_size_t size, vm_sync_t sync_flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_msync (uint target_task, UIntPtr address, UIntPtr size, uint sync_flags);

//	// extern kern_return_t vm_behavior_set (vm_map_t target_task, vm_address_t address, vm_size_t size, vm_behavior_t new_behavior);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int vm_behavior_set (uint target_task, UIntPtr address, UIntPtr size, int new_behavior);

//	// extern kern_return_t vm_map (vm_map_t target_task, vm_address_t *address, vm_size_t size, vm_address_t mask, int flags, mem_entry_name_port_t object, vm_offset_t offset, boolean_t copy, vm_prot_t cur_protection, vm_prot_t max_protection, vm_inherit_t inheritance);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_map (uint target_task, UIntPtr* address, UIntPtr size, UIntPtr mask, int flags, uint @object, UIntPtr offset, int copy, int cur_protection, int max_protection, uint inheritance);

//	// extern kern_return_t vm_machine_attribute (vm_map_t target_task, vm_address_t address, vm_size_t size, vm_machine_attribute_t attribute, vm_machine_attribute_val_t *value);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_machine_attribute (uint target_task, UIntPtr address, UIntPtr size, uint attribute, int* value);

//	// extern kern_return_t vm_remap (vm_map_t target_task, vm_address_t *target_address, vm_size_t size, vm_address_t mask, int flags, vm_map_t src_task, vm_address_t src_address, boolean_t copy, vm_prot_t *cur_protection, vm_prot_t *max_protection, vm_inherit_t inheritance);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_remap (uint target_task, UIntPtr* target_address, UIntPtr size, UIntPtr mask, int flags, uint src_task, UIntPtr src_address, int copy, int* cur_protection, int* max_protection, uint inheritance);

//	// extern kern_return_t task_wire (vm_map_t target_task, boolean_t must_wire) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_wire (uint target_task, int must_wire);

//	// extern kern_return_t mach_make_memory_entry (vm_map_t target_task, vm_size_t *size, vm_offset_t offset, vm_prot_t permission, mem_entry_name_port_t *object_handle, mem_entry_name_port_t parent_entry);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_make_memory_entry (uint target_task, UIntPtr* size, UIntPtr offset, int permission, uint* object_handle, uint parent_entry);

//	// extern kern_return_t vm_map_page_query (vm_map_t target_map, vm_offset_t offset, integer_t *disposition, integer_t *ref_count);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_map_page_query (uint target_map, UIntPtr offset, int* disposition, int* ref_count);

//	// extern kern_return_t mach_vm_region_info (vm_map_t task, vm_address_t address, vm_info_region_t *region, vm_info_object_array_t *objects, mach_msg_type_number_t *objectsCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_vm_region_info (uint task, UIntPtr address, vm_info_region_t* region, vm_info_object_array_t** objects, uint* objectsCnt);

//	// extern kern_return_t vm_mapped_pages_info (vm_map_t task, page_address_array_t *pages, mach_msg_type_number_t *pagesCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_mapped_pages_info (uint task, UIntPtr** pages, uint* pagesCnt);

//	// extern kern_return_t vm_region_recurse (vm_map_t target_task, vm_address_t *address, vm_size_t *size, natural_t *nesting_depth, vm_region_recurse_info_t info, mach_msg_type_number_t *infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_region_recurse (uint target_task, UIntPtr* address, UIntPtr* size, uint* nesting_depth, int* info, uint* infoCnt);

//	// extern kern_return_t vm_region_recurse_64 (vm_map_t target_task, vm_address_t *address, vm_size_t *size, natural_t *nesting_depth, vm_region_recurse_info_t info, mach_msg_type_number_t *infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_region_recurse_64 (uint target_task, UIntPtr* address, UIntPtr* size, uint* nesting_depth, int* info, uint* infoCnt);

//	// extern kern_return_t mach_vm_region_info_64 (vm_map_t task, vm_address_t address, vm_info_region_64_t *region, vm_info_object_array_t *objects, mach_msg_type_number_t *objectsCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_vm_region_info_64 (uint task, UIntPtr address, vm_info_region_64_t* region, vm_info_object_array_t** objects, uint* objectsCnt);

//	// extern kern_return_t vm_region_64 (vm_map_t target_task, vm_address_t *address, vm_size_t *size, vm_region_flavor_t flavor, vm_region_info_t info, mach_msg_type_number_t *infoCnt, mach_port_t *object_name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_region_64 (uint target_task, UIntPtr* address, UIntPtr* size, int flavor, int* info, uint* infoCnt, uint* object_name);

//	// extern kern_return_t mach_make_memory_entry_64 (vm_map_t target_task, memory_object_size_t *size, memory_object_offset_t offset, vm_prot_t permission, mach_port_t *object_handle, mem_entry_name_port_t parent_entry);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_make_memory_entry_64 (uint target_task, ulong* size, ulong offset, int permission, uint* object_handle, uint parent_entry);

//	// extern kern_return_t vm_map_64 (vm_map_t target_task, vm_address_t *address, vm_size_t size, vm_address_t mask, int flags, mem_entry_name_port_t object, memory_object_offset_t offset, boolean_t copy, vm_prot_t cur_protection, vm_prot_t max_protection, vm_inherit_t inheritance);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_map_64 (uint target_task, UIntPtr* address, UIntPtr size, UIntPtr mask, int flags, uint @object, ulong offset, int copy, int cur_protection, int max_protection, uint inheritance);

//	// extern kern_return_t vm_purgable_control (vm_map_t target_task, vm_address_t address, vm_purgable_t control, int *state);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int vm_purgable_control (uint target_task, UIntPtr address, int control, int* state);

//	// extern kern_return_t mach_port_names (ipc_space_t task, mach_port_name_array_t *names, mach_msg_type_number_t *namesCnt, mach_port_type_array_t *types, mach_msg_type_number_t *typesCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_names (uint task, uint** names, uint* namesCnt, uint** types, uint* typesCnt);

//	// extern kern_return_t mach_port_type (ipc_space_t task, mach_port_name_t name, mach_port_type_t *ptype);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_type (uint task, uint name, uint* ptype);

//	// extern kern_return_t mach_port_rename (ipc_space_t task, mach_port_name_t old_name, mach_port_name_t new_name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_rename (uint task, uint old_name, uint new_name);

//	// extern kern_return_t mach_port_allocate_name (ipc_space_t task, mach_port_right_t right, mach_port_name_t name) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_allocate_name (uint task, uint right, uint name);

//	// extern kern_return_t mach_port_allocate (ipc_space_t task, mach_port_right_t right, mach_port_name_t *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_allocate (uint task, uint right, uint* name);

//	// extern kern_return_t mach_port_destroy (ipc_space_t task, mach_port_name_t name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_destroy (uint task, uint name);

//	// extern kern_return_t mach_port_deallocate (ipc_space_t task, mach_port_name_t name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_deallocate (uint task, uint name);

//	// extern kern_return_t mach_port_get_refs (ipc_space_t task, mach_port_name_t name, mach_port_right_t right, mach_port_urefs_t *refs);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_get_refs (uint task, uint name, uint right, uint* refs);

//	// extern kern_return_t mach_port_mod_refs (ipc_space_t task, mach_port_name_t name, mach_port_right_t right, mach_port_delta_t delta);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_mod_refs (uint task, uint name, uint right, int delta);

//	// extern kern_return_t mach_port_peek (ipc_space_t task, mach_port_name_t name, mach_msg_trailer_type_t trailer_type, mach_port_seqno_t *request_seqnop, mach_msg_size_t *msg_sizep, mach_msg_id_t *msg_idp, mach_msg_trailer_info_t trailer_infop, mach_msg_type_number_t *trailer_infopCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_peek (uint task, uint name, uint trailer_type, uint* request_seqnop, uint* msg_sizep, int* msg_idp, sbyte* trailer_infop, uint* trailer_infopCnt);

//	// extern kern_return_t mach_port_set_mscount (ipc_space_t task, mach_port_name_t name, mach_port_mscount_t mscount);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_set_mscount (uint task, uint name, uint mscount);

//	// extern kern_return_t mach_port_get_set_status (ipc_space_inspect_t task, mach_port_name_t name, mach_port_name_array_t *members, mach_msg_type_number_t *membersCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_get_set_status (uint task, uint name, uint** members, uint* membersCnt);

//	// extern kern_return_t mach_port_move_member (ipc_space_t task, mach_port_name_t member, mach_port_name_t after);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_move_member (uint task, uint member, uint after);

//	// extern kern_return_t mach_port_request_notification (ipc_space_t task, mach_port_name_t name, mach_msg_id_t msgid, mach_port_mscount_t sync, mach_port_t notify, mach_msg_type_name_t notifyPoly, mach_port_t *previous);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_request_notification (uint task, uint name, int msgid, uint sync, uint notify, uint notifyPoly, uint* previous);

//	// extern kern_return_t mach_port_insert_right (ipc_space_t task, mach_port_name_t name, mach_port_t poly, mach_msg_type_name_t polyPoly);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_insert_right (uint task, uint name, uint poly, uint polyPoly);

//	// extern kern_return_t mach_port_extract_right (ipc_space_t task, mach_port_name_t name, mach_msg_type_name_t msgt_name, mach_port_t *poly, mach_msg_type_name_t *polyPoly);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_extract_right (uint task, uint name, uint msgt_name, uint* poly, uint* polyPoly);

//	// extern kern_return_t mach_port_set_seqno (ipc_space_t task, mach_port_name_t name, mach_port_seqno_t seqno);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_set_seqno (uint task, uint name, uint seqno);

//	// extern kern_return_t mach_port_get_attributes (ipc_space_inspect_t task, mach_port_name_t name, mach_port_flavor_t flavor, mach_port_info_t port_info_out, mach_msg_type_number_t *port_info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_get_attributes (uint task, uint name, int flavor, int* port_info_out, uint* port_info_outCnt);

//	// extern kern_return_t mach_port_set_attributes (ipc_space_t task, mach_port_name_t name, mach_port_flavor_t flavor, mach_port_info_t port_info, mach_msg_type_number_t port_infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_set_attributes (uint task, uint name, int flavor, int* port_info, uint port_infoCnt);

//	// extern kern_return_t mach_port_allocate_qos (ipc_space_t task, mach_port_right_t right, mach_port_qos_t *qos, mach_port_name_t *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_allocate_qos (uint task, uint right, mach_port_qos_t* qos, uint* name);

//	// extern kern_return_t mach_port_allocate_full (ipc_space_t task, mach_port_right_t right, mach_port_t proto, mach_port_qos_t *qos, mach_port_name_t *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_allocate_full (uint task, uint right, uint proto, mach_port_qos_t* qos, uint* name);

//	// extern kern_return_t task_set_port_space (ipc_space_t task, int table_entries) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int task_set_port_space (uint task, int table_entries);

//	// extern kern_return_t mach_port_get_srights (ipc_space_t task, mach_port_name_t name, mach_port_rights_t *srights);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_get_srights (uint task, uint name, uint* srights);

//	// extern kern_return_t mach_port_space_info (ipc_space_inspect_t task, ipc_info_space_t *space_info, ipc_info_name_array_t *table_info, mach_msg_type_number_t *table_infoCnt, ipc_info_tree_name_array_t *tree_info, mach_msg_type_number_t *tree_infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_space_info (uint task, ipc_info_space_t* space_info, ipc_info_name_array_t** table_info, uint* table_infoCnt, ipc_info_tree_name_array_t** tree_info, uint* tree_infoCnt);

//	// extern kern_return_t mach_port_dnrequest_info (ipc_space_t task, mach_port_name_t name, unsigned int *dnr_total, unsigned int *dnr_used);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_dnrequest_info (uint task, uint name, uint* dnr_total, uint* dnr_used);

//	// extern kern_return_t mach_port_kernel_object (ipc_space_inspect_t task, mach_port_name_t name, unsigned int *object_type, unsigned int *object_addr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_kernel_object (uint task, uint name, uint* object_type, uint* object_addr);

//	// extern kern_return_t mach_port_insert_member (ipc_space_t task, mach_port_name_t name, mach_port_name_t pset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_insert_member (uint task, uint name, uint pset);

//	// extern kern_return_t mach_port_extract_member (ipc_space_t task, mach_port_name_t name, mach_port_name_t pset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_extract_member (uint task, uint name, uint pset);

//	// extern kern_return_t mach_port_get_context (ipc_space_inspect_t task, mach_port_name_t name, mach_port_context_t *context);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_get_context (uint task, uint name, UIntPtr* context);

//	// extern kern_return_t mach_port_set_context (ipc_space_t task, mach_port_name_t name, mach_port_context_t context);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_set_context (uint task, uint name, UIntPtr context);

//	// extern kern_return_t mach_port_kobject (ipc_space_inspect_t task, mach_port_name_t name, natural_t *object_type, mach_vm_address_t *object_addr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_kobject (uint task, uint name, uint* object_type, ulong* object_addr);

//	// extern kern_return_t mach_port_construct (ipc_space_t task, mach_port_options_ptr_t options, mach_port_context_t context, mach_port_name_t *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_construct (uint task, mach_port_options_ptr_t* options, UIntPtr context, uint* name);

//	// extern kern_return_t mach_port_destruct (ipc_space_t task, mach_port_name_t name, mach_port_delta_t srdelta, mach_port_context_t guard);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_destruct (uint task, uint name, int srdelta, UIntPtr guard);

//	// extern kern_return_t mach_port_guard (ipc_space_t task, mach_port_name_t name, mach_port_context_t guard, boolean_t strict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_guard (uint task, uint name, UIntPtr guard, int strict);

//	// extern kern_return_t mach_port_unguard (ipc_space_t task, mach_port_name_t name, mach_port_context_t guard);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_port_unguard (uint task, uint name, UIntPtr guard);

//	// extern kern_return_t mach_port_space_basic_info (ipc_space_inspect_t task, ipc_info_space_basic_t *basic_info);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_port_space_basic_info (uint task, ipc_info_space_basic_t* basic_info);

//	// extern mach_port_t mach_host_self ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint mach_host_self ();

//	// extern mach_port_t mach_thread_self ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint mach_thread_self ();

//	// extern kern_return_t host_page_size (host_t, vm_size_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_page_size (uint, UIntPtr*);

//	// extern kern_return_t clock_sleep_trap (mach_port_name_t clock_name, sleep_type_t sleep_type, int sleep_sec, int sleep_nsec, mach_timespec_t *wakeup_time);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_sleep_trap (uint clock_name, int sleep_type, int sleep_sec, int sleep_nsec, mach_timespec_t* wakeup_time);

//	// extern kern_return_t _kernelrpc_mach_vm_allocate_trap (mach_port_name_t target, mach_vm_offset_t *addr, mach_vm_size_t size, int flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int _kernelrpc_mach_vm_allocate_trap (uint target, ulong* addr, ulong size, int flags);

//	// extern kern_return_t _kernelrpc_mach_vm_deallocate_trap (mach_port_name_t target, mach_vm_address_t address, mach_vm_size_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_vm_deallocate_trap (uint target, ulong address, ulong size);

//	// extern kern_return_t _kernelrpc_mach_vm_protect_trap (mach_port_name_t target, mach_vm_address_t address, mach_vm_size_t size, boolean_t set_maximum, vm_prot_t new_protection);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_vm_protect_trap (uint target, ulong address, ulong size, int set_maximum, int new_protection);

//	// extern kern_return_t _kernelrpc_mach_vm_map_trap (mach_port_name_t target, mach_vm_offset_t *address, mach_vm_size_t size, mach_vm_offset_t mask, int flags, vm_prot_t cur_protection);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int _kernelrpc_mach_vm_map_trap (uint target, ulong* address, ulong size, ulong mask, int flags, int cur_protection);

//	// extern kern_return_t _kernelrpc_mach_vm_purgable_control_trap (mach_port_name_t target, mach_vm_offset_t address, vm_purgable_t control, int *state);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int _kernelrpc_mach_vm_purgable_control_trap (uint target, ulong address, int control, int* state);

//	// extern kern_return_t _kernelrpc_mach_port_allocate_trap (mach_port_name_t target, mach_port_right_t right, mach_port_name_t *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int _kernelrpc_mach_port_allocate_trap (uint target, uint right, uint* name);

//	// extern kern_return_t _kernelrpc_mach_port_destroy_trap (mach_port_name_t target, mach_port_name_t name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_destroy_trap (uint target, uint name);

//	// extern kern_return_t _kernelrpc_mach_port_deallocate_trap (mach_port_name_t target, mach_port_name_t name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_deallocate_trap (uint target, uint name);

//	// extern kern_return_t _kernelrpc_mach_port_mod_refs_trap (mach_port_name_t target, mach_port_name_t name, mach_port_right_t right, mach_port_delta_t delta);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_mod_refs_trap (uint target, uint name, uint right, int delta);

//	// extern kern_return_t _kernelrpc_mach_port_move_member_trap (mach_port_name_t target, mach_port_name_t member, mach_port_name_t after);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_move_member_trap (uint target, uint member, uint after);

//	// extern kern_return_t _kernelrpc_mach_port_insert_right_trap (mach_port_name_t target, mach_port_name_t name, mach_port_name_t poly, mach_msg_type_name_t polyPoly);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_insert_right_trap (uint target, uint name, uint poly, uint polyPoly);

//	// extern kern_return_t _kernelrpc_mach_port_insert_member_trap (mach_port_name_t target, mach_port_name_t name, mach_port_name_t pset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_insert_member_trap (uint target, uint name, uint pset);

//	// extern kern_return_t _kernelrpc_mach_port_extract_member_trap (mach_port_name_t target, mach_port_name_t name, mach_port_name_t pset);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_extract_member_trap (uint target, uint name, uint pset);

//	// extern kern_return_t _kernelrpc_mach_port_construct_trap (mach_port_name_t target, mach_port_options_t *options, uint64_t context, mach_port_name_t *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int _kernelrpc_mach_port_construct_trap (uint target, mach_port_options_t* options, ulong context, uint* name);

//	// extern kern_return_t _kernelrpc_mach_port_destruct_trap (mach_port_name_t target, mach_port_name_t name, mach_port_delta_t srdelta, uint64_t guard);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_destruct_trap (uint target, uint name, int srdelta, ulong guard);

//	// extern kern_return_t _kernelrpc_mach_port_guard_trap (mach_port_name_t target, mach_port_name_t name, uint64_t guard, boolean_t strict);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_guard_trap (uint target, uint name, ulong guard, int strict);

//	// extern kern_return_t _kernelrpc_mach_port_unguard_trap (mach_port_name_t target, mach_port_name_t name, uint64_t guard);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int _kernelrpc_mach_port_unguard_trap (uint target, uint name, ulong guard);

//	// extern kern_return_t mach_generate_activity_id (mach_port_name_t target, int count, uint64_t *activity_id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_generate_activity_id (uint target, int count, ulong* activity_id);

//	// extern kern_return_t macx_swapon (uint64_t filename, int flags, int size, int priority);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int macx_swapon (ulong filename, int flags, int size, int priority);

//	// extern kern_return_t macx_swapoff (uint64_t filename, int flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int macx_swapoff (ulong filename, int flags);

//	// extern kern_return_t macx_triggers (int hi_water, int low_water, int flags, mach_port_t alert_port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int macx_triggers (int hi_water, int low_water, int flags, uint alert_port);

//	// extern kern_return_t macx_backing_store_suspend (boolean_t suspend);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int macx_backing_store_suspend (int suspend);

//	// extern kern_return_t macx_backing_store_recovery (int pid);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int macx_backing_store_recovery (int pid);

//	// extern boolean_t swtch_pri (int pri);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int swtch_pri (int pri);

//	// extern boolean_t swtch ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int swtch ();

//	// extern kern_return_t thread_switch (mach_port_name_t thread_name, int option, mach_msg_timeout_t option_time);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int thread_switch (uint thread_name, int option, uint option_time);

//	// extern mach_port_name_t task_self_trap ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint task_self_trap ();

//	// extern kern_return_t host_create_mach_voucher_trap (mach_port_name_t host, mach_voucher_attr_raw_recipe_array_t recipes, int recipes_size, mach_port_name_t *voucher);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_create_mach_voucher_trap (uint host, byte* recipes, int recipes_size, uint* voucher);

//	// extern kern_return_t mach_voucher_extract_attr_recipe_trap (mach_port_name_t voucher_name, mach_voucher_attr_key_t key, mach_voucher_attr_raw_recipe_t recipe, mach_msg_type_number_t *recipe_size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_voucher_extract_attr_recipe_trap (uint voucher_name, uint key, byte* recipe, uint* recipe_size);

//	// extern kern_return_t task_for_pid (mach_port_name_t target_tport, int pid, mach_port_name_t *t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_for_pid (uint target_tport, int pid, uint* t);

//	// extern kern_return_t task_name_for_pid (mach_port_name_t target_tport, int pid, mach_port_name_t *tn);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int task_name_for_pid (uint target_tport, int pid, uint* tn);

//	// extern kern_return_t pid_for_task (mach_port_name_t t, int *x);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int pid_for_task (uint t, int* x);

//	// extern kern_return_t host_info (host_t host, host_flavor_t flavor, host_info_t host_info_out, mach_msg_type_number_t *host_info_outCnt) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_info (uint host, int flavor, int* host_info_out, uint* host_info_outCnt);

//	// extern kern_return_t host_kernel_version (host_t host, char *kernel_version);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_kernel_version (uint host, sbyte[] kernel_version);

//	// extern kern_return_t _host_page_size (host_t host, vm_size_t *out_page_size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int _host_page_size (uint host, UIntPtr* out_page_size);

//	// extern kern_return_t mach_memory_object_memory_entry (host_t host, boolean_t internal, vm_size_t size, vm_prot_t permission, memory_object_t pager, mach_port_t *entry_handle);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_memory_object_memory_entry (uint host, int @internal, UIntPtr size, int permission, uint pager, uint* entry_handle);

//	// extern kern_return_t host_processor_info (host_t host, processor_flavor_t flavor, natural_t *out_processor_count, processor_info_array_t *out_processor_info, mach_msg_type_number_t *out_processor_infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_processor_info (uint host, int flavor, uint* out_processor_count, int** out_processor_info, uint* out_processor_infoCnt);

//	// extern kern_return_t host_get_io_master (host_t host, io_master_t *io_master);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_io_master (uint host, uint* io_master);

//	// extern kern_return_t host_get_clock_service (host_t host, clock_id_t clock_id, clock_serv_t *clock_serv);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_clock_service (uint host, int clock_id, uint* clock_serv);

//	// extern kern_return_t kmod_get_info (host_t host, kmod_args_t *modules, mach_msg_type_number_t *modulesCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int kmod_get_info (uint host, void** modules, uint* modulesCnt);

//	// extern kern_return_t host_virtual_physical_table_info (host_t host, hash_info_bucket_array_t *info, mach_msg_type_number_t *infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_virtual_physical_table_info (uint host, hash_info_bucket_array_t** info, uint* infoCnt);

//	// extern kern_return_t processor_set_default (host_t host, processor_set_name_t *default_set);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_default (uint host, uint* default_set);

//	// extern kern_return_t processor_set_create (host_t host, processor_set_t *new_set, processor_set_name_t *new_name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int processor_set_create (uint host, uint* new_set, uint* new_name);

//	// extern kern_return_t mach_memory_object_memory_entry_64 (host_t host, boolean_t internal, memory_object_size_t size, vm_prot_t permission, memory_object_t pager, mach_port_t *entry_handle);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_memory_object_memory_entry_64 (uint host, int @internal, ulong size, int permission, uint pager, uint* entry_handle);

//	// extern kern_return_t host_statistics (host_t host_priv, host_flavor_t flavor, host_info_t host_info_out, mach_msg_type_number_t *host_info_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_statistics (uint host_priv, int flavor, int* host_info_out, uint* host_info_outCnt);

//	// extern kern_return_t host_request_notification (host_t host, host_flavor_t notify_type, mach_port_t notify_port) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_request_notification (uint host, int notify_type, uint notify_port);

//	// extern kern_return_t host_lockgroup_info (host_t host, lockgroup_info_array_t *lockgroup_info, mach_msg_type_number_t *lockgroup_infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_lockgroup_info (uint host, lockgroup_info_array_t** lockgroup_info, uint* lockgroup_infoCnt);

//	// extern kern_return_t host_statistics64 (host_t host_priv, host_flavor_t flavor, host_info64_t host_info64_out, mach_msg_type_number_t *host_info64_outCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_statistics64 (uint host_priv, int flavor, int* host_info64_out, uint* host_info64_outCnt);

//	// extern kern_return_t mach_zone_info (host_priv_t host, mach_zone_name_array_t *names, mach_msg_type_number_t *namesCnt, mach_zone_info_array_t *info, mach_msg_type_number_t *infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_zone_info (uint host, mach_zone_name_array_t** names, uint* namesCnt, mach_zone_info_array_t** info, uint* infoCnt);

//	// extern kern_return_t host_create_mach_voucher (host_t host, mach_voucher_attr_raw_recipe_array_t recipes, mach_msg_type_number_t recipesCnt, ipc_voucher_t *voucher) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_create_mach_voucher (uint host, byte* recipes, uint recipesCnt, uint* voucher);

//	// extern kern_return_t host_register_mach_voucher_attr_manager (host_t host, mach_voucher_attr_manager_t attr_manager, mach_voucher_attr_value_handle_t default_value, mach_voucher_attr_key_t *new_key, ipc_voucher_attr_control_t *new_attr_control) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_register_mach_voucher_attr_manager (uint host, uint attr_manager, ulong default_value, uint* new_key, uint* new_attr_control);

//	// extern kern_return_t host_register_well_known_mach_voucher_attr_manager (host_t host, mach_voucher_attr_manager_t attr_manager, mach_voucher_attr_value_handle_t default_value, mach_voucher_attr_key_t key, ipc_voucher_attr_control_t *new_attr_control) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_register_well_known_mach_voucher_attr_manager (uint host, uint attr_manager, ulong default_value, uint key, uint* new_attr_control);

//	// extern kern_return_t host_set_atm_diagnostic_flag (host_priv_t host_priv, uint32_t diagnostic_flag) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_set_atm_diagnostic_flag (uint host_priv, uint diagnostic_flag);

//	// extern kern_return_t host_get_atm_diagnostic_flag (host_t host, uint32_t *diagnostic_flag) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_atm_diagnostic_flag (uint host, uint* diagnostic_flag);

//	// extern kern_return_t mach_memory_info (host_priv_t host, mach_zone_name_array_t *names, mach_msg_type_number_t *namesCnt, mach_zone_info_array_t *info, mach_msg_type_number_t *infoCnt, mach_memory_info_array_t *memory_info, mach_msg_type_number_t *memory_infoCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_memory_info (uint host, mach_zone_name_array_t** names, uint* namesCnt, mach_zone_info_array_t** info, uint* infoCnt, mach_memory_info_array_t** memory_info, uint* memory_infoCnt);

//	// extern kern_return_t host_set_multiuser_config_flags (host_priv_t host_priv, uint32_t multiuser_flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int host_set_multiuser_config_flags (uint host_priv, uint multiuser_flags);

//	// extern kern_return_t host_get_multiuser_config_flags (host_t host, uint32_t *multiuser_flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_get_multiuser_config_flags (uint host, uint* multiuser_flags);

//	// extern kern_return_t host_check_multiuser_mode (host_t host, uint32_t *multiuser_mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int host_check_multiuser_mode (uint host, uint* multiuser_mode);

//	// extern char * mach_error_string (mach_error_t error_value);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* mach_error_string (int error_value);

//	// extern void mach_error (const char *str, mach_error_t error_value);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void mach_error (sbyte* str, int error_value);

//	// extern char * mach_error_type (mach_error_t error_value);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* mach_error_type (int error_value);

//	// extern void panic_init (mach_port_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void panic_init (uint);

//	// extern void panic (const char *, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void panic (sbyte*, IntPtr varArgs);

//	// extern void safe_gets (char *, char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void safe_gets (sbyte*, sbyte*, int);

//	// extern void slot_name (cpu_type_t, cpu_subtype_t, char **, char **);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void slot_name (int, int, sbyte**, sbyte**);

//	// extern void mig_reply_setup (mach_msg_header_t *, mach_msg_header_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void mig_reply_setup (mach_msg_header_t*, mach_msg_header_t*);

//	// extern void mach_msg_destroy (mach_msg_header_t *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void mach_msg_destroy (mach_msg_header_t*);

//	// extern mach_msg_return_t mach_msg_receive (mach_msg_header_t *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_msg_receive (mach_msg_header_t*);

//	// extern mach_msg_return_t mach_msg_send (mach_msg_header_t *) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_msg_send (mach_msg_header_t*);

//	// extern mach_msg_return_t mach_msg_server_once (boolean_t (*)(mach_msg_header_t *, mach_msg_header_t *), mach_msg_size_t, mach_port_t, mach_msg_options_t) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_msg_server_once (Func<Darwin.mach_msg_header_t*, Darwin.mach_msg_header_t*, int>*, uint, uint, int);

//	// extern mach_msg_return_t mach_msg_server (boolean_t (*)(mach_msg_header_t *, mach_msg_header_t *), mach_msg_size_t, mach_port_t, mach_msg_options_t) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_msg_server (Func<Darwin.mach_msg_header_t*, Darwin.mach_msg_header_t*, int>*, uint, uint, int);

//	// extern mach_msg_return_t mach_msg_server_importance (boolean_t (*)(mach_msg_header_t *, mach_msg_header_t *), mach_msg_size_t, mach_port_t, mach_msg_options_t) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
//	[NoWatch, NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_msg_server_importance (Func<Darwin.mach_msg_header_t*, Darwin.mach_msg_header_t*, int>*, uint, uint, int);

//	// extern kern_return_t clock_get_res (mach_port_t, clock_res_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_get_res (uint, int*);

//	// extern kern_return_t clock_set_res (mach_port_t, clock_res_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int clock_set_res (uint, int);

//	// extern kern_return_t clock_sleep (mach_port_t, int, mach_timespec_t, mach_timespec_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_sleep (uint, int, mach_timespec_t, mach_timespec_t*);

//	// extern boolean_t voucher_mach_msg_set (mach_msg_header_t *msg);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int voucher_mach_msg_set (mach_msg_header_t* msg);

//	// extern void voucher_mach_msg_clear (mach_msg_header_t *msg);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void voucher_mach_msg_clear (mach_msg_header_t* msg);

//	// extern voucher_mach_msg_state_t voucher_mach_msg_adopt (mach_msg_header_t *msg);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe voucher_mach_msg_state_t* voucher_mach_msg_adopt (mach_msg_header_t* msg);

//	// extern void voucher_mach_msg_revert (voucher_mach_msg_state_t state);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void voucher_mach_msg_revert (voucher_mach_msg_state_t* state);

//	// extern kern_return_t clock_get_time (clock_serv_t clock_serv, mach_timespec_t *cur_time);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_get_time (uint clock_serv, mach_timespec_t* cur_time);

//	// extern kern_return_t clock_get_attributes (clock_serv_t clock_serv, clock_flavor_t flavor, clock_attr_t clock_attr, mach_msg_type_number_t *clock_attrCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clock_get_attributes (uint clock_serv, int flavor, int* clock_attr, uint* clock_attrCnt);

//	// extern kern_return_t clock_alarm (clock_serv_t clock_serv, alarm_type_t alarm_type, mach_timespec_t alarm_time, clock_reply_t alarm_port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int clock_alarm (uint clock_serv, int alarm_type, mach_timespec_t alarm_time, uint alarm_port);

//	// extern kern_return_t clock_alarm_reply (clock_reply_t alarm_port, mach_msg_type_name_t alarm_portPoly, kern_return_t alarm_code, alarm_type_t alarm_type, mach_timespec_t alarm_time);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int clock_alarm_reply (uint alarm_port, uint alarm_portPoly, int alarm_code, int alarm_type, mach_timespec_t alarm_time);

//	// extern kern_return_t exception_raise (mach_port_t exception_port, mach_port_t thread, mach_port_t task, exception_type_t exception, exception_data_t code, mach_msg_type_number_t codeCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int exception_raise (uint exception_port, uint thread, uint task, int exception, int* code, uint codeCnt);

//	// extern kern_return_t exception_raise_state (mach_port_t exception_port, exception_type_t exception, const exception_data_t code, mach_msg_type_number_t codeCnt, int *flavor, const thread_state_t old_state, mach_msg_type_number_t old_stateCnt, thread_state_t new_state, mach_msg_type_number_t *new_stateCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int exception_raise_state (uint exception_port, int exception, int* code, uint codeCnt, int* flavor, uint* old_state, uint old_stateCnt, uint* new_state, uint* new_stateCnt);

//	// extern kern_return_t exception_raise_state_identity (mach_port_t exception_port, mach_port_t thread, mach_port_t task, exception_type_t exception, exception_data_t code, mach_msg_type_number_t codeCnt, int *flavor, thread_state_t old_state, mach_msg_type_number_t old_stateCnt, thread_state_t new_state, mach_msg_type_number_t *new_stateCnt);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int exception_raise_state_identity (uint exception_port, uint thread, uint task, int exception, int* code, uint codeCnt, int* flavor, uint* old_state, uint old_stateCnt, uint* new_state, uint* new_stateCnt);

//	// extern kern_return_t mach_timebase_info (mach_timebase_info_t info);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mach_timebase_info (mach_timebase_info_t* info);

//	// extern kern_return_t mach_wait_until (uint64_t deadline);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int mach_wait_until (ulong deadline);

//	// extern uint64_t mach_absolute_time ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong mach_absolute_time ();

//	// extern uint64_t mach_approximate_time () __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong mach_approximate_time ();

//	// extern uint64_t mach_continuous_time () __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong mach_continuous_time ();

//	// extern uint64_t mach_continuous_approximate_time () __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong mach_continuous_approximate_time ();

//	// extern void port_obj_init (int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void port_obj_init (int);

//	// extern int32_t OSAtomicAdd32 (int32_t __theAmount, volatile int32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicAdd32 (int __theAmount, int* __theValue);

//	// extern int32_t OSAtomicAdd32Barrier (int32_t __theAmount, volatile int32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicAdd32Barrier (int __theAmount, int* __theValue);

//	// extern int32_t OSAtomicIncrement32 (volatile int32_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicIncrement32 (int* __theValue);

//	// extern int32_t OSAtomicIncrement32Barrier (volatile int32_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicIncrement32Barrier (int* __theValue);

//	// extern int32_t OSAtomicDecrement32 (volatile int32_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicDecrement32 (int* __theValue);

//	// extern int32_t OSAtomicDecrement32Barrier (volatile int32_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicDecrement32Barrier (int* __theValue);

//	// extern int64_t OSAtomicAdd64 (int64_t __theAmount, volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long OSAtomicAdd64 (long __theAmount, long* __theValue);

//	// extern int64_t OSAtomicAdd64Barrier (int64_t __theAmount, volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long OSAtomicAdd64Barrier (long __theAmount, long* __theValue);

//	// extern int64_t OSAtomicIncrement64 (volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long OSAtomicIncrement64 (long* __theValue);

//	// extern int64_t OSAtomicIncrement64Barrier (volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_add() from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long OSAtomicIncrement64Barrier (long* __theValue);

//	// extern int64_t OSAtomicDecrement64 (volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_sub_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long OSAtomicDecrement64 (long* __theValue);

//	// extern int64_t OSAtomicDecrement64Barrier (volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=7.1))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_sub() from <stdatomic.h> instead")]
//	[iOS (7,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe long OSAtomicDecrement64Barrier (long* __theValue);

//	// extern int32_t OSAtomicOr32 (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicOr32 (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicOr32Barrier (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicOr32Barrier (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicOr32Orig (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicOr32Orig (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicOr32OrigBarrier (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicOr32OrigBarrier (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicAnd32 (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicAnd32 (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicAnd32Barrier (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicAnd32Barrier (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicAnd32Orig (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicAnd32Orig (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicAnd32OrigBarrier (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicAnd32OrigBarrier (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicXor32 (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicXor32 (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicXor32Barrier (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicXor32Barrier (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicXor32Orig (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_xor_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicXor32Orig (uint __theMask, uint* __theValue);

//	// extern int32_t OSAtomicXor32OrigBarrier (uint32_t __theMask, volatile uint32_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_xor() from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int OSAtomicXor32OrigBarrier (uint __theMask, uint* __theValue);

//	// extern _Bool OSAtomicCompareAndSwap32 (int32_t __oldValue, int32_t __newValue, volatile int32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwap32 (int __oldValue, int __newValue, int* __theValue);

//	// extern _Bool OSAtomicCompareAndSwap32Barrier (int32_t __oldValue, int32_t __newValue, volatile int32_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwap32Barrier (int __oldValue, int __newValue, int* __theValue);

//	// extern _Bool OSAtomicCompareAndSwapPtr (void *__oldValue, void *__newValue, void *volatile *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwapPtr (void* __oldValue, void* __newValue, void** __theValue);

//	// extern _Bool OSAtomicCompareAndSwapPtrBarrier (void *__oldValue, void *__newValue, void *volatile *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwapPtrBarrier (void* __oldValue, void* __newValue, void** __theValue);

//	// extern _Bool OSAtomicCompareAndSwapInt (int __oldValue, int __newValue, volatile int *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwapInt (int __oldValue, int __newValue, int* __theValue);

//	// extern _Bool OSAtomicCompareAndSwapIntBarrier (int __oldValue, int __newValue, volatile int *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwapIntBarrier (int __oldValue, int __newValue, int* __theValue);

//	// extern _Bool OSAtomicCompareAndSwapLong (long __oldValue, long __newValue, volatile long *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwapLong (nint __oldValue, nint __newValue, nint* __theValue);

//	// extern _Bool OSAtomicCompareAndSwapLongBarrier (long __oldValue, long __newValue, volatile long *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwapLongBarrier (nint __oldValue, nint __newValue, nint* __theValue);

//	// extern _Bool OSAtomicCompareAndSwap64 (int64_t __oldValue, int64_t __newValue, volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwap64 (long __oldValue, long __newValue, long* __theValue);

//	// extern _Bool OSAtomicCompareAndSwap64Barrier (int64_t __oldValue, int64_t __newValue, volatile OSAtomic_int64_aligned64_t *__theValue) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_compare_exchange_strong() from <stdatomic.h> instead")]
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicCompareAndSwap64Barrier (long __oldValue, long __newValue, long* __theValue);

//	// extern _Bool OSAtomicTestAndSet (uint32_t __n, volatile void *__theAddress) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_or_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicTestAndSet (uint __n, void* __theAddress);

//	// extern _Bool OSAtomicTestAndSetBarrier (uint32_t __n, volatile void *__theAddress) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_or() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicTestAndSetBarrier (uint __n, void* __theAddress);

//	// extern _Bool OSAtomicTestAndClear (uint32_t __n, volatile void *__theAddress) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_and_explicit(memory_order_relaxed) from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicTestAndClear (uint __n, void* __theAddress);

//	// extern _Bool OSAtomicTestAndClearBarrier (uint32_t __n, volatile void *__theAddress) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_fetch_and() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSAtomicTestAndClearBarrier (uint __n, void* __theAddress);

//	// extern void OSMemoryBarrier () __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use atomic_thread_fence() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use atomic_thread_fence() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use atomic_thread_fence() from <stdatomic.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use atomic_thread_fence() from <stdatomic.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void OSMemoryBarrier ();

//	// extern _Bool OSSpinLockTry (volatile OSSpinLock *__lock) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use os_unfair_lock_trylock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use os_unfair_lock_trylock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use os_unfair_lock_trylock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use os_unfair_lock_trylock() from <os/lock.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool OSSpinLockTry (int* __lock);

//	// extern void OSSpinLockLock (volatile OSSpinLock *__lock) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use os_unfair_lock_lock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use os_unfair_lock_lock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use os_unfair_lock_lock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use os_unfair_lock_lock() from <os/lock.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void OSSpinLockLock (int* __lock);

//	// extern void OSSpinLockUnlock (volatile OSSpinLock *__lock) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, deprecated=3.0))) __attribute__((availability(tvos, deprecated=10.0))) __attribute__((availability(ios, deprecated=10.0))) __attribute__((availability(macos, deprecated=10.12)));
//	[Deprecated (PlatformName.WatchOS, 3, 0, message: "Use os_unfair_lock_unlock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.TvOS, 10, 0, message: "Use os_unfair_lock_unlock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.iOS, 10, 0, message: "Use os_unfair_lock_unlock() from <os/lock.h> instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 12, message: "Use os_unfair_lock_unlock() from <os/lock.h> instead")]
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void OSSpinLockUnlock (int* __lock);

//	// extern void OSAtomicEnqueue (OSQueueHead *__list, void *__new, size_t __offset) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void OSAtomicEnqueue (OSQueueHead* __list, void* __new, nuint __offset);

//	// extern void * OSAtomicDequeue (OSQueueHead *__list, size_t __offset) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* OSAtomicDequeue (OSQueueHead* __list, nuint __offset);

//	// extern void os_unfair_lock_lock (os_unfair_lock_t _Nonnull lock) __attribute__((nonnull())) __attribute__((nothrow)) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void os_unfair_lock_lock (os_unfair_lock_t* @lock);

//	// extern _Bool os_unfair_lock_trylock (os_unfair_lock_t _Nonnull lock) __attribute__((nonnull())) __attribute__((warn_unused_result)) __attribute__((nothrow)) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool os_unfair_lock_trylock (os_unfair_lock_t* @lock);

//	// extern void os_unfair_lock_unlock (os_unfair_lock_t _Nonnull lock) __attribute__((nonnull())) __attribute__((nothrow)) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void os_unfair_lock_unlock (os_unfair_lock_t* @lock);

//	// extern malloc_zone_t * malloc_default_zone ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe malloc_zone_t* malloc_default_zone ();

//	// extern malloc_zone_t * malloc_create_zone (vm_size_t start_size, unsigned int flags);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe malloc_zone_t* malloc_create_zone (UIntPtr start_size, uint flags);

//	// extern void malloc_destroy_zone (malloc_zone_t *zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_destroy_zone (malloc_zone_t* zone);

//	// extern void * malloc_zone_malloc (malloc_zone_t *zone, size_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* malloc_zone_malloc (malloc_zone_t* zone, nuint size);

//	// extern void * malloc_zone_calloc (malloc_zone_t *zone, size_t num_items, size_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* malloc_zone_calloc (malloc_zone_t* zone, nuint num_items, nuint size);

//	// extern void * malloc_zone_valloc (malloc_zone_t *zone, size_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* malloc_zone_valloc (malloc_zone_t* zone, nuint size);

//	// extern void malloc_zone_free (malloc_zone_t *zone, void *ptr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_free (malloc_zone_t* zone, void* ptr);

//	// extern void * malloc_zone_realloc (malloc_zone_t *zone, void *ptr, size_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* malloc_zone_realloc (malloc_zone_t* zone, void* ptr, nuint size);

//	// extern malloc_zone_t * malloc_zone_from_ptr (const void *ptr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe malloc_zone_t* malloc_zone_from_ptr (void* ptr);

//	// extern size_t malloc_size (const void *ptr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint malloc_size (void* ptr);

//	// extern size_t malloc_good_size (size_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint malloc_good_size (nuint size);

//	// extern void * malloc_zone_memalign (malloc_zone_t *zone, size_t alignment, size_t size) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* malloc_zone_memalign (malloc_zone_t* zone, nuint alignment, nuint size);

//	// extern unsigned int malloc_zone_batch_malloc (malloc_zone_t *zone, size_t size, void **results, unsigned int num_requested);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint malloc_zone_batch_malloc (malloc_zone_t* zone, nuint size, void** results, uint num_requested);

//	// extern void malloc_zone_batch_free (malloc_zone_t *zone, void **to_be_freed, unsigned int num);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_batch_free (malloc_zone_t* zone, void** to_be_freed, uint num);

//	// extern malloc_zone_t * malloc_default_purgeable_zone () __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe malloc_zone_t* malloc_default_purgeable_zone ();

//	// extern void malloc_make_purgeable (void *ptr) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_make_purgeable (void* ptr);

//	// extern int malloc_make_nonpurgeable (void *ptr) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int malloc_make_nonpurgeable (void* ptr);

//	// extern void malloc_zone_register (malloc_zone_t *zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_register (malloc_zone_t* zone);

//	// extern void malloc_zone_unregister (malloc_zone_t *zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_unregister (malloc_zone_t* zone);

//	// extern void malloc_set_zone_name (malloc_zone_t *zone, const char *name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_set_zone_name (malloc_zone_t* zone, sbyte* name);

//	// extern const char * malloc_get_zone_name (malloc_zone_t *zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* malloc_get_zone_name (malloc_zone_t* zone);

//	// extern size_t malloc_zone_pressure_relief (malloc_zone_t *zone, size_t goal) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint malloc_zone_pressure_relief (malloc_zone_t* zone, nuint goal);

//	// extern void malloc_printf (const char *format, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_printf (sbyte* format, IntPtr varArgs);

//	// extern kern_return_t malloc_get_all_zones (task_t task, memory_reader_t *reader, vm_address_t **addresses, unsigned int *count);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int malloc_get_all_zones (uint task, memory_reader_t reader, UIntPtr** addresses, uint* count);

//	// extern void malloc_zone_print_ptr_info (void *ptr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_print_ptr_info (void* ptr);

//	// extern boolean_t malloc_zone_check (malloc_zone_t *zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int malloc_zone_check (malloc_zone_t* zone);

//	// extern void malloc_zone_print (malloc_zone_t *zone, boolean_t verbose);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_print (malloc_zone_t* zone, int verbose);

//	// extern void malloc_zone_statistics (malloc_zone_t *zone, malloc_statistics_t *stats);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_statistics (malloc_zone_t* zone, malloc_statistics_t* stats);

//	// extern void malloc_zone_log (malloc_zone_t *zone, void *address);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_log (malloc_zone_t* zone, void* address);

//	// extern struct mstats mstats ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern mstats mstats ();

//	// extern boolean_t malloc_zone_enable_discharge_checking (malloc_zone_t *zone) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int malloc_zone_enable_discharge_checking (malloc_zone_t* zone);

//	// extern void malloc_zone_disable_discharge_checking (malloc_zone_t *zone) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_disable_discharge_checking (malloc_zone_t* zone);

//	// extern void malloc_zone_discharge (malloc_zone_t *zone, void *memory) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_discharge (malloc_zone_t* zone, void* memory);

//	// extern void malloc_zone_enumerate_discharged_pointers (malloc_zone_t *zone, void (^report_discharged)(void *, void *)) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void malloc_zone_enumerate_discharged_pointers (malloc_zone_t* zone, Action<void*, void*> report_discharged);

//	// extern void * _Block_copy (const void *aBlock) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* _Block_copy (void* aBlock);

//	// extern void _Block_release (const void *aBlock) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _Block_release (void* aBlock);

//	// extern void _Block_object_assign (void *, const void *, const int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _Block_object_assign (void*, void*, int);

//	// extern void _Block_object_assign (void *, const void *, const int) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _Block_object_assign (void*, void*, int);

//	// extern void _Block_object_dispose (const void *, const int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _Block_object_dispose (void*, int);

//	// extern void _Block_object_dispose (const void *, const int) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _Block_object_dispose (void*, int);

//	// extern int audit (const void *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int audit (void*, int);

//	// extern int auditon (int, void *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int auditon (int, void*, int);

//	// extern int auditctl (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int auditctl (sbyte*);

//	// extern int getauid (au_id_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getauid (uint*);

//	// extern int setauid (const au_id_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setauid (uint*);

//	// extern int getaudit_addr (struct auditinfo_addr *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getaudit_addr (auditinfo_addr*, int);

//	// extern int setaudit_addr (const struct auditinfo_addr *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setaudit_addr (auditinfo_addr*, int);

//	// extern int getaudit (struct auditinfo *) __attribute__((availability(ios, introduced=2.0, deprecated=6.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 6, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getaudit (auditinfo*);

//	// extern int setaudit (const struct auditinfo *) __attribute__((availability(ios, introduced=2.0, deprecated=6.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 6, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int setaudit (auditinfo*);

//	// extern mach_port_name_t audit_session_self ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint audit_session_self ();

//	// extern au_asid_t audit_session_join (mach_port_name_t port);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int audit_session_join (uint port);

//	// extern int audit_session_port (au_asid_t asid, mach_port_name_t *portname);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int audit_session_port (int asid, uint* portname);

//	// extern acl_t acl_dup (acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_dup (acl_t* acl);

//	// extern int acl_free (void *obj_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_free (void* obj_p);

//	// extern acl_t acl_init (int count);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_init (int count);

//	// extern int acl_copy_entry (acl_entry_t dest_d, acl_entry_t src_d);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_copy_entry (acl_entry_t* dest_d, acl_entry_t* src_d);

//	// extern int acl_create_entry (acl_t *acl_p, acl_entry_t *entry_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_create_entry (acl_t** acl_p, acl_entry_t** entry_p);

//	// extern int acl_create_entry_np (acl_t *acl_p, acl_entry_t *entry_p, int entry_index);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_create_entry_np (acl_t** acl_p, acl_entry_t** entry_p, int entry_index);

//	// extern int acl_delete_entry (acl_t acl, acl_entry_t entry_d);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_delete_entry (acl_t* acl, acl_entry_t* entry_d);

//	// extern int acl_get_entry (acl_t acl, int entry_id, acl_entry_t *entry_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_get_entry (acl_t* acl, int entry_id, acl_entry_t** entry_p);

//	// extern int acl_valid (acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_valid (acl_t* acl);

//	// extern int acl_valid_fd_np (int fd, acl_type_t type, acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_valid_fd_np (int fd, acl_type_t type, acl_t* acl);

//	// extern int acl_valid_file_np (const char *path, acl_type_t type, acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_valid_file_np (sbyte* path, acl_type_t type, acl_t* acl);

//	// extern int acl_valid_link_np (const char *path, acl_type_t type, acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_valid_link_np (sbyte* path, acl_type_t type, acl_t* acl);

//	// extern int acl_add_perm (acl_permset_t permset_d, acl_perm_t perm);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_add_perm (acl_permset_t* permset_d, acl_perm_t perm);

//	// extern int acl_calc_mask (acl_t *acl_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_calc_mask (acl_t** acl_p);

//	// extern int acl_clear_perms (acl_permset_t permset_d);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_clear_perms (acl_permset_t* permset_d);

//	// extern int acl_delete_perm (acl_permset_t permset_d, acl_perm_t perm);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_delete_perm (acl_permset_t* permset_d, acl_perm_t perm);

//	// extern int acl_get_perm_np (acl_permset_t permset_d, acl_perm_t perm);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_get_perm_np (acl_permset_t* permset_d, acl_perm_t perm);

//	// extern int acl_get_permset (acl_entry_t entry_d, acl_permset_t *permset_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_get_permset (acl_entry_t* entry_d, acl_permset_t** permset_p);

//	// extern int acl_set_permset (acl_entry_t entry_d, acl_permset_t permset_d);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_permset (acl_entry_t* entry_d, acl_permset_t* permset_d);

//	// extern int acl_maximal_permset_mask_np (acl_permset_mask_t *mask_p) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_maximal_permset_mask_np (ulong* mask_p);

//	// extern int acl_get_permset_mask_np (acl_entry_t entry_d, acl_permset_mask_t *mask_p) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_get_permset_mask_np (acl_entry_t* entry_d, ulong* mask_p);

//	// extern int acl_set_permset_mask_np (acl_entry_t entry_d, acl_permset_mask_t mask) __attribute__((availability(ios, introduced=4.3)));
//	[iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_permset_mask_np (acl_entry_t* entry_d, ulong mask);

//	// extern int acl_add_flag_np (acl_flagset_t flagset_d, acl_flag_t flag);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_add_flag_np (acl_flagset_t* flagset_d, acl_flag_t flag);

//	// extern int acl_clear_flags_np (acl_flagset_t flagset_d);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_clear_flags_np (acl_flagset_t* flagset_d);

//	// extern int acl_delete_flag_np (acl_flagset_t flagset_d, acl_flag_t flag);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_delete_flag_np (acl_flagset_t* flagset_d, acl_flag_t flag);

//	// extern int acl_get_flag_np (acl_flagset_t flagset_d, acl_flag_t flag);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_get_flag_np (acl_flagset_t* flagset_d, acl_flag_t flag);

//	// extern int acl_get_flagset_np (void *obj_p, acl_flagset_t *flagset_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_get_flagset_np (void* obj_p, acl_flagset_t** flagset_p);

//	// extern int acl_set_flagset_np (void *obj_p, acl_flagset_t flagset_d);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_flagset_np (void* obj_p, acl_flagset_t* flagset_d);

//	// extern void * acl_get_qualifier (acl_entry_t entry_d);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* acl_get_qualifier (acl_entry_t* entry_d);

//	// extern int acl_get_tag_type (acl_entry_t entry_d, acl_tag_t *tag_type_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_get_tag_type (acl_entry_t* entry_d, acl_tag_t* tag_type_p);

//	// extern int acl_set_qualifier (acl_entry_t entry_d, const void *tag_qualifier_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_qualifier (acl_entry_t* entry_d, void* tag_qualifier_p);

//	// extern int acl_set_tag_type (acl_entry_t entry_d, acl_tag_t tag_type);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_tag_type (acl_entry_t* entry_d, acl_tag_t tag_type);

//	// extern int acl_delete_def_file (const char *path_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_delete_def_file (sbyte* path_p);

//	// extern acl_t acl_get_fd (int fd);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_get_fd (int fd);

//	// extern acl_t acl_get_fd_np (int fd, acl_type_t type);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_get_fd_np (int fd, acl_type_t type);

//	// extern acl_t acl_get_file (const char *path_p, acl_type_t type);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_get_file (sbyte* path_p, acl_type_t type);

//	// extern acl_t acl_get_link_np (const char *path_p, acl_type_t type);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_get_link_np (sbyte* path_p, acl_type_t type);

//	// extern int acl_set_fd (int fd, acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_fd (int fd, acl_t* acl);

//	// extern int acl_set_fd_np (int fd, acl_t acl, acl_type_t acl_type);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_fd_np (int fd, acl_t* acl, acl_type_t acl_type);

//	// extern int acl_set_file (const char *path_p, acl_type_t type, acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_file (sbyte* path_p, acl_type_t type, acl_t* acl);

//	// extern int acl_set_link_np (const char *path_p, acl_type_t type, acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int acl_set_link_np (sbyte* path_p, acl_type_t type, acl_t* acl);

//	// extern ssize_t acl_copy_ext (void *buf_p, acl_t acl, ssize_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint acl_copy_ext (void* buf_p, acl_t* acl, nint size);

//	// extern ssize_t acl_copy_ext_native (void *buf_p, acl_t acl, ssize_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint acl_copy_ext_native (void* buf_p, acl_t* acl, nint size);

//	// extern acl_t acl_copy_int (const void *buf_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_copy_int (void* buf_p);

//	// extern acl_t acl_copy_int_native (const void *buf_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_copy_int_native (void* buf_p);

//	// extern acl_t acl_from_text (const char *buf_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe acl_t* acl_from_text (sbyte* buf_p);

//	// extern ssize_t acl_size (acl_t acl);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint acl_size (acl_t* acl);

//	// extern char * acl_to_text (acl_t acl, ssize_t *len_p);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* acl_to_text (acl_t* acl, nint* len_p);

//	// extern int clonefileat (int, const char *, int, const char *, uint32_t) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clonefileat (int, sbyte*, int, sbyte*, uint);

//	// extern int fclonefileat (int, int, const char *, uint32_t) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fclonefileat (int, int, sbyte*, uint);

//	// extern int clonefile (const char *, const char *, uint32_t) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int clonefile (sbyte*, sbyte*, uint);

//	// extern int kqueue ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int kqueue ();

//	// extern int kevent (int kq, const struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int kevent (int kq, kevent* changelist, int nchanges, kevent* eventlist, int nevents, timespec* timeout);

//	// extern int kevent64 (int kq, const struct kevent64_s *changelist, int nchanges, struct kevent64_s *eventlist, int nevents, unsigned int flags, const struct timespec *timeout);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int kevent64 (int kq, kevent64_s* changelist, int nchanges, kevent64_s* eventlist, int nevents, uint flags, timespec* timeout);

//	// extern int kdebug_signpost (uint32_t code, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int kdebug_signpost (uint code, UIntPtr arg1, UIntPtr arg2, UIntPtr arg3, UIntPtr arg4);

//	// extern int kdebug_signpost_start (uint32_t code, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int kdebug_signpost_start (uint code, UIntPtr arg1, UIntPtr arg2, UIntPtr arg3, UIntPtr arg4);

//	// extern int kdebug_signpost_end (uint32_t code, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int kdebug_signpost_end (uint code, UIntPtr arg1, UIntPtr arg2, UIntPtr arg3, UIntPtr arg4);

//	// pid_t getlcid (pid_t pid);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int getlcid (int pid);

//	// int setlcid (pid_t pid, pid_t lcid);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int setlcid (int pid, int lcid);

//	// extern int fhopen (const struct fhandle *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fhopen (fhandle*, int);

//	// extern int fstatfs (int, struct statfs *) asm("_fstatfs");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fstatfs (int, statfs*);

//	// extern int getfh (const char *, fhandle_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getfh (sbyte*, fhandle_t*);

//	// extern int getfsstat (struct statfs *, int, int) asm("_getfsstat");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getfsstat (statfs*, int, int);

//	// extern int getmntinfo (struct statfs **, int) asm("_getmntinfo");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getmntinfo (statfs**, int);

//	// extern int getmntinfo_r_np (struct statfs **, int) asm("_getmntinfo_r_np") __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getmntinfo_r_np (statfs**, int);

//	// extern int mount (const char *, const char *, int, void *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int mount (sbyte*, sbyte*, int, void*);

//	// extern int fmount (const char *, int, int, void *) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int fmount (sbyte*, int, int, void*);

//	// extern int statfs (const char *, struct statfs *) asm("_statfs");
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int statfs (sbyte*, statfs*);

//	// extern int unmount (const char *, int);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int unmount (sbyte*, int);

//	// extern int getvfsbyname (const char *, struct vfsconf *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int getvfsbyname (sbyte*, vfsconf*);

//	// int dqhashshift (u_int32_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int dqhashshift (uint);

//	// int dqhashshift (u_int32_t size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int dqhashshift (uint size);

//	// extern int quotactl (const char *, int, int, caddr_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int quotactl (sbyte*, int, int, sbyte*);

//	// extern void rb_tree_init (rb_tree_t *, const rb_tree_ops_t *) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void rb_tree_init (rb_tree_t*, rb_tree_ops_t*);

//	// extern void * rb_tree_insert_node (rb_tree_t *, void *) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* rb_tree_insert_node (rb_tree_t*, void*);

//	// extern void * rb_tree_find_node (rb_tree_t *, const void *) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* rb_tree_find_node (rb_tree_t*, void*);

//	// extern void * rb_tree_find_node_geq (rb_tree_t *, const void *) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* rb_tree_find_node_geq (rb_tree_t*, void*);

//	// extern void * rb_tree_find_node_leq (rb_tree_t *, const void *) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* rb_tree_find_node_leq (rb_tree_t*, void*);

//	// extern void rb_tree_remove_node (rb_tree_t *, void *) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void rb_tree_remove_node (rb_tree_t*, void*);

//	// extern void * rb_tree_iterate (rb_tree_t *, void *, const unsigned int) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* rb_tree_iterate (rb_tree_t*, void*, uint);

//	// extern size_t rb_tree_count (rb_tree_t *) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint rb_tree_count (rb_tree_t*);

//	// extern int sysctl (int *, u_int, void *, size_t *, void *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sysctl (int*, uint, void*, nuint*, void*, nuint);

//	// extern int sysctlbyname (const char *, void *, size_t *, void *, size_t);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sysctlbyname (sbyte*, void*, nuint*, void*, nuint);

//	// extern int sysctlnametomib (const char *, int *, size_t *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int sysctlnametomib (sbyte*, int*, nuint*);

//	// extern int ftime (struct timeb *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int ftime (timeb*);

//	// unsigned short NXSwapShort (unsigned short inv) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NXSwapShort (ushort inv);

//	// extern int __builtin_constant_p () __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int __builtin_constant_p ();

//	// unsigned int NXSwapInt (unsigned int inv) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NXSwapInt (uint inv);

//	// unsigned long NXSwapLong (unsigned long inv) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapLong (nuint inv);

//	// unsigned long long NXSwapLongLong (unsigned long long inv) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapLongLong (ulong inv);

//	// NXSwappedFloat NXConvertHostFloatToSwapped (float x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXConvertHostFloatToSwapped (float x);

//	// float NXConvertSwappedFloatToHost (NXSwappedFloat x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float NXConvertSwappedFloatToHost (nuint x);

//	// NXSwappedDouble NXConvertHostDoubleToSwapped (double x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXConvertHostDoubleToSwapped (double x);

//	// double NXConvertSwappedDoubleToHost (NXSwappedDouble x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double NXConvertSwappedDoubleToHost (ulong x);

//	// NXSwappedFloat NXSwapFloat (NXSwappedFloat x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapFloat (nuint x);

//	// NXSwappedDouble NXSwapDouble (NXSwappedDouble x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapDouble (ulong x);

//	// enum NXByteOrder NXHostByteOrder ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NXByteOrder NXHostByteOrder ();

//	// unsigned short NXSwapBigShortToHost (unsigned short x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NXSwapBigShortToHost (ushort x);

//	// unsigned int NXSwapBigIntToHost (unsigned int x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NXSwapBigIntToHost (uint x);

//	// unsigned long NXSwapBigLongToHost (unsigned long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapBigLongToHost (nuint x);

//	// unsigned long long NXSwapBigLongLongToHost (unsigned long long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapBigLongLongToHost (ulong x);

//	// double NXSwapBigDoubleToHost (NXSwappedDouble x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double NXSwapBigDoubleToHost (ulong x);

//	// float NXSwapBigFloatToHost (NXSwappedFloat x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float NXSwapBigFloatToHost (nuint x);

//	// unsigned short NXSwapHostShortToBig (unsigned short x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NXSwapHostShortToBig (ushort x);

//	// unsigned int NXSwapHostIntToBig (unsigned int x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NXSwapHostIntToBig (uint x);

//	// unsigned long NXSwapHostLongToBig (unsigned long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapHostLongToBig (nuint x);

//	// unsigned long long NXSwapHostLongLongToBig (unsigned long long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapHostLongLongToBig (ulong x);

//	// NXSwappedDouble NXSwapHostDoubleToBig (double x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapHostDoubleToBig (double x);

//	// NXSwappedFloat NXSwapHostFloatToBig (float x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapHostFloatToBig (float x);

//	// unsigned short NXSwapLittleShortToHost (unsigned short x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NXSwapLittleShortToHost (ushort x);

//	// unsigned int NXSwapLittleIntToHost (unsigned int x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NXSwapLittleIntToHost (uint x);

//	// unsigned long NXSwapLittleLongToHost (unsigned long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapLittleLongToHost (nuint x);

//	// unsigned long long NXSwapLittleLongLongToHost (unsigned long long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapLittleLongLongToHost (ulong x);

//	// double NXSwapLittleDoubleToHost (NXSwappedDouble x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double NXSwapLittleDoubleToHost (ulong x);

//	// float NXSwapLittleFloatToHost (NXSwappedFloat x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float NXSwapLittleFloatToHost (nuint x);

//	// unsigned short NXSwapHostShortToLittle (unsigned short x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NXSwapHostShortToLittle (ushort x);

//	// unsigned int NXSwapHostIntToLittle (unsigned int x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NXSwapHostIntToLittle (uint x);

//	// unsigned long NXSwapHostLongToLittle (unsigned long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapHostLongToLittle (nuint x);

//	// unsigned long long NXSwapHostLongLongToLittle (unsigned long long x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapHostLongLongToLittle (ulong x);

//	// NXSwappedDouble NXSwapHostDoubleToLittle (double x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NXSwapHostDoubleToLittle (double x);

//	// NXSwappedFloat NXSwapHostFloatToLittle (float x) __attribute__((deprecated("")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NXSwapHostFloatToLittle (float x);

//	// extern const char * _Nonnull sel_getName (SEL _Nonnull sel) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* sel_getName (Selector sel);

//	// extern SEL _Nonnull sel_registerName (const char * _Nonnull str) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Selector sel_registerName (sbyte* str);

//	// extern const char * _Nonnull object_getClassName (id _Nullable obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* object_getClassName ([NullAllowed] NSObject obj);

//	// extern void * _Nullable object_getIndexedIvars (id _Nullable obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* object_getIndexedIvars ([NullAllowed] NSObject obj);

//	// extern BOOL sel_isMapped (SEL _Nonnull sel) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool sel_isMapped (Selector sel);

//	// extern SEL _Nonnull sel_getUid (const char * _Nonnull str) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Selector sel_getUid (sbyte* str);

//	// extern id _Nullable object_copy (id _Nullable obj, size_t size) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject object_copy ([NullAllowed] NSObject obj, nuint size);

//	// extern id _Nullable object_dispose (id _Nullable obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject object_dispose ([NullAllowed] NSObject obj);

//	// extern Class _Nullable object_getClass (id _Nullable obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern Class object_getClass ([NullAllowed] NSObject obj);

//	// extern Class _Nullable object_setClass (id _Nullable obj, Class _Nonnull cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern Class object_setClass ([NullAllowed] NSObject obj, Class cls);

//	// extern BOOL object_isClass (id _Nullable obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Watch (1,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool object_isClass ([NullAllowed] NSObject obj);

//	// extern id _Nullable object_getIvar (id _Nullable obj, Ivar _Nonnull ivar) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject object_getIvar ([NullAllowed] NSObject obj, Ivar* ivar);

//	// extern void object_setIvar (id _Nullable obj, Ivar _Nonnull ivar, id _Nullable value) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void object_setIvar ([NullAllowed] NSObject obj, Ivar* ivar, [NullAllowed] NSObject value);

//	// extern void object_setIvarWithStrongDefault (id _Nullable obj, Ivar _Nonnull ivar, id _Nullable value) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void object_setIvarWithStrongDefault ([NullAllowed] NSObject obj, Ivar* ivar, [NullAllowed] NSObject value);

//	// extern Ivar _Nullable object_setInstanceVariable (id _Nullable obj, const char * _Nonnull name, void * _Nullable value) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Ivar* object_setInstanceVariable ([NullAllowed] NSObject obj, sbyte* name, [NullAllowed] void* value);

//	// extern Ivar _Nullable object_setInstanceVariableWithStrongDefault (id _Nullable obj, const char * _Nonnull name, void * _Nullable value) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Ivar* object_setInstanceVariableWithStrongDefault ([NullAllowed] NSObject obj, sbyte* name, [NullAllowed] void* value);

//	// extern Ivar _Nullable object_getInstanceVariable (id _Nullable obj, const char * _Nonnull name, void * _Nullable * _Nullable outValue) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Ivar* object_getInstanceVariable ([NullAllowed] NSObject obj, sbyte* name, [NullAllowed] void** outValue);

//	// extern id objc_getClass (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject objc_getClass (sbyte*);

//	// extern id objc_getClass (const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject objc_getClass (sbyte* name);

//	// extern id objc_getMetaClass (const char *);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject objc_getMetaClass (sbyte*);

//	// extern id objc_getMetaClass (const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject objc_getMetaClass (sbyte* name);

//	// extern Class _Nullable objc_lookUpClass (const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Class objc_lookUpClass (sbyte* name);

//	// extern Class _Nonnull objc_getRequiredClass (const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Class objc_getRequiredClass (sbyte* name);

//	// extern int objc_getClassList (Class  _Nonnull * _Nullable buffer, int bufferCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int objc_getClassList (out Class buffer, int bufferCount);

//	// extern Class  _Nonnull * _Nullable objc_copyClassList (unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=3.1))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Class* objc_copyClassList ([NullAllowed] uint* outCount);

//	// extern const char * _Nonnull class_getName (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* class_getName ([NullAllowed] Class cls);

//	// extern BOOL class_isMetaClass (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool class_isMetaClass ([NullAllowed] Class cls);

//	// extern Class _Nullable class_getSuperclass (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern Class class_getSuperclass ([NullAllowed] Class cls);

//	// extern Class _Nonnull class_setSuperclass (Class _Nonnull cls, Class _Nonnull newSuper) __attribute__((visibility("default"))) __attribute__((availability(watchos, deprecated=1.0))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, deprecated=9.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, deprecated=10.5))) __attribute__((availability(macos, introduced=10.5)));
//	[Deprecated (PlatformName.WatchOS, 1, 0, message: "not recommended")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "not recommended")]
//	[Deprecated (PlatformName.iOS, 2, 0, message: "not recommended")]
//	[Deprecated (PlatformName.MacOSX, 10, 5, message: "not recommended")]
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern Class class_setSuperclass (Class cls, Class newSuper);

//	// extern int class_getVersion (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int class_getVersion ([NullAllowed] Class cls);

//	// extern void class_setVersion (Class _Nullable cls, int version) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void class_setVersion ([NullAllowed] Class cls, int version);

//	// extern size_t class_getInstanceSize (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint class_getInstanceSize ([NullAllowed] Class cls);

//	// extern Ivar _Nullable class_getInstanceVariable (Class _Nullable cls, const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Ivar* class_getInstanceVariable ([NullAllowed] Class cls, sbyte* name);

//	// extern Ivar _Nullable class_getClassVariable (Class _Nullable cls, const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Ivar* class_getClassVariable ([NullAllowed] Class cls, sbyte* name);

//	// extern Ivar  _Nonnull * _Nullable class_copyIvarList (Class _Nullable cls, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Ivar** class_copyIvarList ([NullAllowed] Class cls, [NullAllowed] uint* outCount);

//	// extern Method _Nullable class_getInstanceMethod (Class _Nullable cls, SEL _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Method* class_getInstanceMethod ([NullAllowed] Class cls, Selector name);

//	// extern Method _Nullable class_getClassMethod (Class _Nullable cls, SEL _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Method* class_getClassMethod ([NullAllowed] Class cls, Selector name);

//	// extern IMP _Nullable class_getMethodImplementation (Class _Nullable cls, SEL _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe IMP* class_getMethodImplementation ([NullAllowed] Class cls, Selector name);

//	// extern BOOL class_respondsToSelector (Class _Nullable cls, SEL _Nonnull sel) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool class_respondsToSelector ([NullAllowed] Class cls, Selector sel);

//	// extern Method  _Nonnull * _Nullable class_copyMethodList (Class _Nullable cls, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Method** class_copyMethodList ([NullAllowed] Class cls, [NullAllowed] uint* outCount);

//	// extern BOOL class_conformsToProtocol (Class _Nullable cls, Protocol * _Nullable protocol) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool class_conformsToProtocol ([NullAllowed] Class cls, [NullAllowed] Protocol protocol);

//	// extern Protocol * _Nonnull * _Nullable class_copyProtocolList (Class _Nullable cls, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Protocol* class_copyProtocolList ([NullAllowed] Class cls, [NullAllowed] uint* outCount);

//	// extern objc_property_t _Nullable class_getProperty (Class _Nullable cls, const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe objc_property_t* class_getProperty ([NullAllowed] Class cls, sbyte* name);

//	// extern objc_property_t  _Nonnull * _Nullable class_copyPropertyList (Class _Nullable cls, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe objc_property_t** class_copyPropertyList ([NullAllowed] Class cls, [NullAllowed] uint* outCount);

//	// extern const uint8_t * _Nullable class_getIvarLayout (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe byte* class_getIvarLayout ([NullAllowed] Class cls);

//	// extern const uint8_t * _Nullable class_getWeakIvarLayout (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe byte* class_getWeakIvarLayout ([NullAllowed] Class cls);

//	// extern BOOL class_addMethod (Class _Nullable cls, SEL _Nonnull name, IMP _Nonnull imp, const char * _Nullable types) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool class_addMethod ([NullAllowed] Class cls, Selector name, IMP* imp, [NullAllowed] sbyte* types);

//	// extern IMP _Nullable class_replaceMethod (Class _Nullable cls, SEL _Nonnull name, IMP _Nonnull imp, const char * _Nullable types) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe IMP* class_replaceMethod ([NullAllowed] Class cls, Selector name, IMP* imp, [NullAllowed] sbyte* types);

//	// extern BOOL class_addIvar (Class _Nullable cls, const char * _Nonnull name, size_t size, uint8_t alignment, const char * _Nullable types) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool class_addIvar ([NullAllowed] Class cls, sbyte* name, nuint size, byte alignment, [NullAllowed] sbyte* types);

//	// extern BOOL class_addProtocol (Class _Nullable cls, Protocol * _Nonnull protocol) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool class_addProtocol ([NullAllowed] Class cls, Protocol protocol);

//	// extern BOOL class_addProperty (Class _Nullable cls, const char * _Nonnull name, const objc_property_attribute_t * _Nullable attributes, unsigned int attributeCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool class_addProperty ([NullAllowed] Class cls, sbyte* name, [NullAllowed] objc_property_attribute_t* attributes, uint attributeCount);

//	// extern void class_replaceProperty (Class _Nullable cls, const char * _Nonnull name, const objc_property_attribute_t * _Nullable attributes, unsigned int attributeCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void class_replaceProperty ([NullAllowed] Class cls, sbyte* name, [NullAllowed] objc_property_attribute_t* attributes, uint attributeCount);

//	// extern void class_setIvarLayout (Class _Nullable cls, const uint8_t * _Nullable layout) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void class_setIvarLayout ([NullAllowed] Class cls, [NullAllowed] byte* layout);

//	// extern void class_setWeakIvarLayout (Class _Nullable cls, const uint8_t * _Nullable layout) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void class_setWeakIvarLayout ([NullAllowed] Class cls, [NullAllowed] byte* layout);

//	// extern Class _Nonnull objc_getFutureClass (const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Class objc_getFutureClass (sbyte* name);

//	// extern id _Nullable class_createInstance (Class _Nullable cls, size_t extraBytes) __attribute__((visibility("default"))) __attribute__((ns_returns_retained)) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject class_createInstance ([NullAllowed] Class cls, nuint extraBytes);

//	// extern id _Nullable objc_constructInstance (Class _Nullable cls, void * _Nullable bytes) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (1,0), TV (9,0), Mac (10,6), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject objc_constructInstance ([NullAllowed] Class cls, [NullAllowed] void* bytes);

//	// extern void * _Nullable objc_destructInstance (id _Nullable obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (1,0), TV (9,0), Mac (10,6), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* objc_destructInstance ([NullAllowed] NSObject obj);

//	// extern Class _Nullable objc_allocateClassPair (Class _Nullable superclass, const char * _Nonnull name, size_t extraBytes) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Class objc_allocateClassPair ([NullAllowed] Class superclass, sbyte* name, nuint extraBytes);

//	// extern void objc_registerClassPair (Class _Nonnull cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_registerClassPair (Class cls);

//	// extern Class _Nonnull objc_duplicateClass (Class _Nonnull original, const char * _Nonnull name, size_t extraBytes) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Class objc_duplicateClass (Class original, sbyte* name, nuint extraBytes);

//	// extern void objc_disposeClassPair (Class _Nonnull cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_disposeClassPair (Class cls);

//	// extern SEL _Nonnull method_getName (Method _Nonnull m) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Selector method_getName (Method* m);

//	// extern IMP _Nonnull method_getImplementation (Method _Nonnull m) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IMP* method_getImplementation (Method* m);

//	// extern const char * _Nullable method_getTypeEncoding (Method _Nonnull m) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe sbyte* method_getTypeEncoding (Method* m);

//	// extern unsigned int method_getNumberOfArguments (Method _Nonnull m) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint method_getNumberOfArguments (Method* m);

//	// extern char * _Nonnull method_copyReturnType (Method _Nonnull m) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* method_copyReturnType (Method* m);

//	// extern char * _Nullable method_copyArgumentType (Method _Nonnull m, unsigned int index) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe sbyte* method_copyArgumentType (Method* m, uint index);

//	// extern void method_getReturnType (Method _Nonnull m, char * _Nonnull dst, size_t dst_len) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void method_getReturnType (Method* m, sbyte* dst, nuint dst_len);

//	// extern void method_getArgumentType (Method _Nonnull m, unsigned int index, char * _Nullable dst, size_t dst_len) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void method_getArgumentType (Method* m, uint index, [NullAllowed] sbyte* dst, nuint dst_len);

//	// extern struct objc_method_description * _Nonnull method_getDescription (Method _Nonnull m) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe objc_method_description* method_getDescription (Method* m);

//	// extern IMP _Nonnull method_setImplementation (Method _Nonnull m, IMP _Nonnull imp) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IMP* method_setImplementation (Method* m, IMP* imp);

//	// extern void method_exchangeImplementations (Method _Nonnull m1, Method _Nonnull m2) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void method_exchangeImplementations (Method* m1, Method* m2);

//	// extern const char * _Nullable ivar_getName (Ivar _Nonnull v) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe sbyte* ivar_getName (Ivar* v);

//	// extern const char * _Nullable ivar_getTypeEncoding (Ivar _Nonnull v) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe sbyte* ivar_getTypeEncoding (Ivar* v);

//	// extern ptrdiff_t ivar_getOffset (Ivar _Nonnull v) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IntPtr ivar_getOffset (Ivar* v);

//	// extern const char * _Nonnull property_getName (objc_property_t _Nonnull property) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* property_getName (objc_property_t* property);

//	// extern const char * _Nullable property_getAttributes (objc_property_t _Nonnull property) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe sbyte* property_getAttributes (objc_property_t* property);

//	// extern objc_property_attribute_t * _Nullable property_copyAttributeList (objc_property_t _Nonnull property, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe objc_property_attribute_t* property_copyAttributeList (objc_property_t* property, [NullAllowed] uint* outCount);

//	// extern char * _Nullable property_copyAttributeValue (objc_property_t _Nonnull property, const char * _Nonnull attributeName) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe sbyte* property_copyAttributeValue (objc_property_t* property, sbyte* attributeName);

//	// extern Protocol * _Nullable objc_getProtocol (const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Protocol objc_getProtocol (sbyte* name);

//	// extern Protocol * _Nonnull * _Nullable objc_copyProtocolList (unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Protocol* objc_copyProtocolList ([NullAllowed] uint* outCount);

//	// extern BOOL protocol_conformsToProtocol (Protocol * _Nullable proto, Protocol * _Nullable other) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool protocol_conformsToProtocol ([NullAllowed] Protocol proto, [NullAllowed] Protocol other);

//	// extern BOOL protocol_isEqual (Protocol * _Nullable proto, Protocol * _Nullable other) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool protocol_isEqual ([NullAllowed] Protocol proto, [NullAllowed] Protocol other);

//	// extern const char * _Nonnull protocol_getName (Protocol * _Nonnull proto) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* protocol_getName (Protocol proto);

//	// extern struct objc_method_description protocol_getMethodDescription (Protocol * _Nonnull proto, SEL _Nonnull aSel, BOOL isRequiredMethod, BOOL isInstanceMethod) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern objc_method_description protocol_getMethodDescription (Protocol proto, Selector aSel, bool isRequiredMethod, bool isInstanceMethod);

//	// extern struct objc_method_description * _Nullable protocol_copyMethodDescriptionList (Protocol * _Nonnull proto, BOOL isRequiredMethod, BOOL isInstanceMethod, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe objc_method_description* protocol_copyMethodDescriptionList (Protocol proto, bool isRequiredMethod, bool isInstanceMethod, [NullAllowed] uint* outCount);

//	// extern objc_property_t _Nullable protocol_getProperty (Protocol * _Nonnull proto, const char * _Nonnull name, BOOL isRequiredProperty, BOOL isInstanceProperty) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe objc_property_t* protocol_getProperty (Protocol proto, sbyte* name, bool isRequiredProperty, bool isInstanceProperty);

//	// extern objc_property_t  _Nonnull * _Nullable protocol_copyPropertyList (Protocol * _Nonnull proto, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe objc_property_t** protocol_copyPropertyList (Protocol proto, [NullAllowed] uint* outCount);

//	// extern objc_property_t  _Nonnull * _Nullable protocol_copyPropertyList2 (Protocol * _Nonnull proto, unsigned int * _Nullable outCount, BOOL isRequiredProperty, BOOL isInstanceProperty) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe objc_property_t** protocol_copyPropertyList2 (Protocol proto, [NullAllowed] uint* outCount, bool isRequiredProperty, bool isInstanceProperty);

//	// extern Protocol * _Nonnull * _Nullable protocol_copyProtocolList (Protocol * _Nonnull proto, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Protocol* protocol_copyProtocolList (Protocol proto, [NullAllowed] uint* outCount);

//	// extern Protocol * _Nullable objc_allocateProtocol (const char * _Nonnull name) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe Protocol objc_allocateProtocol (sbyte* name);

//	// extern void objc_registerProtocol (Protocol * _Nonnull proto) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_registerProtocol (Protocol proto);

//	// extern void protocol_addMethodDescription (Protocol * _Nonnull proto, SEL _Nonnull name, const char * _Nullable types, BOOL isRequiredMethod, BOOL isInstanceMethod) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void protocol_addMethodDescription (Protocol proto, Selector name, [NullAllowed] sbyte* types, bool isRequiredMethod, bool isInstanceMethod);

//	// extern void protocol_addProtocol (Protocol * _Nonnull proto, Protocol * _Nonnull addition) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void protocol_addProtocol (Protocol proto, Protocol addition);

//	// extern void protocol_addProperty (Protocol * _Nonnull proto, const char * _Nonnull name, const objc_property_attribute_t * _Nullable attributes, unsigned int attributeCount, BOOL isRequiredProperty, BOOL isInstanceProperty) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void protocol_addProperty (Protocol proto, sbyte* name, [NullAllowed] objc_property_attribute_t* attributes, uint attributeCount, bool isRequiredProperty, bool isInstanceProperty);

//	// extern const char * _Nonnull * _Nonnull objc_copyImageNames (unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte** objc_copyImageNames ([NullAllowed] uint* outCount);

//	// extern const char * _Nullable class_getImageName (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe sbyte* class_getImageName ([NullAllowed] Class cls);

//	// extern const char * _Nonnull * _Nullable objc_copyClassNamesForImage (const char * _Nonnull image, unsigned int * _Nullable outCount) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte** objc_copyClassNamesForImage (sbyte* image, [NullAllowed] uint* outCount);

//	// extern const char * _Nonnull sel_getName (SEL _Nonnull sel) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* sel_getName (Selector sel);

//	// extern SEL _Nonnull sel_registerName (const char * _Nonnull str) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe Selector sel_registerName (sbyte* str);

//	// extern BOOL sel_isEqual (SEL _Nonnull lhs, SEL _Nonnull rhs) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool sel_isEqual (Selector lhs, Selector rhs);

//	// extern void objc_enumerationMutation (id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_enumerationMutation (NSObject);

//	// extern void objc_enumerationMutation (id _Nonnull obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_enumerationMutation (NSObject obj);

//	// extern void objc_setEnumerationMutationHandler (void (* _Nullable)(id _Nonnull) handler) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void objc_setEnumerationMutationHandler ([NullAllowed] Action<NSObject>* handler);

//	// extern void objc_setForwardHandler (void * _Nonnull fwd, void * _Nonnull fwd_stret) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void objc_setForwardHandler (void* fwd, void* fwd_stret);

//	// extern IMP _Nonnull imp_implementationWithBlock (id _Nonnull block) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IMP* imp_implementationWithBlock (NSObject block);

//	// extern id _Nullable imp_getBlock (IMP _Nonnull anImp) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject imp_getBlock (IMP* anImp);

//	// extern BOOL imp_removeBlock (IMP _Nonnull anImp) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool imp_removeBlock (IMP* anImp);

//	// extern id _Nullable objc_loadWeak (id  _Nullable * _Nonnull location) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject objc_loadWeak ([NullAllowed] out NSObject location);

//	// extern id _Nullable objc_storeWeak (id  _Nullable * _Nonnull location, id _Nullable obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Watch (1,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject objc_storeWeak ([NullAllowed] out NSObject location, [NullAllowed] NSObject obj);

//	// extern void objc_setAssociatedObject (id _Nonnull object, const void * _Nonnull key, id _Nullable value, objc_AssociationPolicy policy) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=3.1))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (1,0), TV (9,0), Mac (10,6), iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void objc_setAssociatedObject (NSObject @object, void* key, [NullAllowed] NSObject value, objc_AssociationPolicy policy);

//	// extern id _Nullable objc_getAssociatedObject (id _Nonnull object, const void * _Nonnull key) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=3.1))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (1,0), TV (9,0), Mac (10,6), iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject objc_getAssociatedObject (NSObject @object, void* key);

//	// extern void objc_removeAssociatedObjects (id _Nonnull object) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=3.1))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (1,0), TV (9,0), Mac (10,6), iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_removeAssociatedObjects (NSObject @object);

//	// extern IMP _Nullable class_lookupMethod (Class _Nullable cls, SEL _Nonnull sel) __attribute__((visibility("default"))) __attribute__((availability(watchos, deprecated=1.0))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, deprecated=9.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, deprecated=10.5))) __attribute__((availability(macos, introduced=10.0)));
//	[Deprecated (PlatformName.WatchOS, 1, 0, message: "use class_getMethodImplementation instead")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "use class_getMethodImplementation instead")]
//	[Deprecated (PlatformName.iOS, 2, 0, message: "use class_getMethodImplementation instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 5, message: "use class_getMethodImplementation instead")]
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe IMP* class_lookupMethod ([NullAllowed] Class cls, Selector sel);

//	// extern BOOL class_respondsToMethod (Class _Nullable cls, SEL _Nonnull sel) __attribute__((visibility("default"))) __attribute__((availability(watchos, deprecated=1.0))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, deprecated=9.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, deprecated=10.5))) __attribute__((availability(macos, introduced=10.0)));
//	[Deprecated (PlatformName.WatchOS, 1, 0, message: "use class_respondsToSelector instead")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "use class_respondsToSelector instead")]
//	[Deprecated (PlatformName.iOS, 2, 0, message: "use class_respondsToSelector instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 5, message: "use class_respondsToSelector instead")]
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool class_respondsToMethod ([NullAllowed] Class cls, Selector sel);

//	// extern void _objc_flush_caches (Class _Nullable cls) __attribute__((visibility("default"))) __attribute__((availability(watchos, deprecated=1.0))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, deprecated=9.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, deprecated=10.5))) __attribute__((availability(macos, introduced=10.0)));
//	[Deprecated (PlatformName.WatchOS, 1, 0, message: "not recommended")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "not recommended")]
//	[Deprecated (PlatformName.iOS, 2, 0, message: "not recommended")]
//	[Deprecated (PlatformName.MacOSX, 10, 5, message: "not recommended")]
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _objc_flush_caches ([NullAllowed] Class cls);

//	// extern id _Nullable object_copyFromZone (id _Nullable anObject, size_t nBytes, void * _Nullable z) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, deprecated=10.5))) __attribute__((availability(macos, introduced=10.0)));
//	[Deprecated (PlatformName.MacOSX, 10, 5, message: "use object_copy instead")]
//	[NoWatch, NoTV, NoiOS, Mac (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject object_copyFromZone ([NullAllowed] NSObject anObject, nuint nBytes, [NullAllowed] void* z);

//	// extern id _Nullable class_createInstanceFromZone (Class _Nullable, size_t idxIvars, void * _Nullable z) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, deprecated=10.5))) __attribute__((availability(macos, introduced=10.0)));
//	[Deprecated (PlatformName.MacOSX, 10, 5, message: "use class_createInstance instead")]
//	[NoWatch, NoTV, NoiOS, Mac (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject class_createInstanceFromZone ([NullAllowed] Class, nuint idxIvars, [NullAllowed] void* z);

//	// extern id objc_msgSend (id, SEL, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_msgSend (NSObject, Selector, IntPtr varArgs);

//	// extern id objc_msgSend (id _Nullable self, SEL _Nonnull op, ...) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_msgSend ([NullAllowed] NSObject self, Selector op, IntPtr varArgs);

//	// extern id objc_msgSendSuper (struct objc_super *, SEL, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject objc_msgSendSuper (objc_super*, Selector, IntPtr varArgs);

//	// extern id objc_msgSendSuper (struct objc_super * _Nonnull super, SEL _Nonnull op, ...) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject objc_msgSendSuper (objc_super* super, Selector op, IntPtr varArgs);

//	// extern void objc_msgSend_stret (id, SEL, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_msgSend_stret (NSObject, Selector, IntPtr varArgs);

//	// extern void objc_msgSendSuper_stret (struct objc_super *, SEL, ...);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void objc_msgSendSuper_stret (objc_super*, Selector, IntPtr varArgs);

//	// extern id _Nullable method_invoke (id _Nullable receiver, Method _Nonnull m, ...) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject method_invoke ([NullAllowed] NSObject receiver, Method* m, IntPtr varArgs);

//	// extern id _Nullable _objc_msgForward (id _Nonnull receiver, SEL _Nonnull sel, ...) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0)));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject _objc_msgForward (NSObject receiver, Selector sel, IntPtr varArgs);

//	// void objc_collect (unsigned long options) __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_collect (nuint options);

//	// BOOL objc_collectingEnabled () __attribute__((deprecated("it always returns NO. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_collectingEnabled ();

//	// void objc_setCollectionThreshold (size_t threshold) __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_setCollectionThreshold (nuint threshold);

//	// void objc_setCollectionRatio (size_t ratio) __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_setCollectionRatio (nuint ratio);

//	// void objc_startCollectorThread () __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_startCollectorThread ();

//	// BOOL objc_atomicCompareAndSwapPtr (id predicate, id replacement, volatile id *objectLocation) __attribute__((deprecated("use OSAtomicCompareAndSwapPtr instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_atomicCompareAndSwapPtr (NSObject predicate, NSObject replacement, out NSObject objectLocation);

//	// BOOL objc_atomicCompareAndSwapPtrBarrier (id predicate, id replacement, volatile id *objectLocation) __attribute__((deprecated("use OSAtomicCompareAndSwapPtrBarrier instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_atomicCompareAndSwapPtrBarrier (NSObject predicate, NSObject replacement, out NSObject objectLocation);

//	// BOOL objc_atomicCompareAndSwapGlobal (id predicate, id replacement, volatile id *objectLocation) __attribute__((deprecated("use OSAtomicCompareAndSwapPtr instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_atomicCompareAndSwapGlobal (NSObject predicate, NSObject replacement, out NSObject objectLocation);

//	// BOOL objc_atomicCompareAndSwapGlobalBarrier (id predicate, id replacement, volatile id *objectLocation) __attribute__((deprecated("use OSAtomicCompareAndSwapPtrBarrier instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_atomicCompareAndSwapGlobalBarrier (NSObject predicate, NSObject replacement, out NSObject objectLocation);

//	// BOOL objc_atomicCompareAndSwapInstanceVariable (id predicate, id replacement, volatile id *objectLocation) __attribute__((deprecated("use OSAtomicCompareAndSwapPtr instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_atomicCompareAndSwapInstanceVariable (NSObject predicate, NSObject replacement, out NSObject objectLocation);

//	// BOOL objc_atomicCompareAndSwapInstanceVariableBarrier (id predicate, id replacement, volatile id *objectLocation) __attribute__((deprecated("use OSAtomicCompareAndSwapPtrBarrier instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_atomicCompareAndSwapInstanceVariableBarrier (NSObject predicate, NSObject replacement, out NSObject objectLocation);

//	// id objc_assign_strongCast (id val, id *dest) __attribute__((deprecated("use a simple assignment instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_assign_strongCast (NSObject val, out NSObject dest);

//	// id objc_assign_global (id val, id *dest) __attribute__((deprecated("use a simple assignment instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_assign_global (NSObject val, out NSObject dest);

//	// id objc_assign_threadlocal (id val, id *dest) __attribute__((deprecated("use a simple assignment instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_assign_threadlocal (NSObject val, out NSObject dest);

//	// id objc_assign_ivar (id val, id dest, ptrdiff_t offset) __attribute__((deprecated("use a simple assignment instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_assign_ivar (NSObject val, NSObject dest, IntPtr offset);

//	// id objc_read_weak (id *location) __attribute__((deprecated("use a simple read instead, or convert to zeroing __weak. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_read_weak (out NSObject location);

//	// id objc_assign_weak (id value, id *location) __attribute__((deprecated("use a simple assignment instead, or convert to zeroing __weak. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_assign_weak (NSObject value, out NSObject location);

//	// void * objc_memmove_collectable (void *dst, const void *src, size_t size) __attribute__((deprecated("use memmove instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* objc_memmove_collectable (void* dst, void* src, nuint size);

//	// extern void * __builtin___memmove_chk (void *, const void *, unsigned long, unsigned long) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* __builtin___memmove_chk (void*, void*, nuint, nuint);

//	// extern unsigned long __builtin_object_size (const void *, int) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint __builtin_object_size (void*, int);

//	// void objc_finalizeOnMainThread (Class cls) __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_finalizeOnMainThread (Class cls);

//	// BOOL objc_is_finalized (void *ptr) __attribute__((deprecated("it always returns NO. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool objc_is_finalized (void* ptr);

//	// void objc_clear_stack (unsigned long options) __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_clear_stack (nuint options);

//	// BOOL objc_collecting_enabled () __attribute__((deprecated("it always returns NO. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool objc_collecting_enabled ();

//	// void objc_set_collection_threshold (size_t threshold) __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_set_collection_threshold (nuint threshold);

//	// void objc_set_collection_ratio (size_t ratio) __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_set_collection_ratio (nuint ratio);

//	// void objc_start_collector_thread () __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_start_collector_thread ();

//	// extern id _Nullable class_createInstance (Class _Nullable cls, size_t extraBytes) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.0))) __attribute__((ns_returns_retained));
//	[Watch (1,0), TV (9,0), Mac (10,0), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject class_createInstance ([NullAllowed] Class cls, nuint extraBytes);

//	// id objc_allocate_object (Class cls, int extra) __attribute__((deprecated("use class_createInstance instead. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSObject objc_allocate_object (Class cls, int extra);

//	// void objc_registerThreadWithCollector () __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_registerThreadWithCollector ();

//	// void objc_unregisterThreadWithCollector () __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_unregisterThreadWithCollector ();

//	// void objc_assertRegisteredThreadWithCollector () __attribute__((deprecated("it does nothing. Define OBJC_SILENCE_GC_DEPRECATIONS=1 to temporarily silence this diagnostic.")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_assertRegisteredThreadWithCollector ();

//	// extern void objc_exception_throw (id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_exception_throw (NSObject);

//	// extern void objc_exception_throw (id _Nonnull exception) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_exception_throw (NSObject exception);

//	// extern void objc_exception_rethrow () __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_exception_rethrow ();

//	// extern id _Nonnull objc_begin_catch (void * _Nonnull exc_buf) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject objc_begin_catch (void* exc_buf);

//	// extern void objc_end_catch () __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_end_catch ();

//	// extern void objc_terminate () __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(macos, introduced=10.8)));
//	[Watch (1,0), TV (9,0), Mac (10,8), iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_terminate ();

//	// extern objc_exception_preprocessor _Nonnull objc_setExceptionPreprocessor (objc_exception_preprocessor _Nonnull fn) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe objc_exception_preprocessor* objc_setExceptionPreprocessor (objc_exception_preprocessor* fn);

//	// extern objc_exception_matcher _Nonnull objc_setExceptionMatcher (objc_exception_matcher _Nonnull fn) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe objc_exception_matcher* objc_setExceptionMatcher (objc_exception_matcher* fn);

//	// extern objc_uncaught_exception_handler _Nonnull objc_setUncaughtExceptionHandler (objc_uncaught_exception_handler _Nonnull fn) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (1,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe objc_uncaught_exception_handler* objc_setUncaughtExceptionHandler (objc_uncaught_exception_handler* fn);

//	// extern uintptr_t objc_addExceptionHandler (objc_exception_handler _Nonnull fn, void * _Nullable context) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.5)));
//	[NoWatch, NoTV, NoiOS, Mac (10,5)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe UIntPtr objc_addExceptionHandler (objc_exception_handler* fn, [NullAllowed] void* context);

//	// extern void objc_removeExceptionHandler (uintptr_t token) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.5)));
//	[NoWatch, NoTV, NoiOS, Mac (10,5)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void objc_removeExceptionHandler (UIntPtr token);

//	// extern int objc_sync_enter (id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int objc_sync_enter (NSObject);

//	// extern int objc_sync_enter (id _Nonnull obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.3)));
//	[Watch (1,0), TV (9,0), Mac (10,3), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int objc_sync_enter (NSObject obj);

//	// extern int objc_sync_exit (id);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int objc_sync_exit (NSObject);

//	// extern int objc_sync_exit (id _Nonnull obj) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=1.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.3)));
//	[Watch (1,0), TV (9,0), Mac (10,3), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int objc_sync_exit (NSObject obj);

//	// extern void * os_retain (void *object) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* os_retain (void* @object);

//	// extern void os_release (void *object) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void os_release (void* @object);

//	// extern dispatch_time_t dispatch_time (dispatch_time_t when, int64_t delta) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong dispatch_time (ulong when, long delta);

//	// extern dispatch_time_t dispatch_walltime (const struct timespec * _Nullable when, int64_t delta) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ulong dispatch_walltime ([NullAllowed] timespec* when, long delta);

//	// void _dispatch_object_validate (dispatch_object_t _Nonnull object) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void _dispatch_object_validate (DispatchObject @object);

//	// extern void dispatch_retain (dispatch_object_t _Nonnull object) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_retain (DispatchObject @object);

//	// extern void dispatch_release (dispatch_object_t _Nonnull object) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_release (DispatchObject @object);

//	// extern void * _Nullable dispatch_get_context (dispatch_object_t _Nonnull object) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((pure)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* dispatch_get_context (DispatchObject @object);

//	// extern void dispatch_set_context (dispatch_object_t _Nonnull object, void * _Nullable context) __attribute__((nothrow)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_set_context (DispatchObject @object, [NullAllowed] void* context);

//	// extern void dispatch_set_finalizer_f (dispatch_object_t _Nonnull object, dispatch_function_t _Nullable finalizer) __attribute__((nothrow)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_set_finalizer_f (DispatchObject @object, [NullAllowed] dispatch_function_t* finalizer);

//	// extern void dispatch_activate (dispatch_object_t _Nonnull object) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_activate (DispatchObject @object);

//	// extern void dispatch_suspend (dispatch_object_t _Nonnull object) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_suspend (DispatchObject @object);

//	// extern void dispatch_resume (dispatch_object_t _Nonnull object) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_resume (DispatchObject @object);

//	// extern void dispatch_debug (dispatch_object_t _Nonnull object, const char * _Nonnull message, ...) __attribute__((format(printf, 2, 3))) __attribute__((nothrow)) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0, deprecated=6.0))) __attribute__((availability(macos, introduced=10.6, deprecated=10.9)));
//	[Introduced (PlatformName.iOS, 4, 0, message: "unsupported interface")]
//	[Deprecated (PlatformName.iOS, 6, 0, message: "unsupported interface")]
//	[Introduced (PlatformName.MacOSX, 10, 6, message: "unsupported interface")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "unsupported interface")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_debug (DispatchObject @object, sbyte* message, IntPtr varArgs);

//	// extern void dispatch_debugv (dispatch_object_t _Nonnull object, const char * _Nonnull message, va_list ap) __attribute__((format(printf, 2, 0))) __attribute__((nothrow)) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0, deprecated=6.0))) __attribute__((availability(macos, introduced=10.6, deprecated=10.9)));
//	[Introduced (PlatformName.iOS, 4, 0, message: "unsupported interface")]
//	[Deprecated (PlatformName.iOS, 6, 0, message: "unsupported interface")]
//	[Introduced (PlatformName.MacOSX, 10, 6, message: "unsupported interface")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "unsupported interface")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_debugv (DispatchObject @object, sbyte* message, sbyte* ap);

//	// extern void dispatch_async (dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_async (DispatchQueue queue, dispatch_block_t block);

//	// extern void dispatch_async_f (dispatch_queue_t _Nonnull queue, void * _Nullable context, dispatch_function_t _Nonnull work) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_async_f (DispatchQueue queue, [NullAllowed] void* context, dispatch_function_t* work);

//	// extern void dispatch_sync (dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_sync (DispatchQueue queue, dispatch_block_t block);

//	// extern void dispatch_sync_f (dispatch_queue_t _Nonnull queue, void * _Nullable context, dispatch_function_t _Nonnull work) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_sync_f (DispatchQueue queue, [NullAllowed] void* context, dispatch_function_t* work);

//	// extern void dispatch_apply (size_t iterations, dispatch_queue_t _Nonnull queue, void (^ _Nonnull)(size_t) block) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_apply (nuint iterations, DispatchQueue queue, Action<nuint> block);

//	// extern void dispatch_apply_f (size_t iterations, dispatch_queue_t _Nonnull queue, void * _Nullable context, void (* _Nonnull)(void * _Nullable, size_t) work) __attribute__((nothrow)) __attribute__((nonnull(3))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_apply_f (nuint iterations, DispatchQueue queue, [NullAllowed] void* context, Action<void*, nuint>* work);

//	// extern dispatch_queue_t _Nonnull dispatch_get_current_queue () __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((pure)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0, deprecated=6.0))) __attribute__((availability(macos, introduced=10.6, deprecated=10.9)));
//	[Introduced (PlatformName.iOS, 4, 0, message: "unsupported interface")]
//	[Deprecated (PlatformName.iOS, 6, 0, message: "unsupported interface")]
//	[Introduced (PlatformName.MacOSX, 10, 6, message: "unsupported interface")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "unsupported interface")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern DispatchQueue dispatch_get_current_queue ();

//	// dispatch_queue_t _Nonnull dispatch_get_main_queue () __attribute__((nothrow)) __attribute__((const)) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern DispatchQueue dispatch_get_main_queue ();

//	// extern dispatch_queue_t _Nonnull dispatch_get_global_queue (long identifier, unsigned long flags) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((const)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern DispatchQueue dispatch_get_global_queue (nint identifier, nuint flags);

//	// extern dispatch_queue_attr_t _Nonnull dispatch_queue_attr_make_initially_inactive (dispatch_queue_attr_t _Nullable attr) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_queue_attr dispatch_queue_attr_make_initially_inactive ([NullAllowed] OS_dispatch_queue_attr attr);

//	// extern dispatch_queue_attr_t _Nonnull dispatch_queue_attr_make_with_autorelease_frequency (dispatch_queue_attr_t _Nullable attr, dispatch_autorelease_frequency_t frequency) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_queue_attr dispatch_queue_attr_make_with_autorelease_frequency ([NullAllowed] OS_dispatch_queue_attr attr, dispatch_autorelease_frequency_t frequency);

//	// extern dispatch_queue_attr_t _Nonnull dispatch_queue_attr_make_with_qos_class (dispatch_queue_attr_t _Nullable attr, dispatch_qos_class_t qos_class, int relative_priority) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_queue_attr dispatch_queue_attr_make_with_qos_class ([NullAllowed] OS_dispatch_queue_attr attr, dispatch_qos_class_t qos_class, int relative_priority);

//	// extern dispatch_queue_t _Nonnull dispatch_queue_create_with_target (const char * _Nullable label, dispatch_queue_attr_t _Nullable attr, dispatch_queue_t _Nullable target) asm("_dispatch_queue_create_with_target$V2") __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((ns_returns_retained)) __attribute__((malloc));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DispatchQueue dispatch_queue_create_with_target ([NullAllowed] sbyte* label, [NullAllowed] OS_dispatch_queue_attr attr, [NullAllowed] DispatchQueue target);

//	// extern dispatch_queue_t _Nonnull dispatch_queue_create (const char * _Nullable label, dispatch_queue_attr_t _Nullable attr) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((ns_returns_retained)) __attribute__((malloc));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DispatchQueue dispatch_queue_create ([NullAllowed] sbyte* label, [NullAllowed] OS_dispatch_queue_attr attr);

//	// extern const char * _Nonnull dispatch_queue_get_label (dispatch_queue_t _Nullable queue) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((pure)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* dispatch_queue_get_label ([NullAllowed] DispatchQueue queue);

//	// extern dispatch_qos_class_t dispatch_queue_get_qos_class (dispatch_queue_t _Nonnull queue, int * _Nullable relative_priority_ptr) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((warn_unused_result)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe dispatch_qos_class_t dispatch_queue_get_qos_class (DispatchQueue queue, [NullAllowed] int* relative_priority_ptr);

//	// extern void dispatch_set_target_queue (dispatch_object_t _Nonnull object, dispatch_queue_t _Nullable queue) __attribute__((nothrow)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_set_target_queue (DispatchObject @object, [NullAllowed] DispatchQueue queue);

//	// extern void dispatch_main () __attribute__((nothrow)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((nothrow));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_main ();

//	// extern void dispatch_after (dispatch_time_t when, dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_after (ulong when, DispatchQueue queue, dispatch_block_t block);

//	// extern void dispatch_after_f (dispatch_time_t when, dispatch_queue_t _Nonnull queue, void * _Nullable context, dispatch_function_t _Nonnull work) __attribute__((nothrow)) __attribute__((nonnull(3))) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_after_f (ulong when, DispatchQueue queue, [NullAllowed] void* context, dispatch_function_t* work);

//	// extern void dispatch_barrier_async (dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_barrier_async (DispatchQueue queue, dispatch_block_t block);

//	// extern void dispatch_barrier_async_f (dispatch_queue_t _Nonnull queue, void * _Nullable context, dispatch_function_t _Nonnull work) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_barrier_async_f (DispatchQueue queue, [NullAllowed] void* context, dispatch_function_t* work);

//	// extern void dispatch_barrier_sync (dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_barrier_sync (DispatchQueue queue, dispatch_block_t block);

//	// extern void dispatch_barrier_sync_f (dispatch_queue_t _Nonnull queue, void * _Nullable context, dispatch_function_t _Nonnull work) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_barrier_sync_f (DispatchQueue queue, [NullAllowed] void* context, dispatch_function_t* work);

//	// extern void dispatch_queue_set_specific (dispatch_queue_t _Nonnull queue, const void * _Nonnull key, void * _Nullable context, dispatch_function_t _Nullable destructor) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_queue_set_specific (DispatchQueue queue, void* key, [NullAllowed] void* context, [NullAllowed] dispatch_function_t* destructor);

//	// extern void * _Nullable dispatch_queue_get_specific (dispatch_queue_t _Nonnull queue, const void * _Nonnull key) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((pure)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* dispatch_queue_get_specific (DispatchQueue queue, void* key);

//	// extern void * _Nullable dispatch_get_specific (const void * _Nonnull key) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((pure)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* dispatch_get_specific (void* key);

//	// extern void dispatch_assert_queue (dispatch_queue_t _Nonnull queue) asm("_dispatch_assert_queue$V2") __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_assert_queue (DispatchQueue queue);

//	// extern void dispatch_assert_queue_barrier (dispatch_queue_t _Nonnull queue) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_assert_queue_barrier (DispatchQueue queue);

//	// extern void dispatch_assert_queue_not (dispatch_queue_t _Nonnull queue) asm("_dispatch_assert_queue_not$V2") __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12)));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_assert_queue_not (DispatchQueue queue);

//	// extern dispatch_block_t _Nonnull dispatch_block_create (dispatch_block_flags_t flags, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((ns_returns_retained)) __attribute__((nonnull(1)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern dispatch_block_t dispatch_block_create (dispatch_block_flags_t flags, dispatch_block_t block);

//	// extern dispatch_block_t _Nonnull dispatch_block_create_with_qos_class (dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((nonnull(3))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((ns_returns_retained)) __attribute__((nonnull(3)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern dispatch_block_t dispatch_block_create_with_qos_class (dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block);

//	// extern void dispatch_block_perform (dispatch_block_flags_t flags, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_block_perform (dispatch_block_flags_t flags, dispatch_block_t block);

//	// extern long dispatch_block_wait (dispatch_block_t _Nonnull block, dispatch_time_t timeout) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint dispatch_block_wait (dispatch_block_t block, ulong timeout);

//	// extern void dispatch_block_notify (dispatch_block_t _Nonnull block, dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull notification_block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_block_notify (dispatch_block_t block, DispatchQueue queue, dispatch_block_t notification_block);

//	// extern void dispatch_block_cancel (dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_block_cancel (dispatch_block_t block);

//	// extern long dispatch_block_testcancel (dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10)));
//	[Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint dispatch_block_testcancel (dispatch_block_t block);

//	// extern dispatch_source_t _Nonnull dispatch_source_create (dispatch_source_type_t _Nonnull type, uintptr_t handle, unsigned long mask, dispatch_queue_t _Nullable queue) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((ns_returns_retained)) __attribute__((malloc));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe OS_dispatch_source dispatch_source_create (dispatch_source_type_t* type, UIntPtr handle, nuint mask, [NullAllowed] DispatchQueue queue);

//	// extern void dispatch_source_set_event_handler (dispatch_source_t _Nonnull source, dispatch_block_t _Nullable handler) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_source_set_event_handler (OS_dispatch_source source, [NullAllowed] dispatch_block_t handler);

//	// extern void dispatch_source_set_event_handler_f (dispatch_source_t _Nonnull source, dispatch_function_t _Nullable handler) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_source_set_event_handler_f (OS_dispatch_source source, [NullAllowed] dispatch_function_t* handler);

//	// extern void dispatch_source_set_cancel_handler (dispatch_source_t _Nonnull source, dispatch_block_t _Nullable handler) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_source_set_cancel_handler (OS_dispatch_source source, [NullAllowed] dispatch_block_t handler);

//	// extern void dispatch_source_set_cancel_handler_f (dispatch_source_t _Nonnull source, dispatch_function_t _Nullable handler) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_source_set_cancel_handler_f (OS_dispatch_source source, [NullAllowed] dispatch_function_t* handler);

//	// extern void dispatch_source_cancel (dispatch_source_t _Nonnull source) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_source_cancel (OS_dispatch_source source);

//	// extern long dispatch_source_testcancel (dispatch_source_t _Nonnull source) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint dispatch_source_testcancel (OS_dispatch_source source);

//	// extern uintptr_t dispatch_source_get_handle (dispatch_source_t _Nonnull source) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIntPtr dispatch_source_get_handle (OS_dispatch_source source);

//	// extern unsigned long dispatch_source_get_mask (dispatch_source_t _Nonnull source) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint dispatch_source_get_mask (OS_dispatch_source source);

//	// extern unsigned long dispatch_source_get_data (dispatch_source_t _Nonnull source) __attribute__((nothrow)) __attribute__((pure)) __attribute__((warn_unused_result)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint dispatch_source_get_data (OS_dispatch_source source);

//	// extern void dispatch_source_merge_data (dispatch_source_t _Nonnull source, unsigned long value) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_source_merge_data (OS_dispatch_source source, nuint value);

//	// extern void dispatch_source_set_timer (dispatch_source_t _Nonnull source, dispatch_time_t start, uint64_t interval, uint64_t leeway) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_source_set_timer (OS_dispatch_source source, ulong start, ulong interval, ulong leeway);

//	// extern void dispatch_source_set_registration_handler (dispatch_source_t _Nonnull source, dispatch_block_t _Nullable handler) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_source_set_registration_handler (OS_dispatch_source source, [NullAllowed] dispatch_block_t handler);

//	// extern void dispatch_source_set_registration_handler_f (dispatch_source_t _Nonnull source, dispatch_function_t _Nullable handler) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_source_set_registration_handler_f (OS_dispatch_source source, [NullAllowed] dispatch_function_t* handler);

//	// extern dispatch_group_t _Nonnull dispatch_group_create () __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((ns_returns_retained)) __attribute__((malloc));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern DispatchGroup dispatch_group_create ();

//	// extern void dispatch_group_async (dispatch_group_t _Nonnull group, dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_group_async (DispatchGroup group, DispatchQueue queue, dispatch_block_t block);

//	// extern void dispatch_group_async_f (dispatch_group_t _Nonnull group, dispatch_queue_t _Nonnull queue, void * _Nullable context, dispatch_function_t _Nonnull work) __attribute__((nothrow)) __attribute__((nonnull(3))) __attribute__((nonnull(1))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_group_async_f (DispatchGroup group, DispatchQueue queue, [NullAllowed] void* context, dispatch_function_t* work);

//	// extern long dispatch_group_wait (dispatch_group_t _Nonnull group, dispatch_time_t timeout) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint dispatch_group_wait (DispatchGroup group, ulong timeout);

//	// extern void dispatch_group_notify (dispatch_group_t _Nonnull group, dispatch_queue_t _Nonnull queue, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_group_notify (DispatchGroup group, DispatchQueue queue, dispatch_block_t block);

//	// extern void dispatch_group_notify_f (dispatch_group_t _Nonnull group, dispatch_queue_t _Nonnull queue, void * _Nullable context, dispatch_function_t _Nonnull work) __attribute__((nothrow)) __attribute__((nonnull(3))) __attribute__((nonnull(1))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_group_notify_f (DispatchGroup group, DispatchQueue queue, [NullAllowed] void* context, dispatch_function_t* work);

//	// extern void dispatch_group_enter (dispatch_group_t _Nonnull group) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_group_enter (DispatchGroup group);

//	// extern void dispatch_group_leave (dispatch_group_t _Nonnull group) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_group_leave (DispatchGroup group);

//	// extern dispatch_semaphore_t _Nonnull dispatch_semaphore_create (long value) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((ns_returns_retained)) __attribute__((malloc));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_semaphore dispatch_semaphore_create (nint value);

//	// extern long dispatch_semaphore_wait (dispatch_semaphore_t _Nonnull dsema, dispatch_time_t timeout) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint dispatch_semaphore_wait (OS_dispatch_semaphore dsema, ulong timeout);

//	// extern long dispatch_semaphore_signal (dispatch_semaphore_t _Nonnull dsema) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint dispatch_semaphore_signal (OS_dispatch_semaphore dsema);

//	// extern void dispatch_once (dispatch_once_t * _Nonnull predicate, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_once (nint* predicate, dispatch_block_t block);

//	// void _dispatch_once (dispatch_once_t * _Nonnull predicate, dispatch_block_t _Nonnull block) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _dispatch_once (nint* predicate, dispatch_block_t block);

//	// extern long __builtin_expect (long, long) __attribute__((nothrow)) __attribute__((const));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint __builtin_expect (nint, nint);

//	// extern void __builtin_assume (_Bool) __attribute__((nothrow));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void __builtin_assume (bool);

//	// extern void dispatch_once_f (dispatch_once_t * _Nonnull predicate, void * _Nullable context, dispatch_function_t _Nonnull function) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void dispatch_once_f (nint* predicate, [NullAllowed] void* context, dispatch_function_t* function);

//	// void _dispatch_once_f (dispatch_once_t * _Nonnull predicate, void * _Nullable context, dispatch_function_t _Nonnull function) __attribute__((nothrow)) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void _dispatch_once_f (nint* predicate, [NullAllowed] void* context, dispatch_function_t* function);

//	// extern dispatch_data_t _Nonnull dispatch_data_create (const void * _Nonnull buffer, size_t size, dispatch_queue_t _Nullable queue, dispatch_block_t _Nullable destructor) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe OS_dispatch_data dispatch_data_create (void* buffer, nuint size, [NullAllowed] DispatchQueue queue, [NullAllowed] dispatch_block_t destructor);

//	// extern size_t dispatch_data_get_size (dispatch_data_t _Nonnull data) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((pure)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint dispatch_data_get_size (OS_dispatch_data data);

//	// extern dispatch_data_t _Nonnull dispatch_data_create_map (dispatch_data_t _Nonnull data, const void * _Nullable * _Nullable buffer_ptr, size_t * _Nullable size_ptr) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained)) __attribute__((nonnull(0)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe OS_dispatch_data dispatch_data_create_map (OS_dispatch_data data, [NullAllowed] void** buffer_ptr, [NullAllowed] nuint* size_ptr);

//	// extern dispatch_data_t _Nonnull dispatch_data_create_concat (dispatch_data_t _Nonnull data1, dispatch_data_t _Nonnull data2) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained)) __attribute__((nonnull()));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_data dispatch_data_create_concat (OS_dispatch_data data1, OS_dispatch_data data2);

//	// extern dispatch_data_t _Nonnull dispatch_data_create_subrange (dispatch_data_t _Nonnull data, size_t offset, size_t length) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained)) __attribute__((nonnull(0)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_data dispatch_data_create_subrange (OS_dispatch_data data, nuint offset, nuint length);

//	// extern _Bool dispatch_data_apply (dispatch_data_t _Nonnull data, dispatch_data_applier_t _Nonnull applier) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool dispatch_data_apply (OS_dispatch_data data, dispatch_data_applier_t applier);

//	// extern dispatch_data_t _Nonnull dispatch_data_copy_region (dispatch_data_t _Nonnull data, size_t location, size_t * _Nonnull offset_ptr) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained)) __attribute__((nonnull(2))) __attribute__((nonnull(0)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe OS_dispatch_data dispatch_data_copy_region (OS_dispatch_data data, nuint location, nuint* offset_ptr);

//	// extern void dispatch_read (dispatch_fd_t fd, size_t length, dispatch_queue_t _Nonnull queue, void (^ _Nonnull)(dispatch_data_t _Nonnull, int) handler) __attribute__((nothrow)) __attribute__((nonnull(3))) __attribute__((nonnull(2))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_read (int fd, nuint length, DispatchQueue queue, Action<OS_dispatch_data, int> handler);

//	// extern void dispatch_write (dispatch_fd_t fd, dispatch_data_t _Nonnull data, dispatch_queue_t _Nonnull queue, void (^ _Nonnull)(dispatch_data_t _Nullable, int) handler) __attribute__((nothrow)) __attribute__((nonnull(3))) __attribute__((nonnull(2))) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_write (int fd, OS_dispatch_data data, DispatchQueue queue, Action<OS_dispatch_data, int> handler);

//	// extern dispatch_io_t _Nonnull dispatch_io_create (dispatch_io_type_t type, dispatch_fd_t fd, dispatch_queue_t _Nonnull queue, void (^ _Nonnull)(int) cleanup_handler) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained)) __attribute__((malloc));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_io dispatch_io_create (nuint type, int fd, DispatchQueue queue, Action<int> cleanup_handler);

//	// extern dispatch_io_t _Nonnull dispatch_io_create_with_path (dispatch_io_type_t type, const char * _Nonnull path, int oflag, mode_t mode, dispatch_queue_t _Nonnull queue, void (^ _Nonnull)(int) cleanup_handler) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((nonnull(1)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe OS_dispatch_io dispatch_io_create_with_path (nuint type, sbyte* path, int oflag, ushort mode, DispatchQueue queue, Action<int> cleanup_handler);

//	// extern dispatch_io_t _Nonnull dispatch_io_create_with_io (dispatch_io_type_t type, dispatch_io_t _Nonnull io, dispatch_queue_t _Nonnull queue, void (^ _Nonnull)(int) cleanup_handler) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((nonnull(1))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((ns_returns_retained)) __attribute__((malloc)) __attribute__((nonnull(1)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern OS_dispatch_io dispatch_io_create_with_io (nuint type, OS_dispatch_io io, DispatchQueue queue, Action<int> cleanup_handler);

//	// extern void dispatch_io_read (dispatch_io_t _Nonnull channel, off_t offset, size_t length, dispatch_queue_t _Nonnull queue, dispatch_io_handler_t _Nonnull io_handler) __attribute__((nothrow)) __attribute__((nonnull(4))) __attribute__((nonnull(3))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_io_read (OS_dispatch_io channel, long offset, nuint length, DispatchQueue queue, dispatch_io_handler_t io_handler);

//	// extern void dispatch_io_write (dispatch_io_t _Nonnull channel, off_t offset, dispatch_data_t _Nonnull data, dispatch_queue_t _Nonnull queue, dispatch_io_handler_t _Nonnull io_handler) __attribute__((nothrow)) __attribute__((nonnull(4))) __attribute__((nonnull(3))) __attribute__((nonnull(2))) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_io_write (OS_dispatch_io channel, long offset, OS_dispatch_data data, DispatchQueue queue, dispatch_io_handler_t io_handler);

//	// extern void dispatch_io_close (dispatch_io_t _Nonnull channel, dispatch_io_close_flags_t flags) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_io_close (OS_dispatch_io channel, nuint flags);

//	// extern void dispatch_io_barrier (dispatch_io_t _Nonnull channel, dispatch_block_t _Nonnull barrier) __attribute__((nothrow)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_io_barrier (OS_dispatch_io channel, dispatch_block_t barrier);

//	// extern dispatch_fd_t dispatch_io_get_descriptor (dispatch_io_t _Nonnull channel) __attribute__((nothrow)) __attribute__((warn_unused_result)) __attribute__((nonnull())) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern int dispatch_io_get_descriptor (OS_dispatch_io channel);

//	// extern void dispatch_io_set_high_water (dispatch_io_t _Nonnull channel, size_t high_water) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_io_set_high_water (OS_dispatch_io channel, nuint high_water);

//	// extern void dispatch_io_set_low_water (dispatch_io_t _Nonnull channel, size_t low_water) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_io_set_low_water (OS_dispatch_io channel, nuint low_water);

//	// extern void dispatch_io_set_interval (dispatch_io_t _Nonnull channel, uint64_t interval, dispatch_io_interval_flags_t flags) __attribute__((nothrow)) __attribute__((nonnull(0))) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7)));
//	[Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void dispatch_io_set_interval (OS_dispatch_io channel, ulong interval, nuint flags);

//	// extern void __assert_rtn (const char *, const char *, int, const char *) __attribute__((disable_tail_calls));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void __assert_rtn (sbyte*, sbyte*, int, sbyte*);

//	// CFRange CFRangeMake (CFIndex loc, CFIndex len) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CFRange CFRangeMake (nint loc, nint len);

//	// extern CFRange __CFRangeMake (CFIndex loc, CFIndex len);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CFRange __CFRangeMake (nint loc, nint len);

//	// extern CFTypeID CFNullGetTypeID ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFNullGetTypeID ();

//	// extern CFTypeID CFAllocatorGetTypeID ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFAllocatorGetTypeID ();

//	// extern void CFAllocatorSetDefault (CFAllocatorRef allocator);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAllocatorSetDefault (CFAllocatorRef* allocator);

//	// extern CFAllocatorRef CFAllocatorGetDefault ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFAllocatorRef* CFAllocatorGetDefault ();

//	// extern CFAllocatorRef CFAllocatorCreate (CFAllocatorRef allocator, CFAllocatorContext *context);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFAllocatorRef* CFAllocatorCreate (CFAllocatorRef* allocator, CFAllocatorContext* context);

//	// extern void * CFAllocatorAllocate (CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFAllocatorAllocate (CFAllocatorRef* allocator, nint size, nuint hint);

//	// extern void * CFAllocatorReallocate (CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFAllocatorReallocate (CFAllocatorRef* allocator, void* ptr, nint newsize, nuint hint);

//	// extern void CFAllocatorDeallocate (CFAllocatorRef allocator, void *ptr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAllocatorDeallocate (CFAllocatorRef* allocator, void* ptr);

//	// extern CFIndex CFAllocatorGetPreferredSizeForSize (CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFAllocatorGetPreferredSizeForSize (CFAllocatorRef* allocator, nint size, nuint hint);

//	// extern void CFAllocatorGetContext (CFAllocatorRef allocator, CFAllocatorContext *context);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAllocatorGetContext (CFAllocatorRef* allocator, CFAllocatorContext* context);

//	// extern CFTypeID CFGetTypeID (CFTypeRef cf) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CFGetTypeID (void* cf);

//	// extern CFStringRef CFCopyTypeIDDescription (CFTypeID type_id) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFCopyTypeIDDescription (nuint type_id);

//	// extern CFTypeRef CFRetain (CFTypeRef cf) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFRetain (void* cf);

//	// extern void CFRelease (CFTypeRef cf) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRelease (void* cf);

//	// extern CFTypeRef CFAutorelease (CFTypeRef arg) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFAutorelease (void* arg);

//	// extern CFIndex CFGetRetainCount (CFTypeRef cf) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFGetRetainCount (void* cf);

//	// extern Boolean CFEqual (CFTypeRef cf1, CFTypeRef cf2) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFEqual (void* cf1, void* cf2);

//	// extern CFHashCode CFHash (CFTypeRef cf) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CFHash (void* cf);

//	// extern CFStringRef CFCopyDescription (CFTypeRef cf) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFCopyDescription (void* cf);

//	// extern CFAllocatorRef CFGetAllocator (CFTypeRef cf) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFAllocatorRef* CFGetAllocator (void* cf);

//	// extern CFTypeRef CFMakeCollectable (CFTypeRef cf);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFMakeCollectable (void* cf);

//	// extern CFTypeID CFArrayGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFArrayGetTypeID ();

//	// extern CFArrayRef CFArrayCreate (CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFArrayCreate (CFAllocatorRef* allocator, void** values, nint numValues, CFArrayCallBacks* callBacks);

//	// extern CFArrayRef CFArrayCreateCopy (CFAllocatorRef allocator, CFArrayRef theArray) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFArrayCreateCopy (CFAllocatorRef* allocator, CFArrayRef* theArray);

//	// extern CFMutableArrayRef CFArrayCreateMutable (CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableArrayRef* CFArrayCreateMutable (CFAllocatorRef* allocator, nint capacity, CFArrayCallBacks* callBacks);

//	// extern CFMutableArrayRef CFArrayCreateMutableCopy (CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableArrayRef* CFArrayCreateMutableCopy (CFAllocatorRef* allocator, nint capacity, CFArrayRef* theArray);

//	// extern CFIndex CFArrayGetCount (CFArrayRef theArray) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFArrayGetCount (CFArrayRef* theArray);

//	// extern CFIndex CFArrayGetCountOfValue (CFArrayRef theArray, CFRange range, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFArrayGetCountOfValue (CFArrayRef* theArray, CFRange range, void* value);

//	// extern Boolean CFArrayContainsValue (CFArrayRef theArray, CFRange range, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFArrayContainsValue (CFArrayRef* theArray, CFRange range, void* value);

//	// extern const void * CFArrayGetValueAtIndex (CFArrayRef theArray, CFIndex idx) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFArrayGetValueAtIndex (CFArrayRef* theArray, nint idx);

//	// extern void CFArrayGetValues (CFArrayRef theArray, CFRange range, const void **values) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayGetValues (CFArrayRef* theArray, CFRange range, void** values);

//	// extern void CFArrayApplyFunction (CFArrayRef theArray, CFRange range, CFArrayApplierFunction applier, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayApplyFunction (CFArrayRef* theArray, CFRange range, CFArrayApplierFunction* applier, void* context);

//	// extern CFIndex CFArrayGetFirstIndexOfValue (CFArrayRef theArray, CFRange range, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFArrayGetFirstIndexOfValue (CFArrayRef* theArray, CFRange range, void* value);

//	// extern CFIndex CFArrayGetLastIndexOfValue (CFArrayRef theArray, CFRange range, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFArrayGetLastIndexOfValue (CFArrayRef* theArray, CFRange range, void* value);

//	// extern CFIndex CFArrayBSearchValues (CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFArrayBSearchValues (CFArrayRef* theArray, CFRange range, void* value, CFComparatorFunction* comparator, void* context);

//	// extern void CFArrayAppendValue (CFMutableArrayRef theArray, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayAppendValue (CFMutableArrayRef* theArray, void* value);

//	// extern void CFArrayInsertValueAtIndex (CFMutableArrayRef theArray, CFIndex idx, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayInsertValueAtIndex (CFMutableArrayRef* theArray, nint idx, void* value);

//	// extern void CFArraySetValueAtIndex (CFMutableArrayRef theArray, CFIndex idx, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArraySetValueAtIndex (CFMutableArrayRef* theArray, nint idx, void* value);

//	// extern void CFArrayRemoveValueAtIndex (CFMutableArrayRef theArray, CFIndex idx) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayRemoveValueAtIndex (CFMutableArrayRef* theArray, nint idx);

//	// extern void CFArrayRemoveAllValues (CFMutableArrayRef theArray) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayRemoveAllValues (CFMutableArrayRef* theArray);

//	// extern void CFArrayReplaceValues (CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayReplaceValues (CFMutableArrayRef* theArray, CFRange range, void** newValues, nint newCount);

//	// extern void CFArrayExchangeValuesAtIndices (CFMutableArrayRef theArray, CFIndex idx1, CFIndex idx2) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayExchangeValuesAtIndices (CFMutableArrayRef* theArray, nint idx1, nint idx2);

//	// extern void CFArraySortValues (CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArraySortValues (CFMutableArrayRef* theArray, CFRange range, CFComparatorFunction* comparator, void* context);

//	// extern void CFArrayAppendArray (CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFArrayAppendArray (CFMutableArrayRef* theArray, CFArrayRef* otherArray, CFRange otherRange);

//	// extern CFTypeID CFBagGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFBagGetTypeID ();

//	// extern CFBagRef CFBagCreate (CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFBagCallBacks *callBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBagRef* CFBagCreate (CFAllocatorRef* allocator, void** values, nint numValues, CFBagCallBacks* callBacks);

//	// extern CFBagRef CFBagCreateCopy (CFAllocatorRef allocator, CFBagRef theBag) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBagRef* CFBagCreateCopy (CFAllocatorRef* allocator, CFBagRef* theBag);

//	// extern CFMutableBagRef CFBagCreateMutable (CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableBagRef* CFBagCreateMutable (CFAllocatorRef* allocator, nint capacity, CFBagCallBacks* callBacks);

//	// extern CFMutableBagRef CFBagCreateMutableCopy (CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableBagRef* CFBagCreateMutableCopy (CFAllocatorRef* allocator, nint capacity, CFBagRef* theBag);

//	// extern CFIndex CFBagGetCount (CFBagRef theBag) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBagGetCount (CFBagRef* theBag);

//	// extern CFIndex CFBagGetCountOfValue (CFBagRef theBag, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBagGetCountOfValue (CFBagRef* theBag, void* value);

//	// extern Boolean CFBagContainsValue (CFBagRef theBag, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBagContainsValue (CFBagRef* theBag, void* value);

//	// extern const void * CFBagGetValue (CFBagRef theBag, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFBagGetValue (CFBagRef* theBag, void* value);

//	// extern Boolean CFBagGetValueIfPresent (CFBagRef theBag, const void *candidate, const void **value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBagGetValueIfPresent (CFBagRef* theBag, void* candidate, void** value);

//	// extern void CFBagGetValues (CFBagRef theBag, const void **values) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBagGetValues (CFBagRef* theBag, void** values);

//	// extern void CFBagApplyFunction (CFBagRef theBag, CFBagApplierFunction applier, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBagApplyFunction (CFBagRef* theBag, CFBagApplierFunction* applier, void* context);

//	// extern void CFBagAddValue (CFMutableBagRef theBag, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBagAddValue (CFMutableBagRef* theBag, void* value);

//	// extern void CFBagReplaceValue (CFMutableBagRef theBag, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBagReplaceValue (CFMutableBagRef* theBag, void* value);

//	// extern void CFBagSetValue (CFMutableBagRef theBag, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBagSetValue (CFMutableBagRef* theBag, void* value);

//	// extern void CFBagRemoveValue (CFMutableBagRef theBag, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBagRemoveValue (CFMutableBagRef* theBag, void* value);

//	// extern void CFBagRemoveAllValues (CFMutableBagRef theBag) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBagRemoveAllValues (CFMutableBagRef* theBag);

//	// extern CFTypeID CFBinaryHeapGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFBinaryHeapGetTypeID ();

//	// extern CFBinaryHeapRef CFBinaryHeapCreate (CFAllocatorRef allocator, CFIndex capacity, const CFBinaryHeapCallBacks *callBacks, const CFBinaryHeapCompareContext *compareContext) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBinaryHeapRef* CFBinaryHeapCreate (CFAllocatorRef* allocator, nint capacity, CFBinaryHeapCallBacks* callBacks, CFBinaryHeapCompareContext* compareContext);

//	// extern CFBinaryHeapRef CFBinaryHeapCreateCopy (CFAllocatorRef allocator, CFIndex capacity, CFBinaryHeapRef heap) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBinaryHeapRef* CFBinaryHeapCreateCopy (CFAllocatorRef* allocator, nint capacity, CFBinaryHeapRef* heap);

//	// extern CFIndex CFBinaryHeapGetCount (CFBinaryHeapRef heap) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBinaryHeapGetCount (CFBinaryHeapRef* heap);

//	// extern CFIndex CFBinaryHeapGetCountOfValue (CFBinaryHeapRef heap, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBinaryHeapGetCountOfValue (CFBinaryHeapRef* heap, void* value);

//	// extern Boolean CFBinaryHeapContainsValue (CFBinaryHeapRef heap, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBinaryHeapContainsValue (CFBinaryHeapRef* heap, void* value);

//	// extern const void * CFBinaryHeapGetMinimum (CFBinaryHeapRef heap) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFBinaryHeapGetMinimum (CFBinaryHeapRef* heap);

//	// extern Boolean CFBinaryHeapGetMinimumIfPresent (CFBinaryHeapRef heap, const void **value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBinaryHeapGetMinimumIfPresent (CFBinaryHeapRef* heap, void** value);

//	// extern void CFBinaryHeapGetValues (CFBinaryHeapRef heap, const void **values) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBinaryHeapGetValues (CFBinaryHeapRef* heap, void** values);

//	// extern void CFBinaryHeapApplyFunction (CFBinaryHeapRef heap, CFBinaryHeapApplierFunction applier, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBinaryHeapApplyFunction (CFBinaryHeapRef* heap, CFBinaryHeapApplierFunction* applier, void* context);

//	// extern void CFBinaryHeapAddValue (CFBinaryHeapRef heap, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBinaryHeapAddValue (CFBinaryHeapRef* heap, void* value);

//	// extern void CFBinaryHeapRemoveMinimumValue (CFBinaryHeapRef heap) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBinaryHeapRemoveMinimumValue (CFBinaryHeapRef* heap);

//	// extern void CFBinaryHeapRemoveAllValues (CFBinaryHeapRef heap) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBinaryHeapRemoveAllValues (CFBinaryHeapRef* heap);

//	// extern CFTypeID CFBitVectorGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFBitVectorGetTypeID ();

//	// extern CFBitVectorRef CFBitVectorCreate (CFAllocatorRef allocator, const UInt8 *bytes, CFIndex numBits) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBitVectorRef* CFBitVectorCreate (CFAllocatorRef* allocator, byte* bytes, nint numBits);

//	// extern CFBitVectorRef CFBitVectorCreateCopy (CFAllocatorRef allocator, CFBitVectorRef bv) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBitVectorRef* CFBitVectorCreateCopy (CFAllocatorRef* allocator, CFBitVectorRef* bv);

//	// extern CFMutableBitVectorRef CFBitVectorCreateMutable (CFAllocatorRef allocator, CFIndex capacity) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableBitVectorRef* CFBitVectorCreateMutable (CFAllocatorRef* allocator, nint capacity);

//	// extern CFMutableBitVectorRef CFBitVectorCreateMutableCopy (CFAllocatorRef allocator, CFIndex capacity, CFBitVectorRef bv) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableBitVectorRef* CFBitVectorCreateMutableCopy (CFAllocatorRef* allocator, nint capacity, CFBitVectorRef* bv);

//	// extern CFIndex CFBitVectorGetCount (CFBitVectorRef bv) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBitVectorGetCount (CFBitVectorRef* bv);

//	// extern CFIndex CFBitVectorGetCountOfBit (CFBitVectorRef bv, CFRange range, CFBit value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBitVectorGetCountOfBit (CFBitVectorRef* bv, CFRange range, uint value);

//	// extern Boolean CFBitVectorContainsBit (CFBitVectorRef bv, CFRange range, CFBit value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBitVectorContainsBit (CFBitVectorRef* bv, CFRange range, uint value);

//	// extern CFBit CFBitVectorGetBitAtIndex (CFBitVectorRef bv, CFIndex idx) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CFBitVectorGetBitAtIndex (CFBitVectorRef* bv, nint idx);

//	// extern void CFBitVectorGetBits (CFBitVectorRef bv, CFRange range, UInt8 *bytes) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBitVectorGetBits (CFBitVectorRef* bv, CFRange range, byte* bytes);

//	// extern CFIndex CFBitVectorGetFirstIndexOfBit (CFBitVectorRef bv, CFRange range, CFBit value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBitVectorGetFirstIndexOfBit (CFBitVectorRef* bv, CFRange range, uint value);

//	// extern CFIndex CFBitVectorGetLastIndexOfBit (CFBitVectorRef bv, CFRange range, CFBit value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFBitVectorGetLastIndexOfBit (CFBitVectorRef* bv, CFRange range, uint value);

//	// extern void CFBitVectorSetCount (CFMutableBitVectorRef bv, CFIndex count) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBitVectorSetCount (CFMutableBitVectorRef* bv, nint count);

//	// extern void CFBitVectorFlipBitAtIndex (CFMutableBitVectorRef bv, CFIndex idx) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBitVectorFlipBitAtIndex (CFMutableBitVectorRef* bv, nint idx);

//	// extern void CFBitVectorFlipBits (CFMutableBitVectorRef bv, CFRange range) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBitVectorFlipBits (CFMutableBitVectorRef* bv, CFRange range);

//	// extern void CFBitVectorSetBitAtIndex (CFMutableBitVectorRef bv, CFIndex idx, CFBit value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBitVectorSetBitAtIndex (CFMutableBitVectorRef* bv, nint idx, uint value);

//	// extern void CFBitVectorSetBits (CFMutableBitVectorRef bv, CFRange range, CFBit value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBitVectorSetBits (CFMutableBitVectorRef* bv, CFRange range, uint value);

//	// extern void CFBitVectorSetAllBits (CFMutableBitVectorRef bv, CFBit value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBitVectorSetAllBits (CFMutableBitVectorRef* bv, uint value);

//	// CFByteOrder CFByteOrderGetCurrent () __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint CFByteOrderGetCurrent ();

//	// uint16_t CFSwapInt16 (uint16_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort CFSwapInt16 (ushort arg);

//	// uint32_t CFSwapInt32 (uint32_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFSwapInt32 (uint arg);

//	// uint64_t CFSwapInt64 (uint64_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong CFSwapInt64 (ulong arg);

//	// uint16_t CFSwapInt16BigToHost (uint16_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort CFSwapInt16BigToHost (ushort arg);

//	// uint32_t CFSwapInt32BigToHost (uint32_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFSwapInt32BigToHost (uint arg);

//	// uint64_t CFSwapInt64BigToHost (uint64_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong CFSwapInt64BigToHost (ulong arg);

//	// uint16_t CFSwapInt16HostToBig (uint16_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort CFSwapInt16HostToBig (ushort arg);

//	// uint32_t CFSwapInt32HostToBig (uint32_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFSwapInt32HostToBig (uint arg);

//	// uint64_t CFSwapInt64HostToBig (uint64_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong CFSwapInt64HostToBig (ulong arg);

//	// uint16_t CFSwapInt16LittleToHost (uint16_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort CFSwapInt16LittleToHost (ushort arg);

//	// uint32_t CFSwapInt32LittleToHost (uint32_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFSwapInt32LittleToHost (uint arg);

//	// uint64_t CFSwapInt64LittleToHost (uint64_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong CFSwapInt64LittleToHost (ulong arg);

//	// uint16_t CFSwapInt16HostToLittle (uint16_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort CFSwapInt16HostToLittle (ushort arg);

//	// uint32_t CFSwapInt32HostToLittle (uint32_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFSwapInt32HostToLittle (uint arg);

//	// uint64_t CFSwapInt64HostToLittle (uint64_t arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong CFSwapInt64HostToLittle (ulong arg);

//	// CFSwappedFloat32 CFConvertFloat32HostToSwapped (Float32 arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CFSwappedFloat32 CFConvertFloat32HostToSwapped (float arg);

//	// Float32 CFConvertFloat32SwappedToHost (CFSwappedFloat32 arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float CFConvertFloat32SwappedToHost (CFSwappedFloat32 arg);

//	// CFSwappedFloat64 CFConvertFloat64HostToSwapped (Float64 arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CFSwappedFloat64 CFConvertFloat64HostToSwapped (double arg);

//	// Float64 CFConvertFloat64SwappedToHost (CFSwappedFloat64 arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double CFConvertFloat64SwappedToHost (CFSwappedFloat64 arg);

//	// CFSwappedFloat32 CFConvertFloatHostToSwapped (float arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CFSwappedFloat32 CFConvertFloatHostToSwapped (float arg);

//	// float CFConvertFloatSwappedToHost (CFSwappedFloat32 arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float CFConvertFloatSwappedToHost (CFSwappedFloat32 arg);

//	// CFSwappedFloat64 CFConvertDoubleHostToSwapped (double arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CFSwappedFloat64 CFConvertDoubleHostToSwapped (double arg);

//	// double CFConvertDoubleSwappedToHost (CFSwappedFloat64 arg) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double CFConvertDoubleSwappedToHost (CFSwappedFloat64 arg);

//	// extern CFTypeID CFDictionaryGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFDictionaryGetTypeID ();

//	// extern CFDictionaryRef CFDictionaryCreate (CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFDictionaryCreate (CFAllocatorRef* allocator, void** keys, void** values, nint numValues, CFDictionaryKeyCallBacks* keyCallBacks, CFDictionaryValueCallBacks* valueCallBacks);

//	// extern CFDictionaryRef CFDictionaryCreateCopy (CFAllocatorRef allocator, CFDictionaryRef theDict) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFDictionaryCreateCopy (CFAllocatorRef* allocator, CFDictionaryRef* theDict);

//	// extern CFMutableDictionaryRef CFDictionaryCreateMutable (CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableDictionaryRef* CFDictionaryCreateMutable (CFAllocatorRef* allocator, nint capacity, CFDictionaryKeyCallBacks* keyCallBacks, CFDictionaryValueCallBacks* valueCallBacks);

//	// extern CFMutableDictionaryRef CFDictionaryCreateMutableCopy (CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableDictionaryRef* CFDictionaryCreateMutableCopy (CFAllocatorRef* allocator, nint capacity, CFDictionaryRef* theDict);

//	// extern CFIndex CFDictionaryGetCount (CFDictionaryRef theDict) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFDictionaryGetCount (CFDictionaryRef* theDict);

//	// extern CFIndex CFDictionaryGetCountOfKey (CFDictionaryRef theDict, const void *key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFDictionaryGetCountOfKey (CFDictionaryRef* theDict, void* key);

//	// extern CFIndex CFDictionaryGetCountOfValue (CFDictionaryRef theDict, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFDictionaryGetCountOfValue (CFDictionaryRef* theDict, void* value);

//	// extern Boolean CFDictionaryContainsKey (CFDictionaryRef theDict, const void *key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFDictionaryContainsKey (CFDictionaryRef* theDict, void* key);

//	// extern Boolean CFDictionaryContainsValue (CFDictionaryRef theDict, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFDictionaryContainsValue (CFDictionaryRef* theDict, void* value);

//	// extern const void * CFDictionaryGetValue (CFDictionaryRef theDict, const void *key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFDictionaryGetValue (CFDictionaryRef* theDict, void* key);

//	// extern Boolean CFDictionaryGetValueIfPresent (CFDictionaryRef theDict, const void *key, const void **value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFDictionaryGetValueIfPresent (CFDictionaryRef* theDict, void* key, void** value);

//	// extern void CFDictionaryGetKeysAndValues (CFDictionaryRef theDict, const void **keys, const void **values) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDictionaryGetKeysAndValues (CFDictionaryRef* theDict, void** keys, void** values);

//	// extern void CFDictionaryApplyFunction (CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDictionaryApplyFunction (CFDictionaryRef* theDict, CFDictionaryApplierFunction* applier, void* context);

//	// extern void CFDictionaryAddValue (CFMutableDictionaryRef theDict, const void *key, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDictionaryAddValue (CFMutableDictionaryRef* theDict, void* key, void* value);

//	// extern void CFDictionarySetValue (CFMutableDictionaryRef theDict, const void *key, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDictionarySetValue (CFMutableDictionaryRef* theDict, void* key, void* value);

//	// extern void CFDictionaryReplaceValue (CFMutableDictionaryRef theDict, const void *key, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDictionaryReplaceValue (CFMutableDictionaryRef* theDict, void* key, void* value);

//	// extern void CFDictionaryRemoveValue (CFMutableDictionaryRef theDict, const void *key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDictionaryRemoveValue (CFMutableDictionaryRef* theDict, void* key);

//	// extern void CFDictionaryRemoveAllValues (CFMutableDictionaryRef theDict) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDictionaryRemoveAllValues (CFMutableDictionaryRef* theDict);

//	// extern CFTypeID CFNotificationCenterGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFNotificationCenterGetTypeID ();

//	// extern CFNotificationCenterRef CFNotificationCenterGetLocalCenter () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNotificationCenterRef* CFNotificationCenterGetLocalCenter ();

//	// extern CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNotificationCenterRef* CFNotificationCenterGetDarwinNotifyCenter ();

//	// extern void CFNotificationCenterAddObserver (CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNotificationCenterAddObserver (CFNotificationCenterRef* center, void* observer, CFNotificationCallback* callBack, CFStringRef* name, void* @object, CFNotificationSuspensionBehavior suspensionBehavior);

//	// extern void CFNotificationCenterRemoveObserver (CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNotificationCenterRemoveObserver (CFNotificationCenterRef* center, void* observer, CFNotificationName* name, void* @object);

//	// extern void CFNotificationCenterRemoveEveryObserver (CFNotificationCenterRef center, const void *observer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNotificationCenterRemoveEveryObserver (CFNotificationCenterRef* center, void* observer);

//	// extern void CFNotificationCenterPostNotification (CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNotificationCenterPostNotification (CFNotificationCenterRef* center, CFNotificationName* name, void* @object, CFDictionaryRef* userInfo, byte deliverImmediately);

//	// extern void CFNotificationCenterPostNotificationWithOptions (CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, CFOptionFlags options) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNotificationCenterPostNotificationWithOptions (CFNotificationCenterRef* center, CFNotificationName* name, void* @object, CFDictionaryRef* userInfo, nuint options);

//	// extern CFTypeID CFLocaleGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFLocaleGetTypeID ();

//	// extern CFLocaleRef CFLocaleGetSystem () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleRef* CFLocaleGetSystem ();

//	// extern CFLocaleRef CFLocaleCopyCurrent () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleRef* CFLocaleCopyCurrent ();

//	// extern CFArrayRef CFLocaleCopyAvailableLocaleIdentifiers () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFLocaleCopyAvailableLocaleIdentifiers ();

//	// extern CFArrayRef CFLocaleCopyISOLanguageCodes () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFLocaleCopyISOLanguageCodes ();

//	// extern CFArrayRef CFLocaleCopyISOCountryCodes () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFLocaleCopyISOCountryCodes ();

//	// extern CFArrayRef CFLocaleCopyISOCurrencyCodes () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFLocaleCopyISOCurrencyCodes ();

//	// extern CFArrayRef CFLocaleCopyCommonISOCurrencyCodes () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFLocaleCopyCommonISOCurrencyCodes ();

//	// extern CFArrayRef CFLocaleCopyPreferredLanguages () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFLocaleCopyPreferredLanguages ();

//	// extern CFLocaleIdentifier CFLocaleCreateCanonicalLanguageIdentifierFromString (CFAllocatorRef allocator, CFStringRef localeIdentifier) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleIdentifier* CFLocaleCreateCanonicalLanguageIdentifierFromString (CFAllocatorRef* allocator, CFStringRef* localeIdentifier);

//	// extern CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromString (CFAllocatorRef allocator, CFStringRef localeIdentifier) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleIdentifier* CFLocaleCreateCanonicalLocaleIdentifierFromString (CFAllocatorRef* allocator, CFStringRef* localeIdentifier);

//	// extern CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes (CFAllocatorRef allocator, LangCode lcode, RegionCode rcode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleIdentifier* CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes (CFAllocatorRef* allocator, short lcode, short rcode);

//	// extern CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode (CFAllocatorRef allocator, uint32_t lcid) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleIdentifier* CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode (CFAllocatorRef* allocator, uint lcid);

//	// extern uint32_t CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier (CFLocaleIdentifier localeIdentifier) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier (CFLocaleIdentifier* localeIdentifier);

//	// extern CFLocaleLanguageDirection CFLocaleGetLanguageCharacterDirection (CFStringRef isoLangCode) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleLanguageDirection CFLocaleGetLanguageCharacterDirection (CFStringRef* isoLangCode);

//	// extern CFLocaleLanguageDirection CFLocaleGetLanguageLineDirection (CFStringRef isoLangCode) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleLanguageDirection CFLocaleGetLanguageLineDirection (CFStringRef* isoLangCode);

//	// extern CFDictionaryRef CFLocaleCreateComponentsFromLocaleIdentifier (CFAllocatorRef allocator, CFLocaleIdentifier localeID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFLocaleCreateComponentsFromLocaleIdentifier (CFAllocatorRef* allocator, CFLocaleIdentifier* localeID);

//	// extern CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromComponents (CFAllocatorRef allocator, CFDictionaryRef dictionary) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleIdentifier* CFLocaleCreateLocaleIdentifierFromComponents (CFAllocatorRef* allocator, CFDictionaryRef* dictionary);

//	// extern CFLocaleRef CFLocaleCreate (CFAllocatorRef allocator, CFLocaleIdentifier localeIdentifier) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleRef* CFLocaleCreate (CFAllocatorRef* allocator, CFLocaleIdentifier* localeIdentifier);

//	// extern CFLocaleRef CFLocaleCreateCopy (CFAllocatorRef allocator, CFLocaleRef locale) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleRef* CFLocaleCreateCopy (CFAllocatorRef* allocator, CFLocaleRef* locale);

//	// extern CFLocaleIdentifier CFLocaleGetIdentifier (CFLocaleRef locale) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleIdentifier* CFLocaleGetIdentifier (CFLocaleRef* locale);

//	// extern CFTypeRef CFLocaleGetValue (CFLocaleRef locale, CFLocaleKey key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFLocaleGetValue (CFLocaleRef* locale, CFLocaleKey* key);

//	// extern CFStringRef CFLocaleCopyDisplayNameForPropertyValue (CFLocaleRef displayLocale, CFLocaleKey key, CFStringRef value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFLocaleCopyDisplayNameForPropertyValue (CFLocaleRef* displayLocale, CFLocaleKey* key, CFStringRef* value);

//	// extern CFAbsoluteTime CFAbsoluteTimeGetCurrent () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double CFAbsoluteTimeGetCurrent ();

//	// extern CFTypeID CFDateGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFDateGetTypeID ();

//	// extern CFDateRef CFDateCreate (CFAllocatorRef allocator, CFAbsoluteTime at) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDateRef* CFDateCreate (CFAllocatorRef* allocator, double at);

//	// extern CFAbsoluteTime CFDateGetAbsoluteTime (CFDateRef theDate) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFDateGetAbsoluteTime (CFDateRef* theDate);

//	// extern CFTimeInterval CFDateGetTimeIntervalSinceDate (CFDateRef theDate, CFDateRef otherDate) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFDateGetTimeIntervalSinceDate (CFDateRef* theDate, CFDateRef* otherDate);

//	// extern CFComparisonResult CFDateCompare (CFDateRef theDate, CFDateRef otherDate, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFComparisonResult CFDateCompare (CFDateRef* theDate, CFDateRef* otherDate, void* context);

//	// extern Boolean CFGregorianDateIsValid (CFGregorianDate gdate, CFOptionFlags unitFlags) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern byte CFGregorianDateIsValid (CFGregorianDate gdate, nuint unitFlags);

//	// extern CFAbsoluteTime CFGregorianDateGetAbsoluteTime (CFGregorianDate gdate, CFTimeZoneRef tz) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFGregorianDateGetAbsoluteTime (CFGregorianDate gdate, CFTimeZoneRef* tz);

//	// extern CFGregorianDate CFAbsoluteTimeGetGregorianDate (CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFGregorianDate CFAbsoluteTimeGetGregorianDate (double at, CFTimeZoneRef* tz);

//	// extern CFAbsoluteTime CFAbsoluteTimeAddGregorianUnits (CFAbsoluteTime at, CFTimeZoneRef tz, CFGregorianUnits units) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFAbsoluteTimeAddGregorianUnits (double at, CFTimeZoneRef* tz, CFGregorianUnits units);

//	// extern CFGregorianUnits CFAbsoluteTimeGetDifferenceAsGregorianUnits (CFAbsoluteTime at1, CFAbsoluteTime at2, CFTimeZoneRef tz, CFOptionFlags unitFlags) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFGregorianUnits CFAbsoluteTimeGetDifferenceAsGregorianUnits (double at1, double at2, CFTimeZoneRef* tz, nuint unitFlags);

//	// extern SInt32 CFAbsoluteTimeGetDayOfWeek (CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFAbsoluteTimeGetDayOfWeek (double at, CFTimeZoneRef* tz);

//	// extern SInt32 CFAbsoluteTimeGetDayOfYear (CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFAbsoluteTimeGetDayOfYear (double at, CFTimeZoneRef* tz);

//	// extern SInt32 CFAbsoluteTimeGetWeekOfYear (CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios, introduced=2.0, deprecated=8.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFCalendar or NSCalendar API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFAbsoluteTimeGetWeekOfYear (double at, CFTimeZoneRef* tz);

//	// extern CFTypeID CFDataGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFDataGetTypeID ();

//	// extern CFDataRef CFDataCreate (CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFDataCreate (CFAllocatorRef* allocator, byte* bytes, nint length);

//	// extern CFDataRef CFDataCreateWithBytesNoCopy (CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFDataCreateWithBytesNoCopy (CFAllocatorRef* allocator, byte* bytes, nint length, CFAllocatorRef* bytesDeallocator);

//	// extern CFDataRef CFDataCreateCopy (CFAllocatorRef allocator, CFDataRef theData) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFDataCreateCopy (CFAllocatorRef* allocator, CFDataRef* theData);

//	// extern CFMutableDataRef CFDataCreateMutable (CFAllocatorRef allocator, CFIndex capacity) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableDataRef* CFDataCreateMutable (CFAllocatorRef* allocator, nint capacity);

//	// extern CFMutableDataRef CFDataCreateMutableCopy (CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableDataRef* CFDataCreateMutableCopy (CFAllocatorRef* allocator, nint capacity, CFDataRef* theData);

//	// extern CFIndex CFDataGetLength (CFDataRef theData) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFDataGetLength (CFDataRef* theData);

//	// extern const UInt8 * CFDataGetBytePtr (CFDataRef theData) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* CFDataGetBytePtr (CFDataRef* theData);

//	// extern UInt8 * CFDataGetMutableBytePtr (CFMutableDataRef theData) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* CFDataGetMutableBytePtr (CFMutableDataRef* theData);

//	// extern void CFDataGetBytes (CFDataRef theData, CFRange range, UInt8 *buffer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDataGetBytes (CFDataRef* theData, CFRange range, byte* buffer);

//	// extern void CFDataSetLength (CFMutableDataRef theData, CFIndex length) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDataSetLength (CFMutableDataRef* theData, nint length);

//	// extern void CFDataIncreaseLength (CFMutableDataRef theData, CFIndex extraLength) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDataIncreaseLength (CFMutableDataRef* theData, nint extraLength);

//	// extern void CFDataAppendBytes (CFMutableDataRef theData, const UInt8 *bytes, CFIndex length) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDataAppendBytes (CFMutableDataRef* theData, byte* bytes, nint length);

//	// extern void CFDataReplaceBytes (CFMutableDataRef theData, CFRange range, const UInt8 *newBytes, CFIndex newLength) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDataReplaceBytes (CFMutableDataRef* theData, CFRange range, byte* newBytes, nint newLength);

//	// extern void CFDataDeleteBytes (CFMutableDataRef theData, CFRange range) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDataDeleteBytes (CFMutableDataRef* theData, CFRange range);

//	// extern CFRange CFDataFind (CFDataRef theData, CFDataRef dataToFind, CFRange searchRange, CFDataSearchFlags compareOptions) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFDataFind (CFDataRef* theData, CFDataRef* dataToFind, CFRange searchRange, CFDataSearchFlags compareOptions);

//	// extern CFTypeID CFCharacterSetGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFCharacterSetGetTypeID ();

//	// extern CFCharacterSetRef CFCharacterSetGetPredefined (CFCharacterSetPredefinedSet theSetIdentifier) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCharacterSetRef* CFCharacterSetGetPredefined (CFCharacterSetPredefinedSet theSetIdentifier);

//	// extern CFCharacterSetRef CFCharacterSetCreateWithCharactersInRange (CFAllocatorRef alloc, CFRange theRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCharacterSetRef* CFCharacterSetCreateWithCharactersInRange (CFAllocatorRef* alloc, CFRange theRange);

//	// extern CFCharacterSetRef CFCharacterSetCreateWithCharactersInString (CFAllocatorRef alloc, CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCharacterSetRef* CFCharacterSetCreateWithCharactersInString (CFAllocatorRef* alloc, CFStringRef* theString);

//	// extern CFCharacterSetRef CFCharacterSetCreateWithBitmapRepresentation (CFAllocatorRef alloc, CFDataRef theData) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCharacterSetRef* CFCharacterSetCreateWithBitmapRepresentation (CFAllocatorRef* alloc, CFDataRef* theData);

//	// extern CFCharacterSetRef CFCharacterSetCreateInvertedSet (CFAllocatorRef alloc, CFCharacterSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCharacterSetRef* CFCharacterSetCreateInvertedSet (CFAllocatorRef* alloc, CFCharacterSetRef* theSet);

//	// extern Boolean CFCharacterSetIsSupersetOfSet (CFCharacterSetRef theSet, CFCharacterSetRef theOtherset) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCharacterSetIsSupersetOfSet (CFCharacterSetRef* theSet, CFCharacterSetRef* theOtherset);

//	// extern Boolean CFCharacterSetHasMemberInPlane (CFCharacterSetRef theSet, CFIndex thePlane) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCharacterSetHasMemberInPlane (CFCharacterSetRef* theSet, nint thePlane);

//	// extern CFMutableCharacterSetRef CFCharacterSetCreateMutable (CFAllocatorRef alloc) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableCharacterSetRef* CFCharacterSetCreateMutable (CFAllocatorRef* alloc);

//	// extern CFCharacterSetRef CFCharacterSetCreateCopy (CFAllocatorRef alloc, CFCharacterSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCharacterSetRef* CFCharacterSetCreateCopy (CFAllocatorRef* alloc, CFCharacterSetRef* theSet);

//	// extern CFMutableCharacterSetRef CFCharacterSetCreateMutableCopy (CFAllocatorRef alloc, CFCharacterSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableCharacterSetRef* CFCharacterSetCreateMutableCopy (CFAllocatorRef* alloc, CFCharacterSetRef* theSet);

//	// extern Boolean CFCharacterSetIsCharacterMember (CFCharacterSetRef theSet, UniChar theChar) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCharacterSetIsCharacterMember (CFCharacterSetRef* theSet, ushort theChar);

//	// extern Boolean CFCharacterSetIsLongCharacterMember (CFCharacterSetRef theSet, UTF32Char theChar) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCharacterSetIsLongCharacterMember (CFCharacterSetRef* theSet, uint theChar);

//	// extern CFDataRef CFCharacterSetCreateBitmapRepresentation (CFAllocatorRef alloc, CFCharacterSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFCharacterSetCreateBitmapRepresentation (CFAllocatorRef* alloc, CFCharacterSetRef* theSet);

//	// extern void CFCharacterSetAddCharactersInRange (CFMutableCharacterSetRef theSet, CFRange theRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCharacterSetAddCharactersInRange (CFMutableCharacterSetRef* theSet, CFRange theRange);

//	// extern void CFCharacterSetRemoveCharactersInRange (CFMutableCharacterSetRef theSet, CFRange theRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCharacterSetRemoveCharactersInRange (CFMutableCharacterSetRef* theSet, CFRange theRange);

//	// extern void CFCharacterSetAddCharactersInString (CFMutableCharacterSetRef theSet, CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCharacterSetAddCharactersInString (CFMutableCharacterSetRef* theSet, CFStringRef* theString);

//	// extern void CFCharacterSetRemoveCharactersInString (CFMutableCharacterSetRef theSet, CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCharacterSetRemoveCharactersInString (CFMutableCharacterSetRef* theSet, CFStringRef* theString);

//	// extern void CFCharacterSetUnion (CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCharacterSetUnion (CFMutableCharacterSetRef* theSet, CFCharacterSetRef* theOtherSet);

//	// extern void CFCharacterSetIntersect (CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCharacterSetIntersect (CFMutableCharacterSetRef* theSet, CFCharacterSetRef* theOtherSet);

//	// extern void CFCharacterSetInvert (CFMutableCharacterSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCharacterSetInvert (CFMutableCharacterSetRef* theSet);

//	// extern CFTypeID CFStringGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFStringGetTypeID ();

//	// extern CFStringRef CFStringCreateWithPascalString (CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithPascalString (CFAllocatorRef* alloc, byte* pStr, uint encoding);

//	// extern CFStringRef CFStringCreateWithCString (CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithCString (CFAllocatorRef* alloc, sbyte* cStr, uint encoding);

//	// extern CFStringRef CFStringCreateWithBytes (CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithBytes (CFAllocatorRef* alloc, byte* bytes, nint numBytes, uint encoding, byte isExternalRepresentation);

//	// extern CFStringRef CFStringCreateWithCharacters (CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithCharacters (CFAllocatorRef* alloc, ushort* chars, nint numChars);

//	// extern CFStringRef CFStringCreateWithPascalStringNoCopy (CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithPascalStringNoCopy (CFAllocatorRef* alloc, byte* pStr, uint encoding, CFAllocatorRef* contentsDeallocator);

//	// extern CFStringRef CFStringCreateWithCStringNoCopy (CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithCStringNoCopy (CFAllocatorRef* alloc, sbyte* cStr, uint encoding, CFAllocatorRef* contentsDeallocator);

//	// extern CFStringRef CFStringCreateWithBytesNoCopy (CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithBytesNoCopy (CFAllocatorRef* alloc, byte* bytes, nint numBytes, uint encoding, byte isExternalRepresentation, CFAllocatorRef* contentsDeallocator);

//	// extern CFStringRef CFStringCreateWithCharactersNoCopy (CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithCharactersNoCopy (CFAllocatorRef* alloc, ushort* chars, nint numChars, CFAllocatorRef* contentsDeallocator);

//	// extern CFStringRef CFStringCreateWithSubstring (CFAllocatorRef alloc, CFStringRef str, CFRange range) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithSubstring (CFAllocatorRef* alloc, CFStringRef* str, CFRange range);

//	// extern CFStringRef CFStringCreateCopy (CFAllocatorRef alloc, CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateCopy (CFAllocatorRef* alloc, CFStringRef* theString);

//	// extern CFStringRef CFStringCreateWithFormat (CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4))) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithFormat (CFAllocatorRef* alloc, CFDictionaryRef* formatOptions, CFStringRef* format, IntPtr varArgs);

//	// extern CFStringRef CFStringCreateWithFormatAndArguments (CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0))) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithFormatAndArguments (CFAllocatorRef* alloc, CFDictionaryRef* formatOptions, CFStringRef* format, sbyte* arguments);

//	// extern CFMutableStringRef CFStringCreateMutable (CFAllocatorRef alloc, CFIndex maxLength) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableStringRef* CFStringCreateMutable (CFAllocatorRef* alloc, nint maxLength);

//	// extern CFMutableStringRef CFStringCreateMutableCopy (CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableStringRef* CFStringCreateMutableCopy (CFAllocatorRef* alloc, nint maxLength, CFStringRef* theString);

//	// extern CFMutableStringRef CFStringCreateMutableWithExternalCharactersNoCopy (CFAllocatorRef alloc, UniChar *chars, CFIndex numChars, CFIndex capacity, CFAllocatorRef externalCharactersAllocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableStringRef* CFStringCreateMutableWithExternalCharactersNoCopy (CFAllocatorRef* alloc, ushort* chars, nint numChars, nint capacity, CFAllocatorRef* externalCharactersAllocator);

//	// extern CFIndex CFStringGetLength (CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFStringGetLength (CFStringRef* theString);

//	// extern UniChar CFStringGetCharacterAtIndex (CFStringRef theString, CFIndex idx) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort CFStringGetCharacterAtIndex (CFStringRef* theString, nint idx);

//	// extern void CFStringGetCharacters (CFStringRef theString, CFRange range, UniChar *buffer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringGetCharacters (CFStringRef* theString, CFRange range, ushort* buffer);

//	// extern Boolean CFStringGetPascalString (CFStringRef theString, StringPtr buffer, CFIndex bufferSize, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringGetPascalString (CFStringRef* theString, byte* buffer, nint bufferSize, uint encoding);

//	// extern Boolean CFStringGetCString (CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringGetCString (CFStringRef* theString, sbyte* buffer, nint bufferSize, uint encoding);

//	// extern ConstStringPtr CFStringGetPascalStringPtr (CFStringRef theString, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* CFStringGetPascalStringPtr (CFStringRef* theString, uint encoding);

//	// extern const char * CFStringGetCStringPtr (CFStringRef theString, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* CFStringGetCStringPtr (CFStringRef* theString, uint encoding);

//	// extern const UniChar * CFStringGetCharactersPtr (CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort* CFStringGetCharactersPtr (CFStringRef* theString);

//	// extern CFIndex CFStringGetBytes (CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFStringGetBytes (CFStringRef* theString, CFRange range, uint encoding, byte lossByte, byte isExternalRepresentation, byte* buffer, nint maxBufLen, nint* usedBufLen);

//	// extern CFStringRef CFStringCreateFromExternalRepresentation (CFAllocatorRef alloc, CFDataRef data, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateFromExternalRepresentation (CFAllocatorRef* alloc, CFDataRef* data, uint encoding);

//	// extern CFDataRef CFStringCreateExternalRepresentation (CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFStringCreateExternalRepresentation (CFAllocatorRef* alloc, CFStringRef* theString, uint encoding, byte lossByte);

//	// extern CFStringEncoding CFStringGetSmallestEncoding (CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CFStringGetSmallestEncoding (CFStringRef* theString);

//	// extern CFStringEncoding CFStringGetFastestEncoding (CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CFStringGetFastestEncoding (CFStringRef* theString);

//	// extern CFStringEncoding CFStringGetSystemEncoding () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFStringGetSystemEncoding ();

//	// extern CFIndex CFStringGetMaximumSizeForEncoding (CFIndex length, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint CFStringGetMaximumSizeForEncoding (nint length, uint encoding);

//	// extern Boolean CFStringGetFileSystemRepresentation (CFStringRef string, char *buffer, CFIndex maxBufLen) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringGetFileSystemRepresentation (CFStringRef* @string, sbyte* buffer, nint maxBufLen);

//	// extern CFIndex CFStringGetMaximumSizeOfFileSystemRepresentation (CFStringRef string) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFStringGetMaximumSizeOfFileSystemRepresentation (CFStringRef* @string);

//	// extern CFStringRef CFStringCreateWithFileSystemRepresentation (CFAllocatorRef alloc, const char *buffer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateWithFileSystemRepresentation (CFAllocatorRef* alloc, sbyte* buffer);

//	// extern CFComparisonResult CFStringCompareWithOptionsAndLocale (CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions, CFLocaleRef locale) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFComparisonResult CFStringCompareWithOptionsAndLocale (CFStringRef* theString1, CFStringRef* theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions, CFLocaleRef* locale);

//	// extern CFComparisonResult CFStringCompareWithOptions (CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFComparisonResult CFStringCompareWithOptions (CFStringRef* theString1, CFStringRef* theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions);

//	// extern CFComparisonResult CFStringCompare (CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFComparisonResult CFStringCompare (CFStringRef* theString1, CFStringRef* theString2, CFStringCompareFlags compareOptions);

//	// extern Boolean CFStringFindWithOptionsAndLocale (CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFLocaleRef locale, CFRange *result) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringFindWithOptionsAndLocale (CFStringRef* theString, CFStringRef* stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFLocaleRef* locale, CFRange* result);

//	// extern Boolean CFStringFindWithOptions (CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringFindWithOptions (CFStringRef* theString, CFStringRef* stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange* result);

//	// extern CFArrayRef CFStringCreateArrayWithFindResults (CFAllocatorRef alloc, CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags compareOptions) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFStringCreateArrayWithFindResults (CFAllocatorRef* alloc, CFStringRef* theString, CFStringRef* stringToFind, CFRange rangeToSearch, CFStringCompareFlags compareOptions);

//	// extern CFRange CFStringFind (CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFStringFind (CFStringRef* theString, CFStringRef* stringToFind, CFStringCompareFlags compareOptions);

//	// extern Boolean CFStringHasPrefix (CFStringRef theString, CFStringRef prefix) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringHasPrefix (CFStringRef* theString, CFStringRef* prefix);

//	// extern Boolean CFStringHasSuffix (CFStringRef theString, CFStringRef suffix) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringHasSuffix (CFStringRef* theString, CFStringRef* suffix);

//	// extern CFRange CFStringGetRangeOfComposedCharactersAtIndex (CFStringRef theString, CFIndex theIndex) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFStringGetRangeOfComposedCharactersAtIndex (CFStringRef* theString, nint theIndex);

//	// extern Boolean CFStringFindCharacterFromSet (CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringFindCharacterFromSet (CFStringRef* theString, CFCharacterSetRef* theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange* result);

//	// extern void CFStringGetLineBounds (CFStringRef theString, CFRange range, CFIndex *lineBeginIndex, CFIndex *lineEndIndex, CFIndex *contentsEndIndex) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringGetLineBounds (CFStringRef* theString, CFRange range, nint* lineBeginIndex, nint* lineEndIndex, nint* contentsEndIndex);

//	// extern void CFStringGetParagraphBounds (CFStringRef string, CFRange range, CFIndex *parBeginIndex, CFIndex *parEndIndex, CFIndex *contentsEndIndex) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringGetParagraphBounds (CFStringRef* @string, CFRange range, nint* parBeginIndex, nint* parEndIndex, nint* contentsEndIndex);

//	// extern CFIndex CFStringGetHyphenationLocationBeforeIndex (CFStringRef string, CFIndex location, CFRange limitRange, CFOptionFlags options, CFLocaleRef locale, UTF32Char *character) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.2))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (4,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFStringGetHyphenationLocationBeforeIndex (CFStringRef* @string, nint location, CFRange limitRange, nuint options, CFLocaleRef* locale, uint* character);

//	// extern Boolean CFStringIsHyphenationAvailableForLocale (CFLocaleRef locale) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (4,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringIsHyphenationAvailableForLocale (CFLocaleRef* locale);

//	// extern CFStringRef CFStringCreateByCombiningStrings (CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringCreateByCombiningStrings (CFAllocatorRef* alloc, CFArrayRef* theArray, CFStringRef* separatorString);

//	// extern CFArrayRef CFStringCreateArrayBySeparatingStrings (CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFStringCreateArrayBySeparatingStrings (CFAllocatorRef* alloc, CFStringRef* theString, CFStringRef* separatorString);

//	// extern SInt32 CFStringGetIntValue (CFStringRef str) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFStringGetIntValue (CFStringRef* str);

//	// extern double CFStringGetDoubleValue (CFStringRef str) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFStringGetDoubleValue (CFStringRef* str);

//	// extern void CFStringAppend (CFMutableStringRef theString, CFStringRef appendedString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringAppend (CFMutableStringRef* theString, CFStringRef* appendedString);

//	// extern void CFStringAppendCharacters (CFMutableStringRef theString, const UniChar *chars, CFIndex numChars) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringAppendCharacters (CFMutableStringRef* theString, ushort* chars, nint numChars);

//	// extern void CFStringAppendPascalString (CFMutableStringRef theString, ConstStr255Param pStr, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringAppendPascalString (CFMutableStringRef* theString, byte* pStr, uint encoding);

//	// extern void CFStringAppendCString (CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringAppendCString (CFMutableStringRef* theString, sbyte* cStr, uint encoding);

//	// extern void CFStringAppendFormat (CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4))) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringAppendFormat (CFMutableStringRef* theString, CFDictionaryRef* formatOptions, CFStringRef* format, IntPtr varArgs);

//	// extern void CFStringAppendFormatAndArguments (CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0))) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringAppendFormatAndArguments (CFMutableStringRef* theString, CFDictionaryRef* formatOptions, CFStringRef* format, sbyte* arguments);

//	// extern void CFStringInsert (CFMutableStringRef str, CFIndex idx, CFStringRef insertedStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringInsert (CFMutableStringRef* str, nint idx, CFStringRef* insertedStr);

//	// extern void CFStringDelete (CFMutableStringRef theString, CFRange range) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringDelete (CFMutableStringRef* theString, CFRange range);

//	// extern void CFStringReplace (CFMutableStringRef theString, CFRange range, CFStringRef replacement) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringReplace (CFMutableStringRef* theString, CFRange range, CFStringRef* replacement);

//	// extern void CFStringReplaceAll (CFMutableStringRef theString, CFStringRef replacement) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringReplaceAll (CFMutableStringRef* theString, CFStringRef* replacement);

//	// extern CFIndex CFStringFindAndReplace (CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFStringFindAndReplace (CFMutableStringRef* theString, CFStringRef* stringToFind, CFStringRef* replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions);

//	// extern void CFStringSetExternalCharactersNoCopy (CFMutableStringRef theString, UniChar *chars, CFIndex length, CFIndex capacity) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringSetExternalCharactersNoCopy (CFMutableStringRef* theString, ushort* chars, nint length, nint capacity);

//	// extern void CFStringPad (CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringPad (CFMutableStringRef* theString, CFStringRef* padString, nint length, nint indexIntoPad);

//	// extern void CFStringTrim (CFMutableStringRef theString, CFStringRef trimString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringTrim (CFMutableStringRef* theString, CFStringRef* trimString);

//	// extern void CFStringTrimWhitespace (CFMutableStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringTrimWhitespace (CFMutableStringRef* theString);

//	// extern void CFStringLowercase (CFMutableStringRef theString, CFLocaleRef locale) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringLowercase (CFMutableStringRef* theString, CFLocaleRef* locale);

//	// extern void CFStringUppercase (CFMutableStringRef theString, CFLocaleRef locale) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringUppercase (CFMutableStringRef* theString, CFLocaleRef* locale);

//	// extern void CFStringCapitalize (CFMutableStringRef theString, CFLocaleRef locale) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringCapitalize (CFMutableStringRef* theString, CFLocaleRef* locale);

//	// extern void CFStringNormalize (CFMutableStringRef theString, CFStringNormalizationForm theForm) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringNormalize (CFMutableStringRef* theString, CFStringNormalizationForm theForm);

//	// extern void CFStringFold (CFMutableStringRef theString, CFStringCompareFlags theFlags, CFLocaleRef theLocale) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringFold (CFMutableStringRef* theString, CFStringCompareFlags theFlags, CFLocaleRef* theLocale);

//	// extern Boolean CFStringTransform (CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringTransform (CFMutableStringRef* @string, CFRange* range, CFStringRef* transform, byte reverse);

//	// extern Boolean CFStringIsEncodingAvailable (CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern byte CFStringIsEncodingAvailable (uint encoding);

//	// extern const CFStringEncoding * CFStringGetListOfAvailableEncodings () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint* CFStringGetListOfAvailableEncodings ();

//	// extern CFStringRef CFStringGetNameOfEncoding (CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringGetNameOfEncoding (uint encoding);

//	// extern unsigned long CFStringConvertEncodingToNSStringEncoding (CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFStringConvertEncodingToNSStringEncoding (uint encoding);

//	// extern CFStringEncoding CFStringConvertNSStringEncodingToEncoding (unsigned long encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFStringConvertNSStringEncodingToEncoding (nuint encoding);

//	// extern UInt32 CFStringConvertEncodingToWindowsCodepage (CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFStringConvertEncodingToWindowsCodepage (uint encoding);

//	// extern CFStringEncoding CFStringConvertWindowsCodepageToEncoding (UInt32 codepage) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFStringConvertWindowsCodepageToEncoding (uint codepage);

//	// extern CFStringEncoding CFStringConvertIANACharSetNameToEncoding (CFStringRef theString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CFStringConvertIANACharSetNameToEncoding (CFStringRef* theString);

//	// extern CFStringRef CFStringConvertEncodingToIANACharSetName (CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringConvertEncodingToIANACharSetName (uint encoding);

//	// extern CFStringEncoding CFStringGetMostCompatibleMacStringEncoding (CFStringEncoding encoding) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFStringGetMostCompatibleMacStringEncoding (uint encoding);

//	// void CFStringInitInlineBuffer (CFStringRef str, CFStringInlineBuffer *buf, CFRange range) __attribute__((always_inline)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringInitInlineBuffer (CFStringRef* str, CFStringInlineBuffer* buf, CFRange range);

//	// UniChar CFStringGetCharacterFromInlineBuffer (CFStringInlineBuffer *buf, CFIndex idx) __attribute__((always_inline)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort CFStringGetCharacterFromInlineBuffer (CFStringInlineBuffer* buf, nint idx);

//	// Boolean CFStringIsSurrogateHighCharacter (UniChar character) __attribute__((always_inline)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern byte CFStringIsSurrogateHighCharacter (ushort character);

//	// Boolean CFStringIsSurrogateLowCharacter (UniChar character) __attribute__((always_inline)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern byte CFStringIsSurrogateLowCharacter (ushort character);

//	// UTF32Char CFStringGetLongCharacterForSurrogatePair (UniChar surrogateHigh, UniChar surrogateLow) __attribute__((always_inline)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CFStringGetLongCharacterForSurrogatePair (ushort surrogateHigh, ushort surrogateLow);

//	// Boolean CFStringGetSurrogatePairForLongCharacter (UTF32Char character, UniChar *surrogates) __attribute__((always_inline)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFStringGetSurrogatePairForLongCharacter (uint character, ushort* surrogates);

//	// extern void CFShow (CFTypeRef obj) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFShow (void* obj);

//	// extern void CFShowStr (CFStringRef str) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFShowStr (CFStringRef* str);

//	// extern CFStringRef __CFStringMakeConstantString (const char *cStr) __attribute__((format_arg(1))) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* __CFStringMakeConstantString (sbyte* cStr);

//	// extern CFTypeID CFTimeZoneGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFTimeZoneGetTypeID ();

//	// extern CFTimeZoneRef CFTimeZoneCopySystem () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTimeZoneRef* CFTimeZoneCopySystem ();

//	// extern void CFTimeZoneResetSystem () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void CFTimeZoneResetSystem ();

//	// extern CFTimeZoneRef CFTimeZoneCopyDefault () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTimeZoneRef* CFTimeZoneCopyDefault ();

//	// extern void CFTimeZoneSetDefault (CFTimeZoneRef tz) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTimeZoneSetDefault (CFTimeZoneRef* tz);

//	// extern CFArrayRef CFTimeZoneCopyKnownNames () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFTimeZoneCopyKnownNames ();

//	// extern CFDictionaryRef CFTimeZoneCopyAbbreviationDictionary () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFTimeZoneCopyAbbreviationDictionary ();

//	// extern void CFTimeZoneSetAbbreviationDictionary (CFDictionaryRef dict) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTimeZoneSetAbbreviationDictionary (CFDictionaryRef* dict);

//	// extern CFTimeZoneRef CFTimeZoneCreate (CFAllocatorRef allocator, CFStringRef name, CFDataRef data) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTimeZoneRef* CFTimeZoneCreate (CFAllocatorRef* allocator, CFStringRef* name, CFDataRef* data);

//	// extern CFTimeZoneRef CFTimeZoneCreateWithTimeIntervalFromGMT (CFAllocatorRef allocator, CFTimeInterval ti) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTimeZoneRef* CFTimeZoneCreateWithTimeIntervalFromGMT (CFAllocatorRef* allocator, double ti);

//	// extern CFTimeZoneRef CFTimeZoneCreateWithName (CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTimeZoneRef* CFTimeZoneCreateWithName (CFAllocatorRef* allocator, CFStringRef* name, byte tryAbbrev);

//	// extern CFStringRef CFTimeZoneGetName (CFTimeZoneRef tz) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFTimeZoneGetName (CFTimeZoneRef* tz);

//	// extern CFDataRef CFTimeZoneGetData (CFTimeZoneRef tz) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFTimeZoneGetData (CFTimeZoneRef* tz);

//	// extern CFTimeInterval CFTimeZoneGetSecondsFromGMT (CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFTimeZoneGetSecondsFromGMT (CFTimeZoneRef* tz, double at);

//	// extern CFStringRef CFTimeZoneCopyAbbreviation (CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFTimeZoneCopyAbbreviation (CFTimeZoneRef* tz, double at);

//	// extern Boolean CFTimeZoneIsDaylightSavingTime (CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFTimeZoneIsDaylightSavingTime (CFTimeZoneRef* tz, double at);

//	// extern CFTimeInterval CFTimeZoneGetDaylightSavingTimeOffset (CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFTimeZoneGetDaylightSavingTimeOffset (CFTimeZoneRef* tz, double at);

//	// extern CFAbsoluteTime CFTimeZoneGetNextDaylightSavingTimeTransition (CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFTimeZoneGetNextDaylightSavingTimeTransition (CFTimeZoneRef* tz, double at);

//	// extern CFStringRef CFTimeZoneCopyLocalizedName (CFTimeZoneRef tz, CFTimeZoneNameStyle style, CFLocaleRef locale) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFTimeZoneCopyLocalizedName (CFTimeZoneRef* tz, CFTimeZoneNameStyle style, CFLocaleRef* locale);

//	// extern CFTypeID CFCalendarGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFCalendarGetTypeID ();

//	// extern CFCalendarRef CFCalendarCopyCurrent () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCalendarRef* CFCalendarCopyCurrent ();

//	// extern CFCalendarRef CFCalendarCreateWithIdentifier (CFAllocatorRef allocator, CFCalendarIdentifier identifier) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCalendarRef* CFCalendarCreateWithIdentifier (CFAllocatorRef* allocator, CFCalendarIdentifier* identifier);

//	// extern CFCalendarIdentifier CFCalendarGetIdentifier (CFCalendarRef calendar) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCalendarIdentifier* CFCalendarGetIdentifier (CFCalendarRef* calendar);

//	// extern CFLocaleRef CFCalendarCopyLocale (CFCalendarRef calendar) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleRef* CFCalendarCopyLocale (CFCalendarRef* calendar);

//	// extern void CFCalendarSetLocale (CFCalendarRef calendar, CFLocaleRef locale) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCalendarSetLocale (CFCalendarRef* calendar, CFLocaleRef* locale);

//	// extern CFTimeZoneRef CFCalendarCopyTimeZone (CFCalendarRef calendar) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTimeZoneRef* CFCalendarCopyTimeZone (CFCalendarRef* calendar);

//	// extern void CFCalendarSetTimeZone (CFCalendarRef calendar, CFTimeZoneRef tz) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCalendarSetTimeZone (CFCalendarRef* calendar, CFTimeZoneRef* tz);

//	// extern CFIndex CFCalendarGetFirstWeekday (CFCalendarRef calendar) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFCalendarGetFirstWeekday (CFCalendarRef* calendar);

//	// extern void CFCalendarSetFirstWeekday (CFCalendarRef calendar, CFIndex wkdy) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCalendarSetFirstWeekday (CFCalendarRef* calendar, nint wkdy);

//	// extern CFIndex CFCalendarGetMinimumDaysInFirstWeek (CFCalendarRef calendar) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFCalendarGetMinimumDaysInFirstWeek (CFCalendarRef* calendar);

//	// extern void CFCalendarSetMinimumDaysInFirstWeek (CFCalendarRef calendar, CFIndex mwd) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFCalendarSetMinimumDaysInFirstWeek (CFCalendarRef* calendar, nint mwd);

//	// extern CFRange CFCalendarGetMinimumRangeOfUnit (CFCalendarRef calendar, CFCalendarUnit unit) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFCalendarGetMinimumRangeOfUnit (CFCalendarRef* calendar, CFCalendarUnit unit);

//	// extern CFRange CFCalendarGetMaximumRangeOfUnit (CFCalendarRef calendar, CFCalendarUnit unit) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFCalendarGetMaximumRangeOfUnit (CFCalendarRef* calendar, CFCalendarUnit unit);

//	// extern CFRange CFCalendarGetRangeOfUnit (CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFCalendarGetRangeOfUnit (CFCalendarRef* calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, double at);

//	// extern CFIndex CFCalendarGetOrdinalityOfUnit (CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFCalendarGetOrdinalityOfUnit (CFCalendarRef* calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, double at);

//	// extern Boolean CFCalendarGetTimeRangeOfUnit (CFCalendarRef calendar, CFCalendarUnit unit, CFAbsoluteTime at, CFAbsoluteTime *startp, CFTimeInterval *tip) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCalendarGetTimeRangeOfUnit (CFCalendarRef* calendar, CFCalendarUnit unit, double at, double* startp, double* tip);

//	// extern Boolean CFCalendarComposeAbsoluteTime (CFCalendarRef calendar, CFAbsoluteTime *at, const char *componentDesc, ...) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCalendarComposeAbsoluteTime (CFCalendarRef* calendar, double* at, sbyte* componentDesc, IntPtr varArgs);

//	// extern Boolean CFCalendarDecomposeAbsoluteTime (CFCalendarRef calendar, CFAbsoluteTime at, const char *componentDesc, ...) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCalendarDecomposeAbsoluteTime (CFCalendarRef* calendar, double at, sbyte* componentDesc, IntPtr varArgs);

//	// extern Boolean CFCalendarAddComponents (CFCalendarRef calendar, CFAbsoluteTime *at, CFOptionFlags options, const char *componentDesc, ...) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCalendarAddComponents (CFCalendarRef* calendar, double* at, nuint options, sbyte* componentDesc, IntPtr varArgs);

//	// extern Boolean CFCalendarGetComponentDifference (CFCalendarRef calendar, CFAbsoluteTime startingAT, CFAbsoluteTime resultAT, CFOptionFlags options, const char *componentDesc, ...) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFCalendarGetComponentDifference (CFCalendarRef* calendar, double startingAT, double resultAT, nuint options, sbyte* componentDesc, IntPtr varArgs);

//	// extern CFStringRef CFDateFormatterCreateDateFormatFromTemplate (CFAllocatorRef allocator, CFStringRef tmplate, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFDateFormatterCreateDateFormatFromTemplate (CFAllocatorRef* allocator, CFStringRef* tmplate, nuint options, CFLocaleRef* locale);

//	// extern CFTypeID CFDateFormatterGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFDateFormatterGetTypeID ();

//	// extern CFDateFormatterRef CFDateFormatterCreateISO8601Formatter (CFAllocatorRef allocator, CFISO8601DateFormatOptions formatOptions) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDateFormatterRef* CFDateFormatterCreateISO8601Formatter (CFAllocatorRef* allocator, CFISO8601DateFormatOptions formatOptions);

//	// extern CFDateFormatterRef CFDateFormatterCreate (CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDateFormatterRef* CFDateFormatterCreate (CFAllocatorRef* allocator, CFLocaleRef* locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);

//	// extern CFLocaleRef CFDateFormatterGetLocale (CFDateFormatterRef formatter) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleRef* CFDateFormatterGetLocale (CFDateFormatterRef* formatter);

//	// extern CFDateFormatterStyle CFDateFormatterGetDateStyle (CFDateFormatterRef formatter) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDateFormatterStyle CFDateFormatterGetDateStyle (CFDateFormatterRef* formatter);

//	// extern CFDateFormatterStyle CFDateFormatterGetTimeStyle (CFDateFormatterRef formatter) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDateFormatterStyle CFDateFormatterGetTimeStyle (CFDateFormatterRef* formatter);

//	// extern CFStringRef CFDateFormatterGetFormat (CFDateFormatterRef formatter) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFDateFormatterGetFormat (CFDateFormatterRef* formatter);

//	// extern void CFDateFormatterSetFormat (CFDateFormatterRef formatter, CFStringRef formatString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDateFormatterSetFormat (CFDateFormatterRef* formatter, CFStringRef* formatString);

//	// extern CFStringRef CFDateFormatterCreateStringWithDate (CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFDateFormatterCreateStringWithDate (CFAllocatorRef* allocator, CFDateFormatterRef* formatter, CFDateRef* date);

//	// extern CFStringRef CFDateFormatterCreateStringWithAbsoluteTime (CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFDateFormatterCreateStringWithAbsoluteTime (CFAllocatorRef* allocator, CFDateFormatterRef* formatter, double at);

//	// extern CFDateRef CFDateFormatterCreateDateFromString (CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDateRef* CFDateFormatterCreateDateFromString (CFAllocatorRef* allocator, CFDateFormatterRef* formatter, CFStringRef* @string, CFRange* rangep);

//	// extern Boolean CFDateFormatterGetAbsoluteTimeFromString (CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep, CFAbsoluteTime *atp) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFDateFormatterGetAbsoluteTimeFromString (CFDateFormatterRef* formatter, CFStringRef* @string, CFRange* rangep, double* atp);

//	// extern void CFDateFormatterSetProperty (CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFDateFormatterSetProperty (CFDateFormatterRef* formatter, CFStringRef* key, void* value);

//	// extern CFTypeRef CFDateFormatterCopyProperty (CFDateFormatterRef formatter, CFDateFormatterKey key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFDateFormatterCopyProperty (CFDateFormatterRef* formatter, CFDateFormatterKey* key);

//	// extern CFTypeID CFErrorGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFErrorGetTypeID ();

//	// extern CFErrorRef CFErrorCreate (CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFErrorRef* CFErrorCreate (CFAllocatorRef* allocator, CFErrorDomain* domain, nint code, CFDictionaryRef* userInfo);

//	// extern CFErrorRef CFErrorCreateWithUserInfoKeysAndValues (CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, const void *const *userInfoKeys, const void *const *userInfoValues, CFIndex numUserInfoValues) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFErrorRef* CFErrorCreateWithUserInfoKeysAndValues (CFAllocatorRef* allocator, CFErrorDomain* domain, nint code, void** userInfoKeys, void** userInfoValues, nint numUserInfoValues);

//	// extern CFErrorDomain CFErrorGetDomain (CFErrorRef err) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFErrorDomain* CFErrorGetDomain (CFErrorRef* err);

//	// extern CFIndex CFErrorGetCode (CFErrorRef err) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFErrorGetCode (CFErrorRef* err);

//	// extern CFDictionaryRef CFErrorCopyUserInfo (CFErrorRef err) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFErrorCopyUserInfo (CFErrorRef* err);

//	// extern CFStringRef CFErrorCopyDescription (CFErrorRef err) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFErrorCopyDescription (CFErrorRef* err);

//	// extern CFStringRef CFErrorCopyFailureReason (CFErrorRef err) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFErrorCopyFailureReason (CFErrorRef* err);

//	// extern CFStringRef CFErrorCopyRecoverySuggestion (CFErrorRef err) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFErrorCopyRecoverySuggestion (CFErrorRef* err);

//	// extern CFTypeID CFBooleanGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFBooleanGetTypeID ();

//	// extern Boolean CFBooleanGetValue (CFBooleanRef boolean) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBooleanGetValue (CFBooleanRef* boolean);

//	// extern CFTypeID CFNumberGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFNumberGetTypeID ();

//	// extern CFNumberRef CFNumberCreate (CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNumberRef* CFNumberCreate (CFAllocatorRef* allocator, CFNumberType theType, void* valuePtr);

//	// extern CFNumberType CFNumberGetType (CFNumberRef number) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNumberType CFNumberGetType (CFNumberRef* number);

//	// extern CFIndex CFNumberGetByteSize (CFNumberRef number) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFNumberGetByteSize (CFNumberRef* number);

//	// extern Boolean CFNumberIsFloatType (CFNumberRef number) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNumberIsFloatType (CFNumberRef* number);

//	// extern Boolean CFNumberGetValue (CFNumberRef number, CFNumberType theType, void *valuePtr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNumberGetValue (CFNumberRef* number, CFNumberType theType, void* valuePtr);

//	// extern CFComparisonResult CFNumberCompare (CFNumberRef number, CFNumberRef otherNumber, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFComparisonResult CFNumberCompare (CFNumberRef* number, CFNumberRef* otherNumber, void* context);

//	// extern CFTypeID CFNumberFormatterGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFNumberFormatterGetTypeID ();

//	// extern CFNumberFormatterRef CFNumberFormatterCreate (CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNumberFormatterRef* CFNumberFormatterCreate (CFAllocatorRef* allocator, CFLocaleRef* locale, CFNumberFormatterStyle style);

//	// extern CFLocaleRef CFNumberFormatterGetLocale (CFNumberFormatterRef formatter) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFLocaleRef* CFNumberFormatterGetLocale (CFNumberFormatterRef* formatter);

//	// extern CFNumberFormatterStyle CFNumberFormatterGetStyle (CFNumberFormatterRef formatter) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNumberFormatterStyle CFNumberFormatterGetStyle (CFNumberFormatterRef* formatter);

//	// extern CFStringRef CFNumberFormatterGetFormat (CFNumberFormatterRef formatter) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFNumberFormatterGetFormat (CFNumberFormatterRef* formatter);

//	// extern void CFNumberFormatterSetFormat (CFNumberFormatterRef formatter, CFStringRef formatString) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNumberFormatterSetFormat (CFNumberFormatterRef* formatter, CFStringRef* formatString);

//	// extern CFStringRef CFNumberFormatterCreateStringWithNumber (CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberRef number) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFNumberFormatterCreateStringWithNumber (CFAllocatorRef* allocator, CFNumberFormatterRef* formatter, CFNumberRef* number);

//	// extern CFStringRef CFNumberFormatterCreateStringWithValue (CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberType numberType, const void *valuePtr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFNumberFormatterCreateStringWithValue (CFAllocatorRef* allocator, CFNumberFormatterRef* formatter, CFNumberType numberType, void* valuePtr);

//	// extern CFNumberRef CFNumberFormatterCreateNumberFromString (CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFOptionFlags options) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNumberRef* CFNumberFormatterCreateNumberFromString (CFAllocatorRef* allocator, CFNumberFormatterRef* formatter, CFStringRef* @string, CFRange* rangep, nuint options);

//	// extern Boolean CFNumberFormatterGetValueFromString (CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFNumberType numberType, void *valuePtr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNumberFormatterGetValueFromString (CFNumberFormatterRef* formatter, CFStringRef* @string, CFRange* rangep, CFNumberType numberType, void* valuePtr);

//	// extern void CFNumberFormatterSetProperty (CFNumberFormatterRef formatter, CFNumberFormatterKey key, CFTypeRef value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNumberFormatterSetProperty (CFNumberFormatterRef* formatter, CFNumberFormatterKey* key, void* value);

//	// extern CFTypeRef CFNumberFormatterCopyProperty (CFNumberFormatterRef formatter, CFNumberFormatterKey key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFNumberFormatterCopyProperty (CFNumberFormatterRef* formatter, CFNumberFormatterKey* key);

//	// extern Boolean CFNumberFormatterGetDecimalInfoForCurrencyCode (CFStringRef currencyCode, int32_t *defaultFractionDigits, double *roundingIncrement) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNumberFormatterGetDecimalInfoForCurrencyCode (CFStringRef* currencyCode, int* defaultFractionDigits, double* roundingIncrement);

//	// extern CFPropertyListRef _Nullable CFPreferencesCopyAppValue (CFStringRef _Nonnull key, CFStringRef _Nonnull applicationID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CFPreferencesCopyAppValue (CFStringRef* key, CFStringRef* applicationID);

//	// extern Boolean CFPreferencesGetAppBooleanValue (CFStringRef _Nonnull key, CFStringRef _Nonnull applicationID, Boolean * _Nullable keyExistsAndHasValidFormat) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPreferencesGetAppBooleanValue (CFStringRef* key, CFStringRef* applicationID, [NullAllowed] byte* keyExistsAndHasValidFormat);

//	// extern CFIndex CFPreferencesGetAppIntegerValue (CFStringRef _Nonnull key, CFStringRef _Nonnull applicationID, Boolean * _Nullable keyExistsAndHasValidFormat) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFPreferencesGetAppIntegerValue (CFStringRef* key, CFStringRef* applicationID, [NullAllowed] byte* keyExistsAndHasValidFormat);

//	// extern void CFPreferencesSetAppValue (CFStringRef _Nonnull key, CFPropertyListRef _Nullable value, CFStringRef _Nonnull applicationID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPreferencesSetAppValue (CFStringRef* key, [NullAllowed] void* value, CFStringRef* applicationID);

//	// extern void CFPreferencesAddSuitePreferencesToApp (CFStringRef _Nonnull applicationID, CFStringRef _Nonnull suiteID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPreferencesAddSuitePreferencesToApp (CFStringRef* applicationID, CFStringRef* suiteID);

//	// extern void CFPreferencesRemoveSuitePreferencesFromApp (CFStringRef _Nonnull applicationID, CFStringRef _Nonnull suiteID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPreferencesRemoveSuitePreferencesFromApp (CFStringRef* applicationID, CFStringRef* suiteID);

//	// extern Boolean CFPreferencesAppSynchronize (CFStringRef _Nonnull applicationID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPreferencesAppSynchronize (CFStringRef* applicationID);

//	// extern CFPropertyListRef _Nullable CFPreferencesCopyValue (CFStringRef _Nonnull key, CFStringRef _Nonnull applicationID, CFStringRef _Nonnull userName, CFStringRef _Nonnull hostName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CFPreferencesCopyValue (CFStringRef* key, CFStringRef* applicationID, CFStringRef* userName, CFStringRef* hostName);

//	// extern CFDictionaryRef _Nonnull CFPreferencesCopyMultiple (CFArrayRef _Nullable keysToFetch, CFStringRef _Nonnull applicationID, CFStringRef _Nonnull userName, CFStringRef _Nonnull hostName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFPreferencesCopyMultiple ([NullAllowed] CFArrayRef* keysToFetch, CFStringRef* applicationID, CFStringRef* userName, CFStringRef* hostName);

//	// extern void CFPreferencesSetValue (CFStringRef _Nonnull key, CFPropertyListRef _Nullable value, CFStringRef _Nonnull applicationID, CFStringRef _Nonnull userName, CFStringRef _Nonnull hostName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPreferencesSetValue (CFStringRef* key, [NullAllowed] void* value, CFStringRef* applicationID, CFStringRef* userName, CFStringRef* hostName);

//	// extern void CFPreferencesSetMultiple (CFDictionaryRef _Nullable keysToSet, CFArrayRef _Nullable keysToRemove, CFStringRef _Nonnull applicationID, CFStringRef _Nonnull userName, CFStringRef _Nonnull hostName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPreferencesSetMultiple ([NullAllowed] CFDictionaryRef* keysToSet, [NullAllowed] CFArrayRef* keysToRemove, CFStringRef* applicationID, CFStringRef* userName, CFStringRef* hostName);

//	// extern Boolean CFPreferencesSynchronize (CFStringRef _Nonnull applicationID, CFStringRef _Nonnull userName, CFStringRef _Nonnull hostName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPreferencesSynchronize (CFStringRef* applicationID, CFStringRef* userName, CFStringRef* hostName);

//	// extern CFArrayRef _Nullable CFPreferencesCopyApplicationList (CFStringRef _Nonnull userName, CFStringRef _Nonnull hostName) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.9))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Unsupported API")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Unsupported API")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Unsupported API")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Unsupported API")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Unsupported API")]
//	[Deprecated (PlatformName.iOS, 7, 0, message: "Unsupported API")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Unsupported API")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "Unsupported API")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CFPreferencesCopyApplicationList (CFStringRef* userName, CFStringRef* hostName);

//	// extern CFArrayRef _Nullable CFPreferencesCopyKeyList (CFStringRef _Nonnull applicationID, CFStringRef _Nonnull userName, CFStringRef _Nonnull hostName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CFPreferencesCopyKeyList (CFStringRef* applicationID, CFStringRef* userName, CFStringRef* hostName);

//	// extern Boolean CFPreferencesAppValueIsForced (CFStringRef _Nonnull key, CFStringRef _Nonnull applicationID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPreferencesAppValueIsForced (CFStringRef* key, CFStringRef* applicationID);

//	// extern CFTypeID CFURLGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFURLGetTypeID ();

//	// extern CFURLRef CFURLCreateWithBytes (CFAllocatorRef allocator, const UInt8 *URLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateWithBytes (CFAllocatorRef* allocator, byte* URLBytes, nint length, uint encoding, CFURLRef* baseURL);

//	// extern CFDataRef CFURLCreateData (CFAllocatorRef allocator, CFURLRef url, CFStringEncoding encoding, Boolean escapeWhitespace) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFURLCreateData (CFAllocatorRef* allocator, CFURLRef* url, uint encoding, byte escapeWhitespace);

//	// extern CFURLRef CFURLCreateWithString (CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateWithString (CFAllocatorRef* allocator, CFStringRef* URLString, CFURLRef* baseURL);

//	// extern CFURLRef CFURLCreateAbsoluteURLWithBytes (CFAllocatorRef alloc, const UInt8 *relativeURLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL, Boolean useCompatibilityMode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateAbsoluteURLWithBytes (CFAllocatorRef* alloc, byte* relativeURLBytes, nint length, uint encoding, CFURLRef* baseURL, byte useCompatibilityMode);

//	// extern CFURLRef CFURLCreateWithFileSystemPath (CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateWithFileSystemPath (CFAllocatorRef* allocator, CFStringRef* filePath, CFURLPathStyle pathStyle, byte isDirectory);

//	// extern CFURLRef CFURLCreateFromFileSystemRepresentation (CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateFromFileSystemRepresentation (CFAllocatorRef* allocator, byte* buffer, nint bufLen, byte isDirectory);

//	// extern CFURLRef CFURLCreateWithFileSystemPathRelativeToBase (CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateWithFileSystemPathRelativeToBase (CFAllocatorRef* allocator, CFStringRef* filePath, CFURLPathStyle pathStyle, byte isDirectory, CFURLRef* baseURL);

//	// extern CFURLRef CFURLCreateFromFileSystemRepresentationRelativeToBase (CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory, CFURLRef baseURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateFromFileSystemRepresentationRelativeToBase (CFAllocatorRef* allocator, byte* buffer, nint bufLen, byte isDirectory, CFURLRef* baseURL);

//	// extern Boolean CFURLGetFileSystemRepresentation (CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLGetFileSystemRepresentation (CFURLRef* url, byte resolveAgainstBase, byte* buffer, nint maxBufLen);

//	// extern CFURLRef CFURLCopyAbsoluteURL (CFURLRef relativeURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCopyAbsoluteURL (CFURLRef* relativeURL);

//	// extern CFStringRef CFURLGetString (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLGetString (CFURLRef* anURL);

//	// extern CFURLRef CFURLGetBaseURL (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLGetBaseURL (CFURLRef* anURL);

//	// extern Boolean CFURLCanBeDecomposed (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLCanBeDecomposed (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyScheme (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyScheme (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyNetLocation (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyNetLocation (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyPath (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyPath (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyStrictPath (CFURLRef anURL, Boolean *isAbsolute) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyStrictPath (CFURLRef* anURL, byte* isAbsolute);

//	// extern CFStringRef CFURLCopyFileSystemPath (CFURLRef anURL, CFURLPathStyle pathStyle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyFileSystemPath (CFURLRef* anURL, CFURLPathStyle pathStyle);

//	// extern Boolean CFURLHasDirectoryPath (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLHasDirectoryPath (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyResourceSpecifier (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyResourceSpecifier (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyHostName (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyHostName (CFURLRef* anURL);

//	// extern SInt32 CFURLGetPortNumber (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFURLGetPortNumber (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyUserName (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyUserName (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyPassword (CFURLRef anURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyPassword (CFURLRef* anURL);

//	// extern CFStringRef CFURLCopyParameterString (CFURLRef anURL, CFStringRef charactersToLeaveEscaped) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyParameterString (CFURLRef* anURL, CFStringRef* charactersToLeaveEscaped);

//	// extern CFStringRef CFURLCopyQueryString (CFURLRef anURL, CFStringRef charactersToLeaveEscaped) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyQueryString (CFURLRef* anURL, CFStringRef* charactersToLeaveEscaped);

//	// extern CFStringRef CFURLCopyFragment (CFURLRef anURL, CFStringRef charactersToLeaveEscaped) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyFragment (CFURLRef* anURL, CFStringRef* charactersToLeaveEscaped);

//	// extern CFStringRef CFURLCopyLastPathComponent (CFURLRef url) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyLastPathComponent (CFURLRef* url);

//	// extern CFStringRef CFURLCopyPathExtension (CFURLRef url) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCopyPathExtension (CFURLRef* url);

//	// extern CFURLRef CFURLCreateCopyAppendingPathComponent (CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateCopyAppendingPathComponent (CFAllocatorRef* allocator, CFURLRef* url, CFStringRef* pathComponent, byte isDirectory);

//	// extern CFURLRef CFURLCreateCopyDeletingLastPathComponent (CFAllocatorRef allocator, CFURLRef url) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateCopyDeletingLastPathComponent (CFAllocatorRef* allocator, CFURLRef* url);

//	// extern CFURLRef CFURLCreateCopyAppendingPathExtension (CFAllocatorRef allocator, CFURLRef url, CFStringRef extension) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateCopyAppendingPathExtension (CFAllocatorRef* allocator, CFURLRef* url, CFStringRef* extension);

//	// extern CFURLRef CFURLCreateCopyDeletingPathExtension (CFAllocatorRef allocator, CFURLRef url) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateCopyDeletingPathExtension (CFAllocatorRef* allocator, CFURLRef* url);

//	// extern CFIndex CFURLGetBytes (CFURLRef url, UInt8 *buffer, CFIndex bufferLength) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFURLGetBytes (CFURLRef* url, byte* buffer, nint bufferLength);

//	// extern CFRange CFURLGetByteRangeForComponent (CFURLRef url, CFURLComponentType component, CFRange *rangeIncludingSeparators) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFURLGetByteRangeForComponent (CFURLRef* url, CFURLComponentType component, CFRange* rangeIncludingSeparators);

//	// extern CFStringRef CFURLCreateStringByReplacingPercentEscapes (CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCreateStringByReplacingPercentEscapes (CFAllocatorRef* allocator, CFStringRef* originalString, CFStringRef* charactersToLeaveEscaped);

//	// extern CFStringRef CFURLCreateStringByReplacingPercentEscapesUsingEncoding (CFAllocatorRef allocator, CFStringRef origString, CFStringRef charsToLeaveEscaped, CFStringEncoding encoding) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.11))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[Deprecated (PlatformName.iOS, 9, 0, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[Deprecated (PlatformName.MacOSX, 10, 11, message: "Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCreateStringByReplacingPercentEscapesUsingEncoding (CFAllocatorRef* allocator, CFStringRef* origString, CFStringRef* charsToLeaveEscaped, uint encoding);

//	// extern CFStringRef CFURLCreateStringByAddingPercentEscapes (CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.11))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[Deprecated (PlatformName.iOS, 9, 0, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[Deprecated (PlatformName.MacOSX, 10, 11, message: "Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFURLCreateStringByAddingPercentEscapes (CFAllocatorRef* allocator, CFStringRef* originalString, CFStringRef* charactersToLeaveUnescaped, CFStringRef* legalURLCharactersToBeEscaped, uint encoding);

//	// extern Boolean CFURLIsFileReferenceURL (CFURLRef url) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9)));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLIsFileReferenceURL (CFURLRef* url);

//	// extern CFURLRef CFURLCreateFileReferenceURL (CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateFileReferenceURL (CFAllocatorRef* allocator, CFURLRef* url, CFErrorRef** error);

//	// extern CFURLRef CFURLCreateFilePathURL (CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateFilePathURL (CFAllocatorRef* allocator, CFURLRef* url, CFErrorRef** error);

//	// extern CFURLRef CFURLCreateFromFSRef (CFAllocatorRef allocator, const struct FSRef *fsRef) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.9))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Not supported")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Not supported")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Not supported")]
//	[Deprecated (PlatformName.iOS, 7, 0, message: "Not supported")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Not supported")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "Not supported")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateFromFSRef (CFAllocatorRef* allocator, FSRef* fsRef);

//	// extern Boolean CFURLGetFSRef (CFURLRef url, struct FSRef *fsRef) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.9))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Not supported")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Not supported")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Not supported")]
//	[Deprecated (PlatformName.iOS, 7, 0, message: "Not supported")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Not supported")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "Not supported")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLGetFSRef (CFURLRef* url, FSRef* fsRef);

//	// extern Boolean CFURLCopyResourcePropertyForKey (CFURLRef url, CFStringRef key, void *propertyValueTypeRefPtr, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLCopyResourcePropertyForKey (CFURLRef* url, CFStringRef* key, void* propertyValueTypeRefPtr, CFErrorRef** error);

//	// extern CFDictionaryRef CFURLCopyResourcePropertiesForKeys (CFURLRef url, CFArrayRef keys, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFURLCopyResourcePropertiesForKeys (CFURLRef* url, CFArrayRef* keys, CFErrorRef** error);

//	// extern Boolean CFURLSetResourcePropertyForKey (CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLSetResourcePropertyForKey (CFURLRef* url, CFStringRef* key, void* propertyValue, CFErrorRef** error);

//	// extern Boolean CFURLSetResourcePropertiesForKeys (CFURLRef url, CFDictionaryRef keyedPropertyValues, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLSetResourcePropertiesForKeys (CFURLRef* url, CFDictionaryRef* keyedPropertyValues, CFErrorRef** error);

//	// extern void CFURLClearResourcePropertyCacheForKey (CFURLRef url, CFStringRef key) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFURLClearResourcePropertyCacheForKey (CFURLRef* url, CFStringRef* key);

//	// extern void CFURLClearResourcePropertyCache (CFURLRef url) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFURLClearResourcePropertyCache (CFURLRef* url);

//	// extern void CFURLSetTemporaryResourcePropertyForKey (CFURLRef url, CFStringRef key, CFTypeRef propertyValue) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFURLSetTemporaryResourcePropertyForKey (CFURLRef* url, CFStringRef* key, void* propertyValue);

//	// extern Boolean CFURLResourceIsReachable (CFURLRef url, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLResourceIsReachable (CFURLRef* url, CFErrorRef** error);

//	// extern CFDataRef CFURLCreateBookmarkData (CFAllocatorRef allocator, CFURLRef url, CFURLBookmarkCreationOptions options, CFArrayRef resourcePropertiesToInclude, CFURLRef relativeToURL, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFURLCreateBookmarkData (CFAllocatorRef* allocator, CFURLRef* url, CFURLBookmarkCreationOptions options, CFArrayRef* resourcePropertiesToInclude, CFURLRef* relativeToURL, CFErrorRef** error);

//	// extern CFURLRef CFURLCreateByResolvingBookmarkData (CFAllocatorRef allocator, CFDataRef bookmark, CFURLBookmarkResolutionOptions options, CFURLRef relativeToURL, CFArrayRef resourcePropertiesToInclude, Boolean *isStale, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFURLCreateByResolvingBookmarkData (CFAllocatorRef* allocator, CFDataRef* bookmark, CFURLBookmarkResolutionOptions options, CFURLRef* relativeToURL, CFArrayRef* resourcePropertiesToInclude, byte* isStale, CFErrorRef** error);

//	// extern CFDictionaryRef CFURLCreateResourcePropertiesForKeysFromBookmarkData (CFAllocatorRef allocator, CFArrayRef resourcePropertiesToReturn, CFDataRef bookmark) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFURLCreateResourcePropertiesForKeysFromBookmarkData (CFAllocatorRef* allocator, CFArrayRef* resourcePropertiesToReturn, CFDataRef* bookmark);

//	// extern CFTypeRef CFURLCreateResourcePropertyForKeyFromBookmarkData (CFAllocatorRef allocator, CFStringRef resourcePropertyKey, CFDataRef bookmark) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFURLCreateResourcePropertyForKeyFromBookmarkData (CFAllocatorRef* allocator, CFStringRef* resourcePropertyKey, CFDataRef* bookmark);

//	// extern CFDataRef CFURLCreateBookmarkDataFromFile (CFAllocatorRef allocator, CFURLRef fileURL, CFErrorRef *errorRef) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFURLCreateBookmarkDataFromFile (CFAllocatorRef* allocator, CFURLRef* fileURL, CFErrorRef** errorRef);

//	// extern Boolean CFURLWriteBookmarkDataToFile (CFDataRef bookmarkRef, CFURLRef fileURL, CFURLBookmarkFileCreationOptions options, CFErrorRef *errorRef) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLWriteBookmarkDataToFile (CFDataRef* bookmarkRef, CFURLRef* fileURL, nuint options, CFErrorRef** errorRef);

//	// extern CFDataRef CFURLCreateBookmarkDataFromAliasRecord (CFAllocatorRef allocatorRef, CFDataRef aliasRecordDataRef) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6)));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFURLCreateBookmarkDataFromAliasRecord (CFAllocatorRef* allocatorRef, CFDataRef* aliasRecordDataRef);

//	// extern Boolean CFURLStartAccessingSecurityScopedResource (CFURLRef url) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLStartAccessingSecurityScopedResource (CFURLRef* url);

//	// extern void CFURLStopAccessingSecurityScopedResource (CFURLRef url) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFURLStopAccessingSecurityScopedResource (CFURLRef* url);

//	// extern CFTypeID CFRunLoopGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFRunLoopGetTypeID ();

//	// extern CFRunLoopRef CFRunLoopGetCurrent () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopRef* CFRunLoopGetCurrent ();

//	// extern CFRunLoopRef CFRunLoopGetMain () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopRef* CFRunLoopGetMain ();

//	// extern CFRunLoopMode CFRunLoopCopyCurrentMode (CFRunLoopRef rl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopMode* CFRunLoopCopyCurrentMode (CFRunLoopRef* rl);

//	// extern CFArrayRef CFRunLoopCopyAllModes (CFRunLoopRef rl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFRunLoopCopyAllModes (CFRunLoopRef* rl);

//	// extern void CFRunLoopAddCommonMode (CFRunLoopRef rl, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopAddCommonMode (CFRunLoopRef* rl, CFRunLoopMode* mode);

//	// extern CFAbsoluteTime CFRunLoopGetNextTimerFireDate (CFRunLoopRef rl, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFRunLoopGetNextTimerFireDate (CFRunLoopRef* rl, CFRunLoopMode* mode);

//	// extern void CFRunLoopRun () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void CFRunLoopRun ();

//	// extern CFRunLoopRunResult CFRunLoopRunInMode (CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopRunResult CFRunLoopRunInMode (CFRunLoopMode* mode, double seconds, byte returnAfterSourceHandled);

//	// extern Boolean CFRunLoopIsWaiting (CFRunLoopRef rl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopIsWaiting (CFRunLoopRef* rl);

//	// extern void CFRunLoopWakeUp (CFRunLoopRef rl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopWakeUp (CFRunLoopRef* rl);

//	// extern void CFRunLoopStop (CFRunLoopRef rl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopStop (CFRunLoopRef* rl);

//	// extern void CFRunLoopPerformBlock (CFRunLoopRef rl, CFTypeRef mode, void (^block)()) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopPerformBlock (CFRunLoopRef* rl, void* mode, Action block);

//	// extern Boolean CFRunLoopContainsSource (CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopContainsSource (CFRunLoopRef* rl, CFRunLoopSourceRef* source, CFRunLoopMode* mode);

//	// extern void CFRunLoopAddSource (CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopAddSource (CFRunLoopRef* rl, CFRunLoopSourceRef* source, CFRunLoopMode* mode);

//	// extern void CFRunLoopRemoveSource (CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopRemoveSource (CFRunLoopRef* rl, CFRunLoopSourceRef* source, CFRunLoopMode* mode);

//	// extern Boolean CFRunLoopContainsObserver (CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopContainsObserver (CFRunLoopRef* rl, CFRunLoopObserverRef* observer, CFRunLoopMode* mode);

//	// extern void CFRunLoopAddObserver (CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopAddObserver (CFRunLoopRef* rl, CFRunLoopObserverRef* observer, CFRunLoopMode* mode);

//	// extern void CFRunLoopRemoveObserver (CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopRemoveObserver (CFRunLoopRef* rl, CFRunLoopObserverRef* observer, CFRunLoopMode* mode);

//	// extern Boolean CFRunLoopContainsTimer (CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopContainsTimer (CFRunLoopRef* rl, CFRunLoopTimerRef* timer, CFRunLoopMode* mode);

//	// extern void CFRunLoopAddTimer (CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopAddTimer (CFRunLoopRef* rl, CFRunLoopTimerRef* timer, CFRunLoopMode* mode);

//	// extern void CFRunLoopRemoveTimer (CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopRemoveTimer (CFRunLoopRef* rl, CFRunLoopTimerRef* timer, CFRunLoopMode* mode);

//	// extern CFTypeID CFRunLoopSourceGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFRunLoopSourceGetTypeID ();

//	// extern CFRunLoopSourceRef CFRunLoopSourceCreate (CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopSourceRef* CFRunLoopSourceCreate (CFAllocatorRef* allocator, nint order, CFRunLoopSourceContext* context);

//	// extern CFIndex CFRunLoopSourceGetOrder (CFRunLoopSourceRef source) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFRunLoopSourceGetOrder (CFRunLoopSourceRef* source);

//	// extern void CFRunLoopSourceInvalidate (CFRunLoopSourceRef source) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopSourceInvalidate (CFRunLoopSourceRef* source);

//	// extern Boolean CFRunLoopSourceIsValid (CFRunLoopSourceRef source) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopSourceIsValid (CFRunLoopSourceRef* source);

//	// extern void CFRunLoopSourceGetContext (CFRunLoopSourceRef source, CFRunLoopSourceContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopSourceGetContext (CFRunLoopSourceRef* source, CFRunLoopSourceContext* context);

//	// extern void CFRunLoopSourceSignal (CFRunLoopSourceRef source) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopSourceSignal (CFRunLoopSourceRef* source);

//	// extern CFTypeID CFRunLoopObserverGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFRunLoopObserverGetTypeID ();

//	// extern CFRunLoopObserverRef CFRunLoopObserverCreate (CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopObserverRef* CFRunLoopObserverCreate (CFAllocatorRef* allocator, nuint activities, byte repeats, nint order, CFRunLoopObserverCallBack* callout, CFRunLoopObserverContext* context);

//	// extern CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler (CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void (^block)(CFRunLoopObserverRef, CFRunLoopActivity)) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopObserverRef* CFRunLoopObserverCreateWithHandler (CFAllocatorRef* allocator, nuint activities, byte repeats, nint order, Action<CoreFoundation.CFRunLoopObserverRef*, CFRunLoopActivity> block);

//	// extern CFOptionFlags CFRunLoopObserverGetActivities (CFRunLoopObserverRef observer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CFRunLoopObserverGetActivities (CFRunLoopObserverRef* observer);

//	// extern Boolean CFRunLoopObserverDoesRepeat (CFRunLoopObserverRef observer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopObserverDoesRepeat (CFRunLoopObserverRef* observer);

//	// extern CFIndex CFRunLoopObserverGetOrder (CFRunLoopObserverRef observer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFRunLoopObserverGetOrder (CFRunLoopObserverRef* observer);

//	// extern void CFRunLoopObserverInvalidate (CFRunLoopObserverRef observer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopObserverInvalidate (CFRunLoopObserverRef* observer);

//	// extern Boolean CFRunLoopObserverIsValid (CFRunLoopObserverRef observer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopObserverIsValid (CFRunLoopObserverRef* observer);

//	// extern void CFRunLoopObserverGetContext (CFRunLoopObserverRef observer, CFRunLoopObserverContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopObserverGetContext (CFRunLoopObserverRef* observer, CFRunLoopObserverContext* context);

//	// extern CFTypeID CFRunLoopTimerGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFRunLoopTimerGetTypeID ();

//	// extern CFRunLoopTimerRef CFRunLoopTimerCreate (CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopTimerRef* CFRunLoopTimerCreate (CFAllocatorRef* allocator, double fireDate, double interval, nuint flags, nint order, CFRunLoopTimerCallBack* callout, CFRunLoopTimerContext* context);

//	// extern CFRunLoopTimerRef CFRunLoopTimerCreateWithHandler (CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, void (^block)(CFRunLoopTimerRef)) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopTimerRef* CFRunLoopTimerCreateWithHandler (CFAllocatorRef* allocator, double fireDate, double interval, nuint flags, nint order, Action<CoreFoundation.CFRunLoopTimerRef*> block);

//	// extern CFAbsoluteTime CFRunLoopTimerGetNextFireDate (CFRunLoopTimerRef timer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFRunLoopTimerGetNextFireDate (CFRunLoopTimerRef* timer);

//	// extern void CFRunLoopTimerSetNextFireDate (CFRunLoopTimerRef timer, CFAbsoluteTime fireDate) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopTimerSetNextFireDate (CFRunLoopTimerRef* timer, double fireDate);

//	// extern CFTimeInterval CFRunLoopTimerGetInterval (CFRunLoopTimerRef timer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFRunLoopTimerGetInterval (CFRunLoopTimerRef* timer);

//	// extern Boolean CFRunLoopTimerDoesRepeat (CFRunLoopTimerRef timer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopTimerDoesRepeat (CFRunLoopTimerRef* timer);

//	// extern CFIndex CFRunLoopTimerGetOrder (CFRunLoopTimerRef timer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFRunLoopTimerGetOrder (CFRunLoopTimerRef* timer);

//	// extern void CFRunLoopTimerInvalidate (CFRunLoopTimerRef timer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopTimerInvalidate (CFRunLoopTimerRef* timer);

//	// extern Boolean CFRunLoopTimerIsValid (CFRunLoopTimerRef timer) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFRunLoopTimerIsValid (CFRunLoopTimerRef* timer);

//	// extern void CFRunLoopTimerGetContext (CFRunLoopTimerRef timer, CFRunLoopTimerContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopTimerGetContext (CFRunLoopTimerRef* timer, CFRunLoopTimerContext* context);

//	// extern CFTimeInterval CFRunLoopTimerGetTolerance (CFRunLoopTimerRef timer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CFRunLoopTimerGetTolerance (CFRunLoopTimerRef* timer);

//	// extern void CFRunLoopTimerSetTolerance (CFRunLoopTimerRef timer, CFTimeInterval tolerance) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFRunLoopTimerSetTolerance (CFRunLoopTimerRef* timer, double tolerance);

//	// extern CFTypeID CFSocketGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFSocketGetTypeID ();

//	// extern CFSocketRef CFSocketCreate (CFAllocatorRef allocator, SInt32 protocolFamily, SInt32 socketType, SInt32 protocol, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketRef* CFSocketCreate (CFAllocatorRef* allocator, int protocolFamily, int socketType, int protocol, nuint callBackTypes, CFSocketCallBack* callout, CFSocketContext* context);

//	// extern CFSocketRef CFSocketCreateWithNative (CFAllocatorRef allocator, CFSocketNativeHandle sock, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketRef* CFSocketCreateWithNative (CFAllocatorRef* allocator, int sock, nuint callBackTypes, CFSocketCallBack* callout, CFSocketContext* context);

//	// extern CFSocketRef CFSocketCreateWithSocketSignature (CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketRef* CFSocketCreateWithSocketSignature (CFAllocatorRef* allocator, CFSocketSignature* signature, nuint callBackTypes, CFSocketCallBack* callout, CFSocketContext* context);

//	// extern CFSocketRef CFSocketCreateConnectedToSocketSignature (CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context, CFTimeInterval timeout) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketRef* CFSocketCreateConnectedToSocketSignature (CFAllocatorRef* allocator, CFSocketSignature* signature, nuint callBackTypes, CFSocketCallBack* callout, CFSocketContext* context, double timeout);

//	// extern CFSocketError CFSocketSetAddress (CFSocketRef s, CFDataRef address) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketSetAddress (CFSocketRef* s, CFDataRef* address);

//	// extern CFSocketError CFSocketConnectToAddress (CFSocketRef s, CFDataRef address, CFTimeInterval timeout) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketConnectToAddress (CFSocketRef* s, CFDataRef* address, double timeout);

//	// extern void CFSocketInvalidate (CFSocketRef s) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSocketInvalidate (CFSocketRef* s);

//	// extern Boolean CFSocketIsValid (CFSocketRef s) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFSocketIsValid (CFSocketRef* s);

//	// extern CFDataRef CFSocketCopyAddress (CFSocketRef s) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFSocketCopyAddress (CFSocketRef* s);

//	// extern CFDataRef CFSocketCopyPeerAddress (CFSocketRef s) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFSocketCopyPeerAddress (CFSocketRef* s);

//	// extern void CFSocketGetContext (CFSocketRef s, CFSocketContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSocketGetContext (CFSocketRef* s, CFSocketContext* context);

//	// extern CFSocketNativeHandle CFSocketGetNative (CFSocketRef s) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFSocketGetNative (CFSocketRef* s);

//	// extern CFRunLoopSourceRef CFSocketCreateRunLoopSource (CFAllocatorRef allocator, CFSocketRef s, CFIndex order) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopSourceRef* CFSocketCreateRunLoopSource (CFAllocatorRef* allocator, CFSocketRef* s, nint order);

//	// extern CFOptionFlags CFSocketGetSocketFlags (CFSocketRef s) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CFSocketGetSocketFlags (CFSocketRef* s);

//	// extern void CFSocketSetSocketFlags (CFSocketRef s, CFOptionFlags flags) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSocketSetSocketFlags (CFSocketRef* s, nuint flags);

//	// extern void CFSocketDisableCallBacks (CFSocketRef s, CFOptionFlags callBackTypes) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSocketDisableCallBacks (CFSocketRef* s, nuint callBackTypes);

//	// extern void CFSocketEnableCallBacks (CFSocketRef s, CFOptionFlags callBackTypes) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSocketEnableCallBacks (CFSocketRef* s, nuint callBackTypes);

//	// extern CFSocketError CFSocketSendData (CFSocketRef s, CFDataRef address, CFDataRef data, CFTimeInterval timeout) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketSendData (CFSocketRef* s, CFDataRef* address, CFDataRef* data, double timeout);

//	// extern CFSocketError CFSocketRegisterValue (const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketRegisterValue (CFSocketSignature* nameServerSignature, double timeout, CFStringRef* name, void* value);

//	// extern CFSocketError CFSocketCopyRegisteredValue (const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef *value, CFDataRef *nameServerAddress) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketCopyRegisteredValue (CFSocketSignature* nameServerSignature, double timeout, CFStringRef* name, void** value, CFDataRef** nameServerAddress);

//	// extern CFSocketError CFSocketRegisterSocketSignature (const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, const CFSocketSignature *signature) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketRegisterSocketSignature (CFSocketSignature* nameServerSignature, double timeout, CFStringRef* name, CFSocketSignature* signature);

//	// extern CFSocketError CFSocketCopyRegisteredSocketSignature (const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFSocketSignature *signature, CFDataRef *nameServerAddress) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketCopyRegisteredSocketSignature (CFSocketSignature* nameServerSignature, double timeout, CFStringRef* name, CFSocketSignature* signature, CFDataRef** nameServerAddress);

//	// extern CFSocketError CFSocketUnregister (const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSocketError CFSocketUnregister (CFSocketSignature* nameServerSignature, double timeout, CFStringRef* name);

//	// extern void CFSocketSetDefaultNameRegistryPortNumber (UInt16 port) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void CFSocketSetDefaultNameRegistryPortNumber (ushort port);

//	// extern UInt16 CFSocketGetDefaultNameRegistryPortNumber () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort CFSocketGetDefaultNameRegistryPortNumber ();

//	// extern CFTypeID CFReadStreamGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFReadStreamGetTypeID ();

//	// extern CFTypeID CFWriteStreamGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFWriteStreamGetTypeID ();

//	// extern CFReadStreamRef CFReadStreamCreateWithBytesNoCopy (CFAllocatorRef alloc, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFReadStreamRef* CFReadStreamCreateWithBytesNoCopy (CFAllocatorRef* alloc, byte* bytes, nint length, CFAllocatorRef* bytesDeallocator);

//	// extern CFWriteStreamRef CFWriteStreamCreateWithBuffer (CFAllocatorRef alloc, UInt8 *buffer, CFIndex bufferCapacity) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFWriteStreamRef* CFWriteStreamCreateWithBuffer (CFAllocatorRef* alloc, byte* buffer, nint bufferCapacity);

//	// extern CFWriteStreamRef CFWriteStreamCreateWithAllocatedBuffers (CFAllocatorRef alloc, CFAllocatorRef bufferAllocator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFWriteStreamRef* CFWriteStreamCreateWithAllocatedBuffers (CFAllocatorRef* alloc, CFAllocatorRef* bufferAllocator);

//	// extern CFReadStreamRef CFReadStreamCreateWithFile (CFAllocatorRef alloc, CFURLRef fileURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFReadStreamRef* CFReadStreamCreateWithFile (CFAllocatorRef* alloc, CFURLRef* fileURL);

//	// extern CFWriteStreamRef CFWriteStreamCreateWithFile (CFAllocatorRef alloc, CFURLRef fileURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFWriteStreamRef* CFWriteStreamCreateWithFile (CFAllocatorRef* alloc, CFURLRef* fileURL);

//	// extern void CFStreamCreateBoundPair (CFAllocatorRef alloc, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream, CFIndex transferBufferSize);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStreamCreateBoundPair (CFAllocatorRef* alloc, CFReadStreamRef** readStream, CFWriteStreamRef** writeStream, nint transferBufferSize);

//	// extern void CFStreamCreatePairWithSocket (CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStreamCreatePairWithSocket (CFAllocatorRef* alloc, int sock, CFReadStreamRef** readStream, CFWriteStreamRef** writeStream);

//	// extern void CFStreamCreatePairWithSocketToHost (CFAllocatorRef alloc, CFStringRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStreamCreatePairWithSocketToHost (CFAllocatorRef* alloc, CFStringRef* host, uint port, CFReadStreamRef** readStream, CFWriteStreamRef** writeStream);

//	// extern void CFStreamCreatePairWithPeerSocketSignature (CFAllocatorRef alloc, const CFSocketSignature *signature, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStreamCreatePairWithPeerSocketSignature (CFAllocatorRef* alloc, CFSocketSignature* signature, CFReadStreamRef** readStream, CFWriteStreamRef** writeStream);

//	// extern CFStreamStatus CFReadStreamGetStatus (CFReadStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStreamStatus CFReadStreamGetStatus (CFReadStreamRef* stream);

//	// extern CFStreamStatus CFWriteStreamGetStatus (CFWriteStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStreamStatus CFWriteStreamGetStatus (CFWriteStreamRef* stream);

//	// extern CFErrorRef CFReadStreamCopyError (CFReadStreamRef stream) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFErrorRef* CFReadStreamCopyError (CFReadStreamRef* stream);

//	// extern CFErrorRef CFWriteStreamCopyError (CFWriteStreamRef stream) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFErrorRef* CFWriteStreamCopyError (CFWriteStreamRef* stream);

//	// extern Boolean CFReadStreamOpen (CFReadStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFReadStreamOpen (CFReadStreamRef* stream);

//	// extern Boolean CFWriteStreamOpen (CFWriteStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFWriteStreamOpen (CFWriteStreamRef* stream);

//	// extern void CFReadStreamClose (CFReadStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFReadStreamClose (CFReadStreamRef* stream);

//	// extern void CFWriteStreamClose (CFWriteStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFWriteStreamClose (CFWriteStreamRef* stream);

//	// extern Boolean CFReadStreamHasBytesAvailable (CFReadStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFReadStreamHasBytesAvailable (CFReadStreamRef* stream);

//	// extern CFIndex CFReadStreamRead (CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFReadStreamRead (CFReadStreamRef* stream, byte* buffer, nint bufferLength);

//	// extern const UInt8 * CFReadStreamGetBuffer (CFReadStreamRef stream, CFIndex maxBytesToRead, CFIndex *numBytesRead) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* CFReadStreamGetBuffer (CFReadStreamRef* stream, nint maxBytesToRead, nint* numBytesRead);

//	// extern Boolean CFWriteStreamCanAcceptBytes (CFWriteStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFWriteStreamCanAcceptBytes (CFWriteStreamRef* stream);

//	// extern CFIndex CFWriteStreamWrite (CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFWriteStreamWrite (CFWriteStreamRef* stream, byte* buffer, nint bufferLength);

//	// extern CFTypeRef CFReadStreamCopyProperty (CFReadStreamRef stream, CFStreamPropertyKey propertyName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFReadStreamCopyProperty (CFReadStreamRef* stream, CFStreamPropertyKey* propertyName);

//	// extern CFTypeRef CFWriteStreamCopyProperty (CFWriteStreamRef stream, CFStreamPropertyKey propertyName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFWriteStreamCopyProperty (CFWriteStreamRef* stream, CFStreamPropertyKey* propertyName);

//	// extern Boolean CFReadStreamSetProperty (CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFReadStreamSetProperty (CFReadStreamRef* stream, CFStreamPropertyKey* propertyName, void* propertyValue);

//	// extern Boolean CFWriteStreamSetProperty (CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFWriteStreamSetProperty (CFWriteStreamRef* stream, CFStreamPropertyKey* propertyName, void* propertyValue);

//	// extern Boolean CFReadStreamSetClient (CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFReadStreamSetClient (CFReadStreamRef* stream, nuint streamEvents, CFReadStreamClientCallBack* clientCB, CFStreamClientContext* clientContext);

//	// extern Boolean CFWriteStreamSetClient (CFWriteStreamRef stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack clientCB, CFStreamClientContext *clientContext) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFWriteStreamSetClient (CFWriteStreamRef* stream, nuint streamEvents, CFWriteStreamClientCallBack* clientCB, CFStreamClientContext* clientContext);

//	// extern void CFReadStreamScheduleWithRunLoop (CFReadStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFReadStreamScheduleWithRunLoop (CFReadStreamRef* stream, CFRunLoopRef* runLoop, CFRunLoopMode* runLoopMode);

//	// extern void CFWriteStreamScheduleWithRunLoop (CFWriteStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFWriteStreamScheduleWithRunLoop (CFWriteStreamRef* stream, CFRunLoopRef* runLoop, CFRunLoopMode* runLoopMode);

//	// extern void CFReadStreamUnscheduleFromRunLoop (CFReadStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFReadStreamUnscheduleFromRunLoop (CFReadStreamRef* stream, CFRunLoopRef* runLoop, CFRunLoopMode* runLoopMode);

//	// extern void CFWriteStreamUnscheduleFromRunLoop (CFWriteStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFWriteStreamUnscheduleFromRunLoop (CFWriteStreamRef* stream, CFRunLoopRef* runLoop, CFRunLoopMode* runLoopMode);

//	// extern void CFReadStreamSetDispatchQueue (CFReadStreamRef stream, dispatch_queue_t q) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFReadStreamSetDispatchQueue (CFReadStreamRef* stream, DispatchQueue q);

//	// extern void CFWriteStreamSetDispatchQueue (CFWriteStreamRef stream, dispatch_queue_t q) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFWriteStreamSetDispatchQueue (CFWriteStreamRef* stream, DispatchQueue q);

//	// extern dispatch_queue_t CFReadStreamCopyDispatchQueue (CFReadStreamRef stream) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DispatchQueue CFReadStreamCopyDispatchQueue (CFReadStreamRef* stream);

//	// extern dispatch_queue_t CFWriteStreamCopyDispatchQueue (CFWriteStreamRef stream) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe DispatchQueue CFWriteStreamCopyDispatchQueue (CFWriteStreamRef* stream);

//	// extern CFStreamError CFReadStreamGetError (CFReadStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStreamError CFReadStreamGetError (CFReadStreamRef* stream);

//	// extern CFStreamError CFWriteStreamGetError (CFWriteStreamRef stream) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStreamError CFWriteStreamGetError (CFWriteStreamRef* stream);

//	// extern CFPropertyListRef CFPropertyListCreateFromXMLData (CFAllocatorRef allocator, CFDataRef xmlData, CFOptionFlags mutabilityOption, CFStringRef *errorString) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.10)));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListCreateWithData instead.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListCreateWithData instead.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListCreateWithData instead.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListCreateWithData instead.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFPropertyListCreateWithData instead.")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFPropertyListCreateWithData instead.")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Use CFPropertyListCreateWithData instead.")]
//	[Deprecated (PlatformName.MacOSX, 10, 10, message: "Use CFPropertyListCreateWithData instead.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFPropertyListCreateFromXMLData (CFAllocatorRef* allocator, CFDataRef* xmlData, nuint mutabilityOption, CFStringRef** errorString);

//	// extern CFDataRef CFPropertyListCreateXMLData (CFAllocatorRef allocator, CFPropertyListRef propertyList) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.10)));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListCreateData instead.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListCreateData instead.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListCreateData instead.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListCreateData instead.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFPropertyListCreateData instead.")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFPropertyListCreateData instead.")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Use CFPropertyListCreateData instead.")]
//	[Deprecated (PlatformName.MacOSX, 10, 10, message: "Use CFPropertyListCreateData instead.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFPropertyListCreateXMLData (CFAllocatorRef* allocator, void* propertyList);

//	// extern CFPropertyListRef CFPropertyListCreateDeepCopy (CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFPropertyListCreateDeepCopy (CFAllocatorRef* allocator, void* propertyList, nuint mutabilityOption);

//	// extern Boolean CFPropertyListIsValid (CFPropertyListRef plist, CFPropertyListFormat format) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPropertyListIsValid (void* plist, CFPropertyListFormat format);

//	// extern CFIndex CFPropertyListWriteToStream (CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFStringRef *errorString) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(macos, introduced=10.2, deprecated=10.10)));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListWrite instead.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListWrite instead.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListWrite instead.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListWrite instead.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFPropertyListWrite instead.")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFPropertyListWrite instead.")]
//	[Introduced (PlatformName.MacOSX, 10, 2, message: "Use CFPropertyListWrite instead.")]
//	[Deprecated (PlatformName.MacOSX, 10, 10, message: "Use CFPropertyListWrite instead.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFPropertyListWriteToStream (void* propertyList, CFWriteStreamRef* stream, CFPropertyListFormat format, CFStringRef** errorString);

//	// extern CFPropertyListRef CFPropertyListCreateFromStream (CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags mutabilityOption, CFPropertyListFormat *format, CFStringRef *errorString) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(macos, introduced=10.2, deprecated=10.10)));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListCreateWithStream instead.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use CFPropertyListCreateWithStream instead.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListCreateWithStream instead.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use CFPropertyListCreateWithStream instead.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFPropertyListCreateWithStream instead.")]
//	[Deprecated (PlatformName.iOS, 8, 0, message: "Use CFPropertyListCreateWithStream instead.")]
//	[Introduced (PlatformName.MacOSX, 10, 2, message: "Use CFPropertyListCreateWithStream instead.")]
//	[Deprecated (PlatformName.MacOSX, 10, 10, message: "Use CFPropertyListCreateWithStream instead.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFPropertyListCreateFromStream (CFAllocatorRef* allocator, CFReadStreamRef* stream, nint streamLength, nuint mutabilityOption, CFPropertyListFormat* format, CFStringRef** errorString);

//	// extern CFPropertyListRef CFPropertyListCreateWithData (CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFPropertyListCreateWithData (CFAllocatorRef* allocator, CFDataRef* data, nuint options, CFPropertyListFormat* format, CFErrorRef** error);

//	// extern CFPropertyListRef CFPropertyListCreateWithStream (CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFPropertyListCreateWithStream (CFAllocatorRef* allocator, CFReadStreamRef* stream, nint streamLength, nuint options, CFPropertyListFormat* format, CFErrorRef** error);

//	// extern CFIndex CFPropertyListWrite (CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFPropertyListWrite (void* propertyList, CFWriteStreamRef* stream, CFPropertyListFormat format, nuint options, CFErrorRef** error);

//	// extern CFDataRef CFPropertyListCreateData (CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* CFPropertyListCreateData (CFAllocatorRef* allocator, void* propertyList, CFPropertyListFormat format, nuint options, CFErrorRef** error);

//	// extern CFTypeID CFSetGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFSetGetTypeID ();

//	// extern CFSetRef CFSetCreate (CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSetRef* CFSetCreate (CFAllocatorRef* allocator, void** values, nint numValues, CFSetCallBacks* callBacks);

//	// extern CFSetRef CFSetCreateCopy (CFAllocatorRef allocator, CFSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFSetRef* CFSetCreateCopy (CFAllocatorRef* allocator, CFSetRef* theSet);

//	// extern CFMutableSetRef CFSetCreateMutable (CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableSetRef* CFSetCreateMutable (CFAllocatorRef* allocator, nint capacity, CFSetCallBacks* callBacks);

//	// extern CFMutableSetRef CFSetCreateMutableCopy (CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableSetRef* CFSetCreateMutableCopy (CFAllocatorRef* allocator, nint capacity, CFSetRef* theSet);

//	// extern CFIndex CFSetGetCount (CFSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFSetGetCount (CFSetRef* theSet);

//	// extern CFIndex CFSetGetCountOfValue (CFSetRef theSet, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFSetGetCountOfValue (CFSetRef* theSet, void* value);

//	// extern Boolean CFSetContainsValue (CFSetRef theSet, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFSetContainsValue (CFSetRef* theSet, void* value);

//	// extern const void * CFSetGetValue (CFSetRef theSet, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFSetGetValue (CFSetRef* theSet, void* value);

//	// extern Boolean CFSetGetValueIfPresent (CFSetRef theSet, const void *candidate, const void **value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFSetGetValueIfPresent (CFSetRef* theSet, void* candidate, void** value);

//	// extern void CFSetGetValues (CFSetRef theSet, const void **values) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSetGetValues (CFSetRef* theSet, void** values);

//	// extern void CFSetApplyFunction (CFSetRef theSet, CFSetApplierFunction applier, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSetApplyFunction (CFSetRef* theSet, CFSetApplierFunction* applier, void* context);

//	// extern void CFSetAddValue (CFMutableSetRef theSet, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSetAddValue (CFMutableSetRef* theSet, void* value);

//	// extern void CFSetReplaceValue (CFMutableSetRef theSet, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSetReplaceValue (CFMutableSetRef* theSet, void* value);

//	// extern void CFSetSetValue (CFMutableSetRef theSet, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSetSetValue (CFMutableSetRef* theSet, void* value);

//	// extern void CFSetRemoveValue (CFMutableSetRef theSet, const void *value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSetRemoveValue (CFMutableSetRef* theSet, void* value);

//	// extern void CFSetRemoveAllValues (CFMutableSetRef theSet) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFSetRemoveAllValues (CFMutableSetRef* theSet);

//	// extern CFTypeID CFTreeGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFTreeGetTypeID ();

//	// extern CFTreeRef CFTreeCreate (CFAllocatorRef allocator, const CFTreeContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTreeRef* CFTreeCreate (CFAllocatorRef* allocator, CFTreeContext* context);

//	// extern CFTreeRef CFTreeGetParent (CFTreeRef tree) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTreeRef* CFTreeGetParent (CFTreeRef* tree);

//	// extern CFTreeRef CFTreeGetNextSibling (CFTreeRef tree) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTreeRef* CFTreeGetNextSibling (CFTreeRef* tree);

//	// extern CFTreeRef CFTreeGetFirstChild (CFTreeRef tree) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTreeRef* CFTreeGetFirstChild (CFTreeRef* tree);

//	// extern void CFTreeGetContext (CFTreeRef tree, CFTreeContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeGetContext (CFTreeRef* tree, CFTreeContext* context);

//	// extern CFIndex CFTreeGetChildCount (CFTreeRef tree) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFTreeGetChildCount (CFTreeRef* tree);

//	// extern CFTreeRef CFTreeGetChildAtIndex (CFTreeRef tree, CFIndex idx) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTreeRef* CFTreeGetChildAtIndex (CFTreeRef* tree, nint idx);

//	// extern void CFTreeGetChildren (CFTreeRef tree, CFTreeRef *children) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeGetChildren (CFTreeRef* tree, CFTreeRef** children);

//	// extern void CFTreeApplyFunctionToChildren (CFTreeRef tree, CFTreeApplierFunction applier, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeApplyFunctionToChildren (CFTreeRef* tree, CFTreeApplierFunction* applier, void* context);

//	// extern CFTreeRef CFTreeFindRoot (CFTreeRef tree) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFTreeRef* CFTreeFindRoot (CFTreeRef* tree);

//	// extern void CFTreeSetContext (CFTreeRef tree, const CFTreeContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeSetContext (CFTreeRef* tree, CFTreeContext* context);

//	// extern void CFTreePrependChild (CFTreeRef tree, CFTreeRef newChild) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreePrependChild (CFTreeRef* tree, CFTreeRef* newChild);

//	// extern void CFTreeAppendChild (CFTreeRef tree, CFTreeRef newChild) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeAppendChild (CFTreeRef* tree, CFTreeRef* newChild);

//	// extern void CFTreeInsertSibling (CFTreeRef tree, CFTreeRef newSibling) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeInsertSibling (CFTreeRef* tree, CFTreeRef* newSibling);

//	// extern void CFTreeRemove (CFTreeRef tree) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeRemove (CFTreeRef* tree);

//	// extern void CFTreeRemoveAllChildren (CFTreeRef tree) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeRemoveAllChildren (CFTreeRef* tree);

//	// extern void CFTreeSortChildren (CFTreeRef tree, CFComparatorFunction comparator, void *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFTreeSortChildren (CFTreeRef* tree, CFComparatorFunction* comparator, void* context);

//	// extern Boolean CFURLCreateDataAndPropertiesFromResource (CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.9))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.iOS, 7, 0, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLCreateDataAndPropertiesFromResource (CFAllocatorRef* alloc, CFURLRef* url, CFDataRef** resourceData, CFDictionaryRef** properties, CFArrayRef* desiredProperties, int* errorCode);

//	// extern Boolean CFURLWriteDataAndPropertiesToResource (CFURLRef url, CFDataRef dataToWrite, CFDictionaryRef propertiesToWrite, SInt32 *errorCode) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.9))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.iOS, 7, 0, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLWriteDataAndPropertiesToResource (CFURLRef* url, CFDataRef* dataToWrite, CFDictionaryRef* propertiesToWrite, int* errorCode);

//	// extern Boolean CFURLDestroyResource (CFURLRef url, SInt32 *errorCode) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.9))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[Deprecated (PlatformName.iOS, 7, 0, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "Use CFURLGetFileSystemRepresentation and removefile(3) instead.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLDestroyResource (CFURLRef* url, int* errorCode);

//	// extern CFTypeRef CFURLCreatePropertyFromResource (CFAllocatorRef alloc, CFURLRef url, CFStringRef property, SInt32 *errorCode) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.9))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[Deprecated (PlatformName.iOS, 7, 0, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[Deprecated (PlatformName.MacOSX, 10, 9, message: "For file resource properties, use CFURLCopyResourcePropertyForKey.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFURLCreatePropertyFromResource (CFAllocatorRef* alloc, CFURLRef* url, CFStringRef* property, int* errorCode);

//	// extern CFTypeID CFUUIDGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFUUIDGetTypeID ();

//	// extern CFUUIDRef CFUUIDCreate (CFAllocatorRef alloc) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFUUIDRef* CFUUIDCreate (CFAllocatorRef* alloc);

//	// extern CFUUIDRef CFUUIDCreateWithBytes (CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFUUIDRef* CFUUIDCreateWithBytes (CFAllocatorRef* alloc, byte byte0, byte byte1, byte byte2, byte byte3, byte byte4, byte byte5, byte byte6, byte byte7, byte byte8, byte byte9, byte byte10, byte byte11, byte byte12, byte byte13, byte byte14, byte byte15);

//	// extern CFUUIDRef CFUUIDCreateFromString (CFAllocatorRef alloc, CFStringRef uuidStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFUUIDRef* CFUUIDCreateFromString (CFAllocatorRef* alloc, CFStringRef* uuidStr);

//	// extern CFStringRef CFUUIDCreateString (CFAllocatorRef alloc, CFUUIDRef uuid) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFUUIDCreateString (CFAllocatorRef* alloc, CFUUIDRef* uuid);

//	// extern CFUUIDRef CFUUIDGetConstantUUIDWithBytes (CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFUUIDRef* CFUUIDGetConstantUUIDWithBytes (CFAllocatorRef* alloc, byte byte0, byte byte1, byte byte2, byte byte3, byte byte4, byte byte5, byte byte6, byte byte7, byte byte8, byte byte9, byte byte10, byte byte11, byte byte12, byte byte13, byte byte14, byte byte15);

//	// extern CFUUIDBytes CFUUIDGetUUIDBytes (CFUUIDRef uuid) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFUUIDBytes CFUUIDGetUUIDBytes (CFUUIDRef* uuid);

//	// extern CFUUIDRef CFUUIDCreateFromUUIDBytes (CFAllocatorRef alloc, CFUUIDBytes bytes) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFUUIDRef* CFUUIDCreateFromUUIDBytes (CFAllocatorRef* alloc, CFUUIDBytes bytes);

//	// extern CFURLRef CFCopyHomeDirectoryURL () __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFCopyHomeDirectoryURL ();

//	// extern CFBundleRef CFBundleGetMainBundle () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBundleRef* CFBundleGetMainBundle ();

//	// extern CFBundleRef CFBundleGetBundleWithIdentifier (CFStringRef bundleID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBundleRef* CFBundleGetBundleWithIdentifier (CFStringRef* bundleID);

//	// extern CFArrayRef CFBundleGetAllBundles () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleGetAllBundles ();

//	// extern CFTypeID CFBundleGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFBundleGetTypeID ();

//	// extern CFBundleRef CFBundleCreate (CFAllocatorRef allocator, CFURLRef bundleURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBundleRef* CFBundleCreate (CFAllocatorRef* allocator, CFURLRef* bundleURL);

//	// extern CFArrayRef CFBundleCreateBundlesFromDirectory (CFAllocatorRef allocator, CFURLRef directoryURL, CFStringRef bundleType) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCreateBundlesFromDirectory (CFAllocatorRef* allocator, CFURLRef* directoryURL, CFStringRef* bundleType);

//	// extern CFURLRef CFBundleCopyBundleURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyBundleURL (CFBundleRef* bundle);

//	// extern CFTypeRef CFBundleGetValueForInfoDictionaryKey (CFBundleRef bundle, CFStringRef key) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFBundleGetValueForInfoDictionaryKey (CFBundleRef* bundle, CFStringRef* key);

//	// extern CFDictionaryRef CFBundleGetInfoDictionary (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFBundleGetInfoDictionary (CFBundleRef* bundle);

//	// extern CFDictionaryRef CFBundleGetLocalInfoDictionary (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFBundleGetLocalInfoDictionary (CFBundleRef* bundle);

//	// extern void CFBundleGetPackageInfo (CFBundleRef bundle, UInt32 *packageType, UInt32 *packageCreator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBundleGetPackageInfo (CFBundleRef* bundle, uint* packageType, uint* packageCreator);

//	// extern CFStringRef CFBundleGetIdentifier (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFBundleGetIdentifier (CFBundleRef* bundle);

//	// extern UInt32 CFBundleGetVersionNumber (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CFBundleGetVersionNumber (CFBundleRef* bundle);

//	// extern CFStringRef CFBundleGetDevelopmentRegion (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFBundleGetDevelopmentRegion (CFBundleRef* bundle);

//	// extern CFURLRef CFBundleCopySupportFilesDirectoryURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopySupportFilesDirectoryURL (CFBundleRef* bundle);

//	// extern CFURLRef CFBundleCopyResourcesDirectoryURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyResourcesDirectoryURL (CFBundleRef* bundle);

//	// extern CFURLRef CFBundleCopyPrivateFrameworksURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyPrivateFrameworksURL (CFBundleRef* bundle);

//	// extern CFURLRef CFBundleCopySharedFrameworksURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopySharedFrameworksURL (CFBundleRef* bundle);

//	// extern CFURLRef CFBundleCopySharedSupportURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopySharedSupportURL (CFBundleRef* bundle);

//	// extern CFURLRef CFBundleCopyBuiltInPlugInsURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyBuiltInPlugInsURL (CFBundleRef* bundle);

//	// extern CFDictionaryRef CFBundleCopyInfoDictionaryInDirectory (CFURLRef bundleURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFBundleCopyInfoDictionaryInDirectory (CFURLRef* bundleURL);

//	// extern Boolean CFBundleGetPackageInfoInDirectory (CFURLRef url, UInt32 *packageType, UInt32 *packageCreator) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBundleGetPackageInfoInDirectory (CFURLRef* url, uint* packageType, uint* packageCreator);

//	// extern CFURLRef CFBundleCopyResourceURL (CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyResourceURL (CFBundleRef* bundle, CFStringRef* resourceName, CFStringRef* resourceType, CFStringRef* subDirName);

//	// extern CFArrayRef CFBundleCopyResourceURLsOfType (CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyResourceURLsOfType (CFBundleRef* bundle, CFStringRef* resourceType, CFStringRef* subDirName);

//	// extern CFStringRef CFBundleCopyLocalizedString (CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName) __attribute__((format_arg(2))) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFBundleCopyLocalizedString (CFBundleRef* bundle, CFStringRef* key, CFStringRef* value, CFStringRef* tableName);

//	// extern CFURLRef CFBundleCopyResourceURLInDirectory (CFURLRef bundleURL, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyResourceURLInDirectory (CFURLRef* bundleURL, CFStringRef* resourceName, CFStringRef* resourceType, CFStringRef* subDirName);

//	// extern CFArrayRef CFBundleCopyResourceURLsOfTypeInDirectory (CFURLRef bundleURL, CFStringRef resourceType, CFStringRef subDirName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyResourceURLsOfTypeInDirectory (CFURLRef* bundleURL, CFStringRef* resourceType, CFStringRef* subDirName);

//	// extern CFArrayRef CFBundleCopyBundleLocalizations (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyBundleLocalizations (CFBundleRef* bundle);

//	// extern CFArrayRef CFBundleCopyPreferredLocalizationsFromArray (CFArrayRef locArray) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyPreferredLocalizationsFromArray (CFArrayRef* locArray);

//	// extern CFArrayRef CFBundleCopyLocalizationsForPreferences (CFArrayRef locArray, CFArrayRef prefArray) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyLocalizationsForPreferences (CFArrayRef* locArray, CFArrayRef* prefArray);

//	// extern CFURLRef CFBundleCopyResourceURLForLocalization (CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyResourceURLForLocalization (CFBundleRef* bundle, CFStringRef* resourceName, CFStringRef* resourceType, CFStringRef* subDirName, CFStringRef* localizationName);

//	// extern CFArrayRef CFBundleCopyResourceURLsOfTypeForLocalization (CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyResourceURLsOfTypeForLocalization (CFBundleRef* bundle, CFStringRef* resourceType, CFStringRef* subDirName, CFStringRef* localizationName);

//	// extern CFDictionaryRef CFBundleCopyInfoDictionaryForURL (CFURLRef url) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFBundleCopyInfoDictionaryForURL (CFURLRef* url);

//	// extern CFArrayRef CFBundleCopyLocalizationsForURL (CFURLRef url) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyLocalizationsForURL (CFURLRef* url);

//	// extern CFArrayRef CFBundleCopyExecutableArchitecturesForURL (CFURLRef url) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyExecutableArchitecturesForURL (CFURLRef* url);

//	// extern CFURLRef CFBundleCopyExecutableURL (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyExecutableURL (CFBundleRef* bundle);

//	// extern CFArrayRef CFBundleCopyExecutableArchitectures (CFBundleRef bundle) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFBundleCopyExecutableArchitectures (CFBundleRef* bundle);

//	// extern Boolean CFBundlePreflightExecutable (CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBundlePreflightExecutable (CFBundleRef* bundle, CFErrorRef** error);

//	// extern Boolean CFBundleLoadExecutableAndReturnError (CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBundleLoadExecutableAndReturnError (CFBundleRef* bundle, CFErrorRef** error);

//	// extern Boolean CFBundleLoadExecutable (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBundleLoadExecutable (CFBundleRef* bundle);

//	// extern Boolean CFBundleIsExecutableLoaded (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFBundleIsExecutableLoaded (CFBundleRef* bundle);

//	// extern void CFBundleUnloadExecutable (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBundleUnloadExecutable (CFBundleRef* bundle);

//	// extern void * CFBundleGetFunctionPointerForName (CFBundleRef bundle, CFStringRef functionName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFBundleGetFunctionPointerForName (CFBundleRef* bundle, CFStringRef* functionName);

//	// extern void CFBundleGetFunctionPointersForNames (CFBundleRef bundle, CFArrayRef functionNames, void **ftbl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBundleGetFunctionPointersForNames (CFBundleRef* bundle, CFArrayRef* functionNames, void*[] ftbl);

//	// extern void * CFBundleGetDataPointerForName (CFBundleRef bundle, CFStringRef symbolName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFBundleGetDataPointerForName (CFBundleRef* bundle, CFStringRef* symbolName);

//	// extern void CFBundleGetDataPointersForNames (CFBundleRef bundle, CFArrayRef symbolNames, void **stbl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBundleGetDataPointersForNames (CFBundleRef* bundle, CFArrayRef* symbolNames, void*[] stbl);

//	// extern CFURLRef CFBundleCopyAuxiliaryExecutableURL (CFBundleRef bundle, CFStringRef executableName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLRef* CFBundleCopyAuxiliaryExecutableURL (CFBundleRef* bundle, CFStringRef* executableName);

//	// extern CFPlugInRef CFBundleGetPlugIn (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFPlugInRef* CFBundleGetPlugIn (CFBundleRef* bundle);

//	// extern CFBundleRefNum CFBundleOpenBundleResourceMap (CFBundleRef bundle) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFBundleOpenBundleResourceMap (CFBundleRef* bundle);

//	// extern SInt32 CFBundleOpenBundleResourceFiles (CFBundleRef bundle, CFBundleRefNum *refNum, CFBundleRefNum *localizedRefNum) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFBundleOpenBundleResourceFiles (CFBundleRef* bundle, int* refNum, int* localizedRefNum);

//	// extern void CFBundleCloseBundleResourceMap (CFBundleRef bundle, CFBundleRefNum refNum) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFBundleCloseBundleResourceMap (CFBundleRef* bundle, int refNum);

//	// extern CFTypeID CFMessagePortGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFMessagePortGetTypeID ();

//	// extern CFMessagePortRef CFMessagePortCreateLocal (CFAllocatorRef allocator, CFStringRef name, CFMessagePortCallBack callout, CFMessagePortContext *context, Boolean *shouldFreeInfo) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMessagePortRef* CFMessagePortCreateLocal (CFAllocatorRef* allocator, CFStringRef* name, CFMessagePortCallBack* callout, CFMessagePortContext* context, byte* shouldFreeInfo);

//	// extern CFMessagePortRef CFMessagePortCreateRemote (CFAllocatorRef allocator, CFStringRef name) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMessagePortRef* CFMessagePortCreateRemote (CFAllocatorRef* allocator, CFStringRef* name);

//	// extern Boolean CFMessagePortIsRemote (CFMessagePortRef ms) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFMessagePortIsRemote (CFMessagePortRef* ms);

//	// extern CFStringRef CFMessagePortGetName (CFMessagePortRef ms) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFMessagePortGetName (CFMessagePortRef* ms);

//	// extern Boolean CFMessagePortSetName (CFMessagePortRef ms, CFStringRef newName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFMessagePortSetName (CFMessagePortRef* ms, CFStringRef* newName);

//	// extern void CFMessagePortGetContext (CFMessagePortRef ms, CFMessagePortContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFMessagePortGetContext (CFMessagePortRef* ms, CFMessagePortContext* context);

//	// extern void CFMessagePortInvalidate (CFMessagePortRef ms) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFMessagePortInvalidate (CFMessagePortRef* ms);

//	// extern Boolean CFMessagePortIsValid (CFMessagePortRef ms) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFMessagePortIsValid (CFMessagePortRef* ms);

//	// extern CFMessagePortInvalidationCallBack CFMessagePortGetInvalidationCallBack (CFMessagePortRef ms) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMessagePortInvalidationCallBack* CFMessagePortGetInvalidationCallBack (CFMessagePortRef* ms);

//	// extern void CFMessagePortSetInvalidationCallBack (CFMessagePortRef ms, CFMessagePortInvalidationCallBack callout) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFMessagePortSetInvalidationCallBack (CFMessagePortRef* ms, CFMessagePortInvalidationCallBack* callout);

//	// extern SInt32 CFMessagePortSendRequest (CFMessagePortRef remote, SInt32 msgid, CFDataRef data, CFTimeInterval sendTimeout, CFTimeInterval rcvTimeout, CFStringRef replyMode, CFDataRef *returnData) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFMessagePortSendRequest (CFMessagePortRef* remote, int msgid, CFDataRef* data, double sendTimeout, double rcvTimeout, CFStringRef* replyMode, CFDataRef** returnData);

//	// extern CFRunLoopSourceRef CFMessagePortCreateRunLoopSource (CFAllocatorRef allocator, CFMessagePortRef local, CFIndex order) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopSourceRef* CFMessagePortCreateRunLoopSource (CFAllocatorRef* allocator, CFMessagePortRef* local, nint order);

//	// extern void CFMessagePortSetDispatchQueue (CFMessagePortRef ms, dispatch_queue_t queue) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFMessagePortSetDispatchQueue (CFMessagePortRef* ms, DispatchQueue queue);

//	// extern CFTypeID CFPlugInGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFPlugInGetTypeID ();

//	// extern CFPlugInRef CFPlugInCreate (CFAllocatorRef allocator, CFURLRef plugInURL) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFPlugInRef* CFPlugInCreate (CFAllocatorRef* allocator, CFURLRef* plugInURL);

//	// extern CFBundleRef CFPlugInGetBundle (CFPlugInRef plugIn) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFBundleRef* CFPlugInGetBundle (CFPlugInRef* plugIn);

//	// extern void CFPlugInSetLoadOnDemand (CFPlugInRef plugIn, Boolean flag) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPlugInSetLoadOnDemand (CFPlugInRef* plugIn, byte flag);

//	// extern Boolean CFPlugInIsLoadOnDemand (CFPlugInRef plugIn) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPlugInIsLoadOnDemand (CFPlugInRef* plugIn);

//	// extern CFArrayRef CFPlugInFindFactoriesForPlugInType (CFUUIDRef typeUUID) __attribute__((cf_returns_retained)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFPlugInFindFactoriesForPlugInType (CFUUIDRef* typeUUID);

//	// extern CFArrayRef CFPlugInFindFactoriesForPlugInTypeInPlugIn (CFUUIDRef typeUUID, CFPlugInRef plugIn) __attribute__((cf_returns_retained)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFPlugInFindFactoriesForPlugInTypeInPlugIn (CFUUIDRef* typeUUID, CFPlugInRef* plugIn);

//	// extern void * CFPlugInInstanceCreate (CFAllocatorRef allocator, CFUUIDRef factoryUUID, CFUUIDRef typeUUID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFPlugInInstanceCreate (CFAllocatorRef* allocator, CFUUIDRef* factoryUUID, CFUUIDRef* typeUUID);

//	// extern Boolean CFPlugInRegisterFactoryFunction (CFUUIDRef factoryUUID, CFPlugInFactoryFunction func) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPlugInRegisterFactoryFunction (CFUUIDRef* factoryUUID, CFPlugInFactoryFunction* func);

//	// extern Boolean CFPlugInRegisterFactoryFunctionByName (CFUUIDRef factoryUUID, CFPlugInRef plugIn, CFStringRef functionName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPlugInRegisterFactoryFunctionByName (CFUUIDRef* factoryUUID, CFPlugInRef* plugIn, CFStringRef* functionName);

//	// extern Boolean CFPlugInUnregisterFactory (CFUUIDRef factoryUUID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPlugInUnregisterFactory (CFUUIDRef* factoryUUID);

//	// extern Boolean CFPlugInRegisterPlugInType (CFUUIDRef factoryUUID, CFUUIDRef typeUUID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPlugInRegisterPlugInType (CFUUIDRef* factoryUUID, CFUUIDRef* typeUUID);

//	// extern Boolean CFPlugInUnregisterPlugInType (CFUUIDRef factoryUUID, CFUUIDRef typeUUID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPlugInUnregisterPlugInType (CFUUIDRef* factoryUUID, CFUUIDRef* typeUUID);

//	// extern void CFPlugInAddInstanceForFactory (CFUUIDRef factoryID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPlugInAddInstanceForFactory (CFUUIDRef* factoryID);

//	// extern void CFPlugInRemoveInstanceForFactory (CFUUIDRef factoryID) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFPlugInRemoveInstanceForFactory (CFUUIDRef* factoryID);

//	// extern Boolean CFPlugInInstanceGetInterfaceFunctionTable (CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFPlugInInstanceGetInterfaceFunctionTable (CFPlugInInstanceRef* instance, CFStringRef* interfaceName, void** ftbl);

//	// extern CFStringRef CFPlugInInstanceGetFactoryName (CFPlugInInstanceRef instance) __attribute__((cf_returns_retained)) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFPlugInInstanceGetFactoryName (CFPlugInInstanceRef* instance);

//	// extern void * CFPlugInInstanceGetInstanceData (CFPlugInInstanceRef instance) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFPlugInInstanceGetInstanceData (CFPlugInInstanceRef* instance);

//	// extern CFTypeID CFPlugInInstanceGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFPlugInInstanceGetTypeID ();

//	// extern CFPlugInInstanceRef CFPlugInInstanceCreateWithInstanceDataSize (CFAllocatorRef allocator, CFIndex instanceDataSize, CFPlugInInstanceDeallocateInstanceDataFunction deallocateInstanceFunction, CFStringRef factoryName, CFPlugInInstanceGetInterfaceFunction getInterfaceFunction) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFPlugInInstanceRef* CFPlugInInstanceCreateWithInstanceDataSize (CFAllocatorRef* allocator, nint instanceDataSize, CFPlugInInstanceDeallocateInstanceDataFunction* deallocateInstanceFunction, CFStringRef* factoryName, CFPlugInInstanceGetInterfaceFunction* getInterfaceFunction);

//	// extern CFTypeID CFMachPortGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFMachPortGetTypeID ();

//	// extern CFMachPortRef CFMachPortCreate (CFAllocatorRef allocator, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMachPortRef* CFMachPortCreate (CFAllocatorRef* allocator, CFMachPortCallBack* callout, CFMachPortContext* context, byte* shouldFreeInfo);

//	// extern CFMachPortRef CFMachPortCreateWithPort (CFAllocatorRef allocator, mach_port_t portNum, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMachPortRef* CFMachPortCreateWithPort (CFAllocatorRef* allocator, uint portNum, CFMachPortCallBack* callout, CFMachPortContext* context, byte* shouldFreeInfo);

//	// extern mach_port_t CFMachPortGetPort (CFMachPortRef port) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CFMachPortGetPort (CFMachPortRef* port);

//	// extern void CFMachPortGetContext (CFMachPortRef port, CFMachPortContext *context) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFMachPortGetContext (CFMachPortRef* port, CFMachPortContext* context);

//	// extern void CFMachPortInvalidate (CFMachPortRef port) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFMachPortInvalidate (CFMachPortRef* port);

//	// extern Boolean CFMachPortIsValid (CFMachPortRef port) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFMachPortIsValid (CFMachPortRef* port);

//	// extern CFMachPortInvalidationCallBack CFMachPortGetInvalidationCallBack (CFMachPortRef port) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMachPortInvalidationCallBack* CFMachPortGetInvalidationCallBack (CFMachPortRef* port);

//	// extern void CFMachPortSetInvalidationCallBack (CFMachPortRef port, CFMachPortInvalidationCallBack callout) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFMachPortSetInvalidationCallBack (CFMachPortRef* port, CFMachPortInvalidationCallBack* callout);

//	// extern CFRunLoopSourceRef CFMachPortCreateRunLoopSource (CFAllocatorRef allocator, CFMachPortRef port, CFIndex order) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopSourceRef* CFMachPortCreateRunLoopSource (CFAllocatorRef* allocator, CFMachPortRef* port, nint order);

//	// extern CFTypeID CFAttributedStringGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFAttributedStringGetTypeID ();

//	// extern CFAttributedStringRef CFAttributedStringCreate (CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFAttributedStringRef* CFAttributedStringCreate (CFAllocatorRef* alloc, CFStringRef* str, CFDictionaryRef* attributes);

//	// extern CFAttributedStringRef CFAttributedStringCreateWithSubstring (CFAllocatorRef alloc, CFAttributedStringRef aStr, CFRange range) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFAttributedStringRef* CFAttributedStringCreateWithSubstring (CFAllocatorRef* alloc, CFAttributedStringRef* aStr, CFRange range);

//	// extern CFAttributedStringRef CFAttributedStringCreateCopy (CFAllocatorRef alloc, CFAttributedStringRef aStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFAttributedStringRef* CFAttributedStringCreateCopy (CFAllocatorRef* alloc, CFAttributedStringRef* aStr);

//	// extern CFStringRef CFAttributedStringGetString (CFAttributedStringRef aStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFAttributedStringGetString (CFAttributedStringRef* aStr);

//	// extern CFIndex CFAttributedStringGetLength (CFAttributedStringRef aStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFAttributedStringGetLength (CFAttributedStringRef* aStr);

//	// extern CFDictionaryRef CFAttributedStringGetAttributes (CFAttributedStringRef aStr, CFIndex loc, CFRange *effectiveRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFAttributedStringGetAttributes (CFAttributedStringRef* aStr, nint loc, CFRange* effectiveRange);

//	// extern CFTypeRef CFAttributedStringGetAttribute (CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange *effectiveRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFAttributedStringGetAttribute (CFAttributedStringRef* aStr, nint loc, CFStringRef* attrName, CFRange* effectiveRange);

//	// extern CFDictionaryRef CFAttributedStringGetAttributesAndLongestEffectiveRange (CFAttributedStringRef aStr, CFIndex loc, CFRange inRange, CFRange *longestEffectiveRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CFAttributedStringGetAttributesAndLongestEffectiveRange (CFAttributedStringRef* aStr, nint loc, CFRange inRange, CFRange* longestEffectiveRange);

//	// extern CFTypeRef CFAttributedStringGetAttributeAndLongestEffectiveRange (CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange inRange, CFRange *longestEffectiveRange) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFAttributedStringGetAttributeAndLongestEffectiveRange (CFAttributedStringRef* aStr, nint loc, CFStringRef* attrName, CFRange inRange, CFRange* longestEffectiveRange);

//	// extern CFMutableAttributedStringRef CFAttributedStringCreateMutableCopy (CFAllocatorRef alloc, CFIndex maxLength, CFAttributedStringRef aStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableAttributedStringRef* CFAttributedStringCreateMutableCopy (CFAllocatorRef* alloc, nint maxLength, CFAttributedStringRef* aStr);

//	// extern CFMutableAttributedStringRef CFAttributedStringCreateMutable (CFAllocatorRef alloc, CFIndex maxLength) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableAttributedStringRef* CFAttributedStringCreateMutable (CFAllocatorRef* alloc, nint maxLength);

//	// extern void CFAttributedStringReplaceString (CFMutableAttributedStringRef aStr, CFRange range, CFStringRef replacement) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAttributedStringReplaceString (CFMutableAttributedStringRef* aStr, CFRange range, CFStringRef* replacement);

//	// extern CFMutableStringRef CFAttributedStringGetMutableString (CFMutableAttributedStringRef aStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFMutableStringRef* CFAttributedStringGetMutableString (CFMutableAttributedStringRef* aStr);

//	// extern void CFAttributedStringSetAttributes (CFMutableAttributedStringRef aStr, CFRange range, CFDictionaryRef replacement, Boolean clearOtherAttributes) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAttributedStringSetAttributes (CFMutableAttributedStringRef* aStr, CFRange range, CFDictionaryRef* replacement, byte clearOtherAttributes);

//	// extern void CFAttributedStringSetAttribute (CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName, CFTypeRef value) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAttributedStringSetAttribute (CFMutableAttributedStringRef* aStr, CFRange range, CFStringRef* attrName, void* value);

//	// extern void CFAttributedStringRemoveAttribute (CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAttributedStringRemoveAttribute (CFMutableAttributedStringRef* aStr, CFRange range, CFStringRef* attrName);

//	// extern void CFAttributedStringReplaceAttributedString (CFMutableAttributedStringRef aStr, CFRange range, CFAttributedStringRef replacement) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAttributedStringReplaceAttributedString (CFMutableAttributedStringRef* aStr, CFRange range, CFAttributedStringRef* replacement);

//	// extern void CFAttributedStringBeginEditing (CFMutableAttributedStringRef aStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAttributedStringBeginEditing (CFMutableAttributedStringRef* aStr);

//	// extern void CFAttributedStringEndEditing (CFMutableAttributedStringRef aStr) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFAttributedStringEndEditing (CFMutableAttributedStringRef* aStr);

//	// extern CFTypeID CFURLEnumeratorGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFURLEnumeratorGetTypeID ();

//	// extern CFURLEnumeratorRef CFURLEnumeratorCreateForDirectoryURL (CFAllocatorRef alloc, CFURLRef directoryURL, CFURLEnumeratorOptions option, CFArrayRef propertyKeys) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLEnumeratorRef* CFURLEnumeratorCreateForDirectoryURL (CFAllocatorRef* alloc, CFURLRef* directoryURL, CFURLEnumeratorOptions option, CFArrayRef* propertyKeys);

//	// extern CFURLEnumeratorRef CFURLEnumeratorCreateForMountedVolumes (CFAllocatorRef alloc, CFURLEnumeratorOptions option, CFArrayRef propertyKeys) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLEnumeratorRef* CFURLEnumeratorCreateForMountedVolumes (CFAllocatorRef* alloc, CFURLEnumeratorOptions option, CFArrayRef* propertyKeys);

//	// extern CFURLEnumeratorResult CFURLEnumeratorGetNextURL (CFURLEnumeratorRef enumerator, CFURLRef *url, CFErrorRef *error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFURLEnumeratorResult CFURLEnumeratorGetNextURL (CFURLEnumeratorRef* enumerator, CFURLRef** url, CFErrorRef** error);

//	// extern void CFURLEnumeratorSkipDescendents (CFURLEnumeratorRef enumerator) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFURLEnumeratorSkipDescendents (CFURLEnumeratorRef* enumerator);

//	// extern CFIndex CFURLEnumeratorGetDescendentLevel (CFURLEnumeratorRef enumerator) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFURLEnumeratorGetDescendentLevel (CFURLEnumeratorRef* enumerator);

//	// extern Boolean CFURLEnumeratorGetSourceDidChange (CFURLEnumeratorRef enumerator) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=4.0, deprecated=5.0))) __attribute__((availability(macos, introduced=10.6, deprecated=10.7))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use File System Events API instead")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use File System Events API instead")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use File System Events API instead")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use File System Events API instead")]
//	[Introduced (PlatformName.iOS, 4, 0, message: "Use File System Events API instead")]
//	[Deprecated (PlatformName.iOS, 5, 0, message: "Use File System Events API instead")]
//	[Introduced (PlatformName.MacOSX, 10, 6, message: "Use File System Events API instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 7, message: "Use File System Events API instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFURLEnumeratorGetSourceDidChange (CFURLEnumeratorRef* enumerator);

//	// extern CFTypeID CFFileSecurityGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFFileSecurityGetTypeID ();

//	// extern CFFileSecurityRef CFFileSecurityCreate (CFAllocatorRef allocator) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFFileSecurityRef* CFFileSecurityCreate (CFAllocatorRef* allocator);

//	// extern CFFileSecurityRef CFFileSecurityCreateCopy (CFAllocatorRef allocator, CFFileSecurityRef fileSec) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFFileSecurityRef* CFFileSecurityCreateCopy (CFAllocatorRef* allocator, CFFileSecurityRef* fileSec);

//	// extern Boolean CFFileSecurityCopyOwnerUUID (CFFileSecurityRef fileSec, CFUUIDRef *ownerUUID) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecurityCopyOwnerUUID (CFFileSecurityRef* fileSec, CFUUIDRef** ownerUUID);

//	// extern Boolean CFFileSecuritySetOwnerUUID (CFFileSecurityRef fileSec, CFUUIDRef ownerUUID) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecuritySetOwnerUUID (CFFileSecurityRef* fileSec, CFUUIDRef* ownerUUID);

//	// extern Boolean CFFileSecurityCopyGroupUUID (CFFileSecurityRef fileSec, CFUUIDRef *groupUUID) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecurityCopyGroupUUID (CFFileSecurityRef* fileSec, CFUUIDRef** groupUUID);

//	// extern Boolean CFFileSecuritySetGroupUUID (CFFileSecurityRef fileSec, CFUUIDRef groupUUID) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecuritySetGroupUUID (CFFileSecurityRef* fileSec, CFUUIDRef* groupUUID);

//	// extern Boolean CFFileSecurityCopyAccessControlList (CFFileSecurityRef fileSec, acl_t *accessControlList) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecurityCopyAccessControlList (CFFileSecurityRef* fileSec, acl_t** accessControlList);

//	// extern Boolean CFFileSecuritySetAccessControlList (CFFileSecurityRef fileSec, acl_t accessControlList) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecuritySetAccessControlList (CFFileSecurityRef* fileSec, acl_t* accessControlList);

//	// extern Boolean CFFileSecurityGetOwner (CFFileSecurityRef fileSec, uid_t *owner) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecurityGetOwner (CFFileSecurityRef* fileSec, uint* owner);

//	// extern Boolean CFFileSecuritySetOwner (CFFileSecurityRef fileSec, uid_t owner) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecuritySetOwner (CFFileSecurityRef* fileSec, uint owner);

//	// extern Boolean CFFileSecurityGetGroup (CFFileSecurityRef fileSec, gid_t *group) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecurityGetGroup (CFFileSecurityRef* fileSec, uint* group);

//	// extern Boolean CFFileSecuritySetGroup (CFFileSecurityRef fileSec, gid_t group) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecuritySetGroup (CFFileSecurityRef* fileSec, uint group);

//	// extern Boolean CFFileSecurityGetMode (CFFileSecurityRef fileSec, mode_t *mode) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecurityGetMode (CFFileSecurityRef* fileSec, ushort* mode);

//	// extern Boolean CFFileSecuritySetMode (CFFileSecurityRef fileSec, mode_t mode) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecuritySetMode (CFFileSecurityRef* fileSec, ushort mode);

//	// extern Boolean CFFileSecurityClearProperties (CFFileSecurityRef fileSec, CFFileSecurityClearOptions clearPropertyMask) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(macos, introduced=10.8))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,8), iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileSecurityClearProperties (CFFileSecurityRef* fileSec, CFFileSecurityClearOptions clearPropertyMask);

//	// extern CFStringRef CFStringTokenizerCopyBestStringLanguage (CFStringRef string, CFRange range) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFStringTokenizerCopyBestStringLanguage (CFStringRef* @string, CFRange range);

//	// extern CFTypeID CFStringTokenizerGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFStringTokenizerGetTypeID ();

//	// extern CFStringTokenizerRef CFStringTokenizerCreate (CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringTokenizerRef* CFStringTokenizerCreate (CFAllocatorRef* alloc, CFStringRef* @string, CFRange range, nuint options, CFLocaleRef* locale);

//	// extern void CFStringTokenizerSetString (CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStringTokenizerSetString (CFStringTokenizerRef* tokenizer, CFStringRef* @string, CFRange range);

//	// extern CFStringTokenizerTokenType CFStringTokenizerGoToTokenAtIndex (CFStringTokenizerRef tokenizer, CFIndex index) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringTokenizerTokenType CFStringTokenizerGoToTokenAtIndex (CFStringTokenizerRef* tokenizer, nint index);

//	// extern CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken (CFStringTokenizerRef tokenizer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken (CFStringTokenizerRef* tokenizer);

//	// extern CFRange CFStringTokenizerGetCurrentTokenRange (CFStringTokenizerRef tokenizer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CFStringTokenizerGetCurrentTokenRange (CFStringTokenizerRef* tokenizer);

//	// extern CFTypeRef CFStringTokenizerCopyCurrentTokenAttribute (CFStringTokenizerRef tokenizer, CFOptionFlags attribute) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CFStringTokenizerCopyCurrentTokenAttribute (CFStringTokenizerRef* tokenizer, nuint attribute);

//	// extern CFIndex CFStringTokenizerGetCurrentSubTokens (CFStringTokenizerRef tokenizer, CFRange *ranges, CFIndex maxRangeLength, CFMutableArrayRef derivedSubTokens) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFStringTokenizerGetCurrentSubTokens (CFStringTokenizerRef* tokenizer, CFRange* ranges, nint maxRangeLength, CFMutableArrayRef* derivedSubTokens);

//	// extern CFTypeID CFFileDescriptorGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFFileDescriptorGetTypeID ();

//	// extern CFFileDescriptorRef CFFileDescriptorCreate (CFAllocatorRef allocator, CFFileDescriptorNativeDescriptor fd, Boolean closeOnInvalidate, CFFileDescriptorCallBack callout, const CFFileDescriptorContext *context) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFFileDescriptorRef* CFFileDescriptorCreate (CFAllocatorRef* allocator, int fd, byte closeOnInvalidate, CFFileDescriptorCallBack* callout, CFFileDescriptorContext* context);

//	// extern CFFileDescriptorNativeDescriptor CFFileDescriptorGetNativeDescriptor (CFFileDescriptorRef f) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFFileDescriptorGetNativeDescriptor (CFFileDescriptorRef* f);

//	// extern void CFFileDescriptorGetContext (CFFileDescriptorRef f, CFFileDescriptorContext *context) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFFileDescriptorGetContext (CFFileDescriptorRef* f, CFFileDescriptorContext* context);

//	// extern void CFFileDescriptorEnableCallBacks (CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFFileDescriptorEnableCallBacks (CFFileDescriptorRef* f, nuint callBackTypes);

//	// extern void CFFileDescriptorDisableCallBacks (CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFFileDescriptorDisableCallBacks (CFFileDescriptorRef* f, nuint callBackTypes);

//	// extern void CFFileDescriptorInvalidate (CFFileDescriptorRef f) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFFileDescriptorInvalidate (CFFileDescriptorRef* f);

//	// extern Boolean CFFileDescriptorIsValid (CFFileDescriptorRef f) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFFileDescriptorIsValid (CFFileDescriptorRef* f);

//	// extern CFRunLoopSourceRef CFFileDescriptorCreateRunLoopSource (CFAllocatorRef allocator, CFFileDescriptorRef f, CFIndex order) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopSourceRef* CFFileDescriptorCreateRunLoopSource (CFAllocatorRef* allocator, CFFileDescriptorRef* f, nint order);

//	// extern CFTypeID SecCertificateGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint SecCertificateGetTypeID ();

//	// extern SecCertificateRef _Nullable SecCertificateCreateWithData (CFAllocatorRef _Nullable allocator, CFDataRef _Nonnull data) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecCertificateRef* SecCertificateCreateWithData ([NullAllowed] CFAllocatorRef* allocator, CFDataRef* data);

//	// extern CFDataRef _Nonnull SecCertificateCopyData (SecCertificateRef _Nonnull certificate) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* SecCertificateCopyData (SecCertificateRef* certificate);

//	// extern CFStringRef _Nullable SecCertificateCopySubjectSummary (SecCertificateRef _Nonnull certificate) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* SecCertificateCopySubjectSummary (SecCertificateRef* certificate);

//	// extern OSStatus SecCertificateCopyCommonName (SecCertificateRef _Nonnull certificate, CFStringRef  _Nullable * _Nonnull commonName) __attribute__((availability(ios, introduced=10.3))) __attribute__((cf_audited_transfer));
//	[iOS (10,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecCertificateCopyCommonName (SecCertificateRef* certificate, [NullAllowed] CFStringRef** commonName);

//	// extern OSStatus SecCertificateCopyEmailAddresses (SecCertificateRef _Nonnull certificate, CFArrayRef  _Nullable * _Nonnull emailAddresses) __attribute__((availability(ios, introduced=10.3))) __attribute__((cf_audited_transfer));
//	[iOS (10,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecCertificateCopyEmailAddresses (SecCertificateRef* certificate, [NullAllowed] CFArrayRef** emailAddresses);

//	// extern CFDataRef _Nullable SecCertificateCopyNormalizedIssuerSequence (SecCertificateRef _Nonnull certificate) __attribute__((availability(ios, introduced=10.3))) __attribute__((cf_audited_transfer));
//	[iOS (10,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecCertificateCopyNormalizedIssuerSequence (SecCertificateRef* certificate);

//	// extern CFDataRef _Nullable SecCertificateCopyNormalizedSubjectSequence (SecCertificateRef _Nonnull certificate) __attribute__((availability(ios, introduced=10.3))) __attribute__((cf_audited_transfer));
//	[iOS (10,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecCertificateCopyNormalizedSubjectSequence (SecCertificateRef* certificate);

//	// extern SecKeyRef _Nullable SecCertificateCopyPublicKey (SecCertificateRef _Nonnull certificate) __attribute__((availability(ios, introduced=10.3))) __attribute__((cf_audited_transfer));
//	[iOS (10,3)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecKeyRef* SecCertificateCopyPublicKey (SecCertificateRef* certificate);

//	// extern CFDataRef _Nullable SecCertificateCopySerialNumberData (SecCertificateRef _Nonnull certificate, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecCertificateCopySerialNumberData (SecCertificateRef* certificate, [NullAllowed] CFErrorRef** error);

//	// extern CFDataRef _Nullable SecCertificateCopySerialNumber (SecCertificateRef _Nonnull certificate) __attribute__((availability(ios, introduced=10.3, deprecated=11.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 10, 3, message: "SecCertificateCopySerialNumber is deprecated. Use SecCertificateCopySerialNumberData instead.")]
//	[Deprecated (PlatformName.iOS, 11, 0, message: "SecCertificateCopySerialNumber is deprecated. Use SecCertificateCopySerialNumberData instead.")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecCertificateCopySerialNumber (SecCertificateRef* certificate);

//	// extern CFTypeID SecIdentityGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint SecIdentityGetTypeID ();

//	// extern OSStatus SecIdentityCopyCertificate (SecIdentityRef _Nonnull identityRef, SecCertificateRef  _Nullable * _Nonnull certificateRef) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecIdentityCopyCertificate (SecIdentityRef* identityRef, [NullAllowed] SecCertificateRef** certificateRef);

//	// extern OSStatus SecIdentityCopyPrivateKey (SecIdentityRef _Nonnull identityRef, SecKeyRef  _Nullable * _Nonnull privateKeyRef) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecIdentityCopyPrivateKey (SecIdentityRef* identityRef, [NullAllowed] SecKeyRef** privateKeyRef);

//	// extern CFTypeID SecAccessControlGetTypeID () __attribute__((availability(ios, introduced=8.0))) __attribute__((cf_audited_transfer));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint SecAccessControlGetTypeID ();

//	// extern SecAccessControlRef _Nullable SecAccessControlCreateWithFlags (CFAllocatorRef _Nullable allocator, CFTypeRef _Nonnull protection, SecAccessControlCreateFlags flags, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(ios, introduced=8.0))) __attribute__((cf_audited_transfer));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecAccessControlRef* SecAccessControlCreateWithFlags ([NullAllowed] CFAllocatorRef* allocator, void* protection, SecAccessControlCreateFlags flags, [NullAllowed] CFErrorRef** error);

//	// extern OSStatus SecItemCopyMatching (CFDictionaryRef _Nonnull query, CFTypeRef  _Nullable * _Nullable result) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecItemCopyMatching (CFDictionaryRef* query, [NullAllowed] void** result);

//	// extern OSStatus SecItemAdd (CFDictionaryRef _Nonnull attributes, CFTypeRef  _Nullable * _Nullable result) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecItemAdd (CFDictionaryRef* attributes, [NullAllowed] void** result);

//	// extern OSStatus SecItemUpdate (CFDictionaryRef _Nonnull query, CFDictionaryRef _Nonnull attributesToUpdate) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecItemUpdate (CFDictionaryRef* query, CFDictionaryRef* attributesToUpdate);

//	// extern OSStatus SecItemDelete (CFDictionaryRef _Nonnull query) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecItemDelete (CFDictionaryRef* query);

//	// extern CFTypeID SecKeyGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint SecKeyGetTypeID ();

//	// extern OSStatus SecKeyGeneratePair (CFDictionaryRef _Nonnull parameters, SecKeyRef  _Nullable * _Nullable publicKey, SecKeyRef  _Nullable * _Nullable privateKey) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecKeyGeneratePair (CFDictionaryRef* parameters, [NullAllowed] SecKeyRef** publicKey, [NullAllowed] SecKeyRef** privateKey);

//	// extern OSStatus SecKeyRawSign (SecKeyRef _Nonnull key, SecPadding padding, const uint8_t * _Nonnull dataToSign, size_t dataToSignLen, uint8_t * _Nonnull sig, size_t * _Nonnull sigLen) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecKeyRawSign (SecKeyRef* key, SecPadding padding, byte* dataToSign, nuint dataToSignLen, byte* sig, nuint* sigLen);

//	// extern OSStatus SecKeyRawVerify (SecKeyRef _Nonnull key, SecPadding padding, const uint8_t * _Nonnull signedData, size_t signedDataLen, const uint8_t * _Nonnull sig, size_t sigLen) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecKeyRawVerify (SecKeyRef* key, SecPadding padding, byte* signedData, nuint signedDataLen, byte* sig, nuint sigLen);

//	// extern OSStatus SecKeyEncrypt (SecKeyRef _Nonnull key, SecPadding padding, const uint8_t * _Nonnull plainText, size_t plainTextLen, uint8_t * _Nonnull cipherText, size_t * _Nonnull cipherTextLen) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecKeyEncrypt (SecKeyRef* key, SecPadding padding, byte* plainText, nuint plainTextLen, byte* cipherText, nuint* cipherTextLen);

//	// extern OSStatus SecKeyDecrypt (SecKeyRef _Nonnull key, SecPadding padding, const uint8_t * _Nonnull cipherText, size_t cipherTextLen, uint8_t * _Nonnull plainText, size_t * _Nonnull plainTextLen) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecKeyDecrypt (SecKeyRef* key, SecPadding padding, byte* cipherText, nuint cipherTextLen, byte* plainText, nuint* plainTextLen);

//	// extern SecKeyRef _Nullable SecKeyCreateRandomKey (CFDictionaryRef _Nonnull parameters, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecKeyRef* SecKeyCreateRandomKey (CFDictionaryRef* parameters, [NullAllowed] CFErrorRef** error);

//	// extern SecKeyRef _Nullable SecKeyCreateWithData (CFDataRef _Nonnull keyData, CFDictionaryRef _Nonnull attributes, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecKeyRef* SecKeyCreateWithData (CFDataRef* keyData, CFDictionaryRef* attributes, [NullAllowed] CFErrorRef** error);

//	// extern size_t SecKeyGetBlockSize (SecKeyRef _Nonnull key) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint SecKeyGetBlockSize (SecKeyRef* key);

//	// extern CFDataRef _Nullable SecKeyCopyExternalRepresentation (SecKeyRef _Nonnull key, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecKeyCopyExternalRepresentation (SecKeyRef* key, [NullAllowed] CFErrorRef** error);

//	// extern CFDictionaryRef _Nullable SecKeyCopyAttributes (SecKeyRef _Nonnull key) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* SecKeyCopyAttributes (SecKeyRef* key);

//	// extern SecKeyRef _Nullable SecKeyCopyPublicKey (SecKeyRef _Nonnull key) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecKeyRef* SecKeyCopyPublicKey (SecKeyRef* key);

//	// extern CFDataRef _Nullable SecKeyCreateSignature (SecKeyRef _Nonnull key, SecKeyAlgorithm _Nonnull algorithm, CFDataRef _Nonnull dataToSign, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecKeyCreateSignature (SecKeyRef* key, SecKeyAlgorithm* algorithm, CFDataRef* dataToSign, [NullAllowed] CFErrorRef** error);

//	// extern Boolean SecKeyVerifySignature (SecKeyRef _Nonnull key, SecKeyAlgorithm _Nonnull algorithm, CFDataRef _Nonnull signedData, CFDataRef _Nonnull signature, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte SecKeyVerifySignature (SecKeyRef* key, SecKeyAlgorithm* algorithm, CFDataRef* signedData, CFDataRef* signature, [NullAllowed] CFErrorRef** error);

//	// extern CFDataRef _Nullable SecKeyCreateEncryptedData (SecKeyRef _Nonnull key, SecKeyAlgorithm _Nonnull algorithm, CFDataRef _Nonnull plaintext, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecKeyCreateEncryptedData (SecKeyRef* key, SecKeyAlgorithm* algorithm, CFDataRef* plaintext, [NullAllowed] CFErrorRef** error);

//	// extern CFDataRef _Nullable SecKeyCreateDecryptedData (SecKeyRef _Nonnull key, SecKeyAlgorithm _Nonnull algorithm, CFDataRef _Nonnull ciphertext, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecKeyCreateDecryptedData (SecKeyRef* key, SecKeyAlgorithm* algorithm, CFDataRef* ciphertext, [NullAllowed] CFErrorRef** error);

//	// extern CFDataRef _Nullable SecKeyCopyKeyExchangeResult (SecKeyRef _Nonnull privateKey, SecKeyAlgorithm _Nonnull algorithm, SecKeyRef _Nonnull publicKey, CFDictionaryRef _Nonnull parameters, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* SecKeyCopyKeyExchangeResult (SecKeyRef* privateKey, SecKeyAlgorithm* algorithm, SecKeyRef* publicKey, CFDictionaryRef* parameters, [NullAllowed] CFErrorRef** error);

//	// extern Boolean SecKeyIsAlgorithmSupported (SecKeyRef _Nonnull key, SecKeyOperationType operation, SecKeyAlgorithm _Nonnull algorithm) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte SecKeyIsAlgorithmSupported (SecKeyRef* key, SecKeyOperationType operation, SecKeyAlgorithm* algorithm);

//	// extern CFTypeID SecPolicyGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint SecPolicyGetTypeID ();

//	// extern CFDictionaryRef _Nullable SecPolicyCopyProperties (SecPolicyRef _Nonnull policyRef) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* SecPolicyCopyProperties (SecPolicyRef* policyRef);

//	// extern SecPolicyRef _Nonnull SecPolicyCreateBasicX509 () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe SecPolicyRef* SecPolicyCreateBasicX509 ();

//	// extern SecPolicyRef _Nonnull SecPolicyCreateSSL (Boolean server, CFStringRef _Nullable hostname) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe SecPolicyRef* SecPolicyCreateSSL (byte server, [NullAllowed] CFStringRef* hostname);

//	// extern SecPolicyRef _Nullable SecPolicyCreateRevocation (CFOptionFlags revocationFlags) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecPolicyRef* SecPolicyCreateRevocation (nuint revocationFlags);

//	// extern SecPolicyRef _Nullable SecPolicyCreateWithProperties (CFTypeRef _Nonnull policyIdentifier, CFDictionaryRef _Nullable properties) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecPolicyRef* SecPolicyCreateWithProperties (void* policyIdentifier, [NullAllowed] CFDictionaryRef* properties);

//	// extern int SecRandomCopyBytes (SecRandomRef _Nullable rnd, size_t count, void * _Nonnull bytes) __attribute__((availability(ios, introduced=2.0))) __attribute__((warn_unused_result)) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecRandomCopyBytes ([NullAllowed] SecRandomRef* rnd, nuint count, void* bytes);

//	// extern OSStatus SecPKCS12Import (CFDataRef _Nonnull pkcs12_data, CFDictionaryRef _Nonnull options, CFArrayRef  _Nullable * _Nonnull items) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecPKCS12Import (CFDataRef* pkcs12_data, CFDictionaryRef* options, [NullAllowed] CFArrayRef** items);

//	// extern CFTypeID SecTrustGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint SecTrustGetTypeID ();

//	// extern OSStatus SecTrustCreateWithCertificates (CFTypeRef _Nonnull certificates, CFTypeRef _Nullable policies, SecTrustRef  _Nullable * _Nonnull trust) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustCreateWithCertificates (void* certificates, [NullAllowed] void* policies, [NullAllowed] SecTrustRef** trust);

//	// extern OSStatus SecTrustSetPolicies (SecTrustRef _Nonnull trust, CFTypeRef _Nonnull policies) __attribute__((availability(ios, introduced=6.0))) __attribute__((cf_audited_transfer));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustSetPolicies (SecTrustRef* trust, void* policies);

//	// extern OSStatus SecTrustCopyPolicies (SecTrustRef _Nonnull trust, CFArrayRef  _Nullable * _Nonnull policies) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustCopyPolicies (SecTrustRef* trust, [NullAllowed] CFArrayRef** policies);

//	// extern OSStatus SecTrustSetNetworkFetchAllowed (SecTrustRef _Nonnull trust, Boolean allowFetch) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustSetNetworkFetchAllowed (SecTrustRef* trust, byte allowFetch);

//	// extern OSStatus SecTrustGetNetworkFetchAllowed (SecTrustRef _Nonnull trust, Boolean * _Nonnull allowFetch) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustGetNetworkFetchAllowed (SecTrustRef* trust, byte* allowFetch);

//	// extern OSStatus SecTrustSetAnchorCertificates (SecTrustRef _Nonnull trust, CFArrayRef _Nonnull anchorCertificates) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustSetAnchorCertificates (SecTrustRef* trust, CFArrayRef* anchorCertificates);

//	// extern OSStatus SecTrustSetAnchorCertificatesOnly (SecTrustRef _Nonnull trust, Boolean anchorCertificatesOnly) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustSetAnchorCertificatesOnly (SecTrustRef* trust, byte anchorCertificatesOnly);

//	// extern OSStatus SecTrustCopyCustomAnchorCertificates (SecTrustRef _Nonnull trust, CFArrayRef  _Nullable * _Nonnull anchors) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustCopyCustomAnchorCertificates (SecTrustRef* trust, [NullAllowed] CFArrayRef** anchors);

//	// extern OSStatus SecTrustSetVerifyDate (SecTrustRef _Nonnull trust, CFDateRef _Nonnull verifyDate) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustSetVerifyDate (SecTrustRef* trust, CFDateRef* verifyDate);

//	// extern CFAbsoluteTime SecTrustGetVerifyTime (SecTrustRef _Nonnull trust) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double SecTrustGetVerifyTime (SecTrustRef* trust);

//	// extern OSStatus SecTrustEvaluate (SecTrustRef _Nonnull trust, SecTrustResultType * _Nullable result) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustEvaluate (SecTrustRef* trust, [NullAllowed] SecTrustResultType* result);

//	// extern OSStatus SecTrustEvaluateAsync (SecTrustRef _Nonnull trust, dispatch_queue_t _Nullable queue, SecTrustCallback _Nonnull result) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustEvaluateAsync (SecTrustRef* trust, [NullAllowed] DispatchQueue queue, SecTrustCallback result);

//	// extern OSStatus SecTrustGetTrustResult (SecTrustRef _Nonnull trust, SecTrustResultType * _Nonnull result) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustGetTrustResult (SecTrustRef* trust, SecTrustResultType* result);

//	// extern SecKeyRef _Nullable SecTrustCopyPublicKey (SecTrustRef _Nonnull trust) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecKeyRef* SecTrustCopyPublicKey (SecTrustRef* trust);

//	// extern CFIndex SecTrustGetCertificateCount (SecTrustRef _Nonnull trust) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint SecTrustGetCertificateCount (SecTrustRef* trust);

//	// extern SecCertificateRef _Nullable SecTrustGetCertificateAtIndex (SecTrustRef _Nonnull trust, CFIndex ix) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SecCertificateRef* SecTrustGetCertificateAtIndex (SecTrustRef* trust, nint ix);

//	// extern CFDataRef _Nonnull SecTrustCopyExceptions (SecTrustRef _Nonnull trust) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDataRef* SecTrustCopyExceptions (SecTrustRef* trust);

//	// extern _Bool SecTrustSetExceptions (SecTrustRef _Nonnull trust, CFDataRef _Nullable exceptions) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool SecTrustSetExceptions (SecTrustRef* trust, [NullAllowed] CFDataRef* exceptions);

//	// extern CFArrayRef _Nullable SecTrustCopyProperties (SecTrustRef _Nonnull trust) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* SecTrustCopyProperties (SecTrustRef* trust);

//	// extern CFDictionaryRef _Nullable SecTrustCopyResult (SecTrustRef _Nonnull trust) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* SecTrustCopyResult (SecTrustRef* trust);

//	// extern OSStatus SecTrustSetOCSPResponse (SecTrustRef _Nonnull trust, CFTypeRef _Nullable responseData) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SecTrustSetOCSPResponse (SecTrustRef* trust, [NullAllowed] void* responseData);

//	// extern void SecAddSharedWebCredential (CFStringRef _Nonnull fqdn, CFStringRef _Nonnull account, CFStringRef _Nullable password, void (^ _Nonnull)(CFErrorRef _Nullable) completionHandler) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=8.0))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void SecAddSharedWebCredential (CFStringRef* fqdn, CFStringRef* account, [NullAllowed] CFStringRef* password, Action<CoreFoundation.CFErrorRef*> completionHandler);

//	// extern void SecRequestSharedWebCredential (CFStringRef _Nullable fqdn, CFStringRef _Nullable account, void (^ _Nonnull)(CFArrayRef _Nullable, CFErrorRef _Nullable) completionHandler) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=8.0))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void SecRequestSharedWebCredential ([NullAllowed] CFStringRef* fqdn, [NullAllowed] CFStringRef* account, Action<CoreFoundation.CFArrayRef*, CoreFoundation.CFErrorRef*> completionHandler);

//	// extern CFStringRef _Nullable SecCreateSharedWebCredentialPassword () __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=8.0))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* SecCreateSharedWebCredentialPassword ();

//	// extern CFTypeID SSLContextGetTypeID () __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint SSLContextGetTypeID ();

//	// extern SSLContextRef _Nullable SSLCreateContext (CFAllocatorRef _Nullable alloc, SSLProtocolSide protocolSide, SSLConnectionType connectionType) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe SSLContextRef* SSLCreateContext ([NullAllowed] CFAllocatorRef* alloc, SSLProtocolSide protocolSide, SSLConnectionType connectionType);

//	// extern OSStatus SSLGetSessionState (SSLContextRef _Nonnull context, SSLSessionState * _Nonnull state) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetSessionState (SSLContextRef* context, SSLSessionState* state);

//	// extern OSStatus SSLSetSessionOption (SSLContextRef _Nonnull context, SSLSessionOption option, Boolean value) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetSessionOption (SSLContextRef* context, SSLSessionOption option, byte value);

//	// extern OSStatus SSLGetSessionOption (SSLContextRef _Nonnull context, SSLSessionOption option, Boolean * _Nonnull value) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetSessionOption (SSLContextRef* context, SSLSessionOption option, byte* value);

//	// extern OSStatus SSLSetIOFuncs (SSLContextRef _Nonnull context, SSLReadFunc _Nonnull readFunc, SSLWriteFunc _Nonnull writeFunc) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetIOFuncs (SSLContextRef* context, SSLReadFunc* readFunc, SSLWriteFunc* writeFunc);

//	// extern OSStatus SSLSetSessionConfig (SSLContextRef _Nonnull context, CFStringRef _Nonnull config) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetSessionConfig (SSLContextRef* context, CFStringRef* config);

//	// extern OSStatus SSLSetProtocolVersionMin (SSLContextRef _Nonnull context, SSLProtocol minVersion) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetProtocolVersionMin (SSLContextRef* context, SSLProtocol minVersion);

//	// extern OSStatus SSLGetProtocolVersionMin (SSLContextRef _Nonnull context, SSLProtocol * _Nonnull minVersion) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetProtocolVersionMin (SSLContextRef* context, SSLProtocol* minVersion);

//	// extern OSStatus SSLSetProtocolVersionMax (SSLContextRef _Nonnull context, SSLProtocol maxVersion) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetProtocolVersionMax (SSLContextRef* context, SSLProtocol maxVersion);

//	// extern OSStatus SSLGetProtocolVersionMax (SSLContextRef _Nonnull context, SSLProtocol * _Nonnull maxVersion) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetProtocolVersionMax (SSLContextRef* context, SSLProtocol* maxVersion);

//	// extern OSStatus SSLSetCertificate (SSLContextRef _Nonnull context, CFArrayRef _Nullable certRefs) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetCertificate (SSLContextRef* context, [NullAllowed] CFArrayRef* certRefs);

//	// extern OSStatus SSLSetConnection (SSLContextRef _Nonnull context, SSLConnectionRef _Nullable connection) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetConnection (SSLContextRef* context, [NullAllowed] void* connection);

//	// extern OSStatus SSLGetConnection (SSLContextRef _Nonnull context, SSLConnectionRef  _Nullable * _Nonnull connection) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetConnection (SSLContextRef* context, [NullAllowed] void** connection);

//	// extern OSStatus SSLSetPeerDomainName (SSLContextRef _Nonnull context, const char * _Nullable peerName, size_t peerNameLen) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetPeerDomainName (SSLContextRef* context, [NullAllowed] sbyte* peerName, nuint peerNameLen);

//	// extern OSStatus SSLGetPeerDomainNameLength (SSLContextRef _Nonnull context, size_t * _Nonnull peerNameLen) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetPeerDomainNameLength (SSLContextRef* context, nuint* peerNameLen);

//	// extern OSStatus SSLGetPeerDomainName (SSLContextRef _Nonnull context, char * _Nonnull peerName, size_t * _Nonnull peerNameLen) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetPeerDomainName (SSLContextRef* context, sbyte* peerName, nuint* peerNameLen);

//	// extern OSStatus SSLCopyRequestedPeerName (SSLContextRef _Nonnull context, char * _Nonnull peerName, size_t * _Nonnull peerNameLen) __attribute__((availability(ios, introduced=9.0))) __attribute__((cf_audited_transfer));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLCopyRequestedPeerName (SSLContextRef* context, sbyte* peerName, nuint* peerNameLen);

//	// extern OSStatus SSLCopyRequestedPeerNameLength (SSLContextRef _Nonnull ctx, size_t * _Nonnull peerNameLen) __attribute__((availability(ios, introduced=9.0))) __attribute__((cf_audited_transfer));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLCopyRequestedPeerNameLength (SSLContextRef* ctx, nuint* peerNameLen);

//	// extern OSStatus SSLSetDatagramHelloCookie (SSLContextRef _Nonnull dtlsContext, const void * _Nullable cookie, size_t cookieLen) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetDatagramHelloCookie (SSLContextRef* dtlsContext, [NullAllowed] void* cookie, nuint cookieLen);

//	// extern OSStatus SSLSetMaxDatagramRecordSize (SSLContextRef _Nonnull dtlsContext, size_t maxSize) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetMaxDatagramRecordSize (SSLContextRef* dtlsContext, nuint maxSize);

//	// extern OSStatus SSLGetMaxDatagramRecordSize (SSLContextRef _Nonnull dtlsContext, size_t * _Nonnull maxSize) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetMaxDatagramRecordSize (SSLContextRef* dtlsContext, nuint* maxSize);

//	// extern OSStatus SSLGetNegotiatedProtocolVersion (SSLContextRef _Nonnull context, SSLProtocol * _Nonnull protocol) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetNegotiatedProtocolVersion (SSLContextRef* context, SSLProtocol* protocol);

//	// extern OSStatus SSLGetNumberSupportedCiphers (SSLContextRef _Nonnull context, size_t * _Nonnull numCiphers) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetNumberSupportedCiphers (SSLContextRef* context, nuint* numCiphers);

//	// extern OSStatus SSLGetSupportedCiphers (SSLContextRef _Nonnull context, SSLCipherSuite * _Nonnull ciphers, size_t * _Nonnull numCiphers) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetSupportedCiphers (SSLContextRef* context, ushort* ciphers, nuint* numCiphers);

//	// extern OSStatus SSLSetEnabledCiphers (SSLContextRef _Nonnull context, const SSLCipherSuite * _Nonnull ciphers, size_t numCiphers) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetEnabledCiphers (SSLContextRef* context, ushort* ciphers, nuint numCiphers);

//	// extern OSStatus SSLGetNumberEnabledCiphers (SSLContextRef _Nonnull context, size_t * _Nonnull numCiphers) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetNumberEnabledCiphers (SSLContextRef* context, nuint* numCiphers);

//	// extern OSStatus SSLGetEnabledCiphers (SSLContextRef _Nonnull context, SSLCipherSuite * _Nonnull ciphers, size_t * _Nonnull numCiphers) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetEnabledCiphers (SSLContextRef* context, ushort* ciphers, nuint* numCiphers);

//	// extern OSStatus SSLSetSessionTicketsEnabled (SSLContextRef _Nonnull context, Boolean enabled) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetSessionTicketsEnabled (SSLContextRef* context, byte enabled);

//	// extern OSStatus SSLCopyPeerTrust (SSLContextRef _Nonnull context, SecTrustRef  _Nullable * _Nonnull trust) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLCopyPeerTrust (SSLContextRef* context, [NullAllowed] SecTrustRef** trust);

//	// extern OSStatus SSLSetPeerID (SSLContextRef _Nonnull context, const void * _Nullable peerID, size_t peerIDLen) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetPeerID (SSLContextRef* context, [NullAllowed] void* peerID, nuint peerIDLen);

//	// extern OSStatus SSLGetPeerID (SSLContextRef _Nonnull context, const void * _Nullable * _Nonnull peerID, size_t * _Nonnull peerIDLen) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetPeerID (SSLContextRef* context, [NullAllowed] void** peerID, nuint* peerIDLen);

//	// extern OSStatus SSLGetNegotiatedCipher (SSLContextRef _Nonnull context, SSLCipherSuite * _Nonnull cipherSuite) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetNegotiatedCipher (SSLContextRef* context, ushort* cipherSuite);

//	// extern OSStatus SSLSetALPNProtocols (SSLContextRef _Nonnull context, CFArrayRef _Nonnull protocols) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetALPNProtocols (SSLContextRef* context, CFArrayRef* protocols);

//	// extern OSStatus SSLCopyALPNProtocols (SSLContextRef _Nonnull context, CFArrayRef  _Nullable * _Nonnull protocols) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLCopyALPNProtocols (SSLContextRef* context, [NullAllowed] CFArrayRef** protocols);

//	// extern OSStatus SSLSetOCSPResponse (SSLContextRef _Nonnull context, CFDataRef _Nonnull response) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetOCSPResponse (SSLContextRef* context, CFDataRef* response);

//	// extern OSStatus SSLSetEncryptionCertificate (SSLContextRef _Nonnull context, CFArrayRef _Nonnull certRefs) __attribute__((availability(ios, introduced=5.0, deprecated=9.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 5, 0)]
//	[Deprecated (PlatformName.iOS, 9, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetEncryptionCertificate (SSLContextRef* context, CFArrayRef* certRefs);

//	// extern OSStatus SSLSetClientSideAuthenticate (SSLContextRef _Nonnull context, SSLAuthenticate auth) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetClientSideAuthenticate (SSLContextRef* context, SSLAuthenticate auth);

//	// extern OSStatus SSLAddDistinguishedName (SSLContextRef _Nonnull context, const void * _Nullable derDN, size_t derDNLen) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLAddDistinguishedName (SSLContextRef* context, [NullAllowed] void* derDN, nuint derDNLen);

//	// extern OSStatus SSLCopyDistinguishedNames (SSLContextRef _Nonnull context, CFArrayRef  _Nullable * _Nonnull names) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLCopyDistinguishedNames (SSLContextRef* context, [NullAllowed] CFArrayRef** names);

//	// extern OSStatus SSLGetClientCertificateState (SSLContextRef _Nonnull context, SSLClientCertificateState * _Nonnull clientState) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetClientCertificateState (SSLContextRef* context, SSLClientCertificateState* clientState);

//	// extern OSStatus SSLHandshake (SSLContextRef _Nonnull context) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLHandshake (SSLContextRef* context);

//	// extern OSStatus SSLReHandshake (SSLContextRef _Nonnull context) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLReHandshake (SSLContextRef* context);

//	// extern OSStatus SSLWrite (SSLContextRef _Nonnull context, const void * _Nullable data, size_t dataLength, size_t * _Nonnull processed) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLWrite (SSLContextRef* context, [NullAllowed] void* data, nuint dataLength, nuint* processed);

//	// extern OSStatus SSLRead (SSLContextRef _Nonnull context, void * _Nonnull data, size_t dataLength, size_t * _Nonnull processed) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLRead (SSLContextRef* context, void* data, nuint dataLength, nuint* processed);

//	// extern OSStatus SSLGetBufferedReadSize (SSLContextRef _Nonnull context, size_t * _Nonnull bufSize) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetBufferedReadSize (SSLContextRef* context, nuint* bufSize);

//	// extern OSStatus SSLGetDatagramWriteSize (SSLContextRef _Nonnull dtlsContext, size_t * _Nonnull bufSize) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLGetDatagramWriteSize (SSLContextRef* dtlsContext, nuint* bufSize);

//	// extern OSStatus SSLClose (SSLContextRef _Nonnull context) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLClose (SSLContextRef* context);

//	// extern OSStatus SSLSetError (SSLContextRef _Nonnull context, OSStatus status) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int SSLSetError (SSLContextRef* context, int status);

//	// extern CFTypeID CFHostGetTypeID () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFHostGetTypeID ();

//	// extern CFHostRef _Nonnull CFHostCreateWithName (CFAllocatorRef _Nullable allocator, CFStringRef _Nonnull hostname) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHostRef* CFHostCreateWithName ([NullAllowed] CFAllocatorRef* allocator, CFStringRef* hostname);

//	// extern CFHostRef _Nonnull CFHostCreateWithAddress (CFAllocatorRef _Nullable allocator, CFDataRef _Nonnull addr) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHostRef* CFHostCreateWithAddress ([NullAllowed] CFAllocatorRef* allocator, CFDataRef* addr);

//	// extern CFHostRef _Nonnull CFHostCreateCopy (CFAllocatorRef _Nullable alloc, CFHostRef _Nonnull host) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHostRef* CFHostCreateCopy ([NullAllowed] CFAllocatorRef* alloc, CFHostRef* host);

//	// extern Boolean CFHostStartInfoResolution (CFHostRef _Nonnull theHost, CFHostInfoType info, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHostStartInfoResolution (CFHostRef* theHost, CFHostInfoType info, [NullAllowed] CFStreamError* error);

//	// extern CFArrayRef _Nullable CFHostGetAddressing (CFHostRef _Nonnull theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CFHostGetAddressing (CFHostRef* theHost, [NullAllowed] byte* hasBeenResolved);

//	// extern CFArrayRef _Nullable CFHostGetNames (CFHostRef _Nonnull theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CFHostGetNames (CFHostRef* theHost, [NullAllowed] byte* hasBeenResolved);

//	// extern CFDataRef _Nullable CFHostGetReachability (CFHostRef _Nonnull theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CFHostGetReachability (CFHostRef* theHost, [NullAllowed] byte* hasBeenResolved);

//	// extern void CFHostCancelInfoResolution (CFHostRef _Nonnull theHost, CFHostInfoType info) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFHostCancelInfoResolution (CFHostRef* theHost, CFHostInfoType info);

//	// extern Boolean CFHostSetClient (CFHostRef _Nonnull theHost, CFHostClientCallBack _Nullable clientCB, CFHostClientContext * _Nullable clientContext) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHostSetClient (CFHostRef* theHost, [NullAllowed] CFHostClientCallBack* clientCB, [NullAllowed] CFHostClientContext* clientContext);

//	// extern void CFHostScheduleWithRunLoop (CFHostRef _Nonnull theHost, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFHostScheduleWithRunLoop (CFHostRef* theHost, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern void CFHostUnscheduleFromRunLoop (CFHostRef _Nonnull theHost, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFHostUnscheduleFromRunLoop (CFHostRef* theHost, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern CFTypeID CFNetServiceGetTypeID () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFNetServiceGetTypeID ();

//	// extern CFTypeID CFNetServiceMonitorGetTypeID () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFNetServiceMonitorGetTypeID ();

//	// extern CFTypeID CFNetServiceBrowserGetTypeID () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFNetServiceBrowserGetTypeID ();

//	// extern CFNetServiceRef _Nonnull CFNetServiceCreate (CFAllocatorRef _Nullable alloc, CFStringRef _Nonnull domain, CFStringRef _Nonnull serviceType, CFStringRef _Nonnull name, SInt32 port) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNetServiceRef* CFNetServiceCreate ([NullAllowed] CFAllocatorRef* alloc, CFStringRef* domain, CFStringRef* serviceType, CFStringRef* name, int port);

//	// extern CFNetServiceRef _Nonnull CFNetServiceCreateCopy (CFAllocatorRef _Nullable alloc, CFNetServiceRef _Nonnull service) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNetServiceRef* CFNetServiceCreateCopy ([NullAllowed] CFAllocatorRef* alloc, CFNetServiceRef* service);

//	// extern CFStringRef _Nonnull CFNetServiceGetDomain (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFNetServiceGetDomain (CFNetServiceRef* theService);

//	// extern CFStringRef _Nonnull CFNetServiceGetType (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFNetServiceGetType (CFNetServiceRef* theService);

//	// extern CFStringRef _Nonnull CFNetServiceGetName (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFNetServiceGetName (CFNetServiceRef* theService);

//	// extern Boolean CFNetServiceRegisterWithOptions (CFNetServiceRef _Nonnull theService, CFOptionFlags options, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceRegisterWithOptions (CFNetServiceRef* theService, nuint options, [NullAllowed] CFStreamError* error);

//	// extern Boolean CFNetServiceResolveWithTimeout (CFNetServiceRef _Nonnull theService, CFTimeInterval timeout, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceResolveWithTimeout (CFNetServiceRef* theService, double timeout, [NullAllowed] CFStreamError* error);

//	// extern void CFNetServiceCancel (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceCancel (CFNetServiceRef* theService);

//	// extern CFStringRef _Nullable CFNetServiceGetTargetHost (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CFNetServiceGetTargetHost (CFNetServiceRef* theService);

//	// extern SInt32 CFNetServiceGetPortNumber (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFNetServiceGetPortNumber (CFNetServiceRef* theService);

//	// extern CFArrayRef _Nullable CFNetServiceGetAddressing (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CFNetServiceGetAddressing (CFNetServiceRef* theService);

//	// extern CFDataRef _Nullable CFNetServiceGetTXTData (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CFNetServiceGetTXTData (CFNetServiceRef* theService);

//	// extern Boolean CFNetServiceSetTXTData (CFNetServiceRef _Nonnull theService, CFDataRef _Nonnull txtRecord) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceSetTXTData (CFNetServiceRef* theService, CFDataRef* txtRecord);

//	// extern CFDictionaryRef _Nullable CFNetServiceCreateDictionaryWithTXTData (CFAllocatorRef _Nullable alloc, CFDataRef _Nonnull txtRecord) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CFNetServiceCreateDictionaryWithTXTData ([NullAllowed] CFAllocatorRef* alloc, CFDataRef* txtRecord);

//	// extern CFDataRef _Nullable CFNetServiceCreateTXTDataWithDictionary (CFAllocatorRef _Nullable alloc, CFDictionaryRef _Nonnull keyValuePairs) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CFNetServiceCreateTXTDataWithDictionary ([NullAllowed] CFAllocatorRef* alloc, CFDictionaryRef* keyValuePairs);

//	// extern Boolean CFNetServiceSetClient (CFNetServiceRef _Nonnull theService, CFNetServiceClientCallBack _Nullable clientCB, CFNetServiceClientContext * _Nullable clientContext) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceSetClient (CFNetServiceRef* theService, [NullAllowed] CFNetServiceClientCallBack* clientCB, [NullAllowed] CFNetServiceClientContext* clientContext);

//	// extern void CFNetServiceScheduleWithRunLoop (CFNetServiceRef _Nonnull theService, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceScheduleWithRunLoop (CFNetServiceRef* theService, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern void CFNetServiceUnscheduleFromRunLoop (CFNetServiceRef _Nonnull theService, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceUnscheduleFromRunLoop (CFNetServiceRef* theService, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern CFNetServiceMonitorRef _Nonnull CFNetServiceMonitorCreate (CFAllocatorRef _Nullable alloc, CFNetServiceRef _Nonnull theService, CFNetServiceMonitorClientCallBack _Nonnull clientCB, CFNetServiceClientContext * _Nonnull clientContext) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNetServiceMonitorRef* CFNetServiceMonitorCreate ([NullAllowed] CFAllocatorRef* alloc, CFNetServiceRef* theService, CFNetServiceMonitorClientCallBack* clientCB, CFNetServiceClientContext* clientContext);

//	// extern void CFNetServiceMonitorInvalidate (CFNetServiceMonitorRef _Nonnull monitor) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceMonitorInvalidate (CFNetServiceMonitorRef* monitor);

//	// extern Boolean CFNetServiceMonitorStart (CFNetServiceMonitorRef _Nonnull monitor, CFNetServiceMonitorType recordType, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceMonitorStart (CFNetServiceMonitorRef* monitor, CFNetServiceMonitorType recordType, [NullAllowed] CFStreamError* error);

//	// extern void CFNetServiceMonitorStop (CFNetServiceMonitorRef _Nonnull monitor, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceMonitorStop (CFNetServiceMonitorRef* monitor, [NullAllowed] CFStreamError* error);

//	// extern void CFNetServiceMonitorScheduleWithRunLoop (CFNetServiceMonitorRef _Nonnull monitor, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceMonitorScheduleWithRunLoop (CFNetServiceMonitorRef* monitor, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern void CFNetServiceMonitorUnscheduleFromRunLoop (CFNetServiceMonitorRef _Nonnull monitor, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceMonitorUnscheduleFromRunLoop (CFNetServiceMonitorRef* monitor, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern CFNetServiceBrowserRef _Nonnull CFNetServiceBrowserCreate (CFAllocatorRef _Nullable alloc, CFNetServiceBrowserClientCallBack _Nonnull clientCB, CFNetServiceClientContext * _Nonnull clientContext) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNetServiceBrowserRef* CFNetServiceBrowserCreate ([NullAllowed] CFAllocatorRef* alloc, CFNetServiceBrowserClientCallBack* clientCB, CFNetServiceClientContext* clientContext);

//	// extern void CFNetServiceBrowserInvalidate (CFNetServiceBrowserRef _Nonnull browser) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceBrowserInvalidate (CFNetServiceBrowserRef* browser);

//	// extern Boolean CFNetServiceBrowserSearchForDomains (CFNetServiceBrowserRef _Nonnull browser, Boolean registrationDomains, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceBrowserSearchForDomains (CFNetServiceBrowserRef* browser, byte registrationDomains, [NullAllowed] CFStreamError* error);

//	// extern Boolean CFNetServiceBrowserSearchForServices (CFNetServiceBrowserRef _Nonnull browser, CFStringRef _Nonnull domain, CFStringRef _Nonnull serviceType, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceBrowserSearchForServices (CFNetServiceBrowserRef* browser, CFStringRef* domain, CFStringRef* serviceType, [NullAllowed] CFStreamError* error);

//	// extern void CFNetServiceBrowserStopSearch (CFNetServiceBrowserRef _Nonnull browser, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceBrowserStopSearch (CFNetServiceBrowserRef* browser, [NullAllowed] CFStreamError* error);

//	// extern void CFNetServiceBrowserScheduleWithRunLoop (CFNetServiceBrowserRef _Nonnull browser, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceBrowserScheduleWithRunLoop (CFNetServiceBrowserRef* browser, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern void CFNetServiceBrowserUnscheduleFromRunLoop (CFNetServiceBrowserRef _Nonnull browser, CFRunLoopRef _Nonnull runLoop, CFStringRef _Nonnull runLoopMode) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceBrowserUnscheduleFromRunLoop (CFNetServiceBrowserRef* browser, CFRunLoopRef* runLoop, CFStringRef* runLoopMode);

//	// extern Boolean CFNetServiceRegister (CFNetServiceRef _Nonnull theService, CFStreamError * _Nullable error) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceRegister (CFNetServiceRef* theService, [NullAllowed] CFStreamError* error);

//	// extern Boolean CFNetServiceResolve (CFNetServiceRef _Nonnull theService, CFStreamError * _Nullable error) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFNetServiceResolve (CFNetServiceRef* theService, [NullAllowed] CFStreamError* error);

//	// extern CFStringRef _Nullable CFNetServiceGetProtocolSpecificInformation (CFNetServiceRef _Nonnull theService) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CFNetServiceGetProtocolSpecificInformation (CFNetServiceRef* theService);

//	// extern void CFNetServiceSetProtocolSpecificInformation (CFNetServiceRef _Nonnull theService, CFStringRef _Nullable theInfo) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetServiceSetProtocolSpecificInformation (CFNetServiceRef* theService, [NullAllowed] CFStringRef* theInfo);

//	// SInt32 CFSocketStreamSOCKSGetErrorSubdomain (const CFStreamError * _Nonnull error) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFSocketStreamSOCKSGetErrorSubdomain (CFStreamError* error);

//	// SInt32 CFSocketStreamSOCKSGetError (const CFStreamError * _Nonnull error) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CFSocketStreamSOCKSGetError (CFStreamError* error);

//	// extern void CFStreamCreatePairWithSocketToCFHost (CFAllocatorRef _Nullable alloc, CFHostRef _Nonnull host, SInt32 port, CFReadStreamRef  _Nullable * _Nullable readStream, CFWriteStreamRef  _Nullable * _Nullable writeStream) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStreamCreatePairWithSocketToCFHost ([NullAllowed] CFAllocatorRef* alloc, CFHostRef* host, int port, [NullAllowed] CFReadStreamRef** readStream, [NullAllowed] CFWriteStreamRef** writeStream);

//	// extern void CFStreamCreatePairWithSocketToNetService (CFAllocatorRef _Nullable alloc, CFNetServiceRef _Nonnull service, CFReadStreamRef  _Nullable * _Nullable readStream, CFWriteStreamRef  _Nullable * _Nullable writeStream) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFStreamCreatePairWithSocketToNetService ([NullAllowed] CFAllocatorRef* alloc, CFNetServiceRef* service, [NullAllowed] CFReadStreamRef** readStream, [NullAllowed] CFWriteStreamRef** writeStream);

//	// extern CFReadStreamRef _Nonnull CFReadStreamCreateWithFTPURL (CFAllocatorRef _Nullable alloc, CFURLRef _Nonnull ftpURL) __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use NSURLSessionAPI for ftp requests")]
//	[Deprecated (PlatformName.iOS, 9, 0, message: "Use NSURLSessionAPI for ftp requests")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFReadStreamRef* CFReadStreamCreateWithFTPURL ([NullAllowed] CFAllocatorRef* alloc, CFURLRef* ftpURL);

//	// extern CFIndex CFFTPCreateParsedResourceListing (CFAllocatorRef _Nullable alloc, const UInt8 * _Nonnull buffer, CFIndex bufferLength, CFDictionaryRef  _Nullable * _Nullable parsed) __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use NSURLSessionAPI for ftp requests")]
//	[Deprecated (PlatformName.iOS, 9, 0, message: "Use NSURLSessionAPI for ftp requests")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFFTPCreateParsedResourceListing ([NullAllowed] CFAllocatorRef* alloc, byte* buffer, nint bufferLength, [NullAllowed] CFDictionaryRef** parsed);

//	// extern CFWriteStreamRef _Nonnull CFWriteStreamCreateWithFTPURL (CFAllocatorRef _Nullable alloc, CFURLRef _Nonnull ftpURL) __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use NSURLSessionAPI for ftp requests")]
//	[Deprecated (PlatformName.iOS, 9, 0, message: "Use NSURLSessionAPI for ftp requests")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFWriteStreamRef* CFWriteStreamCreateWithFTPURL ([NullAllowed] CFAllocatorRef* alloc, CFURLRef* ftpURL);

//	// extern CFTypeID CFHTTPMessageGetTypeID () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFHTTPMessageGetTypeID ();

//	// extern CFHTTPMessageRef _Nonnull CFHTTPMessageCreateRequest (CFAllocatorRef _Nullable alloc, CFStringRef _Nonnull requestMethod, CFURLRef _Nonnull url, CFStringRef _Nonnull httpVersion) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHTTPMessageRef* CFHTTPMessageCreateRequest ([NullAllowed] CFAllocatorRef* alloc, CFStringRef* requestMethod, CFURLRef* url, CFStringRef* httpVersion);

//	// extern CFHTTPMessageRef _Nonnull CFHTTPMessageCreateResponse (CFAllocatorRef _Nullable alloc, CFIndex statusCode, CFStringRef _Nullable statusDescription, CFStringRef _Nonnull httpVersion) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHTTPMessageRef* CFHTTPMessageCreateResponse ([NullAllowed] CFAllocatorRef* alloc, nint statusCode, [NullAllowed] CFStringRef* statusDescription, CFStringRef* httpVersion);

//	// extern CFHTTPMessageRef _Nonnull CFHTTPMessageCreateEmpty (CFAllocatorRef _Nullable alloc, Boolean isRequest) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHTTPMessageRef* CFHTTPMessageCreateEmpty ([NullAllowed] CFAllocatorRef* alloc, byte isRequest);

//	// extern CFHTTPMessageRef _Nonnull CFHTTPMessageCreateCopy (CFAllocatorRef _Nullable alloc, CFHTTPMessageRef _Nonnull message) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHTTPMessageRef* CFHTTPMessageCreateCopy ([NullAllowed] CFAllocatorRef* alloc, CFHTTPMessageRef* message);

//	// extern Boolean CFHTTPMessageIsRequest (CFHTTPMessageRef _Nonnull message) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPMessageIsRequest (CFHTTPMessageRef* message);

//	// extern CFStringRef _Nonnull CFHTTPMessageCopyVersion (CFHTTPMessageRef _Nonnull message) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFHTTPMessageCopyVersion (CFHTTPMessageRef* message);

//	// extern CFDataRef _Nullable CFHTTPMessageCopyBody (CFHTTPMessageRef _Nonnull message) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CFHTTPMessageCopyBody (CFHTTPMessageRef* message);

//	// extern void CFHTTPMessageSetBody (CFHTTPMessageRef _Nonnull message, CFDataRef _Nonnull bodyData) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFHTTPMessageSetBody (CFHTTPMessageRef* message, CFDataRef* bodyData);

//	// extern CFStringRef _Nullable CFHTTPMessageCopyHeaderFieldValue (CFHTTPMessageRef _Nonnull message, CFStringRef _Nonnull headerField) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CFHTTPMessageCopyHeaderFieldValue (CFHTTPMessageRef* message, CFStringRef* headerField);

//	// extern CFDictionaryRef _Nullable CFHTTPMessageCopyAllHeaderFields (CFHTTPMessageRef _Nonnull message) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CFHTTPMessageCopyAllHeaderFields (CFHTTPMessageRef* message);

//	// extern void CFHTTPMessageSetHeaderFieldValue (CFHTTPMessageRef _Nonnull message, CFStringRef _Nonnull headerField, CFStringRef _Nullable value) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFHTTPMessageSetHeaderFieldValue (CFHTTPMessageRef* message, CFStringRef* headerField, [NullAllowed] CFStringRef* value);

//	// extern Boolean CFHTTPMessageAppendBytes (CFHTTPMessageRef _Nonnull message, const UInt8 * _Nonnull newBytes, CFIndex numBytes) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPMessageAppendBytes (CFHTTPMessageRef* message, byte* newBytes, nint numBytes);

//	// extern Boolean CFHTTPMessageIsHeaderComplete (CFHTTPMessageRef _Nonnull message) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPMessageIsHeaderComplete (CFHTTPMessageRef* message);

//	// extern CFDataRef _Nullable CFHTTPMessageCopySerializedMessage (CFHTTPMessageRef _Nonnull message) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CFHTTPMessageCopySerializedMessage (CFHTTPMessageRef* message);

//	// extern CFURLRef _Nullable CFHTTPMessageCopyRequestURL (CFHTTPMessageRef _Nonnull request) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFURLRef* CFHTTPMessageCopyRequestURL (CFHTTPMessageRef* request);

//	// extern CFStringRef _Nullable CFHTTPMessageCopyRequestMethod (CFHTTPMessageRef _Nonnull request) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CFHTTPMessageCopyRequestMethod (CFHTTPMessageRef* request);

//	// extern Boolean CFHTTPMessageAddAuthentication (CFHTTPMessageRef _Nonnull request, CFHTTPMessageRef _Nullable authenticationFailureResponse, CFStringRef _Nonnull username, CFStringRef _Nonnull password, CFStringRef _Nullable authenticationScheme, Boolean forProxy) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPMessageAddAuthentication (CFHTTPMessageRef* request, [NullAllowed] CFHTTPMessageRef* authenticationFailureResponse, CFStringRef* username, CFStringRef* password, [NullAllowed] CFStringRef* authenticationScheme, byte forProxy);

//	// extern CFIndex CFHTTPMessageGetResponseStatusCode (CFHTTPMessageRef _Nonnull response) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFHTTPMessageGetResponseStatusCode (CFHTTPMessageRef* response);

//	// extern CFStringRef _Nullable CFHTTPMessageCopyResponseStatusLine (CFHTTPMessageRef _Nonnull response) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CFHTTPMessageCopyResponseStatusLine (CFHTTPMessageRef* response);

//	// extern CFReadStreamRef _Nonnull CFReadStreamCreateForHTTPRequest (CFAllocatorRef _Nullable alloc, CFHTTPMessageRef _Nonnull request) __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use NSURLSession API for http requests")]
//	[Deprecated (PlatformName.iOS, 9, 0, message: "Use NSURLSession API for http requests")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFReadStreamRef* CFReadStreamCreateForHTTPRequest ([NullAllowed] CFAllocatorRef* alloc, CFHTTPMessageRef* request);

//	// extern CFReadStreamRef _Nonnull CFReadStreamCreateForStreamedHTTPRequest (CFAllocatorRef _Nullable alloc, CFHTTPMessageRef _Nonnull requestHeaders, CFReadStreamRef _Nonnull requestBody) __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use NSURLSession API for http requests")]
//	[Deprecated (PlatformName.iOS, 9, 0, message: "Use NSURLSession API for http requests")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFReadStreamRef* CFReadStreamCreateForStreamedHTTPRequest ([NullAllowed] CFAllocatorRef* alloc, CFHTTPMessageRef* requestHeaders, CFReadStreamRef* requestBody);

//	// extern void CFHTTPReadStreamSetRedirectsAutomatically (CFReadStreamRef _Nonnull httpStream, Boolean shouldAutoRedirect) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFHTTPReadStreamSetRedirectsAutomatically (CFReadStreamRef* httpStream, byte shouldAutoRedirect);

//	// extern CFTypeID CFHTTPAuthenticationGetTypeID () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CFHTTPAuthenticationGetTypeID ();

//	// extern CFHTTPAuthenticationRef _Nonnull CFHTTPAuthenticationCreateFromResponse (CFAllocatorRef _Nullable alloc, CFHTTPMessageRef _Nonnull response) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFHTTPAuthenticationRef* CFHTTPAuthenticationCreateFromResponse ([NullAllowed] CFAllocatorRef* alloc, CFHTTPMessageRef* response);

//	// extern Boolean CFHTTPAuthenticationIsValid (CFHTTPAuthenticationRef _Nonnull auth, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPAuthenticationIsValid (CFHTTPAuthenticationRef* auth, [NullAllowed] CFStreamError* error);

//	// extern Boolean CFHTTPAuthenticationAppliesToRequest (CFHTTPAuthenticationRef _Nonnull auth, CFHTTPMessageRef _Nonnull request) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPAuthenticationAppliesToRequest (CFHTTPAuthenticationRef* auth, CFHTTPMessageRef* request);

//	// extern Boolean CFHTTPAuthenticationRequiresOrderedRequests (CFHTTPAuthenticationRef _Nonnull auth) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPAuthenticationRequiresOrderedRequests (CFHTTPAuthenticationRef* auth);

//	// extern Boolean CFHTTPMessageApplyCredentials (CFHTTPMessageRef _Nonnull request, CFHTTPAuthenticationRef _Nonnull auth, CFStringRef _Nullable username, CFStringRef _Nullable password, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPMessageApplyCredentials (CFHTTPMessageRef* request, CFHTTPAuthenticationRef* auth, [NullAllowed] CFStringRef* username, [NullAllowed] CFStringRef* password, [NullAllowed] CFStreamError* error);

//	// extern Boolean CFHTTPMessageApplyCredentialDictionary (CFHTTPMessageRef _Nonnull request, CFHTTPAuthenticationRef _Nonnull auth, CFDictionaryRef _Nonnull dict, CFStreamError * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPMessageApplyCredentialDictionary (CFHTTPMessageRef* request, CFHTTPAuthenticationRef* auth, CFDictionaryRef* dict, [NullAllowed] CFStreamError* error);

//	// extern CFStringRef _Nonnull CFHTTPAuthenticationCopyRealm (CFHTTPAuthenticationRef _Nonnull auth) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFHTTPAuthenticationCopyRealm (CFHTTPAuthenticationRef* auth);

//	// extern CFArrayRef _Nonnull CFHTTPAuthenticationCopyDomains (CFHTTPAuthenticationRef _Nonnull auth) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFHTTPAuthenticationCopyDomains (CFHTTPAuthenticationRef* auth);

//	// extern CFStringRef _Nonnull CFHTTPAuthenticationCopyMethod (CFHTTPAuthenticationRef _Nonnull auth) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CFHTTPAuthenticationCopyMethod (CFHTTPAuthenticationRef* auth);

//	// extern Boolean CFHTTPAuthenticationRequiresUserNameAndPassword (CFHTTPAuthenticationRef _Nonnull auth) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPAuthenticationRequiresUserNameAndPassword (CFHTTPAuthenticationRef* auth);

//	// extern Boolean CFHTTPAuthenticationRequiresAccountDomain (CFHTTPAuthenticationRef _Nonnull auth) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CFHTTPAuthenticationRequiresAccountDomain (CFHTTPAuthenticationRef* auth);

//	// extern CFNetDiagnosticRef _Nonnull CFNetDiagnosticCreateWithStreams (CFAllocatorRef _Nullable alloc, CFReadStreamRef _Nullable readStream, CFWriteStreamRef _Nullable writeStream) __attribute__((availability(ios, introduced=2.0, deprecated=11.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 11, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNetDiagnosticRef* CFNetDiagnosticCreateWithStreams ([NullAllowed] CFAllocatorRef* alloc, [NullAllowed] CFReadStreamRef* readStream, [NullAllowed] CFWriteStreamRef* writeStream);

//	// extern CFNetDiagnosticRef _Nonnull CFNetDiagnosticCreateWithURL (CFAllocatorRef _Nonnull alloc, CFURLRef _Nonnull url) __attribute__((availability(ios, introduced=2.0, deprecated=11.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 11, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFNetDiagnosticRef* CFNetDiagnosticCreateWithURL (CFAllocatorRef* alloc, CFURLRef* url);

//	// extern void CFNetDiagnosticSetName (CFNetDiagnosticRef _Nonnull details, CFStringRef _Nonnull name) __attribute__((availability(ios, introduced=2.0, deprecated=11.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 11, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CFNetDiagnosticSetName (CFNetDiagnosticRef* details, CFStringRef* name);

//	// extern CFNetDiagnosticStatus CFNetDiagnosticDiagnoseProblemInteractively (CFNetDiagnosticRef _Nonnull details) __attribute__((availability(ios, introduced=2.0, deprecated=11.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 11, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFNetDiagnosticDiagnoseProblemInteractively (CFNetDiagnosticRef* details);

//	// extern CFNetDiagnosticStatus CFNetDiagnosticCopyNetworkStatusPassively (CFNetDiagnosticRef _Nonnull details, CFStringRef  _Nullable * _Nullable description) __attribute__((availability(ios, introduced=2.0, deprecated=11.0)));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 11, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CFNetDiagnosticCopyNetworkStatusPassively (CFNetDiagnosticRef* details, [NullAllowed] CFStringRef** description);

//	// extern CFDictionaryRef _Nullable CFNetworkCopySystemProxySettings () __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CFNetworkCopySystemProxySettings ();

//	// extern CFArrayRef _Nonnull CFNetworkCopyProxiesForURL (CFURLRef _Nonnull url, CFDictionaryRef _Nonnull proxySettings) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CFNetworkCopyProxiesForURL (CFURLRef* url, CFDictionaryRef* proxySettings);

//	// extern CFArrayRef _Nullable CFNetworkCopyProxiesForAutoConfigurationScript (CFStringRef _Nonnull proxyAutoConfigurationScript, CFURLRef _Nonnull targetURL, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CFNetworkCopyProxiesForAutoConfigurationScript (CFStringRef* proxyAutoConfigurationScript, CFURLRef* targetURL, [NullAllowed] CFErrorRef** error);

//	// extern CFRunLoopSourceRef _Nonnull CFNetworkExecuteProxyAutoConfigurationScript (CFStringRef _Nonnull proxyAutoConfigurationScript, CFURLRef _Nonnull targetURL, CFProxyAutoConfigurationResultCallback _Nonnull cb, CFStreamClientContext * _Nonnull clientContext) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopSourceRef* CFNetworkExecuteProxyAutoConfigurationScript (CFStringRef* proxyAutoConfigurationScript, CFURLRef* targetURL, CFProxyAutoConfigurationResultCallback* cb, CFStreamClientContext* clientContext);

//	// extern CFRunLoopSourceRef _Nonnull CFNetworkExecuteProxyAutoConfigurationURL (CFURLRef _Nonnull proxyAutoConfigURL, CFURLRef _Nonnull targetURL, CFProxyAutoConfigurationResultCallback _Nonnull cb, CFStreamClientContext * _Nonnull clientContext) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRunLoopSourceRef* CFNetworkExecuteProxyAutoConfigurationURL (CFURLRef* proxyAutoConfigURL, CFURLRef* targetURL, CFProxyAutoConfigurationResultCallback* cb, CFStreamClientContext* clientContext);

//	// extern NSString * _Nonnull NSStringFromSelector (SEL _Nonnull aSelector);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromSelector (Selector aSelector);

//	// extern SEL _Nonnull NSSelectorFromString (NSString * _Nonnull aSelectorName);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern Selector NSSelectorFromString (NSString aSelectorName);

//	// extern NSString * _Nonnull NSStringFromClass (Class _Nonnull aClass);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromClass (Class aClass);

//	// extern Class _Nullable NSClassFromString (NSString * _Nonnull aClassName);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern Class NSClassFromString (NSString aClassName);

//	// extern NSString * _Nonnull NSStringFromProtocol (Protocol * _Nonnull proto) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromProtocol (Protocol proto);

//	// extern Protocol * _Nullable NSProtocolFromString (NSString * _Nonnull namestr) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern Protocol NSProtocolFromString (NSString namestr);

//	// extern const char * _Nonnull NSGetSizeAndAlignment (const char * _Nonnull typePtr, NSUInteger * _Nullable sizep, NSUInteger * _Nullable alignp);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe sbyte* NSGetSizeAndAlignment (sbyte* typePtr, [NullAllowed] nuint* sizep, [NullAllowed] nuint* alignp);

//	// extern void NSLog (id, ...) __attribute__((format(NSString, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void NSLog (NSObject, IntPtr varArgs);

//	// extern void NSLog (NSString * _Nonnull format, ...) __attribute__((not_tail_called)) __attribute__((format(NSString, 1, 2)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void NSLog (NSString format, IntPtr varArgs);

//	// extern void NSLogv (id, __builtin_va_list) __attribute__((format(NSString, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSLogv (NSObject, sbyte*);

//	// extern void NSLogv (NSString * _Nonnull format, va_list args) __attribute__((not_tail_called)) __attribute__((format(NSString, 1, 0)));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSLogv (NSString format, sbyte* args);

//	// extern NSZone * _Nonnull NSDefaultMallocZone ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSZone* NSDefaultMallocZone ();

//	// extern NSZone * _Nonnull NSCreateZone (NSUInteger startSize, NSUInteger granularity, BOOL canFree);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSZone* NSCreateZone (nuint startSize, nuint granularity, bool canFree);

//	// extern void NSRecycleZone (NSZone * _Nonnull zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSRecycleZone (NSZone* zone);

//	// extern void NSSetZoneName (NSZone * _Nullable zone, NSString * _Nonnull name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSSetZoneName ([NullAllowed] NSZone* zone, NSString name);

//	// extern NSString * _Nonnull NSZoneName (NSZone * _Nullable zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSString NSZoneName ([NullAllowed] NSZone* zone);

//	// extern NSZone * _Nullable NSZoneFromPointer (void * _Nonnull ptr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSZone* NSZoneFromPointer (void* ptr);

//	// extern void * _Nonnull NSZoneMalloc (NSZone * _Nullable zone, NSUInteger size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* NSZoneMalloc ([NullAllowed] NSZone* zone, nuint size);

//	// extern void * _Nonnull NSZoneCalloc (NSZone * _Nullable zone, NSUInteger numElems, NSUInteger byteSize);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* NSZoneCalloc ([NullAllowed] NSZone* zone, nuint numElems, nuint byteSize);

//	// extern void * _Nonnull NSZoneRealloc (NSZone * _Nullable zone, void * _Nullable ptr, NSUInteger size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* NSZoneRealloc ([NullAllowed] NSZone* zone, [NullAllowed] void* ptr, nuint size);

//	// extern void NSZoneFree (NSZone * _Nullable zone, void * _Nonnull ptr);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSZoneFree ([NullAllowed] NSZone* zone, void* ptr);

//	// id _Nullable NSMakeCollectable (CFTypeRef _Nullable cf) __attribute__((ns_returns_retained)) __attribute__((always_inline)) __attribute__((ns_returns_retained));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject NSMakeCollectable ([NullAllowed] void* cf);

//	// id _Nullable NSMakeCollectable (CFTypeRef _Nullable cf) __attribute__((ns_returns_retained)) __attribute__((always_inline)) __attribute__((ns_returns_retained));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject NSMakeCollectable ([NullAllowed] void* cf);

//	// extern NSUInteger NSPageSize ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSPageSize ();

//	// extern NSUInteger NSLogPageSize ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSLogPageSize ();

//	// extern NSUInteger NSRoundUpToMultipleOfPageSize (NSUInteger bytes);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSRoundUpToMultipleOfPageSize (nuint bytes);

//	// extern NSUInteger NSRoundDownToMultipleOfPageSize (NSUInteger bytes);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSRoundDownToMultipleOfPageSize (nuint bytes);

//	// extern void * _Nonnull NSAllocateMemoryPages (NSUInteger bytes);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* NSAllocateMemoryPages (nuint bytes);

//	// extern void NSDeallocateMemoryPages (void * _Nonnull ptr, NSUInteger bytes);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSDeallocateMemoryPages (void* ptr, nuint bytes);

//	// extern void NSCopyMemoryPages (const void * _Nonnull source, void * _Nonnull dest, NSUInteger bytes);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSCopyMemoryPages (void* source, void* dest, nuint bytes);

//	// extern NSUInteger NSRealMemoryAvailable () __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=6.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.8)));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Use NSProcessInfo instead")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Use NSProcessInfo instead")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Use NSProcessInfo instead")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use NSProcessInfo instead")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Use NSProcessInfo instead")]
//	[Deprecated (PlatformName.iOS, 6, 0, message: "Use NSProcessInfo instead")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Use NSProcessInfo instead")]
//	[Deprecated (PlatformName.MacOSX, 10, 8, message: "Use NSProcessInfo instead")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSRealMemoryAvailable ();

//	// extern id _Nonnull NSAllocateObject (Class _Nonnull aClass, NSUInteger extraBytes, NSZone * _Nullable zone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject NSAllocateObject (Class aClass, nuint extraBytes, [NullAllowed] NSZone* zone);

//	// extern void NSDeallocateObject (id _Nonnull object);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void NSDeallocateObject (NSObject @object);

//	// extern id _Nonnull NSCopyObject (id _Nonnull object, NSUInteger extraBytes, NSZone * _Nullable zone) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(ios, introduced=2.0, deprecated=6.0))) __attribute__((availability(macos, introduced=10.0, deprecated=10.8)));
//	[Introduced (PlatformName.TvOS, 9, 0, message: "Not supported")]
//	[Deprecated (PlatformName.TvOS, 9, 0, message: "Not supported")]
//	[Introduced (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//	[Deprecated (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//	[Introduced (PlatformName.iOS, 2, 0, message: "Not supported")]
//	[Deprecated (PlatformName.iOS, 6, 0, message: "Not supported")]
//	[Introduced (PlatformName.MacOSX, 10, 0, message: "Not supported")]
//	[Deprecated (PlatformName.MacOSX, 10, 8, message: "Not supported")]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSObject NSCopyObject (NSObject @object, nuint extraBytes, [NullAllowed] NSZone* zone);

//	// extern BOOL NSShouldRetainWithZone (id _Nonnull anObject, NSZone * _Nullable requestedZone);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool NSShouldRetainWithZone (NSObject anObject, [NullAllowed] NSZone* requestedZone);

//	// extern void NSIncrementExtraRefCount (id _Nonnull object);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void NSIncrementExtraRefCount (NSObject @object);

//	// extern BOOL NSDecrementExtraRefCountWasZero (id _Nonnull object);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool NSDecrementExtraRefCountWasZero (NSObject @object);

//	// extern NSUInteger NSExtraRefCount (id _Nonnull object);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSExtraRefCount (NSObject @object);

//	// CFTypeRef _Nullable CFBridgingRetain (id _Nullable X) __attribute__((cf_returns_retained)) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CFBridgingRetain ([NullAllowed] NSObject X);

//	// id _Nullable CFBridgingRelease (CFTypeRef _Nullable X) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSObject CFBridgingRelease ([NullAllowed] void* X);

//	// NSRange NSMakeRange (NSUInteger loc, NSUInteger len) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSRange NSMakeRange (nuint loc, nuint len);

//	// NSUInteger NSMaxRange (NSRange range) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSMaxRange (NSRange range);

//	// BOOL NSLocationInRange (NSUInteger loc, NSRange range) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool NSLocationInRange (nuint loc, NSRange range);

//	// BOOL NSEqualRanges (NSRange range1, NSRange range2) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool NSEqualRanges (NSRange range1, NSRange range2);

//	// extern NSRange NSUnionRange (NSRange range1, NSRange range2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSRange NSUnionRange (NSRange range1, NSRange range2);

//	// extern NSRange NSIntersectionRange (NSRange range1, NSRange range2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSRange NSIntersectionRange (NSRange range1, NSRange range2);

//	// extern NSString * _Nonnull NSStringFromRange (NSRange range);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromRange (NSRange range);

//	// extern NSRange NSRangeFromString (NSString * _Nonnull aString);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSRange NSRangeFromString (NSString aString);

//	// long NSHostByteOrder () __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nint NSHostByteOrder ();

//	// unsigned short NSSwapShort (unsigned short inv) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NSSwapShort (ushort inv);

//	// unsigned int NSSwapInt (unsigned int inv) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NSSwapInt (uint inv);

//	// unsigned long NSSwapLong (unsigned long inv) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSSwapLong (nuint inv);

//	// unsigned long long NSSwapLongLong (unsigned long long inv) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NSSwapLongLong (ulong inv);

//	// unsigned short NSSwapBigShortToHost (unsigned short x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NSSwapBigShortToHost (ushort x);

//	// unsigned int NSSwapBigIntToHost (unsigned int x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NSSwapBigIntToHost (uint x);

//	// unsigned long NSSwapBigLongToHost (unsigned long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSSwapBigLongToHost (nuint x);

//	// unsigned long long NSSwapBigLongLongToHost (unsigned long long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NSSwapBigLongLongToHost (ulong x);

//	// unsigned short NSSwapHostShortToBig (unsigned short x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NSSwapHostShortToBig (ushort x);

//	// unsigned int NSSwapHostIntToBig (unsigned int x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NSSwapHostIntToBig (uint x);

//	// unsigned long NSSwapHostLongToBig (unsigned long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSSwapHostLongToBig (nuint x);

//	// unsigned long long NSSwapHostLongLongToBig (unsigned long long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NSSwapHostLongLongToBig (ulong x);

//	// unsigned short NSSwapLittleShortToHost (unsigned short x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NSSwapLittleShortToHost (ushort x);

//	// unsigned int NSSwapLittleIntToHost (unsigned int x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NSSwapLittleIntToHost (uint x);

//	// unsigned long NSSwapLittleLongToHost (unsigned long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSSwapLittleLongToHost (nuint x);

//	// unsigned long long NSSwapLittleLongLongToHost (unsigned long long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NSSwapLittleLongLongToHost (ulong x);

//	// unsigned short NSSwapHostShortToLittle (unsigned short x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ushort NSSwapHostShortToLittle (ushort x);

//	// unsigned int NSSwapHostIntToLittle (unsigned int x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint NSSwapHostIntToLittle (uint x);

//	// unsigned long NSSwapHostLongToLittle (unsigned long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint NSSwapHostLongToLittle (nuint x);

//	// unsigned long long NSSwapHostLongLongToLittle (unsigned long long x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong NSSwapHostLongLongToLittle (ulong x);

//	// NSSwappedFloat NSConvertHostFloatToSwapped (float x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedFloat NSConvertHostFloatToSwapped (float x);

//	// float NSConvertSwappedFloatToHost (NSSwappedFloat x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float NSConvertSwappedFloatToHost (NSSwappedFloat x);

//	// NSSwappedDouble NSConvertHostDoubleToSwapped (double x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedDouble NSConvertHostDoubleToSwapped (double x);

//	// double NSConvertSwappedDoubleToHost (NSSwappedDouble x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double NSConvertSwappedDoubleToHost (NSSwappedDouble x);

//	// NSSwappedFloat NSSwapFloat (NSSwappedFloat x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedFloat NSSwapFloat (NSSwappedFloat x);

//	// NSSwappedDouble NSSwapDouble (NSSwappedDouble x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedDouble NSSwapDouble (NSSwappedDouble x);

//	// double NSSwapBigDoubleToHost (NSSwappedDouble x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double NSSwapBigDoubleToHost (NSSwappedDouble x);

//	// float NSSwapBigFloatToHost (NSSwappedFloat x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float NSSwapBigFloatToHost (NSSwappedFloat x);

//	// NSSwappedDouble NSSwapHostDoubleToBig (double x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedDouble NSSwapHostDoubleToBig (double x);

//	// NSSwappedFloat NSSwapHostFloatToBig (float x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedFloat NSSwapHostFloatToBig (float x);

//	// double NSSwapLittleDoubleToHost (NSSwappedDouble x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double NSSwapLittleDoubleToHost (NSSwappedDouble x);

//	// float NSSwapLittleFloatToHost (NSSwappedFloat x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern float NSSwapLittleFloatToHost (NSSwappedFloat x);

//	// NSSwappedDouble NSSwapHostDoubleToLittle (double x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedDouble NSSwapHostDoubleToLittle (double x);

//	// NSSwappedFloat NSSwapHostFloatToLittle (float x) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSSwappedFloat NSSwapHostFloatToLittle (float x);

//	// BOOL NSDecimalIsNotANumber (const NSDecimal * _Nonnull dcm) __attribute__((always_inline));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool NSDecimalIsNotANumber (NSDecimal* dcm);

//	// extern void NSDecimalCopy (NSDecimal * _Nonnull destination, const NSDecimal * _Nonnull source);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSDecimalCopy (NSDecimal* destination, NSDecimal* source);

//	// extern void NSDecimalCompact (NSDecimal * _Nonnull number);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSDecimalCompact (NSDecimal* number);

//	// extern NSComparisonResult NSDecimalCompare (const NSDecimal * _Nonnull leftOperand, const NSDecimal * _Nonnull rightOperand);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSComparisonResult NSDecimalCompare (NSDecimal* leftOperand, NSDecimal* rightOperand);

//	// extern void NSDecimalRound (NSDecimal * _Nonnull result, const NSDecimal * _Nonnull number, NSInteger scale, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSDecimalRound (NSDecimal* result, NSDecimal* number, nint scale, NSRoundingMode roundingMode);

//	// extern NSCalculationError NSDecimalNormalize (NSDecimal * _Nonnull number1, NSDecimal * _Nonnull number2, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSCalculationError NSDecimalNormalize (NSDecimal* number1, NSDecimal* number2, NSRoundingMode roundingMode);

//	// extern NSCalculationError NSDecimalAdd (NSDecimal * _Nonnull result, const NSDecimal * _Nonnull leftOperand, const NSDecimal * _Nonnull rightOperand, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSCalculationError NSDecimalAdd (NSDecimal* result, NSDecimal* leftOperand, NSDecimal* rightOperand, NSRoundingMode roundingMode);

//	// extern NSCalculationError NSDecimalSubtract (NSDecimal * _Nonnull result, const NSDecimal * _Nonnull leftOperand, const NSDecimal * _Nonnull rightOperand, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSCalculationError NSDecimalSubtract (NSDecimal* result, NSDecimal* leftOperand, NSDecimal* rightOperand, NSRoundingMode roundingMode);

//	// extern NSCalculationError NSDecimalMultiply (NSDecimal * _Nonnull result, const NSDecimal * _Nonnull leftOperand, const NSDecimal * _Nonnull rightOperand, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSCalculationError NSDecimalMultiply (NSDecimal* result, NSDecimal* leftOperand, NSDecimal* rightOperand, NSRoundingMode roundingMode);

//	// extern NSCalculationError NSDecimalDivide (NSDecimal * _Nonnull result, const NSDecimal * _Nonnull leftOperand, const NSDecimal * _Nonnull rightOperand, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSCalculationError NSDecimalDivide (NSDecimal* result, NSDecimal* leftOperand, NSDecimal* rightOperand, NSRoundingMode roundingMode);

//	// extern NSCalculationError NSDecimalPower (NSDecimal * _Nonnull result, const NSDecimal * _Nonnull number, NSUInteger power, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSCalculationError NSDecimalPower (NSDecimal* result, NSDecimal* number, nuint power, NSRoundingMode roundingMode);

//	// extern NSCalculationError NSDecimalMultiplyByPowerOf10 (NSDecimal * _Nonnull result, const NSDecimal * _Nonnull number, short power, NSRoundingMode roundingMode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSCalculationError NSDecimalMultiplyByPowerOf10 (NSDecimal* result, NSDecimal* number, short power, NSRoundingMode roundingMode);

//	// extern NSString * _Nonnull NSDecimalString (const NSDecimal * _Nonnull dcm, id _Nullable locale);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe NSString NSDecimalString (NSDecimal* dcm, [NullAllowed] NSObject locale);

//	// extern NSUncaughtExceptionHandler * _Nullable NSGetUncaughtExceptionHandler ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe NSUncaughtExceptionHandler* NSGetUncaughtExceptionHandler ();

//	// extern void NSSetUncaughtExceptionHandler (NSUncaughtExceptionHandler * _Nullable);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void NSSetUncaughtExceptionHandler ([NullAllowed] NSUncaughtExceptionHandler*);

//	// extern NSString * _Nonnull NSUserName ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSUserName ();

//	// extern NSString * _Nonnull NSFullUserName ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSFullUserName ();

//	// extern NSString * _Nonnull NSHomeDirectory ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSHomeDirectory ();

//	// extern NSString * _Nullable NSHomeDirectoryForUser (NSString * _Nullable userName);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSString NSHomeDirectoryForUser ([NullAllowed] NSString userName);

//	// extern NSString * _Nonnull NSTemporaryDirectory ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSTemporaryDirectory ();

//	// extern NSString * _Nonnull NSOpenStepRootDirectory ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSOpenStepRootDirectory ();

//	// extern NSArray<NSString *> * _Nonnull NSSearchPathForDirectoriesInDomains (NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString[] NSSearchPathForDirectoriesInDomains (NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, bool expandTilde);

//	// CGPoint CGPointMake (CGFloat x, CGFloat y) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGPoint CGPointMake (nfloat x, nfloat y);

//	// CGSize CGSizeMake (CGFloat width, CGFloat height) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGSize CGSizeMake (nfloat width, nfloat height);

//	// CGVector CGVectorMake (CGFloat dx, CGFloat dy) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGVector CGVectorMake (nfloat dx, nfloat dy);

//	// CGRect CGRectMake (CGFloat x, CGFloat y, CGFloat width, CGFloat height) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectMake (nfloat x, nfloat y, nfloat width, nfloat height);

//	// extern CGFloat CGRectGetMinX (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetMinX (CGRect rect);

//	// extern CGFloat CGRectGetMidX (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetMidX (CGRect rect);

//	// extern CGFloat CGRectGetMaxX (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetMaxX (CGRect rect);

//	// extern CGFloat CGRectGetMinY (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetMinY (CGRect rect);

//	// extern CGFloat CGRectGetMidY (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetMidY (CGRect rect);

//	// extern CGFloat CGRectGetMaxY (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetMaxY (CGRect rect);

//	// extern CGFloat CGRectGetWidth (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetWidth (CGRect rect);

//	// extern CGFloat CGRectGetHeight (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nfloat CGRectGetHeight (CGRect rect);

//	// extern _Bool CGPointEqualToPoint (CGPoint point1, CGPoint point2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGPointEqualToPoint (CGPoint point1, CGPoint point2);

//	// extern _Bool CGSizeEqualToSize (CGSize size1, CGSize size2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGSizeEqualToSize (CGSize size1, CGSize size2);

//	// extern _Bool CGRectEqualToRect (CGRect rect1, CGRect rect2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGRectEqualToRect (CGRect rect1, CGRect rect2);

//	// extern CGRect CGRectStandardize (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectStandardize (CGRect rect);

//	// extern _Bool CGRectIsEmpty (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGRectIsEmpty (CGRect rect);

//	// extern _Bool CGRectIsNull (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGRectIsNull (CGRect rect);

//	// extern _Bool CGRectIsInfinite (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGRectIsInfinite (CGRect rect);

//	// extern CGRect CGRectInset (CGRect rect, CGFloat dx, CGFloat dy) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectInset (CGRect rect, nfloat dx, nfloat dy);

//	// extern CGRect CGRectIntegral (CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectIntegral (CGRect rect);

//	// extern CGRect CGRectUnion (CGRect r1, CGRect r2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectUnion (CGRect r1, CGRect r2);

//	// extern CGRect CGRectIntersection (CGRect r1, CGRect r2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectIntersection (CGRect r1, CGRect r2);

//	// extern CGRect CGRectOffset (CGRect rect, CGFloat dx, CGFloat dy) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectOffset (CGRect rect, nfloat dx, nfloat dy);

//	// extern void CGRectDivide (CGRect rect, CGRect * _Nonnull slice, CGRect * _Nonnull remainder, CGFloat amount, CGRectEdge edge) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGRectDivide (CGRect rect, CGRect* slice, CGRect* remainder, nfloat amount, CGRectEdge edge);

//	// extern _Bool CGRectContainsPoint (CGRect rect, CGPoint point) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGRectContainsPoint (CGRect rect, CGPoint point);

//	// extern _Bool CGRectContainsRect (CGRect rect1, CGRect rect2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGRectContainsRect (CGRect rect1, CGRect rect2);

//	// extern _Bool CGRectIntersectsRect (CGRect rect1, CGRect rect2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGRectIntersectsRect (CGRect rect1, CGRect rect2);

//	// extern CFDictionaryRef _Nonnull CGPointCreateDictionaryRepresentation (CGPoint point) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CGPointCreateDictionaryRepresentation (CGPoint point);

//	// extern _Bool CGPointMakeWithDictionaryRepresentation (CFDictionaryRef _Nullable dict, CGPoint * _Nullable point) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPointMakeWithDictionaryRepresentation ([NullAllowed] CFDictionaryRef* dict, [NullAllowed] CGPoint* point);

//	// extern CFDictionaryRef _Nonnull CGSizeCreateDictionaryRepresentation (CGSize size) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CGSizeCreateDictionaryRepresentation (CGSize size);

//	// extern _Bool CGSizeMakeWithDictionaryRepresentation (CFDictionaryRef _Nullable dict, CGSize * _Nullable size) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGSizeMakeWithDictionaryRepresentation ([NullAllowed] CFDictionaryRef* dict, [NullAllowed] CGSize* size);

//	// extern CFDictionaryRef _Nonnull CGRectCreateDictionaryRepresentation (CGRect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CGRectCreateDictionaryRepresentation (CGRect);

//	// extern _Bool CGRectMakeWithDictionaryRepresentation (CFDictionaryRef _Nullable dict, CGRect * _Nullable rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGRectMakeWithDictionaryRepresentation ([NullAllowed] CFDictionaryRef* dict, [NullAllowed] CGRect* rect);

//	// CGPoint CGPointMake (CGFloat x, CGFloat y) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGPoint CGPointMake (nfloat x, nfloat y);

//	// CGSize CGSizeMake (CGFloat width, CGFloat height) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGSize CGSizeMake (nfloat width, nfloat height);

//	// CGVector CGVectorMake (CGFloat dx, CGFloat dy) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGVector CGVectorMake (nfloat dx, nfloat dy);

//	// CGRect CGRectMake (CGFloat x, CGFloat y, CGFloat width, CGFloat height) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectMake (nfloat x, nfloat y, nfloat width, nfloat height);

//	// _Bool __CGPointEqualToPoint (CGPoint point1, CGPoint point2) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool __CGPointEqualToPoint (CGPoint point1, CGPoint point2);

//	// _Bool __CGSizeEqualToSize (CGSize size1, CGSize size2) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool __CGSizeEqualToSize (CGSize size1, CGSize size2);

//	// extern CGAffineTransform CGAffineTransformMake (CGFloat a, CGFloat b, CGFloat c, CGFloat d, CGFloat tx, CGFloat ty) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformMake (nfloat a, nfloat b, nfloat c, nfloat d, nfloat tx, nfloat ty);

//	// extern CGAffineTransform CGAffineTransformMakeTranslation (CGFloat tx, CGFloat ty) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformMakeTranslation (nfloat tx, nfloat ty);

//	// extern CGAffineTransform CGAffineTransformMakeScale (CGFloat sx, CGFloat sy) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformMakeScale (nfloat sx, nfloat sy);

//	// extern CGAffineTransform CGAffineTransformMakeRotation (CGFloat angle) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformMakeRotation (nfloat angle);

//	// extern _Bool CGAffineTransformIsIdentity (CGAffineTransform t) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGAffineTransformIsIdentity (CGAffineTransform t);

//	// extern CGAffineTransform CGAffineTransformTranslate (CGAffineTransform t, CGFloat tx, CGFloat ty) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformTranslate (CGAffineTransform t, nfloat tx, nfloat ty);

//	// extern CGAffineTransform CGAffineTransformScale (CGAffineTransform t, CGFloat sx, CGFloat sy) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformScale (CGAffineTransform t, nfloat sx, nfloat sy);

//	// extern CGAffineTransform CGAffineTransformRotate (CGAffineTransform t, CGFloat angle) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformRotate (CGAffineTransform t, nfloat angle);

//	// extern CGAffineTransform CGAffineTransformInvert (CGAffineTransform t) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformInvert (CGAffineTransform t);

//	// extern CGAffineTransform CGAffineTransformConcat (CGAffineTransform t1, CGAffineTransform t2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformConcat (CGAffineTransform t1, CGAffineTransform t2);

//	// extern _Bool CGAffineTransformEqualToTransform (CGAffineTransform t1, CGAffineTransform t2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CGAffineTransformEqualToTransform (CGAffineTransform t1, CGAffineTransform t2);

//	// extern CGPoint CGPointApplyAffineTransform (CGPoint point, CGAffineTransform t) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGPoint CGPointApplyAffineTransform (CGPoint point, CGAffineTransform t);

//	// extern CGSize CGSizeApplyAffineTransform (CGSize size, CGAffineTransform t) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGSize CGSizeApplyAffineTransform (CGSize size, CGAffineTransform t);

//	// extern CGRect CGRectApplyAffineTransform (CGRect rect, CGAffineTransform t) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectApplyAffineTransform (CGRect rect, CGAffineTransform t);

//	// CGAffineTransform __CGAffineTransformMake (CGFloat a, CGFloat b, CGFloat c, CGFloat d, CGFloat tx, CGFloat ty) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform __CGAffineTransformMake (nfloat a, nfloat b, nfloat c, nfloat d, nfloat tx, nfloat ty);

//	// CGPoint __CGPointApplyAffineTransform (CGPoint point, CGAffineTransform t) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGPoint __CGPointApplyAffineTransform (CGPoint point, CGAffineTransform t);

//	// CGSize __CGSizeApplyAffineTransform (CGSize size, CGAffineTransform t) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGSize __CGSizeApplyAffineTransform (CGSize size, CGAffineTransform t);

//	// extern CFTypeID CGDataProviderGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGDataProviderGetTypeID ();

//	// extern CGDataProviderRef _Nullable CGDataProviderCreateSequential (void * _Nullable info, const CGDataProviderSequentialCallbacks * _Nullable callbacks) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGDataProviderCreateSequential ([NullAllowed] void* info, [NullAllowed] CGDataProviderSequentialCallbacks* callbacks);

//	// extern CGDataProviderRef _Nullable CGDataProviderCreateDirect (void * _Nullable info, off_t size, const CGDataProviderDirectCallbacks * _Nullable callbacks) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGDataProviderCreateDirect ([NullAllowed] void* info, long size, [NullAllowed] CGDataProviderDirectCallbacks* callbacks);

//	// extern CGDataProviderRef _Nullable CGDataProviderCreateWithData (void * _Nullable info, const void * _Nullable data, size_t size, CGDataProviderReleaseDataCallback _Nullable releaseData) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGDataProviderCreateWithData ([NullAllowed] void* info, [NullAllowed] void* data, nuint size, [NullAllowed] CGDataProviderReleaseDataCallback* releaseData);

//	// extern CGDataProviderRef _Nullable CGDataProviderCreateWithCFData (CFDataRef _Nullable data) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGDataProviderCreateWithCFData ([NullAllowed] CFDataRef* data);

//	// extern CGDataProviderRef _Nullable CGDataProviderCreateWithURL (CFURLRef _Nullable url) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGDataProviderCreateWithURL ([NullAllowed] CFURLRef* url);

//	// extern CGDataProviderRef _Nullable CGDataProviderCreateWithFilename (const char * _Nullable filename) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGDataProviderCreateWithFilename ([NullAllowed] sbyte* filename);

//	// extern CGDataProviderRef _Nullable CGDataProviderRetain (CGDataProviderRef _Nullable provider) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGDataProviderRetain ([NullAllowed] CGDataProviderRef* provider);

//	// extern void CGDataProviderRelease (CGDataProviderRef _Nullable provider) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGDataProviderRelease ([NullAllowed] CGDataProviderRef* provider);

//	// extern CFDataRef _Nullable CGDataProviderCopyData (CGDataProviderRef _Nullable provider) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGDataProviderCopyData ([NullAllowed] CGDataProviderRef* provider);

//	// extern void * _Nullable CGDataProviderGetInfo (CGDataProviderRef _Nullable provider) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CGDataProviderGetInfo ([NullAllowed] CGDataProviderRef* provider);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceGray () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateDeviceGray ();

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceRGB () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateDeviceRGB ();

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceCMYK () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateDeviceCMYK ();

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedGray (const CGFloat * _Nonnull whitePoint, const CGFloat * _Nullable blackPoint, CGFloat gamma) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateCalibratedGray (nfloat[] whitePoint, [NullAllowed] nfloat[] blackPoint, nfloat gamma);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedRGB (const CGFloat * _Nonnull whitePoint, const CGFloat * _Nullable blackPoint, const CGFloat * _Nullable gamma, const CGFloat * _Nullable matrix) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateCalibratedRGB (nfloat[] whitePoint, [NullAllowed] nfloat[] blackPoint, [NullAllowed] nfloat[] gamma, [NullAllowed] nfloat[] matrix);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateLab (const CGFloat * _Nonnull whitePoint, const CGFloat * _Nullable blackPoint, const CGFloat * _Nullable range) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateLab (nfloat[] whitePoint, [NullAllowed] nfloat[] blackPoint, [NullAllowed] nfloat[] range);

//	// extern CGColorSpaceRef _Nonnull CGColorSpaceCreateWithICCData (CFTypeRef _Nullable data) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateWithICCData ([NullAllowed] void* data);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateICCBased (size_t nComponents, const CGFloat * _Nullable range, CGDataProviderRef _Nullable profile, CGColorSpaceRef _Nullable alternate) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateICCBased (nuint nComponents, [NullAllowed] nfloat* range, [NullAllowed] CGDataProviderRef* profile, [NullAllowed] CGColorSpaceRef* alternate);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateIndexed (CGColorSpaceRef _Nullable baseSpace, size_t lastIndex, const unsigned char * _Nullable colorTable) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateIndexed ([NullAllowed] CGColorSpaceRef* baseSpace, nuint lastIndex, [NullAllowed] byte* colorTable);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreatePattern (CGColorSpaceRef _Nullable baseSpace) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreatePattern ([NullAllowed] CGColorSpaceRef* baseSpace);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateWithPlatformColorSpace (const void * _Nullable ref) __attribute__((availability(ios, introduced=9.0))) __attribute__((cf_audited_transfer));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateWithPlatformColorSpace ([NullAllowed] void* @ref);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateWithName (CFStringRef _Nullable name) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateWithName ([NullAllowed] CFStringRef* name);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceRetain (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceRetain ([NullAllowed] CGColorSpaceRef* space);

//	// extern void CGColorSpaceRelease (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGColorSpaceRelease ([NullAllowed] CGColorSpaceRef* space);

//	// extern CFStringRef _Nullable CGColorSpaceGetName (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGColorSpaceGetName ([NullAllowed] CGColorSpaceRef* space);

//	// extern CFStringRef _Nullable CGColorSpaceCopyName (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGColorSpaceCopyName ([NullAllowed] CGColorSpaceRef* space);

//	// extern CFTypeID CGColorSpaceGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGColorSpaceGetTypeID ();

//	// extern size_t CGColorSpaceGetNumberOfComponents (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGColorSpaceGetNumberOfComponents ([NullAllowed] CGColorSpaceRef* space);

//	// extern CGColorSpaceModel CGColorSpaceGetModel (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGColorSpaceModel CGColorSpaceGetModel ([NullAllowed] CGColorSpaceRef* space);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceGetBaseColorSpace (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceGetBaseColorSpace ([NullAllowed] CGColorSpaceRef* space);

//	// extern size_t CGColorSpaceGetColorTableCount (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGColorSpaceGetColorTableCount ([NullAllowed] CGColorSpaceRef* space);

//	// extern void CGColorSpaceGetColorTable (CGColorSpaceRef _Nullable space, uint8_t * _Nullable table) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGColorSpaceGetColorTable ([NullAllowed] CGColorSpaceRef* space, [NullAllowed] byte* table);

//	// extern CFDataRef _Nullable CGColorSpaceCopyICCData (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGColorSpaceCopyICCData ([NullAllowed] CGColorSpaceRef* space);

//	// extern _Bool CGColorSpaceIsWideGamutRGB (CGColorSpaceRef _Nonnull) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGColorSpaceIsWideGamutRGB (CGColorSpaceRef*);

//	// extern _Bool CGColorSpaceSupportsOutput (CGColorSpaceRef _Nonnull space) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGColorSpaceSupportsOutput (CGColorSpaceRef* space);

//	// extern CGColorSpaceRef _Nullable CGColorSpaceCreateWithICCProfile (CFDataRef _Nullable data) __attribute__((availability(ios, introduced=2.0, deprecated=11.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 11, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorSpaceCreateWithICCProfile ([NullAllowed] CFDataRef* data);

//	// extern CFDataRef _Nullable CGColorSpaceCopyICCProfile (CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0, deprecated=11.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 11, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGColorSpaceCopyICCProfile ([NullAllowed] CGColorSpaceRef* space);

//	// extern CFTypeID CGPatternGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGPatternGetTypeID ();

//	// extern CGPatternRef _Nullable CGPatternCreate (void * _Nullable info, CGRect bounds, CGAffineTransform matrix, CGFloat xStep, CGFloat yStep, CGPatternTiling tiling, _Bool isColored, const CGPatternCallbacks * _Nullable callbacks) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPatternRef* CGPatternCreate ([NullAllowed] void* info, CGRect bounds, CGAffineTransform matrix, nfloat xStep, nfloat yStep, CGPatternTiling tiling, bool isColored, [NullAllowed] CGPatternCallbacks* callbacks);

//	// extern CGPatternRef _Nullable CGPatternRetain (CGPatternRef _Nullable pattern) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPatternRef* CGPatternRetain ([NullAllowed] CGPatternRef* pattern);

//	// extern void CGPatternRelease (CGPatternRef _Nullable pattern) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPatternRelease ([NullAllowed] CGPatternRef* pattern);

//	// extern CGColorRef _Nullable CGColorCreate (CGColorSpaceRef _Nullable space, const CGFloat * _Nullable components) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorRef* CGColorCreate ([NullAllowed] CGColorSpaceRef* space, [NullAllowed] nfloat* components);

//	// extern CGColorRef _Nonnull CGColorCreateGenericGray (CGFloat gray, CGFloat alpha) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGColorRef* CGColorCreateGenericGray (nfloat gray, nfloat alpha);

//	// extern CGColorRef _Nonnull CGColorCreateGenericRGB (CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGColorRef* CGColorCreateGenericRGB (nfloat red, nfloat green, nfloat blue, nfloat alpha);

//	// extern CGColorRef _Nonnull CGColorCreateGenericCMYK (CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGColorRef* CGColorCreateGenericCMYK (nfloat cyan, nfloat magenta, nfloat yellow, nfloat black, nfloat alpha);

//	// extern CGColorRef _Nullable CGColorGetConstantColor (CFStringRef _Nullable colorName) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorRef* CGColorGetConstantColor ([NullAllowed] CFStringRef* colorName);

//	// extern CGColorRef _Nullable CGColorCreateWithPattern (CGColorSpaceRef _Nullable space, CGPatternRef _Nullable pattern, const CGFloat * _Nullable components) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorRef* CGColorCreateWithPattern ([NullAllowed] CGColorSpaceRef* space, [NullAllowed] CGPatternRef* pattern, [NullAllowed] nfloat* components);

//	// extern CGColorRef _Nullable CGColorCreateCopy (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorRef* CGColorCreateCopy ([NullAllowed] CGColorRef* color);

//	// extern CGColorRef _Nullable CGColorCreateCopyWithAlpha (CGColorRef _Nullable color, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorRef* CGColorCreateCopyWithAlpha ([NullAllowed] CGColorRef* color, nfloat alpha);

//	// extern CGColorRef _Nullable CGColorCreateCopyByMatchingToColorSpace (CGColorSpaceRef _Nullable, CGColorRenderingIntent intent, CGColorRef _Nullable color, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=9.0))) __attribute__((cf_audited_transfer));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorRef* CGColorCreateCopyByMatchingToColorSpace ([NullAllowed] CGColorSpaceRef*, CGColorRenderingIntent intent, [NullAllowed] CGColorRef* color, [NullAllowed] CFDictionaryRef* options);

//	// extern CGColorRef _Nullable CGColorRetain (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorRef* CGColorRetain ([NullAllowed] CGColorRef* color);

//	// extern void CGColorRelease (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGColorRelease ([NullAllowed] CGColorRef* color);

//	// extern _Bool CGColorEqualToColor (CGColorRef _Nullable color1, CGColorRef _Nullable color2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGColorEqualToColor ([NullAllowed] CGColorRef* color1, [NullAllowed] CGColorRef* color2);

//	// extern size_t CGColorGetNumberOfComponents (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGColorGetNumberOfComponents ([NullAllowed] CGColorRef* color);

//	// extern const CGFloat * _Nullable CGColorGetComponents (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe nfloat* CGColorGetComponents ([NullAllowed] CGColorRef* color);

//	// extern CGFloat CGColorGetAlpha (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CGColorGetAlpha ([NullAllowed] CGColorRef* color);

//	// extern CGColorSpaceRef _Nullable CGColorGetColorSpace (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGColorGetColorSpace ([NullAllowed] CGColorRef* color);

//	// extern CGPatternRef _Nullable CGColorGetPattern (CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPatternRef* CGColorGetPattern ([NullAllowed] CGColorRef* color);

//	// extern CFTypeID CGColorGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGColorGetTypeID ();

//	// extern CFTypeID CGFontGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGFontGetTypeID ();

//	// extern CGFontRef _Nullable CGFontCreateWithPlatformFont (void * _Nullable platformFontReference) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGFontRef* CGFontCreateWithPlatformFont ([NullAllowed] void* platformFontReference);

//	// extern CGFontRef _Nullable CGFontCreateWithDataProvider (CGDataProviderRef _Nullable provider) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGFontRef* CGFontCreateWithDataProvider ([NullAllowed] CGDataProviderRef* provider);

//	// extern CGFontRef _Nullable CGFontCreateWithFontName (CFStringRef _Nullable name) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGFontRef* CGFontCreateWithFontName ([NullAllowed] CFStringRef* name);

//	// extern CGFontRef _Nullable CGFontCreateCopyWithVariations (CGFontRef _Nullable font, CFDictionaryRef _Nullable variations) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGFontRef* CGFontCreateCopyWithVariations ([NullAllowed] CGFontRef* font, [NullAllowed] CFDictionaryRef* variations);

//	// extern CGFontRef _Nullable CGFontRetain (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGFontRef* CGFontRetain ([NullAllowed] CGFontRef* font);

//	// extern void CGFontRelease (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGFontRelease ([NullAllowed] CGFontRef* font);

//	// extern size_t CGFontGetNumberOfGlyphs (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGFontGetNumberOfGlyphs ([NullAllowed] CGFontRef* font);

//	// extern int CGFontGetUnitsPerEm (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGFontGetUnitsPerEm ([NullAllowed] CGFontRef* font);

//	// extern CFStringRef _Nullable CGFontCopyPostScriptName (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGFontCopyPostScriptName ([NullAllowed] CGFontRef* font);

//	// extern CFStringRef _Nullable CGFontCopyFullName (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGFontCopyFullName ([NullAllowed] CGFontRef* font);

//	// extern int CGFontGetAscent (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGFontGetAscent ([NullAllowed] CGFontRef* font);

//	// extern int CGFontGetDescent (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGFontGetDescent ([NullAllowed] CGFontRef* font);

//	// extern int CGFontGetLeading (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGFontGetLeading ([NullAllowed] CGFontRef* font);

//	// extern int CGFontGetCapHeight (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGFontGetCapHeight ([NullAllowed] CGFontRef* font);

//	// extern int CGFontGetXHeight (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGFontGetXHeight ([NullAllowed] CGFontRef* font);

//	// extern CGRect CGFontGetFontBBox (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGFontGetFontBBox ([NullAllowed] CGFontRef* font);

//	// extern CGFloat CGFontGetItalicAngle (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CGFontGetItalicAngle ([NullAllowed] CGFontRef* font);

//	// extern CGFloat CGFontGetStemV (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CGFontGetStemV ([NullAllowed] CGFontRef* font);

//	// extern CFArrayRef _Nullable CGFontCopyVariationAxes (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CGFontCopyVariationAxes ([NullAllowed] CGFontRef* font);

//	// extern CFDictionaryRef _Nullable CGFontCopyVariations (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CGFontCopyVariations ([NullAllowed] CGFontRef* font);

//	// extern _Bool CGFontGetGlyphAdvances (CGFontRef _Nullable font, const CGGlyph * _Nonnull glyphs, size_t count, int * _Nonnull advances) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGFontGetGlyphAdvances ([NullAllowed] CGFontRef* font, ushort* glyphs, nuint count, int* advances);

//	// extern _Bool CGFontGetGlyphBBoxes (CGFontRef _Nullable font, const CGGlyph * _Nonnull glyphs, size_t count, CGRect * _Nonnull bboxes) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGFontGetGlyphBBoxes ([NullAllowed] CGFontRef* font, ushort* glyphs, nuint count, CGRect* bboxes);

//	// extern CGGlyph CGFontGetGlyphWithGlyphName (CGFontRef _Nullable font, CFStringRef _Nullable name) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort CGFontGetGlyphWithGlyphName ([NullAllowed] CGFontRef* font, [NullAllowed] CFStringRef* name);

//	// extern CFStringRef _Nullable CGFontCopyGlyphNameForGlyph (CGFontRef _Nullable font, CGGlyph glyph) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGFontCopyGlyphNameForGlyph ([NullAllowed] CGFontRef* font, ushort glyph);

//	// extern _Bool CGFontCanCreatePostScriptSubset (CGFontRef _Nullable font, CGFontPostScriptFormat format) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGFontCanCreatePostScriptSubset ([NullAllowed] CGFontRef* font, CGFontPostScriptFormat format);

//	// extern CFDataRef _Nullable CGFontCreatePostScriptSubset (CGFontRef _Nullable font, CFStringRef _Nullable subsetName, CGFontPostScriptFormat format, const CGGlyph * _Nullable glyphs, size_t count, const CGGlyph * _Nonnull encoding) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGFontCreatePostScriptSubset ([NullAllowed] CGFontRef* font, [NullAllowed] CFStringRef* subsetName, CGFontPostScriptFormat format, [NullAllowed] ushort* glyphs, nuint count, ushort[] encoding);

//	// extern CFDataRef _Nullable CGFontCreatePostScriptEncoding (CGFontRef _Nullable font, const CGGlyph * _Nonnull encoding) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGFontCreatePostScriptEncoding ([NullAllowed] CGFontRef* font, ushort[] encoding);

//	// extern CFArrayRef _Nullable CGFontCopyTableTags (CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CGFontCopyTableTags ([NullAllowed] CGFontRef* font);

//	// extern CFDataRef _Nullable CGFontCopyTableForTag (CGFontRef _Nullable font, uint32_t tag) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGFontCopyTableForTag ([NullAllowed] CGFontRef* font, uint tag);

//	// extern CFTypeID CGGradientGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGGradientGetTypeID ();

//	// extern CGGradientRef _Nullable CGGradientCreateWithColorComponents (CGColorSpaceRef _Nullable space, const CGFloat * _Nullable components, const CGFloat * _Nullable locations, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGGradientRef* CGGradientCreateWithColorComponents ([NullAllowed] CGColorSpaceRef* space, [NullAllowed] nfloat* components, [NullAllowed] nfloat* locations, nuint count);

//	// extern CGGradientRef _Nullable CGGradientCreateWithColors (CGColorSpaceRef _Nullable space, CFArrayRef _Nullable colors, const CGFloat * _Nullable locations) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGGradientRef* CGGradientCreateWithColors ([NullAllowed] CGColorSpaceRef* space, [NullAllowed] CFArrayRef* colors, [NullAllowed] nfloat* locations);

//	// extern CGGradientRef _Nullable CGGradientRetain (CGGradientRef _Nullable gradient) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGGradientRef* CGGradientRetain ([NullAllowed] CGGradientRef* gradient);

//	// extern void CGGradientRelease (CGGradientRef _Nullable gradient) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGGradientRelease ([NullAllowed] CGGradientRef* gradient);

//	// extern CFTypeID CGImageGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGImageGetTypeID ();

//	// extern CGImageRef _Nullable CGImageCreate (size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGColorSpaceRef _Nullable space, CGBitmapInfo bitmapInfo, CGDataProviderRef _Nullable provider, const CGFloat * _Nullable decode, _Bool shouldInterpolate, CGColorRenderingIntent intent) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreate (nuint width, nuint height, nuint bitsPerComponent, nuint bitsPerPixel, nuint bytesPerRow, [NullAllowed] CGColorSpaceRef* space, CGBitmapInfo bitmapInfo, [NullAllowed] CGDataProviderRef* provider, [NullAllowed] nfloat* decode, bool shouldInterpolate, CGColorRenderingIntent intent);

//	// extern CGImageRef _Nullable CGImageMaskCreate (size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGDataProviderRef _Nullable provider, const CGFloat * _Nullable decode, _Bool shouldInterpolate) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageMaskCreate (nuint width, nuint height, nuint bitsPerComponent, nuint bitsPerPixel, nuint bytesPerRow, [NullAllowed] CGDataProviderRef* provider, [NullAllowed] nfloat* decode, bool shouldInterpolate);

//	// extern CGImageRef _Nullable CGImageCreateCopy (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreateCopy ([NullAllowed] CGImageRef* image);

//	// extern CGImageRef _Nullable CGImageCreateWithJPEGDataProvider (CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode, _Bool shouldInterpolate, CGColorRenderingIntent intent) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreateWithJPEGDataProvider ([NullAllowed] CGDataProviderRef* source, [NullAllowed] nfloat* decode, bool shouldInterpolate, CGColorRenderingIntent intent);

//	// extern CGImageRef _Nullable CGImageCreateWithPNGDataProvider (CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode, _Bool shouldInterpolate, CGColorRenderingIntent intent) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreateWithPNGDataProvider ([NullAllowed] CGDataProviderRef* source, [NullAllowed] nfloat* decode, bool shouldInterpolate, CGColorRenderingIntent intent);

//	// extern CGImageRef _Nullable CGImageCreateWithImageInRect (CGImageRef _Nullable image, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreateWithImageInRect ([NullAllowed] CGImageRef* image, CGRect rect);

//	// extern CGImageRef _Nullable CGImageCreateWithMask (CGImageRef _Nullable image, CGImageRef _Nullable mask) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreateWithMask ([NullAllowed] CGImageRef* image, [NullAllowed] CGImageRef* mask);

//	// extern CGImageRef _Nullable CGImageCreateWithMaskingColors (CGImageRef _Nullable image, const CGFloat * _Nullable components) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreateWithMaskingColors ([NullAllowed] CGImageRef* image, [NullAllowed] nfloat* components);

//	// extern CGImageRef _Nullable CGImageCreateCopyWithColorSpace (CGImageRef _Nullable image, CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageCreateCopyWithColorSpace ([NullAllowed] CGImageRef* image, [NullAllowed] CGColorSpaceRef* space);

//	// extern CGImageRef _Nullable CGImageRetain (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageRetain ([NullAllowed] CGImageRef* image);

//	// extern void CGImageRelease (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageRelease ([NullAllowed] CGImageRef* image);

//	// extern _Bool CGImageIsMask (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageIsMask ([NullAllowed] CGImageRef* image);

//	// extern size_t CGImageGetWidth (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGImageGetWidth ([NullAllowed] CGImageRef* image);

//	// extern size_t CGImageGetHeight (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGImageGetHeight ([NullAllowed] CGImageRef* image);

//	// extern size_t CGImageGetBitsPerComponent (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGImageGetBitsPerComponent ([NullAllowed] CGImageRef* image);

//	// extern size_t CGImageGetBitsPerPixel (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGImageGetBitsPerPixel ([NullAllowed] CGImageRef* image);

//	// extern size_t CGImageGetBytesPerRow (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGImageGetBytesPerRow ([NullAllowed] CGImageRef* image);

//	// extern CGColorSpaceRef _Nullable CGImageGetColorSpace (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGImageGetColorSpace ([NullAllowed] CGImageRef* image);

//	// extern CGImageAlphaInfo CGImageGetAlphaInfo (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGImageAlphaInfo CGImageGetAlphaInfo ([NullAllowed] CGImageRef* image);

//	// extern CGDataProviderRef _Nullable CGImageGetDataProvider (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataProviderRef* CGImageGetDataProvider ([NullAllowed] CGImageRef* image);

//	// extern const CGFloat * _Nullable CGImageGetDecode (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe nfloat* CGImageGetDecode ([NullAllowed] CGImageRef* image);

//	// extern _Bool CGImageGetShouldInterpolate (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageGetShouldInterpolate ([NullAllowed] CGImageRef* image);

//	// extern CGColorRenderingIntent CGImageGetRenderingIntent (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGColorRenderingIntent CGImageGetRenderingIntent ([NullAllowed] CGImageRef* image);

//	// extern CGBitmapInfo CGImageGetBitmapInfo (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGBitmapInfo CGImageGetBitmapInfo ([NullAllowed] CGImageRef* image);

//	// extern CFStringRef _Nullable CGImageGetUTType (CGImageRef _Nullable image) __attribute__((availability(ios, introduced=9.0))) __attribute__((cf_audited_transfer));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGImageGetUTType ([NullAllowed] CGImageRef* image);

//	// extern CFTypeID CGPathGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGPathGetTypeID ();

//	// extern CGMutablePathRef _Nonnull CGPathCreateMutable () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGMutablePathRef* CGPathCreateMutable ();

//	// extern CGPathRef _Nullable CGPathCreateCopy (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPathRef* CGPathCreateCopy ([NullAllowed] CGPathRef* path);

//	// extern CGPathRef _Nullable CGPathCreateCopyByTransformingPath (CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPathRef* CGPathCreateCopyByTransformingPath ([NullAllowed] CGPathRef* path, [NullAllowed] CGAffineTransform* transform);

//	// extern CGMutablePathRef _Nullable CGPathCreateMutableCopy (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGMutablePathRef* CGPathCreateMutableCopy ([NullAllowed] CGPathRef* path);

//	// extern CGMutablePathRef _Nullable CGPathCreateMutableCopyByTransformingPath (CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGMutablePathRef* CGPathCreateMutableCopyByTransformingPath ([NullAllowed] CGPathRef* path, [NullAllowed] CGAffineTransform* transform);

//	// extern CGPathRef _Nonnull CGPathCreateWithRect (CGRect rect, const CGAffineTransform * _Nullable transform) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPathRef* CGPathCreateWithRect (CGRect rect, [NullAllowed] CGAffineTransform* transform);

//	// extern CGPathRef _Nonnull CGPathCreateWithEllipseInRect (CGRect rect, const CGAffineTransform * _Nullable transform) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPathRef* CGPathCreateWithEllipseInRect (CGRect rect, [NullAllowed] CGAffineTransform* transform);

//	// extern CGPathRef _Nonnull CGPathCreateWithRoundedRect (CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight, const CGAffineTransform * _Nullable transform) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPathRef* CGPathCreateWithRoundedRect (CGRect rect, nfloat cornerWidth, nfloat cornerHeight, [NullAllowed] CGAffineTransform* transform);

//	// extern void CGPathAddRoundedRect (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable transform, CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddRoundedRect ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* transform, CGRect rect, nfloat cornerWidth, nfloat cornerHeight);

//	// extern CGPathRef _Nullable CGPathCreateCopyByDashingPath (CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform, CGFloat phase, const CGFloat * _Nullable lengths, size_t count) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPathRef* CGPathCreateCopyByDashingPath ([NullAllowed] CGPathRef* path, [NullAllowed] CGAffineTransform* transform, nfloat phase, [NullAllowed] nfloat* lengths, nuint count);

//	// extern CGPathRef _Nullable CGPathCreateCopyByStrokingPath (CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform, CGFloat lineWidth, CGLineCap lineCap, CGLineJoin lineJoin, CGFloat miterLimit) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPathRef* CGPathCreateCopyByStrokingPath ([NullAllowed] CGPathRef* path, [NullAllowed] CGAffineTransform* transform, nfloat lineWidth, CGLineCap lineCap, CGLineJoin lineJoin, nfloat miterLimit);

//	// extern CGPathRef _Nullable CGPathRetain (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPathRef* CGPathRetain ([NullAllowed] CGPathRef* path);

//	// extern void CGPathRelease (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathRelease ([NullAllowed] CGPathRef* path);

//	// extern _Bool CGPathEqualToPath (CGPathRef _Nullable path1, CGPathRef _Nullable path2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPathEqualToPath ([NullAllowed] CGPathRef* path1, [NullAllowed] CGPathRef* path2);

//	// extern void CGPathMoveToPoint (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathMoveToPoint ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, nfloat x, nfloat y);

//	// extern void CGPathAddLineToPoint (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddLineToPoint ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, nfloat x, nfloat y);

//	// extern void CGPathAddQuadCurveToPoint (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGFloat cpx, CGFloat cpy, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddQuadCurveToPoint ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, nfloat cpx, nfloat cpy, nfloat x, nfloat y);

//	// extern void CGPathAddCurveToPoint (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGFloat cp1x, CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddCurveToPoint ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, nfloat cp1x, nfloat cp1y, nfloat cp2x, nfloat cp2y, nfloat x, nfloat y);

//	// extern void CGPathCloseSubpath (CGMutablePathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathCloseSubpath ([NullAllowed] CGMutablePathRef* path);

//	// extern void CGPathAddRect (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddRect ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, CGRect rect);

//	// extern void CGPathAddRects (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, const CGRect * _Nullable rects, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddRects ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, [NullAllowed] CGRect* rects, nuint count);

//	// extern void CGPathAddLines (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, const CGPoint * _Nullable points, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddLines ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, [NullAllowed] CGPoint* points, nuint count);

//	// extern void CGPathAddEllipseInRect (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddEllipseInRect ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, CGRect rect);

//	// extern void CGPathAddRelativeArc (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable matrix, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat delta) __attribute__((availability(ios, introduced=5.0))) __attribute__((cf_audited_transfer));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddRelativeArc ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* matrix, nfloat x, nfloat y, nfloat radius, nfloat startAngle, nfloat delta);

//	// extern void CGPathAddArc (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, _Bool clockwise) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddArc ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, nfloat x, nfloat y, nfloat radius, nfloat startAngle, nfloat endAngle, bool clockwise);

//	// extern void CGPathAddArcToPoint (CGMutablePathRef _Nullable path, const CGAffineTransform * _Nullable m, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddArcToPoint ([NullAllowed] CGMutablePathRef* path, [NullAllowed] CGAffineTransform* m, nfloat x1, nfloat y1, nfloat x2, nfloat y2, nfloat radius);

//	// extern void CGPathAddPath (CGMutablePathRef _Nullable path1, const CGAffineTransform * _Nullable m, CGPathRef _Nullable path2) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathAddPath ([NullAllowed] CGMutablePathRef* path1, [NullAllowed] CGAffineTransform* m, [NullAllowed] CGPathRef* path2);

//	// extern _Bool CGPathIsEmpty (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPathIsEmpty ([NullAllowed] CGPathRef* path);

//	// extern _Bool CGPathIsRect (CGPathRef _Nullable path, CGRect * _Nullable rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPathIsRect ([NullAllowed] CGPathRef* path, [NullAllowed] CGRect* rect);

//	// extern CGPoint CGPathGetCurrentPoint (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPoint CGPathGetCurrentPoint ([NullAllowed] CGPathRef* path);

//	// extern CGRect CGPathGetBoundingBox (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPathGetBoundingBox ([NullAllowed] CGPathRef* path);

//	// extern CGRect CGPathGetPathBoundingBox (CGPathRef _Nullable path) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPathGetPathBoundingBox ([NullAllowed] CGPathRef* path);

//	// extern _Bool CGPathContainsPoint (CGPathRef _Nullable path, const CGAffineTransform * _Nullable m, CGPoint point, _Bool eoFill) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPathContainsPoint ([NullAllowed] CGPathRef* path, [NullAllowed] CGAffineTransform* m, CGPoint point, bool eoFill);

//	// extern void CGPathApply (CGPathRef _Nullable path, void * _Nullable info, CGPathApplierFunction _Nullable function) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathApply ([NullAllowed] CGPathRef* path, [NullAllowed] void* info, [NullAllowed] CGPathApplierFunction* function);

//	// extern void CGPathApplyWithBlock (CGPathRef _Nonnull path, CGPathApplyBlock _Nonnull block) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPathApplyWithBlock (CGPathRef* path, CGPathApplyBlock block);

//	// extern CGPDFObjectType CGPDFObjectGetType (CGPDFObjectRef _Nullable object) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPDFObjectType CGPDFObjectGetType ([NullAllowed] CGPDFObjectRef* @object);

//	// extern _Bool CGPDFObjectGetValue (CGPDFObjectRef _Nullable object, CGPDFObjectType type, void * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFObjectGetValue ([NullAllowed] CGPDFObjectRef* @object, CGPDFObjectType type, [NullAllowed] void* value);

//	// extern CGPDFDictionaryRef _Nullable CGPDFStreamGetDictionary (CGPDFStreamRef _Nullable stream) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDictionaryRef* CGPDFStreamGetDictionary ([NullAllowed] CGPDFStreamRef* stream);

//	// extern CFDataRef _Nullable CGPDFStreamCopyData (CGPDFStreamRef _Nullable stream, CGPDFDataFormat * _Nullable format) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGPDFStreamCopyData ([NullAllowed] CGPDFStreamRef* stream, [NullAllowed] CGPDFDataFormat* format);

//	// extern size_t CGPDFStringGetLength (CGPDFStringRef _Nullable string) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGPDFStringGetLength ([NullAllowed] CGPDFStringRef* @string);

//	// extern const unsigned char * _Nullable CGPDFStringGetBytePtr (CGPDFStringRef _Nullable string) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe byte* CGPDFStringGetBytePtr ([NullAllowed] CGPDFStringRef* @string);

//	// extern CFStringRef _Nullable CGPDFStringCopyTextString (CGPDFStringRef _Nullable string) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGPDFStringCopyTextString ([NullAllowed] CGPDFStringRef* @string);

//	// extern CFDateRef _Nullable CGPDFStringCopyDate (CGPDFStringRef _Nullable string) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDateRef* CGPDFStringCopyDate ([NullAllowed] CGPDFStringRef* @string);

//	// extern size_t CGPDFArrayGetCount (CGPDFArrayRef _Nullable array) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGPDFArrayGetCount ([NullAllowed] CGPDFArrayRef* array);

//	// extern _Bool CGPDFArrayGetObject (CGPDFArrayRef _Nullable array, size_t index, CGPDFObjectRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetObject ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] CGPDFObjectRef** value);

//	// extern _Bool CGPDFArrayGetNull (CGPDFArrayRef _Nullable array, size_t index) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetNull ([NullAllowed] CGPDFArrayRef* array, nuint index);

//	// extern _Bool CGPDFArrayGetBoolean (CGPDFArrayRef _Nullable array, size_t index, CGPDFBoolean * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetBoolean ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] byte* value);

//	// extern _Bool CGPDFArrayGetInteger (CGPDFArrayRef _Nullable array, size_t index, CGPDFInteger * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetInteger ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] nint* value);

//	// extern _Bool CGPDFArrayGetNumber (CGPDFArrayRef _Nullable array, size_t index, CGPDFReal * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetNumber ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] double* value);

//	// extern _Bool CGPDFArrayGetName (CGPDFArrayRef _Nullable array, size_t index, const char * _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetName ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] sbyte** value);

//	// extern _Bool CGPDFArrayGetString (CGPDFArrayRef _Nullable array, size_t index, CGPDFStringRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetString ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] CGPDFStringRef** value);

//	// extern _Bool CGPDFArrayGetArray (CGPDFArrayRef _Nullable array, size_t index, CGPDFArrayRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetArray ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] CGPDFArrayRef** value);

//	// extern _Bool CGPDFArrayGetDictionary (CGPDFArrayRef _Nullable array, size_t index, CGPDFDictionaryRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetDictionary ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] CGPDFDictionaryRef** value);

//	// extern _Bool CGPDFArrayGetStream (CGPDFArrayRef _Nullable array, size_t index, CGPDFStreamRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFArrayGetStream ([NullAllowed] CGPDFArrayRef* array, nuint index, [NullAllowed] CGPDFStreamRef** value);

//	// extern size_t CGPDFDictionaryGetCount (CGPDFDictionaryRef _Nullable dict) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGPDFDictionaryGetCount ([NullAllowed] CGPDFDictionaryRef* dict);

//	// extern _Bool CGPDFDictionaryGetObject (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFObjectRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetObject ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] CGPDFObjectRef** value);

//	// extern _Bool CGPDFDictionaryGetBoolean (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFBoolean * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetBoolean ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] byte* value);

//	// extern _Bool CGPDFDictionaryGetInteger (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFInteger * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetInteger ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] nint* value);

//	// extern _Bool CGPDFDictionaryGetNumber (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFReal * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetNumber ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] double* value);

//	// extern _Bool CGPDFDictionaryGetName (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, const char * _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetName ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] sbyte** value);

//	// extern _Bool CGPDFDictionaryGetString (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFStringRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetString ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] CGPDFStringRef** value);

//	// extern _Bool CGPDFDictionaryGetArray (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFArrayRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetArray ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] CGPDFArrayRef** value);

//	// extern _Bool CGPDFDictionaryGetDictionary (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFDictionaryRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetDictionary ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] CGPDFDictionaryRef** value);

//	// extern _Bool CGPDFDictionaryGetStream (CGPDFDictionaryRef _Nullable dict, const char * _Nonnull key, CGPDFStreamRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDictionaryGetStream ([NullAllowed] CGPDFDictionaryRef* dict, sbyte* key, [NullAllowed] CGPDFStreamRef** value);

//	// extern void CGPDFDictionaryApplyFunction (CGPDFDictionaryRef _Nullable dict, CGPDFDictionaryApplierFunction _Nullable function, void * _Nullable info) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFDictionaryApplyFunction ([NullAllowed] CGPDFDictionaryRef* dict, [NullAllowed] CGPDFDictionaryApplierFunction* function, [NullAllowed] void* info);

//	// extern CGPDFPageRef _Nullable CGPDFPageRetain (CGPDFPageRef _Nullable page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFPageRef* CGPDFPageRetain ([NullAllowed] CGPDFPageRef* page);

//	// extern void CGPDFPageRelease (CGPDFPageRef _Nullable page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFPageRelease ([NullAllowed] CGPDFPageRef* page);

//	// extern CGPDFDocumentRef _Nullable CGPDFPageGetDocument (CGPDFPageRef _Nullable page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDocumentRef* CGPDFPageGetDocument ([NullAllowed] CGPDFPageRef* page);

//	// extern size_t CGPDFPageGetPageNumber (CGPDFPageRef _Nullable page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGPDFPageGetPageNumber ([NullAllowed] CGPDFPageRef* page);

//	// extern CGRect CGPDFPageGetBoxRect (CGPDFPageRef _Nullable page, CGPDFBox box) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPDFPageGetBoxRect ([NullAllowed] CGPDFPageRef* page, CGPDFBox box);

//	// extern int CGPDFPageGetRotationAngle (CGPDFPageRef _Nullable page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGPDFPageGetRotationAngle ([NullAllowed] CGPDFPageRef* page);

//	// extern CGAffineTransform CGPDFPageGetDrawingTransform (CGPDFPageRef _Nullable page, CGPDFBox box, CGRect rect, int rotate, _Bool preserveAspectRatio) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGAffineTransform CGPDFPageGetDrawingTransform ([NullAllowed] CGPDFPageRef* page, CGPDFBox box, CGRect rect, int rotate, bool preserveAspectRatio);

//	// extern CGPDFDictionaryRef _Nullable CGPDFPageGetDictionary (CGPDFPageRef _Nullable page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDictionaryRef* CGPDFPageGetDictionary ([NullAllowed] CGPDFPageRef* page);

//	// extern CFTypeID CGPDFPageGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGPDFPageGetTypeID ();

//	// extern CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithProvider (CGDataProviderRef _Nullable provider) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDocumentRef* CGPDFDocumentCreateWithProvider ([NullAllowed] CGDataProviderRef* provider);

//	// extern CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithURL (CFURLRef _Nullable url) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDocumentRef* CGPDFDocumentCreateWithURL ([NullAllowed] CFURLRef* url);

//	// extern CGPDFDocumentRef _Nullable CGPDFDocumentRetain (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDocumentRef* CGPDFDocumentRetain ([NullAllowed] CGPDFDocumentRef* document);

//	// extern void CGPDFDocumentRelease (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFDocumentRelease ([NullAllowed] CGPDFDocumentRef* document);

//	// extern void CGPDFDocumentGetVersion (CGPDFDocumentRef _Nullable document, int * _Nonnull majorVersion, int * _Nonnull minorVersion) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFDocumentGetVersion ([NullAllowed] CGPDFDocumentRef* document, int* majorVersion, int* minorVersion);

//	// extern _Bool CGPDFDocumentIsEncrypted (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDocumentIsEncrypted ([NullAllowed] CGPDFDocumentRef* document);

//	// extern _Bool CGPDFDocumentUnlockWithPassword (CGPDFDocumentRef _Nullable document, const char * _Nonnull password) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDocumentUnlockWithPassword ([NullAllowed] CGPDFDocumentRef* document, sbyte* password);

//	// extern _Bool CGPDFDocumentIsUnlocked (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDocumentIsUnlocked ([NullAllowed] CGPDFDocumentRef* document);

//	// extern _Bool CGPDFDocumentAllowsPrinting (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDocumentAllowsPrinting ([NullAllowed] CGPDFDocumentRef* document);

//	// extern _Bool CGPDFDocumentAllowsCopying (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFDocumentAllowsCopying ([NullAllowed] CGPDFDocumentRef* document);

//	// extern size_t CGPDFDocumentGetNumberOfPages (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGPDFDocumentGetNumberOfPages ([NullAllowed] CGPDFDocumentRef* document);

//	// extern CGPDFPageRef _Nullable CGPDFDocumentGetPage (CGPDFDocumentRef _Nullable document, size_t pageNumber) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFPageRef* CGPDFDocumentGetPage ([NullAllowed] CGPDFDocumentRef* document, nuint pageNumber);

//	// extern CGPDFDictionaryRef _Nullable CGPDFDocumentGetCatalog (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDictionaryRef* CGPDFDocumentGetCatalog ([NullAllowed] CGPDFDocumentRef* document);

//	// extern CGPDFDictionaryRef _Nullable CGPDFDocumentGetInfo (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFDictionaryRef* CGPDFDocumentGetInfo ([NullAllowed] CGPDFDocumentRef* document);

//	// extern CGPDFArrayRef _Nullable CGPDFDocumentGetID (CGPDFDocumentRef _Nullable document) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFArrayRef* CGPDFDocumentGetID ([NullAllowed] CGPDFDocumentRef* document);

//	// extern CFTypeID CGPDFDocumentGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGPDFDocumentGetTypeID ();

//	// extern CFDictionaryRef _Nullable CGPDFDocumentGetOutline (CGPDFDocumentRef _Nonnull document) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CGPDFDocumentGetOutline (CGPDFDocumentRef* document);

//	// extern CGPDFAccessPermissions CGPDFDocumentGetAccessPermissions (CGPDFDocumentRef _Nonnull document) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPDFAccessPermissions CGPDFDocumentGetAccessPermissions (CGPDFDocumentRef* document);

//	// extern CGRect CGPDFDocumentGetMediaBox (CGPDFDocumentRef _Nullable document, int page) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPDFDocumentGetMediaBox ([NullAllowed] CGPDFDocumentRef* document, int page);

//	// extern CGRect CGPDFDocumentGetCropBox (CGPDFDocumentRef _Nullable document, int page) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPDFDocumentGetCropBox ([NullAllowed] CGPDFDocumentRef* document, int page);

//	// extern CGRect CGPDFDocumentGetBleedBox (CGPDFDocumentRef _Nullable document, int page) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPDFDocumentGetBleedBox ([NullAllowed] CGPDFDocumentRef* document, int page);

//	// extern CGRect CGPDFDocumentGetTrimBox (CGPDFDocumentRef _Nullable document, int page) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPDFDocumentGetTrimBox ([NullAllowed] CGPDFDocumentRef* document, int page);

//	// extern CGRect CGPDFDocumentGetArtBox (CGPDFDocumentRef _Nullable document, int page) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGPDFDocumentGetArtBox ([NullAllowed] CGPDFDocumentRef* document, int page);

//	// extern int CGPDFDocumentGetRotationAngle (CGPDFDocumentRef _Nullable document, int page) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CGPDFDocumentGetRotationAngle ([NullAllowed] CGPDFDocumentRef* document, int page);

//	// extern CFTypeID CGFunctionGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGFunctionGetTypeID ();

//	// extern CGFunctionRef _Nullable CGFunctionCreate (void * _Nullable info, size_t domainDimension, const CGFloat * _Nullable domain, size_t rangeDimension, const CGFloat * _Nullable range, const CGFunctionCallbacks * _Nullable callbacks) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGFunctionRef* CGFunctionCreate ([NullAllowed] void* info, nuint domainDimension, [NullAllowed] nfloat* domain, nuint rangeDimension, [NullAllowed] nfloat* range, [NullAllowed] CGFunctionCallbacks* callbacks);

//	// extern CGFunctionRef _Nullable CGFunctionRetain (CGFunctionRef _Nullable function) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGFunctionRef* CGFunctionRetain ([NullAllowed] CGFunctionRef* function);

//	// extern void CGFunctionRelease (CGFunctionRef _Nullable function) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGFunctionRelease ([NullAllowed] CGFunctionRef* function);

//	// extern CFTypeID CGShadingGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGShadingGetTypeID ();

//	// extern CGShadingRef _Nullable CGShadingCreateAxial (CGColorSpaceRef _Nullable space, CGPoint start, CGPoint end, CGFunctionRef _Nullable function, _Bool extendStart, _Bool extendEnd) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGShadingRef* CGShadingCreateAxial ([NullAllowed] CGColorSpaceRef* space, CGPoint start, CGPoint end, [NullAllowed] CGFunctionRef* function, bool extendStart, bool extendEnd);

//	// extern CGShadingRef _Nullable CGShadingCreateRadial (CGColorSpaceRef _Nullable space, CGPoint start, CGFloat startRadius, CGPoint end, CGFloat endRadius, CGFunctionRef _Nullable function, _Bool extendStart, _Bool extendEnd) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGShadingRef* CGShadingCreateRadial ([NullAllowed] CGColorSpaceRef* space, CGPoint start, nfloat startRadius, CGPoint end, nfloat endRadius, [NullAllowed] CGFunctionRef* function, bool extendStart, bool extendEnd);

//	// extern CGShadingRef _Nullable CGShadingRetain (CGShadingRef _Nullable shading) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGShadingRef* CGShadingRetain ([NullAllowed] CGShadingRef* shading);

//	// extern void CGShadingRelease (CGShadingRef _Nullable shading) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGShadingRelease ([NullAllowed] CGShadingRef* shading);

//	// extern CFTypeID CGContextGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGContextGetTypeID ();

//	// extern void CGContextSaveGState (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSaveGState ([NullAllowed] CGContextRef* c);

//	// extern void CGContextRestoreGState (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextRestoreGState ([NullAllowed] CGContextRef* c);

//	// extern void CGContextScaleCTM (CGContextRef _Nullable c, CGFloat sx, CGFloat sy) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextScaleCTM ([NullAllowed] CGContextRef* c, nfloat sx, nfloat sy);

//	// extern void CGContextTranslateCTM (CGContextRef _Nullable c, CGFloat tx, CGFloat ty) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextTranslateCTM ([NullAllowed] CGContextRef* c, nfloat tx, nfloat ty);

//	// extern void CGContextRotateCTM (CGContextRef _Nullable c, CGFloat angle) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextRotateCTM ([NullAllowed] CGContextRef* c, nfloat angle);

//	// extern void CGContextConcatCTM (CGContextRef _Nullable c, CGAffineTransform transform) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextConcatCTM ([NullAllowed] CGContextRef* c, CGAffineTransform transform);

//	// extern CGAffineTransform CGContextGetCTM (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGAffineTransform CGContextGetCTM ([NullAllowed] CGContextRef* c);

//	// extern void CGContextSetLineWidth (CGContextRef _Nullable c, CGFloat width) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetLineWidth ([NullAllowed] CGContextRef* c, nfloat width);

//	// extern void CGContextSetLineCap (CGContextRef _Nullable c, CGLineCap cap) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetLineCap ([NullAllowed] CGContextRef* c, CGLineCap cap);

//	// extern void CGContextSetLineJoin (CGContextRef _Nullable c, CGLineJoin join) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetLineJoin ([NullAllowed] CGContextRef* c, CGLineJoin join);

//	// extern void CGContextSetMiterLimit (CGContextRef _Nullable c, CGFloat limit) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetMiterLimit ([NullAllowed] CGContextRef* c, nfloat limit);

//	// extern void CGContextSetLineDash (CGContextRef _Nullable c, CGFloat phase, const CGFloat * _Nullable lengths, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetLineDash ([NullAllowed] CGContextRef* c, nfloat phase, [NullAllowed] nfloat* lengths, nuint count);

//	// extern void CGContextSetFlatness (CGContextRef _Nullable c, CGFloat flatness) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetFlatness ([NullAllowed] CGContextRef* c, nfloat flatness);

//	// extern void CGContextSetAlpha (CGContextRef _Nullable c, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetAlpha ([NullAllowed] CGContextRef* c, nfloat alpha);

//	// extern void CGContextSetBlendMode (CGContextRef _Nullable c, CGBlendMode mode) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetBlendMode ([NullAllowed] CGContextRef* c, CGBlendMode mode);

//	// extern void CGContextBeginPath (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextBeginPath ([NullAllowed] CGContextRef* c);

//	// extern void CGContextMoveToPoint (CGContextRef _Nullable c, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextMoveToPoint ([NullAllowed] CGContextRef* c, nfloat x, nfloat y);

//	// extern void CGContextAddLineToPoint (CGContextRef _Nullable c, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddLineToPoint ([NullAllowed] CGContextRef* c, nfloat x, nfloat y);

//	// extern void CGContextAddCurveToPoint (CGContextRef _Nullable c, CGFloat cp1x, CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddCurveToPoint ([NullAllowed] CGContextRef* c, nfloat cp1x, nfloat cp1y, nfloat cp2x, nfloat cp2y, nfloat x, nfloat y);

//	// extern void CGContextAddQuadCurveToPoint (CGContextRef _Nullable c, CGFloat cpx, CGFloat cpy, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddQuadCurveToPoint ([NullAllowed] CGContextRef* c, nfloat cpx, nfloat cpy, nfloat x, nfloat y);

//	// extern void CGContextClosePath (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextClosePath ([NullAllowed] CGContextRef* c);

//	// extern void CGContextAddRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextAddRects (CGContextRef _Nullable c, const CGRect * _Nullable rects, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddRects ([NullAllowed] CGContextRef* c, [NullAllowed] CGRect* rects, nuint count);

//	// extern void CGContextAddLines (CGContextRef _Nullable c, const CGPoint * _Nullable points, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddLines ([NullAllowed] CGContextRef* c, [NullAllowed] CGPoint* points, nuint count);

//	// extern void CGContextAddEllipseInRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddEllipseInRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextAddArc (CGContextRef _Nullable c, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddArc ([NullAllowed] CGContextRef* c, nfloat x, nfloat y, nfloat radius, nfloat startAngle, nfloat endAngle, int clockwise);

//	// extern void CGContextAddArcToPoint (CGContextRef _Nullable c, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddArcToPoint ([NullAllowed] CGContextRef* c, nfloat x1, nfloat y1, nfloat x2, nfloat y2, nfloat radius);

//	// extern void CGContextAddPath (CGContextRef _Nullable c, CGPathRef _Nullable path) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextAddPath ([NullAllowed] CGContextRef* c, [NullAllowed] CGPathRef* path);

//	// extern void CGContextReplacePathWithStrokedPath (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextReplacePathWithStrokedPath ([NullAllowed] CGContextRef* c);

//	// extern _Bool CGContextIsPathEmpty (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGContextIsPathEmpty ([NullAllowed] CGContextRef* c);

//	// extern CGPoint CGContextGetPathCurrentPoint (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPoint CGContextGetPathCurrentPoint ([NullAllowed] CGContextRef* c);

//	// extern CGRect CGContextGetPathBoundingBox (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGContextGetPathBoundingBox ([NullAllowed] CGContextRef* c);

//	// extern CGPathRef _Nullable CGContextCopyPath (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPathRef* CGContextCopyPath ([NullAllowed] CGContextRef* c);

//	// extern _Bool CGContextPathContainsPoint (CGContextRef _Nullable c, CGPoint point, CGPathDrawingMode mode) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGContextPathContainsPoint ([NullAllowed] CGContextRef* c, CGPoint point, CGPathDrawingMode mode);

//	// extern void CGContextDrawPath (CGContextRef _Nullable c, CGPathDrawingMode mode) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawPath ([NullAllowed] CGContextRef* c, CGPathDrawingMode mode);

//	// extern void CGContextFillPath (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextFillPath ([NullAllowed] CGContextRef* c);

//	// extern void CGContextEOFillPath (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextEOFillPath ([NullAllowed] CGContextRef* c);

//	// extern void CGContextStrokePath (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextStrokePath ([NullAllowed] CGContextRef* c);

//	// extern void CGContextFillRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextFillRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextFillRects (CGContextRef _Nullable c, const CGRect * _Nullable rects, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextFillRects ([NullAllowed] CGContextRef* c, [NullAllowed] CGRect* rects, nuint count);

//	// extern void CGContextStrokeRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextStrokeRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextStrokeRectWithWidth (CGContextRef _Nullable c, CGRect rect, CGFloat width) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextStrokeRectWithWidth ([NullAllowed] CGContextRef* c, CGRect rect, nfloat width);

//	// extern void CGContextClearRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextClearRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextFillEllipseInRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextFillEllipseInRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextStrokeEllipseInRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextStrokeEllipseInRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextStrokeLineSegments (CGContextRef _Nullable c, const CGPoint * _Nullable points, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextStrokeLineSegments ([NullAllowed] CGContextRef* c, [NullAllowed] CGPoint* points, nuint count);

//	// extern void CGContextClip (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextClip ([NullAllowed] CGContextRef* c);

//	// extern void CGContextEOClip (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextEOClip ([NullAllowed] CGContextRef* c);

//	// extern void CGContextResetClip (CGContextRef _Nonnull c) __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextResetClip (CGContextRef* c);

//	// extern void CGContextClipToMask (CGContextRef _Nullable c, CGRect rect, CGImageRef _Nullable mask) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextClipToMask ([NullAllowed] CGContextRef* c, CGRect rect, [NullAllowed] CGImageRef* mask);

//	// extern CGRect CGContextGetClipBoundingBox (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGContextGetClipBoundingBox ([NullAllowed] CGContextRef* c);

//	// extern void CGContextClipToRect (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextClipToRect ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextClipToRects (CGContextRef _Nullable c, const CGRect * _Nonnull rects, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextClipToRects ([NullAllowed] CGContextRef* c, CGRect* rects, nuint count);

//	// extern void CGContextSetFillColorWithColor (CGContextRef _Nullable c, CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetFillColorWithColor ([NullAllowed] CGContextRef* c, [NullAllowed] CGColorRef* color);

//	// extern void CGContextSetStrokeColorWithColor (CGContextRef _Nullable c, CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetStrokeColorWithColor ([NullAllowed] CGContextRef* c, [NullAllowed] CGColorRef* color);

//	// extern void CGContextSetFillColorSpace (CGContextRef _Nullable c, CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetFillColorSpace ([NullAllowed] CGContextRef* c, [NullAllowed] CGColorSpaceRef* space);

//	// extern void CGContextSetStrokeColorSpace (CGContextRef _Nullable c, CGColorSpaceRef _Nullable space) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetStrokeColorSpace ([NullAllowed] CGContextRef* c, [NullAllowed] CGColorSpaceRef* space);

//	// extern void CGContextSetFillColor (CGContextRef _Nullable c, const CGFloat * _Nullable components) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetFillColor ([NullAllowed] CGContextRef* c, [NullAllowed] nfloat* components);

//	// extern void CGContextSetStrokeColor (CGContextRef _Nullable c, const CGFloat * _Nullable components) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetStrokeColor ([NullAllowed] CGContextRef* c, [NullAllowed] nfloat* components);

//	// extern void CGContextSetFillPattern (CGContextRef _Nullable c, CGPatternRef _Nullable pattern, const CGFloat * _Nullable components) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetFillPattern ([NullAllowed] CGContextRef* c, [NullAllowed] CGPatternRef* pattern, [NullAllowed] nfloat* components);

//	// extern void CGContextSetStrokePattern (CGContextRef _Nullable c, CGPatternRef _Nullable pattern, const CGFloat * _Nullable components) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetStrokePattern ([NullAllowed] CGContextRef* c, [NullAllowed] CGPatternRef* pattern, [NullAllowed] nfloat* components);

//	// extern void CGContextSetPatternPhase (CGContextRef _Nullable c, CGSize phase) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetPatternPhase ([NullAllowed] CGContextRef* c, CGSize phase);

//	// extern void CGContextSetGrayFillColor (CGContextRef _Nullable c, CGFloat gray, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetGrayFillColor ([NullAllowed] CGContextRef* c, nfloat gray, nfloat alpha);

//	// extern void CGContextSetGrayStrokeColor (CGContextRef _Nullable c, CGFloat gray, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetGrayStrokeColor ([NullAllowed] CGContextRef* c, nfloat gray, nfloat alpha);

//	// extern void CGContextSetRGBFillColor (CGContextRef _Nullable c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetRGBFillColor ([NullAllowed] CGContextRef* c, nfloat red, nfloat green, nfloat blue, nfloat alpha);

//	// extern void CGContextSetRGBStrokeColor (CGContextRef _Nullable c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetRGBStrokeColor ([NullAllowed] CGContextRef* c, nfloat red, nfloat green, nfloat blue, nfloat alpha);

//	// extern void CGContextSetCMYKFillColor (CGContextRef _Nullable c, CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetCMYKFillColor ([NullAllowed] CGContextRef* c, nfloat cyan, nfloat magenta, nfloat yellow, nfloat black, nfloat alpha);

//	// extern void CGContextSetCMYKStrokeColor (CGContextRef _Nullable c, CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetCMYKStrokeColor ([NullAllowed] CGContextRef* c, nfloat cyan, nfloat magenta, nfloat yellow, nfloat black, nfloat alpha);

//	// extern void CGContextSetRenderingIntent (CGContextRef _Nullable c, CGColorRenderingIntent intent) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetRenderingIntent ([NullAllowed] CGContextRef* c, CGColorRenderingIntent intent);

//	// extern void CGContextDrawImage (CGContextRef _Nullable c, CGRect rect, CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawImage ([NullAllowed] CGContextRef* c, CGRect rect, [NullAllowed] CGImageRef* image);

//	// extern void CGContextDrawTiledImage (CGContextRef _Nullable c, CGRect rect, CGImageRef _Nullable image) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawTiledImage ([NullAllowed] CGContextRef* c, CGRect rect, [NullAllowed] CGImageRef* image);

//	// extern CGInterpolationQuality CGContextGetInterpolationQuality (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGInterpolationQuality CGContextGetInterpolationQuality ([NullAllowed] CGContextRef* c);

//	// extern void CGContextSetInterpolationQuality (CGContextRef _Nullable c, CGInterpolationQuality quality) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetInterpolationQuality ([NullAllowed] CGContextRef* c, CGInterpolationQuality quality);

//	// extern void CGContextSetShadowWithColor (CGContextRef _Nullable c, CGSize offset, CGFloat blur, CGColorRef _Nullable color) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetShadowWithColor ([NullAllowed] CGContextRef* c, CGSize offset, nfloat blur, [NullAllowed] CGColorRef* color);

//	// extern void CGContextSetShadow (CGContextRef _Nullable c, CGSize offset, CGFloat blur) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetShadow ([NullAllowed] CGContextRef* c, CGSize offset, nfloat blur);

//	// extern void CGContextDrawLinearGradient (CGContextRef _Nullable c, CGGradientRef _Nullable gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawLinearGradient ([NullAllowed] CGContextRef* c, [NullAllowed] CGGradientRef* gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options);

//	// extern void CGContextDrawRadialGradient (CGContextRef _Nullable c, CGGradientRef _Nullable gradient, CGPoint startCenter, CGFloat startRadius, CGPoint endCenter, CGFloat endRadius, CGGradientDrawingOptions options) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawRadialGradient ([NullAllowed] CGContextRef* c, [NullAllowed] CGGradientRef* gradient, CGPoint startCenter, nfloat startRadius, CGPoint endCenter, nfloat endRadius, CGGradientDrawingOptions options);

//	// extern void CGContextDrawShading (CGContextRef _Nullable c, CGShadingRef _Nullable shading) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawShading ([NullAllowed] CGContextRef* c, [NullAllowed] CGShadingRef* shading);

//	// extern void CGContextSetCharacterSpacing (CGContextRef _Nullable c, CGFloat spacing) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetCharacterSpacing ([NullAllowed] CGContextRef* c, nfloat spacing);

//	// extern void CGContextSetTextPosition (CGContextRef _Nullable c, CGFloat x, CGFloat y) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetTextPosition ([NullAllowed] CGContextRef* c, nfloat x, nfloat y);

//	// extern CGPoint CGContextGetTextPosition (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPoint CGContextGetTextPosition ([NullAllowed] CGContextRef* c);

//	// extern void CGContextSetTextMatrix (CGContextRef _Nullable c, CGAffineTransform t) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetTextMatrix ([NullAllowed] CGContextRef* c, CGAffineTransform t);

//	// extern CGAffineTransform CGContextGetTextMatrix (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGAffineTransform CGContextGetTextMatrix ([NullAllowed] CGContextRef* c);

//	// extern void CGContextSetTextDrawingMode (CGContextRef _Nullable c, CGTextDrawingMode mode) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetTextDrawingMode ([NullAllowed] CGContextRef* c, CGTextDrawingMode mode);

//	// extern void CGContextSetFont (CGContextRef _Nullable c, CGFontRef _Nullable font) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetFont ([NullAllowed] CGContextRef* c, [NullAllowed] CGFontRef* font);

//	// extern void CGContextSetFontSize (CGContextRef _Nullable c, CGFloat size) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetFontSize ([NullAllowed] CGContextRef* c, nfloat size);

//	// extern void CGContextShowGlyphsAtPositions (CGContextRef _Nullable c, const CGGlyph * _Nullable glyphs, const CGPoint * _Nullable Lpositions, size_t count) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextShowGlyphsAtPositions ([NullAllowed] CGContextRef* c, [NullAllowed] ushort* glyphs, [NullAllowed] CGPoint* Lpositions, nuint count);

//	// extern void CGContextDrawPDFPage (CGContextRef _Nullable c, CGPDFPageRef _Nullable page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawPDFPage ([NullAllowed] CGContextRef* c, [NullAllowed] CGPDFPageRef* page);

//	// extern void CGContextBeginPage (CGContextRef _Nullable c, const CGRect * _Nullable mediaBox) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextBeginPage ([NullAllowed] CGContextRef* c, [NullAllowed] CGRect* mediaBox);

//	// extern void CGContextEndPage (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextEndPage ([NullAllowed] CGContextRef* c);

//	// extern CGContextRef _Nullable CGContextRetain (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGContextRef* CGContextRetain ([NullAllowed] CGContextRef* c);

//	// extern void CGContextRelease (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextRelease ([NullAllowed] CGContextRef* c);

//	// extern void CGContextFlush (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextFlush ([NullAllowed] CGContextRef* c);

//	// extern void CGContextSynchronize (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSynchronize ([NullAllowed] CGContextRef* c);

//	// extern void CGContextSetShouldAntialias (CGContextRef _Nullable c, _Bool shouldAntialias) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetShouldAntialias ([NullAllowed] CGContextRef* c, bool shouldAntialias);

//	// extern void CGContextSetAllowsAntialiasing (CGContextRef _Nullable c, _Bool allowsAntialiasing) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetAllowsAntialiasing ([NullAllowed] CGContextRef* c, bool allowsAntialiasing);

//	// extern void CGContextSetShouldSmoothFonts (CGContextRef _Nullable c, _Bool shouldSmoothFonts) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetShouldSmoothFonts ([NullAllowed] CGContextRef* c, bool shouldSmoothFonts);

//	// extern void CGContextSetAllowsFontSmoothing (CGContextRef _Nullable c, _Bool allowsFontSmoothing) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetAllowsFontSmoothing ([NullAllowed] CGContextRef* c, bool allowsFontSmoothing);

//	// extern void CGContextSetShouldSubpixelPositionFonts (CGContextRef _Nullable c, _Bool shouldSubpixelPositionFonts) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetShouldSubpixelPositionFonts ([NullAllowed] CGContextRef* c, bool shouldSubpixelPositionFonts);

//	// extern void CGContextSetAllowsFontSubpixelPositioning (CGContextRef _Nullable c, _Bool allowsFontSubpixelPositioning) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetAllowsFontSubpixelPositioning ([NullAllowed] CGContextRef* c, bool allowsFontSubpixelPositioning);

//	// extern void CGContextSetShouldSubpixelQuantizeFonts (CGContextRef _Nullable c, _Bool shouldSubpixelQuantizeFonts) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetShouldSubpixelQuantizeFonts ([NullAllowed] CGContextRef* c, bool shouldSubpixelQuantizeFonts);

//	// extern void CGContextSetAllowsFontSubpixelQuantization (CGContextRef _Nullable c, _Bool allowsFontSubpixelQuantization) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSetAllowsFontSubpixelQuantization ([NullAllowed] CGContextRef* c, bool allowsFontSubpixelQuantization);

//	// extern void CGContextBeginTransparencyLayer (CGContextRef _Nullable c, CFDictionaryRef _Nullable auxiliaryInfo) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextBeginTransparencyLayer ([NullAllowed] CGContextRef* c, [NullAllowed] CFDictionaryRef* auxiliaryInfo);

//	// extern void CGContextBeginTransparencyLayerWithRect (CGContextRef _Nullable c, CGRect rect, CFDictionaryRef _Nullable auxInfo) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextBeginTransparencyLayerWithRect ([NullAllowed] CGContextRef* c, CGRect rect, [NullAllowed] CFDictionaryRef* auxInfo);

//	// extern void CGContextEndTransparencyLayer (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextEndTransparencyLayer ([NullAllowed] CGContextRef* c);

//	// extern CGAffineTransform CGContextGetUserSpaceToDeviceSpaceTransform (CGContextRef _Nullable c) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGAffineTransform CGContextGetUserSpaceToDeviceSpaceTransform ([NullAllowed] CGContextRef* c);

//	// extern CGPoint CGContextConvertPointToDeviceSpace (CGContextRef _Nullable c, CGPoint point) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPoint CGContextConvertPointToDeviceSpace ([NullAllowed] CGContextRef* c, CGPoint point);

//	// extern CGPoint CGContextConvertPointToUserSpace (CGContextRef _Nullable c, CGPoint point) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPoint CGContextConvertPointToUserSpace ([NullAllowed] CGContextRef* c, CGPoint point);

//	// extern CGSize CGContextConvertSizeToDeviceSpace (CGContextRef _Nullable c, CGSize size) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGSize CGContextConvertSizeToDeviceSpace ([NullAllowed] CGContextRef* c, CGSize size);

//	// extern CGSize CGContextConvertSizeToUserSpace (CGContextRef _Nullable c, CGSize size) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGSize CGContextConvertSizeToUserSpace ([NullAllowed] CGContextRef* c, CGSize size);

//	// extern CGRect CGContextConvertRectToDeviceSpace (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGContextConvertRectToDeviceSpace ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern CGRect CGContextConvertRectToUserSpace (CGContextRef _Nullable c, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CGContextConvertRectToUserSpace ([NullAllowed] CGContextRef* c, CGRect rect);

//	// extern void CGContextSelectFont (CGContextRef _Nullable c, const char * _Nullable name, CGFloat size, CGTextEncoding textEncoding) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 7, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextSelectFont ([NullAllowed] CGContextRef* c, [NullAllowed] sbyte* name, nfloat size, CGTextEncoding textEncoding);

//	// extern void CGContextShowText (CGContextRef _Nullable c, const char * _Nullable string, size_t length) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 7, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextShowText ([NullAllowed] CGContextRef* c, [NullAllowed] sbyte* @string, nuint length);

//	// extern void CGContextShowTextAtPoint (CGContextRef _Nullable c, CGFloat x, CGFloat y, const char * _Nullable string, size_t length) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 7, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextShowTextAtPoint ([NullAllowed] CGContextRef* c, nfloat x, nfloat y, [NullAllowed] sbyte* @string, nuint length);

//	// extern void CGContextShowGlyphs (CGContextRef _Nullable c, const CGGlyph * _Nullable g, size_t count) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 7, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextShowGlyphs ([NullAllowed] CGContextRef* c, [NullAllowed] ushort* g, nuint count);

//	// extern void CGContextShowGlyphsAtPoint (CGContextRef _Nullable c, CGFloat x, CGFloat y, const CGGlyph * _Nullable glyphs, size_t count) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 7, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextShowGlyphsAtPoint ([NullAllowed] CGContextRef* c, nfloat x, nfloat y, [NullAllowed] ushort* glyphs, nuint count);

//	// extern void CGContextShowGlyphsWithAdvances (CGContextRef _Nullable c, const CGGlyph * _Nullable glyphs, const CGSize * _Nullable advances, size_t count) __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((cf_audited_transfer));
//	[Introduced (PlatformName.iOS, 2, 0)]
//	[Deprecated (PlatformName.iOS, 7, 0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextShowGlyphsWithAdvances ([NullAllowed] CGContextRef* c, [NullAllowed] ushort* glyphs, [NullAllowed] CGSize* advances, nuint count);

//	// extern void CGContextDrawPDFDocument (CGContextRef _Nullable c, CGRect rect, CGPDFDocumentRef _Nullable document, int page) __attribute__((availability(ios, unavailable))) __attribute__((cf_audited_transfer));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawPDFDocument ([NullAllowed] CGContextRef* c, CGRect rect, [NullAllowed] CGPDFDocumentRef* document, int page);

//	// extern CGContextRef _Nullable CGBitmapContextCreateWithData (void * _Nullable data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef _Nullable space, uint32_t bitmapInfo, CGBitmapContextReleaseDataCallback _Nullable releaseCallback, void * _Nullable releaseInfo) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGContextRef* CGBitmapContextCreateWithData ([NullAllowed] void* data, nuint width, nuint height, nuint bitsPerComponent, nuint bytesPerRow, [NullAllowed] CGColorSpaceRef* space, uint bitmapInfo, [NullAllowed] CGBitmapContextReleaseDataCallback* releaseCallback, [NullAllowed] void* releaseInfo);

//	// extern CGContextRef _Nullable CGBitmapContextCreate (void * _Nullable data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef _Nullable space, uint32_t bitmapInfo) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGContextRef* CGBitmapContextCreate ([NullAllowed] void* data, nuint width, nuint height, nuint bitsPerComponent, nuint bytesPerRow, [NullAllowed] CGColorSpaceRef* space, uint bitmapInfo);

//	// extern void * _Nullable CGBitmapContextGetData (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CGBitmapContextGetData ([NullAllowed] CGContextRef* context);

//	// extern size_t CGBitmapContextGetWidth (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGBitmapContextGetWidth ([NullAllowed] CGContextRef* context);

//	// extern size_t CGBitmapContextGetHeight (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGBitmapContextGetHeight ([NullAllowed] CGContextRef* context);

//	// extern size_t CGBitmapContextGetBitsPerComponent (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGBitmapContextGetBitsPerComponent ([NullAllowed] CGContextRef* context);

//	// extern size_t CGBitmapContextGetBitsPerPixel (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGBitmapContextGetBitsPerPixel ([NullAllowed] CGContextRef* context);

//	// extern size_t CGBitmapContextGetBytesPerRow (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGBitmapContextGetBytesPerRow ([NullAllowed] CGContextRef* context);

//	// extern CGColorSpaceRef _Nullable CGBitmapContextGetColorSpace (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CGBitmapContextGetColorSpace ([NullAllowed] CGContextRef* context);

//	// extern CGImageAlphaInfo CGBitmapContextGetAlphaInfo (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGImageAlphaInfo CGBitmapContextGetAlphaInfo ([NullAllowed] CGContextRef* context);

//	// extern CGBitmapInfo CGBitmapContextGetBitmapInfo (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGBitmapInfo CGBitmapContextGetBitmapInfo ([NullAllowed] CGContextRef* context);

//	// extern CGImageRef _Nullable CGBitmapContextCreateImage (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGBitmapContextCreateImage ([NullAllowed] CGContextRef* context);

//	// extern CFTypeID CGColorConversionInfoGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGColorConversionInfoGetTypeID ();

//	// extern CGColorConversionInfoRef _Nullable CGColorConversionInfoCreate (CGColorSpaceRef _Nullable src, CGColorSpaceRef _Nullable dst) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorConversionInfoRef* CGColorConversionInfoCreate ([NullAllowed] CGColorSpaceRef* src, [NullAllowed] CGColorSpaceRef* dst);

//	// extern CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateFromList (CFDictionaryRef _Nullable options, CGColorSpaceRef _Nullable, CGColorConversionInfoTransformType, CGColorRenderingIntent, ...) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorConversionInfoRef* CGColorConversionInfoCreateFromList ([NullAllowed] CFDictionaryRef* options, [NullAllowed] CGColorSpaceRef*, CGColorConversionInfoTransformType, CGColorRenderingIntent, IntPtr varArgs);

//	// extern CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateFromListWithArguments (CFDictionaryRef _Nullable options, CGColorSpaceRef _Nullable, CGColorConversionInfoTransformType, CGColorRenderingIntent, va_list) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorConversionInfoRef* CGColorConversionInfoCreateFromListWithArguments ([NullAllowed] CFDictionaryRef* options, [NullAllowed] CGColorSpaceRef*, CGColorConversionInfoTransformType, CGColorRenderingIntent, sbyte*);

//	// extern CFTypeID CGDataConsumerGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGDataConsumerGetTypeID ();

//	// extern CGDataConsumerRef _Nullable CGDataConsumerCreate (void * _Nullable info, const CGDataConsumerCallbacks * _Nullable cbks) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataConsumerRef* CGDataConsumerCreate ([NullAllowed] void* info, [NullAllowed] CGDataConsumerCallbacks* cbks);

//	// extern CGDataConsumerRef _Nullable CGDataConsumerCreateWithURL (CFURLRef _Nullable url) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataConsumerRef* CGDataConsumerCreateWithURL ([NullAllowed] CFURLRef* url);

//	// extern CGDataConsumerRef _Nullable CGDataConsumerCreateWithCFData (CFMutableDataRef _Nullable data) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataConsumerRef* CGDataConsumerCreateWithCFData ([NullAllowed] CFMutableDataRef* data);

//	// extern CGDataConsumerRef _Nullable CGDataConsumerRetain (CGDataConsumerRef _Nullable consumer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGDataConsumerRef* CGDataConsumerRetain ([NullAllowed] CGDataConsumerRef* consumer);

//	// extern void CGDataConsumerRelease (CGDataConsumerRef _Nullable consumer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGDataConsumerRelease ([NullAllowed] CGDataConsumerRef* consumer);

//	// extern CGLayerRef _Nullable CGLayerCreateWithContext (CGContextRef _Nullable context, CGSize size, CFDictionaryRef _Nullable auxiliaryInfo) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGLayerRef* CGLayerCreateWithContext ([NullAllowed] CGContextRef* context, CGSize size, [NullAllowed] CFDictionaryRef* auxiliaryInfo);

//	// extern CGLayerRef _Nullable CGLayerRetain (CGLayerRef _Nullable layer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGLayerRef* CGLayerRetain ([NullAllowed] CGLayerRef* layer);

//	// extern void CGLayerRelease (CGLayerRef _Nullable layer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGLayerRelease ([NullAllowed] CGLayerRef* layer);

//	// extern CGSize CGLayerGetSize (CGLayerRef _Nullable layer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGSize CGLayerGetSize ([NullAllowed] CGLayerRef* layer);

//	// extern CGContextRef _Nullable CGLayerGetContext (CGLayerRef _Nullable layer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGContextRef* CGLayerGetContext ([NullAllowed] CGLayerRef* layer);

//	// extern void CGContextDrawLayerInRect (CGContextRef _Nullable context, CGRect rect, CGLayerRef _Nullable layer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawLayerInRect ([NullAllowed] CGContextRef* context, CGRect rect, [NullAllowed] CGLayerRef* layer);

//	// extern void CGContextDrawLayerAtPoint (CGContextRef _Nullable context, CGPoint point, CGLayerRef _Nullable layer) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGContextDrawLayerAtPoint ([NullAllowed] CGContextRef* context, CGPoint point, [NullAllowed] CGLayerRef* layer);

//	// extern CFTypeID CGLayerGetTypeID () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGLayerGetTypeID ();

//	// extern CGPDFContentStreamRef _Nonnull CGPDFContentStreamCreateWithPage (CGPDFPageRef _Nonnull page) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPDFContentStreamRef* CGPDFContentStreamCreateWithPage (CGPDFPageRef* page);

//	// extern CGPDFContentStreamRef _Nonnull CGPDFContentStreamCreateWithStream (CGPDFStreamRef _Nonnull stream, CGPDFDictionaryRef _Nonnull streamResources, CGPDFContentStreamRef _Nullable parent) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPDFContentStreamRef* CGPDFContentStreamCreateWithStream (CGPDFStreamRef* stream, CGPDFDictionaryRef* streamResources, [NullAllowed] CGPDFContentStreamRef* parent);

//	// extern CGPDFContentStreamRef _Nonnull CGPDFContentStreamRetain (CGPDFContentStreamRef _Nonnull cs) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPDFContentStreamRef* CGPDFContentStreamRetain (CGPDFContentStreamRef* cs);

//	// extern void CGPDFContentStreamRelease (CGPDFContentStreamRef _Nonnull cs) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContentStreamRelease (CGPDFContentStreamRef* cs);

//	// extern CFArrayRef _Nullable CGPDFContentStreamGetStreams (CGPDFContentStreamRef _Nonnull cs) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CGPDFContentStreamGetStreams (CGPDFContentStreamRef* cs);

//	// extern CGPDFObjectRef _Nullable CGPDFContentStreamGetResource (CGPDFContentStreamRef _Nonnull cs, const char * _Nonnull category, const char * _Nonnull name) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFObjectRef* CGPDFContentStreamGetResource (CGPDFContentStreamRef* cs, sbyte* category, sbyte* name);

//	// extern CGContextRef _Nullable CGPDFContextCreate (CGDataConsumerRef _Nullable consumer, const CGRect * _Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGContextRef* CGPDFContextCreate ([NullAllowed] CGDataConsumerRef* consumer, [NullAllowed] CGRect* mediaBox, [NullAllowed] CFDictionaryRef* auxiliaryInfo);

//	// extern CGContextRef _Nullable CGPDFContextCreateWithURL (CFURLRef _Nullable url, const CGRect * _Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGContextRef* CGPDFContextCreateWithURL ([NullAllowed] CFURLRef* url, [NullAllowed] CGRect* mediaBox, [NullAllowed] CFDictionaryRef* auxiliaryInfo);

//	// extern void CGPDFContextClose (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextClose ([NullAllowed] CGContextRef* context);

//	// extern void CGPDFContextBeginPage (CGContextRef _Nullable context, CFDictionaryRef _Nullable pageInfo) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextBeginPage ([NullAllowed] CGContextRef* context, [NullAllowed] CFDictionaryRef* pageInfo);

//	// extern void CGPDFContextEndPage (CGContextRef _Nullable context) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextEndPage ([NullAllowed] CGContextRef* context);

//	// extern void CGPDFContextAddDocumentMetadata (CGContextRef _Nullable context, CFDataRef _Nullable metadata) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextAddDocumentMetadata ([NullAllowed] CGContextRef* context, [NullAllowed] CFDataRef* metadata);

//	// extern void CGPDFContextSetURLForRect (CGContextRef _Nullable context, CFURLRef _Nonnull url, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextSetURLForRect ([NullAllowed] CGContextRef* context, CFURLRef* url, CGRect rect);

//	// extern void CGPDFContextAddDestinationAtPoint (CGContextRef _Nullable context, CFStringRef _Nonnull name, CGPoint point) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextAddDestinationAtPoint ([NullAllowed] CGContextRef* context, CFStringRef* name, CGPoint point);

//	// extern void CGPDFContextSetDestinationForRect (CGContextRef _Nullable context, CFStringRef _Nonnull name, CGRect rect) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextSetDestinationForRect ([NullAllowed] CGContextRef* context, CFStringRef* name, CGRect rect);

//	// extern void CGPDFContextSetOutline (CGContextRef _Nonnull context, CFDictionaryRef _Nullable outline) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFContextSetOutline (CGContextRef* context, [NullAllowed] CFDictionaryRef* outline);

//	// extern CGPDFScannerRef _Nonnull CGPDFScannerCreate (CGPDFContentStreamRef _Nonnull cs, CGPDFOperatorTableRef _Nullable table, void * _Nullable info) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPDFScannerRef* CGPDFScannerCreate (CGPDFContentStreamRef* cs, [NullAllowed] CGPDFOperatorTableRef* table, [NullAllowed] void* info);

//	// extern CGPDFScannerRef _Nullable CGPDFScannerRetain (CGPDFScannerRef _Nullable scanner) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFScannerRef* CGPDFScannerRetain ([NullAllowed] CGPDFScannerRef* scanner);

//	// extern void CGPDFScannerRelease (CGPDFScannerRef _Nullable scanner) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFScannerRelease ([NullAllowed] CGPDFScannerRef* scanner);

//	// extern _Bool CGPDFScannerScan (CGPDFScannerRef _Nullable scanner) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerScan ([NullAllowed] CGPDFScannerRef* scanner);

//	// extern CGPDFContentStreamRef _Nonnull CGPDFScannerGetContentStream (CGPDFScannerRef _Nonnull scanner) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPDFContentStreamRef* CGPDFScannerGetContentStream (CGPDFScannerRef* scanner);

//	// extern _Bool CGPDFScannerPopObject (CGPDFScannerRef _Nonnull scanner, CGPDFObjectRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopObject (CGPDFScannerRef* scanner, [NullAllowed] CGPDFObjectRef** value);

//	// extern _Bool CGPDFScannerPopBoolean (CGPDFScannerRef _Nonnull scanner, CGPDFBoolean * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopBoolean (CGPDFScannerRef* scanner, [NullAllowed] byte* value);

//	// extern _Bool CGPDFScannerPopInteger (CGPDFScannerRef _Nonnull scanner, CGPDFInteger * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopInteger (CGPDFScannerRef* scanner, [NullAllowed] nint* value);

//	// extern _Bool CGPDFScannerPopNumber (CGPDFScannerRef _Nonnull scanner, CGPDFReal * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopNumber (CGPDFScannerRef* scanner, [NullAllowed] double* value);

//	// extern _Bool CGPDFScannerPopName (CGPDFScannerRef _Nonnull scanner, const char * _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopName (CGPDFScannerRef* scanner, [NullAllowed] sbyte** value);

//	// extern _Bool CGPDFScannerPopString (CGPDFScannerRef _Nonnull scanner, CGPDFStringRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopString (CGPDFScannerRef* scanner, [NullAllowed] CGPDFStringRef** value);

//	// extern _Bool CGPDFScannerPopArray (CGPDFScannerRef _Nonnull scanner, CGPDFArrayRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopArray (CGPDFScannerRef* scanner, [NullAllowed] CGPDFArrayRef** value);

//	// extern _Bool CGPDFScannerPopDictionary (CGPDFScannerRef _Nonnull scanner, CGPDFDictionaryRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopDictionary (CGPDFScannerRef* scanner, [NullAllowed] CGPDFDictionaryRef** value);

//	// extern _Bool CGPDFScannerPopStream (CGPDFScannerRef _Nonnull scanner, CGPDFStreamRef  _Nullable * _Nullable value) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGPDFScannerPopStream (CGPDFScannerRef* scanner, [NullAllowed] CGPDFStreamRef** value);

//	// extern CGPDFOperatorTableRef _Nullable CGPDFOperatorTableCreate () __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFOperatorTableRef* CGPDFOperatorTableCreate ();

//	// extern CGPDFOperatorTableRef _Nullable CGPDFOperatorTableRetain (CGPDFOperatorTableRef _Nullable table) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPDFOperatorTableRef* CGPDFOperatorTableRetain ([NullAllowed] CGPDFOperatorTableRef* table);

//	// extern void CGPDFOperatorTableRelease (CGPDFOperatorTableRef _Nullable table) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFOperatorTableRelease ([NullAllowed] CGPDFOperatorTableRef* table);

//	// extern void CGPDFOperatorTableSetCallback (CGPDFOperatorTableRef _Nullable table, const char * _Nullable name, CGPDFOperatorCallback _Nullable callback) __attribute__((availability(ios, introduced=2.0))) __attribute__((cf_audited_transfer));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGPDFOperatorTableSetCallback ([NullAllowed] CGPDFOperatorTableRef* table, [NullAllowed] sbyte* name, [NullAllowed] CGPDFOperatorCallback* callback);

//	// extern CFTypeID IOSurfaceGetTypeID () __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint IOSurfaceGetTypeID ();

//	// extern IOSurfaceRef _Nullable IOSurfaceCreate (CFDictionaryRef _Nonnull properties) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe IOSurfaceRef* IOSurfaceCreate (CFDictionaryRef* properties);

//	// extern IOSurfaceRef _Nullable IOSurfaceLookup (IOSurfaceID csid) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_returns_retained)) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe IOSurfaceRef* IOSurfaceLookup (uint csid);

//	// extern IOSurfaceID IOSurfaceGetID (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint IOSurfaceGetID (IOSurfaceRef* buffer);

//	// extern kern_return_t IOSurfaceLock (IOSurfaceRef _Nonnull buffer, IOSurfaceLockOptions options, uint32_t * _Nullable seed) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int IOSurfaceLock (IOSurfaceRef* buffer, IOSurfaceLockOptions options, [NullAllowed] uint* seed);

//	// extern kern_return_t IOSurfaceUnlock (IOSurfaceRef _Nonnull buffer, IOSurfaceLockOptions options, uint32_t * _Nullable seed) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int IOSurfaceUnlock (IOSurfaceRef* buffer, IOSurfaceLockOptions options, [NullAllowed] uint* seed);

//	// extern size_t IOSurfaceGetAllocSize (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetAllocSize (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetWidth (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetWidth (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetHeight (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetHeight (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetBytesPerElement (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetBytesPerElement (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetBytesPerRow (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetBytesPerRow (IOSurfaceRef* buffer);

//	// extern void * _Nonnull IOSurfaceGetBaseAddress (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* IOSurfaceGetBaseAddress (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetElementWidth (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetElementWidth (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetElementHeight (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetElementHeight (IOSurfaceRef* buffer);

//	// extern OSType IOSurfaceGetPixelFormat (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint IOSurfaceGetPixelFormat (IOSurfaceRef* buffer);

//	// extern uint32_t IOSurfaceGetSeed (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint IOSurfaceGetSeed (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetPlaneCount (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetPlaneCount (IOSurfaceRef* buffer);

//	// extern size_t IOSurfaceGetWidthOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetWidthOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern size_t IOSurfaceGetHeightOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetHeightOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern size_t IOSurfaceGetBytesPerElementOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetBytesPerElementOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern size_t IOSurfaceGetBytesPerRowOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetBytesPerRowOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern void * _Nonnull IOSurfaceGetBaseAddressOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* IOSurfaceGetBaseAddressOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern size_t IOSurfaceGetElementWidthOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetElementWidthOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern size_t IOSurfaceGetElementHeightOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetElementHeightOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern size_t IOSurfaceGetNumberOfComponentsOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetNumberOfComponentsOfPlane (IOSurfaceRef* buffer, nuint planeIndex);

//	// extern IOSurfaceComponentName IOSurfaceGetNameOfComponentOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex, size_t componentIndex) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IOSurfaceComponentName IOSurfaceGetNameOfComponentOfPlane (IOSurfaceRef* buffer, nuint planeIndex, nuint componentIndex);

//	// extern IOSurfaceComponentType IOSurfaceGetTypeOfComponentOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex, size_t componentIndex) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IOSurfaceComponentType IOSurfaceGetTypeOfComponentOfPlane (IOSurfaceRef* buffer, nuint planeIndex, nuint componentIndex);

//	// extern IOSurfaceComponentRange IOSurfaceGetRangeOfComponentOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex, size_t componentIndex) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IOSurfaceComponentRange IOSurfaceGetRangeOfComponentOfPlane (IOSurfaceRef* buffer, nuint planeIndex, nuint componentIndex);

//	// extern size_t IOSurfaceGetBitDepthOfComponentOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex, size_t componentIndex) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetBitDepthOfComponentOfPlane (IOSurfaceRef* buffer, nuint planeIndex, nuint componentIndex);

//	// extern size_t IOSurfaceGetBitOffsetOfComponentOfPlane (IOSurfaceRef _Nonnull buffer, size_t planeIndex, size_t componentIndex) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetBitOffsetOfComponentOfPlane (IOSurfaceRef* buffer, nuint planeIndex, nuint componentIndex);

//	// extern IOSurfaceSubsampling IOSurfaceGetSubsampling (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe IOSurfaceSubsampling IOSurfaceGetSubsampling (IOSurfaceRef* buffer);

//	// extern void IOSurfaceSetValue (IOSurfaceRef _Nonnull buffer, CFStringRef _Nonnull key, CFTypeRef _Nonnull value) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void IOSurfaceSetValue (IOSurfaceRef* buffer, CFStringRef* key, void* value);

//	// extern CFTypeRef _Nullable IOSurfaceCopyValue (IOSurfaceRef _Nonnull buffer, CFStringRef _Nonnull key) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* IOSurfaceCopyValue (IOSurfaceRef* buffer, CFStringRef* key);

//	// extern void IOSurfaceRemoveValue (IOSurfaceRef _Nonnull buffer, CFStringRef _Nonnull key) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void IOSurfaceRemoveValue (IOSurfaceRef* buffer, CFStringRef* key);

//	// extern void IOSurfaceSetValues (IOSurfaceRef _Nonnull buffer, CFDictionaryRef _Nonnull keysAndValues) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void IOSurfaceSetValues (IOSurfaceRef* buffer, CFDictionaryRef* keysAndValues);

//	// extern CFDictionaryRef _Nullable IOSurfaceCopyAllValues (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* IOSurfaceCopyAllValues (IOSurfaceRef* buffer);

//	// extern void IOSurfaceRemoveAllValues (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void IOSurfaceRemoveAllValues (IOSurfaceRef* buffer);

//	// extern mach_port_t IOSurfaceCreateMachPort (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint IOSurfaceCreateMachPort (IOSurfaceRef* buffer);

//	// extern IOSurfaceRef _Nullable IOSurfaceLookupFromMachPort (mach_port_t port) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_returns_retained)) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe IOSurfaceRef* IOSurfaceLookupFromMachPort (uint port);

//	// extern size_t IOSurfaceGetPropertyMaximum (CFStringRef _Nonnull property) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetPropertyMaximum (CFStringRef* property);

//	// extern size_t IOSurfaceGetPropertyAlignment (CFStringRef _Nonnull property) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceGetPropertyAlignment (CFStringRef* property);

//	// extern size_t IOSurfaceAlignProperty (CFStringRef _Nonnull property, size_t value) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint IOSurfaceAlignProperty (CFStringRef* property, nuint value);

//	// extern void IOSurfaceIncrementUseCount (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void IOSurfaceIncrementUseCount (IOSurfaceRef* buffer);

//	// extern void IOSurfaceDecrementUseCount (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void IOSurfaceDecrementUseCount (IOSurfaceRef* buffer);

//	// extern int32_t IOSurfaceGetUseCount (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int IOSurfaceGetUseCount (IOSurfaceRef* buffer);

//	// extern Boolean IOSurfaceIsInUse (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=3.0))) __attribute__((cf_audited_transfer));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte IOSurfaceIsInUse (IOSurfaceRef* buffer);

//	// extern Boolean IOSurfaceAllowsPixelSizeCasting (IOSurfaceRef _Nonnull buffer) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte IOSurfaceAllowsPixelSizeCasting (IOSurfaceRef* buffer);

//	// extern kern_return_t IOSurfaceSetPurgeable (IOSurfaceRef _Nonnull buffer, uint32_t newState, uint32_t * _Nullable oldState) __attribute__((availability(ios, introduced=10.0))) __attribute__((cf_audited_transfer));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int IOSurfaceSetPurgeable (IOSurfaceRef* buffer, uint newState, [NullAllowed] uint* oldState);

//	// extern void EAGLGetVersion (unsigned int * _Nonnull major, unsigned int * _Nonnull minor) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void EAGLGetVersion (uint* major, uint* minor);

//	// extern void glAlphaFunc (GLenum func, GLclampf ref);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glAlphaFunc (uint func, float @ref);

//	// extern void glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearColor (float red, float green, float blue, float alpha);

//	// extern void glClearDepthf (GLclampf depth);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearDepthf (float depth);

//	// extern void glClipPlanef (GLenum plane, const GLfloat *equation);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glClipPlanef (uint plane, float* equation);

//	// extern void glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glColor4f (float red, float green, float blue, float alpha);

//	// extern void glDepthRangef (GLclampf zNear, GLclampf zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthRangef (float zNear, float zFar);

//	// extern void glFogf (GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFogf (uint pname, float param);

//	// extern void glFogfv (GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glFogfv (uint pname, float* @params);

//	// extern void glFrustumf (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFrustumf (float left, float right, float bottom, float top, float zNear, float zFar);

//	// extern void glGetClipPlanef (GLenum pname, GLfloat *equation);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetClipPlanef (uint pname, float* equation);

//	// extern void glGetFloatv (GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetFloatv (uint pname, float* @params);

//	// extern void glGetLightfv (GLenum light, GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetLightfv (uint light, uint pname, float* @params);

//	// extern void glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetMaterialfv (uint face, uint pname, float* @params);

//	// extern void glGetTexEnvfv (GLenum env, GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexEnvfv (uint env, uint pname, float* @params);

//	// extern void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexParameterfv (uint target, uint pname, float* @params);

//	// extern void glLightModelf (GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLightModelf (uint pname, float param);

//	// extern void glLightModelfv (GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLightModelfv (uint pname, float* @params);

//	// extern void glLightf (GLenum light, GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLightf (uint light, uint pname, float param);

//	// extern void glLightfv (GLenum light, GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLightfv (uint light, uint pname, float* @params);

//	// extern void glLineWidth (GLfloat width);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLineWidth (float width);

//	// extern void glLoadMatrixf (const GLfloat *m);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLoadMatrixf (float* m);

//	// extern void glMaterialf (GLenum face, GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glMaterialf (uint face, uint pname, float param);

//	// extern void glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glMaterialfv (uint face, uint pname, float* @params);

//	// extern void glMultMatrixf (const GLfloat *m);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glMultMatrixf (float* m);

//	// extern void glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glMultiTexCoord4f (uint target, float s, float t, float r, float q);

//	// extern void glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glNormal3f (float nx, float ny, float nz);

//	// extern void glOrthof (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glOrthof (float left, float right, float bottom, float top, float zNear, float zFar);

//	// extern void glPointParameterf (GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPointParameterf (uint pname, float param);

//	// extern void glPointParameterfv (GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glPointParameterfv (uint pname, float* @params);

//	// extern void glPointSize (GLfloat size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPointSize (float size);

//	// extern void glPolygonOffset (GLfloat factor, GLfloat units);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPolygonOffset (float factor, float units);

//	// extern void glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRotatef (float angle, float x, float y, float z);

//	// extern void glSampleCoverage (GLclampf value, GLboolean invert);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glSampleCoverage (float value, bool invert);

//	// extern void glScalef (GLfloat x, GLfloat y, GLfloat z);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glScalef (float x, float y, float z);

//	// extern void glTexEnvf (GLenum target, GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexEnvf (uint target, uint pname, float param);

//	// extern void glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexEnvfv (uint target, uint pname, float* @params);

//	// extern void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexParameterf (uint target, uint pname, float param);

//	// extern void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexParameterfv (uint target, uint pname, float* @params);

//	// extern void glTranslatef (GLfloat x, GLfloat y, GLfloat z);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTranslatef (float x, float y, float z);

//	// extern void glActiveTexture (GLenum texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glActiveTexture (uint texture);

//	// extern void glAlphaFuncx (GLenum func, GLclampx ref);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glAlphaFuncx (uint func, int @ref);

//	// extern void glBindBuffer (GLenum target, GLuint buffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindBuffer (uint target, uint buffer);

//	// extern void glBindTexture (GLenum target, GLuint texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindTexture (uint target, uint texture);

//	// extern void glBlendFunc (GLenum sfactor, GLenum dfactor);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendFunc (uint sfactor, uint dfactor);

//	// extern void glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBufferData (uint target, IntPtr size, void* data, uint usage);

//	// extern void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBufferSubData (uint target, IntPtr offset, IntPtr size, void* data);

//	// extern void glClear (GLbitfield mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClear (uint mask);

//	// extern void glClearColorx (GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearColorx (int red, int green, int blue, int alpha);

//	// extern void glClearDepthx (GLclampx depth);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearDepthx (int depth);

//	// extern void glClearStencil (GLint s);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearStencil (int s);

//	// extern void glClientActiveTexture (GLenum texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClientActiveTexture (uint texture);

//	// extern void glClipPlanex (GLenum plane, const GLfixed *equation);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glClipPlanex (uint plane, int* equation);

//	// extern void glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glColor4ub (byte red, byte green, byte blue, byte alpha);

//	// extern void glColor4x (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glColor4x (int red, int green, int blue, int alpha);

//	// extern void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glColorMask (bool red, bool green, bool blue, bool alpha);

//	// extern void glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glColorPointer (int size, uint type, int stride, void* pointer);

//	// extern void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexImage2D (uint target, int level, uint internalformat, int width, int height, int border, int imageSize, void* data);

//	// extern void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexSubImage2D (uint target, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, void* data);

//	// extern void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTexImage2D (uint target, int level, uint internalformat, int x, int y, int width, int height, int border);

//	// extern void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTexSubImage2D (uint target, int level, int xoffset, int yoffset, int x, int y, int width, int height);

//	// extern void glCullFace (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCullFace (uint mode);

//	// extern void glDeleteBuffers (GLsizei n, const GLuint *buffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteBuffers (int n, uint* buffers);

//	// extern void glDeleteTextures (GLsizei n, const GLuint *textures);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteTextures (int n, uint* textures);

//	// extern void glDepthFunc (GLenum func);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthFunc (uint func);

//	// extern void glDepthMask (GLboolean flag);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthMask (bool flag);

//	// extern void glDepthRangex (GLclampx zNear, GLclampx zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthRangex (int zNear, int zFar);

//	// extern void glDisable (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDisable (uint cap);

//	// extern void glDisableClientState (GLenum array);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDisableClientState (uint array);

//	// extern void glDrawArrays (GLenum mode, GLint first, GLsizei count);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawArrays (uint mode, int first, int count);

//	// extern void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawElements (uint mode, int count, uint type, void* indices);

//	// extern void glEnable (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEnable (uint cap);

//	// extern void glEnableClientState (GLenum array);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEnableClientState (uint array);

//	// extern void glFinish ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFinish ();

//	// extern void glFlush ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFlush ();

//	// extern void glFogx (GLenum pname, GLfixed param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFogx (uint pname, int param);

//	// extern void glFogxv (GLenum pname, const GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glFogxv (uint pname, int* @params);

//	// extern void glFrontFace (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFrontFace (uint mode);

//	// extern void glFrustumx (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFrustumx (int left, int right, int bottom, int top, int zNear, int zFar);

//	// extern void glGenBuffers (GLsizei n, GLuint *buffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenBuffers (int n, uint* buffers);

//	// extern void glGenTextures (GLsizei n, GLuint *textures);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenTextures (int n, uint* textures);

//	// extern void glGetBooleanv (GLenum pname, GLboolean *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBooleanv (uint pname, bool* @params);

//	// extern void glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBufferParameteriv (uint target, uint pname, int* @params);

//	// extern void glGetClipPlanex (GLenum pname, GLfixed *eqn);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glGetClipPlanex (uint pname, int[] eqn);

//	// extern GLenum glGetError ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glGetError ();

//	// extern void glGetFixedv (GLenum pname, GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetFixedv (uint pname, int* @params);

//	// extern void glGetIntegerv (GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetIntegerv (uint pname, int* @params);

//	// extern void glGetLightxv (GLenum light, GLenum pname, GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetLightxv (uint light, uint pname, int* @params);

//	// extern void glGetMaterialxv (GLenum face, GLenum pname, GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetMaterialxv (uint face, uint pname, int* @params);

//	// extern void glGetPointerv (GLenum pname, void **params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetPointerv (uint pname, void** @params);

//	// extern const GLubyte * glGetString (GLenum name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* glGetString (uint name);

//	// extern void glGetTexEnviv (GLenum env, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexEnviv (uint env, uint pname, int* @params);

//	// extern void glGetTexEnvxv (GLenum env, GLenum pname, GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexEnvxv (uint env, uint pname, int* @params);

//	// extern void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexParameteriv (uint target, uint pname, int* @params);

//	// extern void glGetTexParameterxv (GLenum target, GLenum pname, GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexParameterxv (uint target, uint pname, int* @params);

//	// extern void glHint (GLenum target, GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glHint (uint target, uint mode);

//	// extern GLboolean glIsBuffer (GLuint buffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsBuffer (uint buffer);

//	// extern GLboolean glIsEnabled (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsEnabled (uint cap);

//	// extern GLboolean glIsTexture (GLuint texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsTexture (uint texture);

//	// extern void glLightModelx (GLenum pname, GLfixed param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLightModelx (uint pname, int param);

//	// extern void glLightModelxv (GLenum pname, const GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLightModelxv (uint pname, int* @params);

//	// extern void glLightx (GLenum light, GLenum pname, GLfixed param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLightx (uint light, uint pname, int param);

//	// extern void glLightxv (GLenum light, GLenum pname, const GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLightxv (uint light, uint pname, int* @params);

//	// extern void glLineWidthx (GLfixed width);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLineWidthx (int width);

//	// extern void glLoadIdentity ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLoadIdentity ();

//	// extern void glLoadMatrixx (const GLfixed *m);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLoadMatrixx (int* m);

//	// extern void glLogicOp (GLenum opcode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLogicOp (uint opcode);

//	// extern void glMaterialx (GLenum face, GLenum pname, GLfixed param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glMaterialx (uint face, uint pname, int param);

//	// extern void glMaterialxv (GLenum face, GLenum pname, const GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glMaterialxv (uint face, uint pname, int* @params);

//	// extern void glMatrixMode (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glMatrixMode (uint mode);

//	// extern void glMultMatrixx (const GLfixed *m);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glMultMatrixx (int* m);

//	// extern void glMultiTexCoord4x (GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glMultiTexCoord4x (uint target, int s, int t, int r, int q);

//	// extern void glNormal3x (GLfixed nx, GLfixed ny, GLfixed nz);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glNormal3x (int nx, int ny, int nz);

//	// extern void glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glNormalPointer (uint type, int stride, void* pointer);

//	// extern void glOrthox (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glOrthox (int left, int right, int bottom, int top, int zNear, int zFar);

//	// extern void glPixelStorei (GLenum pname, GLint param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPixelStorei (uint pname, int param);

//	// extern void glPointParameterx (GLenum pname, GLfixed param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPointParameterx (uint pname, int param);

//	// extern void glPointParameterxv (GLenum pname, const GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glPointParameterxv (uint pname, int* @params);

//	// extern void glPointSizex (GLfixed size);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPointSizex (int size);

//	// extern void glPolygonOffsetx (GLfixed factor, GLfixed units);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPolygonOffsetx (int factor, int units);

//	// extern void glPopMatrix ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPopMatrix ();

//	// extern void glPushMatrix ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPushMatrix ();

//	// extern void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glReadPixels (int x, int y, int width, int height, uint format, uint type, void* pixels);

//	// extern void glRotatex (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRotatex (int angle, int x, int y, int z);

//	// extern void glSampleCoveragex (GLclampx value, GLboolean invert);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glSampleCoveragex (int value, bool invert);

//	// extern void glScalex (GLfixed x, GLfixed y, GLfixed z);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glScalex (int x, int y, int z);

//	// extern void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glScissor (int x, int y, int width, int height);

//	// extern void glShadeModel (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glShadeModel (uint mode);

//	// extern void glStencilFunc (GLenum func, GLint ref, GLuint mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilFunc (uint func, int @ref, uint mask);

//	// extern void glStencilMask (GLuint mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilMask (uint mask);

//	// extern void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilOp (uint fail, uint zfail, uint zpass);

//	// extern void glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexCoordPointer (int size, uint type, int stride, void* pointer);

//	// extern void glTexEnvi (GLenum target, GLenum pname, GLint param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexEnvi (uint target, uint pname, int param);

//	// extern void glTexEnvx (GLenum target, GLenum pname, GLfixed param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexEnvx (uint target, uint pname, int param);

//	// extern void glTexEnviv (GLenum target, GLenum pname, const GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexEnviv (uint target, uint pname, int* @params);

//	// extern void glTexEnvxv (GLenum target, GLenum pname, const GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexEnvxv (uint target, uint pname, int* @params);

//	// extern void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexImage2D (uint target, int level, int internalformat, int width, int height, int border, uint format, uint type, void* pixels);

//	// extern void glTexParameteri (GLenum target, GLenum pname, GLint param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexParameteri (uint target, uint pname, int param);

//	// extern void glTexParameterx (GLenum target, GLenum pname, GLfixed param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexParameterx (uint target, uint pname, int param);

//	// extern void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexParameteriv (uint target, uint pname, int* @params);

//	// extern void glTexParameterxv (GLenum target, GLenum pname, const GLfixed *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexParameterxv (uint target, uint pname, int* @params);

//	// extern void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexSubImage2D (uint target, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, void* pixels);

//	// extern void glTranslatex (GLfixed x, GLfixed y, GLfixed z);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTranslatex (int x, int y, int z);

//	// extern void glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexPointer (int size, uint type, int stride, void* pointer);

//	// extern void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glViewport (int x, int y, int width, int height);

//	// extern void glCurrentPaletteMatrixOES (GLuint matrixpaletteindex);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCurrentPaletteMatrixOES (uint matrixpaletteindex);

//	// extern void glLoadPaletteFromModelViewMatrixOES ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLoadPaletteFromModelViewMatrixOES ();

//	// extern void glMatrixIndexPointerOES (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glMatrixIndexPointerOES (int size, uint type, int stride, void* pointer);

//	// extern void glWeightPointerOES (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glWeightPointerOES (int size, uint type, int stride, void* pointer);

//	// extern void glPointSizePointerOES (GLenum type, GLsizei stride, const GLvoid *pointer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glPointSizePointerOES (uint type, int stride, void* pointer);

//	// extern void glDrawTexsOES (GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawTexsOES (short x, short y, short z, short width, short height);

//	// extern void glDrawTexiOES (GLint x, GLint y, GLint z, GLint width, GLint height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawTexiOES (int x, int y, int z, int width, int height);

//	// extern void glDrawTexxOES (GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawTexxOES (int x, int y, int z, int width, int height);

//	// extern void glDrawTexsvOES (const GLshort *coords);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawTexsvOES (short* coords);

//	// extern void glDrawTexivOES (const GLint *coords);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawTexivOES (int* coords);

//	// extern void glDrawTexxvOES (const GLfixed *coords);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawTexxvOES (int* coords);

//	// extern void glDrawTexfOES (GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawTexfOES (float x, float y, float z, float width, float height);

//	// extern void glDrawTexfvOES (const GLfloat *coords);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawTexfvOES (float* coords);

//	// extern GLvoid glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTextureLevelsAPPLE (uint destinationTexture, uint sourceTexture, int sourceBaseLevel, int sourceLevelCount);

//	// extern GLvoid glRenderbufferStorageMultisampleAPPLE (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRenderbufferStorageMultisampleAPPLE (uint target, int samples, uint internalformat, int width, int height);

//	// extern GLvoid glResolveMultisampleFramebufferAPPLE () __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glResolveMultisampleFramebufferAPPLE ();

//	// extern GLvoid glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const char *label) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLabelObjectEXT (uint type, uint @object, int length, sbyte* label);

//	// extern GLvoid glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, char *label) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetObjectLabelEXT (uint type, uint @object, int bufSize, int* length, sbyte* label);

//	// extern GLvoid glInsertEventMarkerEXT (GLsizei length, const char *marker) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glInsertEventMarkerEXT (int length, sbyte* marker);

//	// extern GLvoid glPushGroupMarkerEXT (GLsizei length, const char *marker) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glPushGroupMarkerEXT (int length, sbyte* marker);

//	// extern GLvoid glPopGroupMarkerEXT () __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPopGroupMarkerEXT ();

//	// extern GLvoid glDiscardFramebufferEXT (GLenum target, GLsizei numAttachments, const GLenum *attachments) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDiscardFramebufferEXT (uint target, int numAttachments, uint* attachments);

//	// extern GLvoid * glMapBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* glMapBufferRangeEXT (uint target, IntPtr offset, IntPtr length, uint access);

//	// extern GLvoid glFlushMappedBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFlushMappedBufferRangeEXT (uint target, IntPtr offset, IntPtr length);

//	// extern GLvoid glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexStorage2DEXT (uint target, int levels, uint internalformat, int width, int height);

//	// extern GLvoid glBlendEquationSeparateOES (GLenum modeRGB, GLenum modeAlpha) __attribute__((availability(ios, introduced=3.1)));
//	[iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendEquationSeparateOES (uint modeRGB, uint modeAlpha);

//	// extern GLvoid glBlendFuncSeparateOES (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) __attribute__((availability(ios, introduced=3.1)));
//	[iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendFuncSeparateOES (uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha);

//	// extern GLvoid glBlendEquationOES (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendEquationOES (uint mode);

//	// extern GLboolean glIsRenderbufferOES (GLuint renderbuffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsRenderbufferOES (uint renderbuffer);

//	// extern GLvoid glBindRenderbufferOES (GLenum target, GLuint renderbuffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindRenderbufferOES (uint target, uint renderbuffer);

//	// extern GLvoid glDeleteRenderbuffersOES (GLsizei n, const GLuint *renderbuffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteRenderbuffersOES (int n, uint* renderbuffers);

//	// extern GLvoid glGenRenderbuffersOES (GLsizei n, GLuint *renderbuffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenRenderbuffersOES (int n, uint* renderbuffers);

//	// extern GLvoid glRenderbufferStorageOES (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRenderbufferStorageOES (uint target, uint internalformat, int width, int height);

//	// extern GLvoid glGetRenderbufferParameterivOES (GLenum target, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetRenderbufferParameterivOES (uint target, uint pname, int* @params);

//	// extern GLboolean glIsFramebufferOES (GLuint framebuffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsFramebufferOES (uint framebuffer);

//	// extern GLvoid glBindFramebufferOES (GLenum target, GLuint framebuffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindFramebufferOES (uint target, uint framebuffer);

//	// extern GLvoid glDeleteFramebuffersOES (GLsizei n, const GLuint *framebuffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteFramebuffersOES (int n, uint* framebuffers);

//	// extern GLvoid glGenFramebuffersOES (GLsizei n, GLuint *framebuffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenFramebuffersOES (int n, uint* framebuffers);

//	// extern GLenum glCheckFramebufferStatusOES (GLenum target);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glCheckFramebufferStatusOES (uint target);

//	// extern GLvoid glFramebufferRenderbufferOES (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFramebufferRenderbufferOES (uint target, uint attachment, uint renderbuffertarget, uint renderbuffer);

//	// extern GLvoid glFramebufferTexture2DOES (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFramebufferTexture2DOES (uint target, uint attachment, uint textarget, uint texture, int level);

//	// extern GLvoid glGetFramebufferAttachmentParameterivOES (GLenum target, GLenum attachment, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetFramebufferAttachmentParameterivOES (uint target, uint attachment, uint pname, int* @params);

//	// extern GLvoid glGenerateMipmapOES (GLenum target);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glGenerateMipmapOES (uint target);

//	// extern GLvoid glGetBufferPointervOES (GLenum target, GLenum pname, GLvoid **params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBufferPointervOES (uint target, uint pname, void** @params);

//	// extern GLvoid * glMapBufferOES (GLenum target, GLenum access);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* glMapBufferOES (uint target, uint access);

//	// extern GLboolean glUnmapBufferOES (GLenum target);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glUnmapBufferOES (uint target);

//	// extern GLvoid glBindVertexArrayOES (GLuint array) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindVertexArrayOES (uint array);

//	// extern GLvoid glDeleteVertexArraysOES (GLsizei n, const GLuint *arrays) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteVertexArraysOES (int n, uint* arrays);

//	// extern GLvoid glGenVertexArraysOES (GLsizei n, GLuint *arrays) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenVertexArraysOES (int n, uint* arrays);

//	// extern GLboolean glIsVertexArrayOES (GLuint array) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsVertexArrayOES (uint array);

//	// extern void glActiveTexture (GLenum texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glActiveTexture (uint texture);

//	// extern void glAttachShader (GLuint program, GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glAttachShader (uint program, uint shader);

//	// extern void glBindAttribLocation (GLuint program, GLuint index, const GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBindAttribLocation (uint program, uint index, sbyte* name);

//	// extern void glBindBuffer (GLenum target, GLuint buffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindBuffer (uint target, uint buffer);

//	// extern void glBindFramebuffer (GLenum target, GLuint framebuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindFramebuffer (uint target, uint framebuffer);

//	// extern void glBindRenderbuffer (GLenum target, GLuint renderbuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindRenderbuffer (uint target, uint renderbuffer);

//	// extern void glBindTexture (GLenum target, GLuint texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindTexture (uint target, uint texture);

//	// extern void glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendColor (float red, float green, float blue, float alpha);

//	// extern void glBlendEquation (GLenum mode) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendEquation (uint mode);

//	// extern void glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendEquationSeparate (uint modeRGB, uint modeAlpha);

//	// extern void glBlendFunc (GLenum sfactor, GLenum dfactor);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendFunc (uint sfactor, uint dfactor);

//	// extern void glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendFuncSeparate (uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha);

//	// extern void glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBufferData (uint target, IntPtr size, void* data, uint usage);

//	// extern void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBufferSubData (uint target, IntPtr offset, IntPtr size, void* data);

//	// extern GLenum glCheckFramebufferStatus (GLenum target) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glCheckFramebufferStatus (uint target);

//	// extern void glClear (GLbitfield mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClear (uint mask);

//	// extern void glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearColor (float red, float green, float blue, float alpha);

//	// extern void glClearDepthf (GLclampf depth);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearDepthf (float depth);

//	// extern void glClearStencil (GLint s);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearStencil (int s);

//	// extern void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glColorMask (bool red, bool green, bool blue, bool alpha);

//	// extern void glCompileShader (GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCompileShader (uint shader);

//	// extern void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexImage2D (uint target, int level, uint internalformat, int width, int height, int border, int imageSize, void* data);

//	// extern void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexSubImage2D (uint target, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, void* data);

//	// extern void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTexImage2D (uint target, int level, uint internalformat, int x, int y, int width, int height, int border);

//	// extern void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTexSubImage2D (uint target, int level, int xoffset, int yoffset, int x, int y, int width, int height);

//	// extern GLuint glCreateProgram () __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glCreateProgram ();

//	// extern GLuint glCreateShader (GLenum type) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glCreateShader (uint type);

//	// extern void glCullFace (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCullFace (uint mode);

//	// extern void glDeleteBuffers (GLsizei n, const GLuint *buffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteBuffers (int n, uint* buffers);

//	// extern void glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteFramebuffers (int n, uint* framebuffers);

//	// extern void glDeleteProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDeleteProgram (uint program);

//	// extern void glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteRenderbuffers (int n, uint* renderbuffers);

//	// extern void glDeleteShader (GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDeleteShader (uint shader);

//	// extern void glDeleteTextures (GLsizei n, const GLuint *textures);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteTextures (int n, uint* textures);

//	// extern void glDepthFunc (GLenum func);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthFunc (uint func);

//	// extern void glDepthMask (GLboolean flag);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthMask (bool flag);

//	// extern void glDepthRangef (GLclampf zNear, GLclampf zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthRangef (float zNear, float zFar);

//	// extern void glDetachShader (GLuint program, GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDetachShader (uint program, uint shader);

//	// extern void glDisable (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDisable (uint cap);

//	// extern void glDisableVertexAttribArray (GLuint index) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDisableVertexAttribArray (uint index);

//	// extern void glDrawArrays (GLenum mode, GLint first, GLsizei count);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawArrays (uint mode, int first, int count);

//	// extern void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawElements (uint mode, int count, uint type, void* indices);

//	// extern void glEnable (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEnable (uint cap);

//	// extern void glEnableVertexAttribArray (GLuint index) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEnableVertexAttribArray (uint index);

//	// extern void glFinish ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFinish ();

//	// extern void glFlush ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFlush ();

//	// extern void glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFramebufferRenderbuffer (uint target, uint attachment, uint renderbuffertarget, uint renderbuffer);

//	// extern void glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFramebufferTexture2D (uint target, uint attachment, uint textarget, uint texture, int level);

//	// extern void glFrontFace (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFrontFace (uint mode);

//	// extern void glGenBuffers (GLsizei n, GLuint *buffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenBuffers (int n, uint* buffers);

//	// extern void glGenerateMipmap (GLenum target) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glGenerateMipmap (uint target);

//	// extern void glGenFramebuffers (GLsizei n, GLuint *framebuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenFramebuffers (int n, uint* framebuffers);

//	// extern void glGenRenderbuffers (GLsizei n, GLuint *renderbuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenRenderbuffers (int n, uint* renderbuffers);

//	// extern void glGenTextures (GLsizei n, GLuint *textures);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenTextures (int n, uint* textures);

//	// extern void glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufsize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetActiveAttrib (uint program, uint index, int bufsize, int* length, int* size, uint* type, sbyte* name);

//	// extern void glGetActiveUniform (GLuint program, GLuint index, GLsizei bufsize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetActiveUniform (uint program, uint index, int bufsize, int* length, int* size, uint* type, sbyte* name);

//	// extern void glGetAttachedShaders (GLuint program, GLsizei maxcount, GLsizei *count, GLuint *shaders) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetAttachedShaders (uint program, int maxcount, int* count, uint* shaders);

//	// extern int glGetAttribLocation (GLuint program, const GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int glGetAttribLocation (uint program, sbyte* name);

//	// extern void glGetBooleanv (GLenum pname, GLboolean *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBooleanv (uint pname, bool* @params);

//	// extern void glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBufferParameteriv (uint target, uint pname, int* @params);

//	// extern GLenum glGetError ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glGetError ();

//	// extern void glGetFloatv (GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetFloatv (uint pname, float* @params);

//	// extern void glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetFramebufferAttachmentParameteriv (uint target, uint attachment, uint pname, int* @params);

//	// extern void glGetIntegerv (GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetIntegerv (uint pname, int* @params);

//	// extern void glGetProgramiv (GLuint program, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramiv (uint program, uint pname, int* @params);

//	// extern void glGetProgramInfoLog (GLuint program, GLsizei bufsize, GLsizei *length, GLchar *infolog) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramInfoLog (uint program, int bufsize, int* length, sbyte* infolog);

//	// extern void glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetRenderbufferParameteriv (uint target, uint pname, int* @params);

//	// extern void glGetShaderiv (GLuint shader, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderiv (uint shader, uint pname, int* @params);

//	// extern void glGetShaderInfoLog (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *infolog) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderInfoLog (uint shader, int bufsize, int* length, sbyte* infolog);

//	// extern void glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderPrecisionFormat (uint shadertype, uint precisiontype, int* range, int* precision);

//	// extern void glGetShaderSource (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderSource (uint shader, int bufsize, int* length, sbyte* source);

//	// extern const GLubyte * glGetString (GLenum name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* glGetString (uint name);

//	// extern void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexParameterfv (uint target, uint pname, float* @params);

//	// extern void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexParameteriv (uint target, uint pname, int* @params);

//	// extern void glGetUniformfv (GLuint program, GLint location, GLfloat *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetUniformfv (uint program, int location, float* @params);

//	// extern void glGetUniformiv (GLuint program, GLint location, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetUniformiv (uint program, int location, int* @params);

//	// extern int glGetUniformLocation (GLuint program, const GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int glGetUniformLocation (uint program, sbyte* name);

//	// extern void glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribfv (uint index, uint pname, float* @params);

//	// extern void glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribiv (uint index, uint pname, int* @params);

//	// extern void glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid **pointer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribPointerv (uint index, uint pname, void** pointer);

//	// extern void glHint (GLenum target, GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glHint (uint target, uint mode);

//	// extern GLboolean glIsBuffer (GLuint buffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsBuffer (uint buffer);

//	// extern GLboolean glIsEnabled (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsEnabled (uint cap);

//	// extern GLboolean glIsFramebuffer (GLuint framebuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsFramebuffer (uint framebuffer);

//	// extern GLboolean glIsProgram (GLuint program);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsProgram (uint program);

//	// extern GLboolean glIsRenderbuffer (GLuint renderbuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsRenderbuffer (uint renderbuffer);

//	// extern GLboolean glIsShader (GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsShader (uint shader);

//	// extern GLboolean glIsTexture (GLuint texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsTexture (uint texture);

//	// extern void glLineWidth (GLfloat width);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLineWidth (float width);

//	// extern void glLinkProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLinkProgram (uint program);

//	// extern void glPixelStorei (GLenum pname, GLint param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPixelStorei (uint pname, int param);

//	// extern void glPolygonOffset (GLfloat factor, GLfloat units);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPolygonOffset (float factor, float units);

//	// extern void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glReadPixels (int x, int y, int width, int height, uint format, uint type, void* pixels);

//	// extern void glReleaseShaderCompiler () __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glReleaseShaderCompiler ();

//	// extern void glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRenderbufferStorage (uint target, uint internalformat, int width, int height);

//	// extern void glSampleCoverage (GLclampf value, GLboolean invert);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glSampleCoverage (float value, bool invert);

//	// extern void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glScissor (int x, int y, int width, int height);

//	// extern void glShaderBinary (GLsizei n, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glShaderBinary (int n, uint* shaders, uint binaryformat, void* binary, int length);

//	// extern void glShaderSource (GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glShaderSource (uint shader, int count, sbyte** @string, int* length);

//	// extern void glStencilFunc (GLenum func, GLint ref, GLuint mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilFunc (uint func, int @ref, uint mask);

//	// extern void glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilFuncSeparate (uint face, uint func, int @ref, uint mask);

//	// extern void glStencilMask (GLuint mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilMask (uint mask);

//	// extern void glStencilMaskSeparate (GLenum face, GLuint mask) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilMaskSeparate (uint face, uint mask);

//	// extern void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilOp (uint fail, uint zfail, uint zpass);

//	// extern void glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail, GLenum zpass) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilOpSeparate (uint face, uint fail, uint zfail, uint zpass);

//	// extern void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexImage2D (uint target, int level, int internalformat, int width, int height, int border, uint format, uint type, void* pixels);

//	// extern void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexParameterf (uint target, uint pname, float param);

//	// extern void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexParameterfv (uint target, uint pname, float* @params);

//	// extern void glTexParameteri (GLenum target, GLenum pname, GLint param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexParameteri (uint target, uint pname, int param);

//	// extern void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexParameteriv (uint target, uint pname, int* @params);

//	// extern void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexSubImage2D (uint target, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, void* pixels);

//	// extern void glUniform1f (GLint location, GLfloat x) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform1f (int location, float x);

//	// extern void glUniform1fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform1fv (int location, int count, float* v);

//	// extern void glUniform1i (GLint location, GLint x) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform1i (int location, int x);

//	// extern void glUniform1iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform1iv (int location, int count, int* v);

//	// extern void glUniform2f (GLint location, GLfloat x, GLfloat y) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform2f (int location, float x, float y);

//	// extern void glUniform2fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform2fv (int location, int count, float* v);

//	// extern void glUniform2i (GLint location, GLint x, GLint y) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform2i (int location, int x, int y);

//	// extern void glUniform2iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform2iv (int location, int count, int* v);

//	// extern void glUniform3f (GLint location, GLfloat x, GLfloat y, GLfloat z) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform3f (int location, float x, float y, float z);

//	// extern void glUniform3fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform3fv (int location, int count, float* v);

//	// extern void glUniform3i (GLint location, GLint x, GLint y, GLint z) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform3i (int location, int x, int y, int z);

//	// extern void glUniform3iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform3iv (int location, int count, int* v);

//	// extern void glUniform4f (GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform4f (int location, float x, float y, float z, float w);

//	// extern void glUniform4fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform4fv (int location, int count, float* v);

//	// extern void glUniform4i (GLint location, GLint x, GLint y, GLint z, GLint w) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform4i (int location, int x, int y, int z, int w);

//	// extern void glUniform4iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform4iv (int location, int count, int* v);

//	// extern void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix2fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix3fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix4fv (int location, int count, bool transpose, float* value);

//	// extern void glUseProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUseProgram (uint program);

//	// extern void glValidateProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glValidateProgram (uint program);

//	// extern void glVertexAttrib1f (GLuint indx, GLfloat x) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib1f (uint indx, float x);

//	// extern void glVertexAttrib1fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib1fv (uint indx, float* values);

//	// extern void glVertexAttrib2f (GLuint indx, GLfloat x, GLfloat y) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib2f (uint indx, float x, float y);

//	// extern void glVertexAttrib2fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib2fv (uint indx, float* values);

//	// extern void glVertexAttrib3f (GLuint indx, GLfloat x, GLfloat y, GLfloat z) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib3f (uint indx, float x, float y, float z);

//	// extern void glVertexAttrib3fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib3fv (uint indx, float* values);

//	// extern void glVertexAttrib4f (GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib4f (uint indx, float x, float y, float z, float w);

//	// extern void glVertexAttrib4fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib4fv (uint indx, float* values);

//	// extern void glVertexAttribPointer (GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *ptr) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttribPointer (uint indx, int size, uint type, bool normalized, int stride, void* ptr);

//	// extern void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glViewport (int x, int y, int width, int height);

//	// extern GLvoid glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTextureLevelsAPPLE (uint destinationTexture, uint sourceTexture, int sourceBaseLevel, int sourceLevelCount);

//	// extern GLvoid glRenderbufferStorageMultisampleAPPLE (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRenderbufferStorageMultisampleAPPLE (uint target, int samples, uint internalformat, int width, int height);

//	// extern GLvoid glResolveMultisampleFramebufferAPPLE () __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glResolveMultisampleFramebufferAPPLE ();

//	// extern GLsync glFenceSyncAPPLE (GLenum condition, GLbitfield flags) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe GLsync* glFenceSyncAPPLE (uint condition, uint flags);

//	// extern GLboolean glIsSyncAPPLE (GLsync sync) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool glIsSyncAPPLE (GLsync* sync);

//	// extern void glDeleteSyncAPPLE (GLsync sync) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteSyncAPPLE (GLsync* sync);

//	// extern GLenum glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint glClientWaitSyncAPPLE (GLsync* sync, uint flags, ulong timeout);

//	// extern void glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glWaitSyncAPPLE (GLsync* sync, uint flags, ulong timeout);

//	// extern void glGetInteger64vAPPLE (GLenum pname, GLint64 *params) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetInteger64vAPPLE (uint pname, long* @params);

//	// extern void glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetSyncivAPPLE (GLsync* sync, uint pname, int bufSize, int* length, int* values);

//	// extern GLvoid glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar *label) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLabelObjectEXT (uint type, uint @object, int length, sbyte* label);

//	// extern GLvoid glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetObjectLabelEXT (uint type, uint @object, int bufSize, int* length, sbyte* label);

//	// extern GLvoid glInsertEventMarkerEXT (GLsizei length, const GLchar *marker) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glInsertEventMarkerEXT (int length, sbyte* marker);

//	// extern GLvoid glPushGroupMarkerEXT (GLsizei length, const GLchar *marker) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glPushGroupMarkerEXT (int length, sbyte* marker);

//	// extern GLvoid glPopGroupMarkerEXT () __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPopGroupMarkerEXT ();

//	// extern GLvoid glDiscardFramebufferEXT (GLenum target, GLsizei numAttachments, const GLenum *attachments) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDiscardFramebufferEXT (uint target, int numAttachments, uint* attachments);

//	// extern GLvoid glDrawArraysInstancedEXT (GLenum mode, GLint first, GLsizei count, GLsizei instanceCount) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawArraysInstancedEXT (uint mode, int first, int count, int instanceCount);

//	// extern GLvoid glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instanceCount) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawElementsInstancedEXT (uint mode, int count, uint type, void* indices, int instanceCount);

//	// extern GLvoid glVertexAttribDivisorEXT (GLuint index, GLuint divisor) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttribDivisorEXT (uint index, uint divisor);

//	// extern GLvoid * glMapBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* glMapBufferRangeEXT (uint target, IntPtr offset, IntPtr length, uint access);

//	// extern GLvoid glFlushMappedBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFlushMappedBufferRangeEXT (uint target, IntPtr offset, IntPtr length);

//	// extern GLvoid glGenQueriesEXT (GLsizei n, GLuint *ids) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenQueriesEXT (int n, uint* ids);

//	// extern GLvoid glDeleteQueriesEXT (GLsizei n, const GLuint *ids) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteQueriesEXT (int n, uint* ids);

//	// extern GLboolean glIsQueryEXT (GLuint id) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsQueryEXT (uint id);

//	// extern GLvoid glBeginQueryEXT (GLenum target, GLuint id) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBeginQueryEXT (uint target, uint id);

//	// extern GLvoid glEndQueryEXT (GLenum target) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEndQueryEXT (uint target);

//	// extern GLvoid glGetQueryivEXT (GLenum target, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetQueryivEXT (uint target, uint pname, int* @params);

//	// extern GLvoid glGetQueryObjectuivEXT (GLuint id, GLenum pname, GLuint *params) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetQueryObjectuivEXT (uint id, uint pname, uint* @params);

//	// extern GLvoid glUseProgramStagesEXT (GLuint pipeline, GLbitfield stages, GLuint program) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUseProgramStagesEXT (uint pipeline, uint stages, uint program);

//	// extern GLvoid glActiveShaderProgramEXT (GLuint pipeline, GLuint program) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glActiveShaderProgramEXT (uint pipeline, uint program);

//	// extern GLuint glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLchar *const *strings) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint glCreateShaderProgramvEXT (uint type, int count, sbyte** strings);

//	// extern GLvoid glBindProgramPipelineEXT (GLuint pipeline) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindProgramPipelineEXT (uint pipeline);

//	// extern GLvoid glDeleteProgramPipelinesEXT (GLsizei n, const GLuint *pipelines) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteProgramPipelinesEXT (int n, uint* pipelines);

//	// extern GLvoid glGenProgramPipelinesEXT (GLsizei n, GLuint *pipelines) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenProgramPipelinesEXT (int n, uint* pipelines);

//	// extern GLboolean glIsProgramPipelineEXT (GLuint pipeline) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsProgramPipelineEXT (uint pipeline);

//	// extern GLvoid glProgramParameteriEXT (GLuint program, GLenum pname, GLint value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramParameteriEXT (uint program, uint pname, int value);

//	// extern GLvoid glGetProgramPipelineivEXT (GLuint pipeline, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramPipelineivEXT (uint pipeline, uint pname, int* @params);

//	// extern GLvoid glValidateProgramPipelineEXT (GLuint pipeline) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glValidateProgramPipelineEXT (uint pipeline);

//	// extern GLvoid glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramPipelineInfoLogEXT (uint pipeline, int bufSize, int* length, sbyte* infoLog);

//	// extern GLvoid glProgramUniform1iEXT (GLuint program, GLint location, GLint x) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform1iEXT (uint program, int location, int x);

//	// extern GLvoid glProgramUniform2iEXT (GLuint program, GLint location, GLint x, GLint y) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform2iEXT (uint program, int location, int x, int y);

//	// extern GLvoid glProgramUniform3iEXT (GLuint program, GLint location, GLint x, GLint y, GLint z) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform3iEXT (uint program, int location, int x, int y, int z);

//	// extern GLvoid glProgramUniform4iEXT (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform4iEXT (uint program, int location, int x, int y, int z, int w);

//	// extern GLvoid glProgramUniform1fEXT (GLuint program, GLint location, GLfloat x) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform1fEXT (uint program, int location, float x);

//	// extern GLvoid glProgramUniform2fEXT (GLuint program, GLint location, GLfloat x, GLfloat y) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform2fEXT (uint program, int location, float x, float y);

//	// extern GLvoid glProgramUniform3fEXT (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform3fEXT (uint program, int location, float x, float y, float z);

//	// extern GLvoid glProgramUniform4fEXT (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform4fEXT (uint program, int location, float x, float y, float z, float w);

//	// extern GLvoid glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform1ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform2ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform3ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform4ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform1fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform2fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform3fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform4fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix2fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix3fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix4fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexStorage2DEXT (uint target, int levels, uint internalformat, int width, int height);

//	// extern GLvoid glGetBufferPointervOES (GLenum target, GLenum pname, GLvoid **params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBufferPointervOES (uint target, uint pname, void** @params);

//	// extern GLvoid * glMapBufferOES (GLenum target, GLenum access);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* glMapBufferOES (uint target, uint access);

//	// extern GLboolean glUnmapBufferOES (GLenum target);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glUnmapBufferOES (uint target);

//	// extern GLvoid glBindVertexArrayOES (GLuint array) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindVertexArrayOES (uint array);

//	// extern GLvoid glDeleteVertexArraysOES (GLsizei n, const GLuint *arrays) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteVertexArraysOES (int n, uint* arrays);

//	// extern GLvoid glGenVertexArraysOES (GLsizei n, GLuint *arrays) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenVertexArraysOES (int n, uint* arrays);

//	// extern GLboolean glIsVertexArrayOES (GLuint array) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsVertexArrayOES (uint array);

//	// extern void glActiveTexture (GLenum texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glActiveTexture (uint texture);

//	// extern void glAttachShader (GLuint program, GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glAttachShader (uint program, uint shader);

//	// extern void glBindAttribLocation (GLuint program, GLuint index, const GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBindAttribLocation (uint program, uint index, sbyte* name);

//	// extern void glBindBuffer (GLenum target, GLuint buffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindBuffer (uint target, uint buffer);

//	// extern void glBindFramebuffer (GLenum target, GLuint framebuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindFramebuffer (uint target, uint framebuffer);

//	// extern void glBindRenderbuffer (GLenum target, GLuint renderbuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindRenderbuffer (uint target, uint renderbuffer);

//	// extern void glBindTexture (GLenum target, GLuint texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindTexture (uint target, uint texture);

//	// extern void glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendColor (float red, float green, float blue, float alpha);

//	// extern void glBlendEquation (GLenum mode) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendEquation (uint mode);

//	// extern void glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendEquationSeparate (uint modeRGB, uint modeAlpha);

//	// extern void glBlendFunc (GLenum sfactor, GLenum dfactor);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendFunc (uint sfactor, uint dfactor);

//	// extern void glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlendFuncSeparate (uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha);

//	// extern void glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBufferData (uint target, IntPtr size, void* data, uint usage);

//	// extern void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glBufferSubData (uint target, IntPtr offset, IntPtr size, void* data);

//	// extern GLenum glCheckFramebufferStatus (GLenum target) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glCheckFramebufferStatus (uint target);

//	// extern void glClear (GLbitfield mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClear (uint mask);

//	// extern void glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearColor (float red, float green, float blue, float alpha);

//	// extern void glClearDepthf (GLclampf depth);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearDepthf (float depth);

//	// extern void glClearStencil (GLint s);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearStencil (int s);

//	// extern void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glColorMask (bool red, bool green, bool blue, bool alpha);

//	// extern void glCompileShader (GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCompileShader (uint shader);

//	// extern void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexImage2D (uint target, int level, uint internalformat, int width, int height, int border, int imageSize, void* data);

//	// extern void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexSubImage2D (uint target, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, void* data);

//	// extern void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTexImage2D (uint target, int level, uint internalformat, int x, int y, int width, int height, int border);

//	// extern void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTexSubImage2D (uint target, int level, int xoffset, int yoffset, int x, int y, int width, int height);

//	// extern GLuint glCreateProgram () __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glCreateProgram ();

//	// extern GLuint glCreateShader (GLenum type) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glCreateShader (uint type);

//	// extern void glCullFace (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCullFace (uint mode);

//	// extern void glDeleteBuffers (GLsizei n, const GLuint *buffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteBuffers (int n, uint* buffers);

//	// extern void glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteFramebuffers (int n, uint* framebuffers);

//	// extern void glDeleteProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDeleteProgram (uint program);

//	// extern void glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteRenderbuffers (int n, uint* renderbuffers);

//	// extern void glDeleteShader (GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDeleteShader (uint shader);

//	// extern void glDeleteTextures (GLsizei n, const GLuint *textures);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteTextures (int n, uint* textures);

//	// extern void glDepthFunc (GLenum func);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthFunc (uint func);

//	// extern void glDepthMask (GLboolean flag);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthMask (bool flag);

//	// extern void glDepthRangef (GLclampf zNear, GLclampf zFar);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDepthRangef (float zNear, float zFar);

//	// extern void glDetachShader (GLuint program, GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDetachShader (uint program, uint shader);

//	// extern void glDisable (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDisable (uint cap);

//	// extern void glDisableVertexAttribArray (GLuint index) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDisableVertexAttribArray (uint index);

//	// extern void glDrawArrays (GLenum mode, GLint first, GLsizei count);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawArrays (uint mode, int first, int count);

//	// extern void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawElements (uint mode, int count, uint type, void* indices);

//	// extern void glEnable (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEnable (uint cap);

//	// extern void glEnableVertexAttribArray (GLuint index) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEnableVertexAttribArray (uint index);

//	// extern void glFinish ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFinish ();

//	// extern void glFlush ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFlush ();

//	// extern void glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFramebufferRenderbuffer (uint target, uint attachment, uint renderbuffertarget, uint renderbuffer);

//	// extern void glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFramebufferTexture2D (uint target, uint attachment, uint textarget, uint texture, int level);

//	// extern void glFrontFace (GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFrontFace (uint mode);

//	// extern void glGenBuffers (GLsizei n, GLuint *buffers);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenBuffers (int n, uint* buffers);

//	// extern void glGenerateMipmap (GLenum target) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glGenerateMipmap (uint target);

//	// extern void glGenFramebuffers (GLsizei n, GLuint *framebuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenFramebuffers (int n, uint* framebuffers);

//	// extern void glGenRenderbuffers (GLsizei n, GLuint *renderbuffers) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenRenderbuffers (int n, uint* renderbuffers);

//	// extern void glGenTextures (GLsizei n, GLuint *textures);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenTextures (int n, uint* textures);

//	// extern void glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufsize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetActiveAttrib (uint program, uint index, int bufsize, int* length, int* size, uint* type, sbyte* name);

//	// extern void glGetActiveUniform (GLuint program, GLuint index, GLsizei bufsize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetActiveUniform (uint program, uint index, int bufsize, int* length, int* size, uint* type, sbyte* name);

//	// extern void glGetAttachedShaders (GLuint program, GLsizei maxcount, GLsizei *count, GLuint *shaders) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetAttachedShaders (uint program, int maxcount, int* count, uint* shaders);

//	// extern int glGetAttribLocation (GLuint program, const GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int glGetAttribLocation (uint program, sbyte* name);

//	// extern void glGetBooleanv (GLenum pname, GLboolean *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBooleanv (uint pname, bool* @params);

//	// extern void glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBufferParameteriv (uint target, uint pname, int* @params);

//	// extern GLenum glGetError ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint glGetError ();

//	// extern void glGetFloatv (GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetFloatv (uint pname, float* @params);

//	// extern void glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetFramebufferAttachmentParameteriv (uint target, uint attachment, uint pname, int* @params);

//	// extern void glGetIntegerv (GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetIntegerv (uint pname, int* @params);

//	// extern void glGetProgramiv (GLuint program, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramiv (uint program, uint pname, int* @params);

//	// extern void glGetProgramInfoLog (GLuint program, GLsizei bufsize, GLsizei *length, GLchar *infolog) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramInfoLog (uint program, int bufsize, int* length, sbyte* infolog);

//	// extern void glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetRenderbufferParameteriv (uint target, uint pname, int* @params);

//	// extern void glGetShaderiv (GLuint shader, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderiv (uint shader, uint pname, int* @params);

//	// extern void glGetShaderInfoLog (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *infolog) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderInfoLog (uint shader, int bufsize, int* length, sbyte* infolog);

//	// extern void glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderPrecisionFormat (uint shadertype, uint precisiontype, int* range, int* precision);

//	// extern void glGetShaderSource (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetShaderSource (uint shader, int bufsize, int* length, sbyte* source);

//	// extern const GLubyte * glGetString (GLenum name);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* glGetString (uint name);

//	// extern void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexParameterfv (uint target, uint pname, float* @params);

//	// extern void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTexParameteriv (uint target, uint pname, int* @params);

//	// extern void glGetUniformfv (GLuint program, GLint location, GLfloat *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetUniformfv (uint program, int location, float* @params);

//	// extern void glGetUniformiv (GLuint program, GLint location, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetUniformiv (uint program, int location, int* @params);

//	// extern int glGetUniformLocation (GLuint program, const GLchar *name) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int glGetUniformLocation (uint program, sbyte* name);

//	// extern void glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribfv (uint index, uint pname, float* @params);

//	// extern void glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribiv (uint index, uint pname, int* @params);

//	// extern void glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid **pointer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribPointerv (uint index, uint pname, void** pointer);

//	// extern void glHint (GLenum target, GLenum mode);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glHint (uint target, uint mode);

//	// extern GLboolean glIsBuffer (GLuint buffer);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsBuffer (uint buffer);

//	// extern GLboolean glIsEnabled (GLenum cap);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsEnabled (uint cap);

//	// extern GLboolean glIsFramebuffer (GLuint framebuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsFramebuffer (uint framebuffer);

//	// extern GLboolean glIsProgram (GLuint program);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsProgram (uint program);

//	// extern GLboolean glIsRenderbuffer (GLuint renderbuffer) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsRenderbuffer (uint renderbuffer);

//	// extern GLboolean glIsShader (GLuint shader) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsShader (uint shader);

//	// extern GLboolean glIsTexture (GLuint texture);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsTexture (uint texture);

//	// extern void glLineWidth (GLfloat width);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLineWidth (float width);

//	// extern void glLinkProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glLinkProgram (uint program);

//	// extern void glPixelStorei (GLenum pname, GLint param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPixelStorei (uint pname, int param);

//	// extern void glPolygonOffset (GLfloat factor, GLfloat units);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPolygonOffset (float factor, float units);

//	// extern void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glReadPixels (int x, int y, int width, int height, uint format, uint type, void* pixels);

//	// extern void glReleaseShaderCompiler () __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glReleaseShaderCompiler ();

//	// extern void glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRenderbufferStorage (uint target, uint internalformat, int width, int height);

//	// extern void glSampleCoverage (GLclampf value, GLboolean invert);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glSampleCoverage (float value, bool invert);

//	// extern void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glScissor (int x, int y, int width, int height);

//	// extern void glShaderBinary (GLsizei n, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glShaderBinary (int n, uint* shaders, uint binaryformat, void* binary, int length);

//	// extern void glShaderSource (GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glShaderSource (uint shader, int count, sbyte** @string, int* length);

//	// extern void glStencilFunc (GLenum func, GLint ref, GLuint mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilFunc (uint func, int @ref, uint mask);

//	// extern void glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilFuncSeparate (uint face, uint func, int @ref, uint mask);

//	// extern void glStencilMask (GLuint mask);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilMask (uint mask);

//	// extern void glStencilMaskSeparate (GLenum face, GLuint mask) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilMaskSeparate (uint face, uint mask);

//	// extern void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilOp (uint fail, uint zfail, uint zpass);

//	// extern void glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail, GLenum zpass) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glStencilOpSeparate (uint face, uint fail, uint zfail, uint zpass);

//	// extern void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexImage2D (uint target, int level, int internalformat, int width, int height, int border, uint format, uint type, void* pixels);

//	// extern void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexParameterf (uint target, uint pname, float param);

//	// extern void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexParameterfv (uint target, uint pname, float* @params);

//	// extern void glTexParameteri (GLenum target, GLenum pname, GLint param);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexParameteri (uint target, uint pname, int param);

//	// extern void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexParameteriv (uint target, uint pname, int* @params);

//	// extern void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexSubImage2D (uint target, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, void* pixels);

//	// extern void glUniform1f (GLint location, GLfloat x) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform1f (int location, float x);

//	// extern void glUniform1fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform1fv (int location, int count, float* v);

//	// extern void glUniform1i (GLint location, GLint x) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform1i (int location, int x);

//	// extern void glUniform1iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform1iv (int location, int count, int* v);

//	// extern void glUniform2f (GLint location, GLfloat x, GLfloat y) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform2f (int location, float x, float y);

//	// extern void glUniform2fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform2fv (int location, int count, float* v);

//	// extern void glUniform2i (GLint location, GLint x, GLint y) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform2i (int location, int x, int y);

//	// extern void glUniform2iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform2iv (int location, int count, int* v);

//	// extern void glUniform3f (GLint location, GLfloat x, GLfloat y, GLfloat z) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform3f (int location, float x, float y, float z);

//	// extern void glUniform3fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform3fv (int location, int count, float* v);

//	// extern void glUniform3i (GLint location, GLint x, GLint y, GLint z) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform3i (int location, int x, int y, int z);

//	// extern void glUniform3iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform3iv (int location, int count, int* v);

//	// extern void glUniform4f (GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform4f (int location, float x, float y, float z, float w);

//	// extern void glUniform4fv (GLint location, GLsizei count, const GLfloat *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform4fv (int location, int count, float* v);

//	// extern void glUniform4i (GLint location, GLint x, GLint y, GLint z, GLint w) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform4i (int location, int x, int y, int z, int w);

//	// extern void glUniform4iv (GLint location, GLsizei count, const GLint *v) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform4iv (int location, int count, int* v);

//	// extern void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix2fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix3fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix4fv (int location, int count, bool transpose, float* value);

//	// extern void glUseProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUseProgram (uint program);

//	// extern void glValidateProgram (GLuint program) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glValidateProgram (uint program);

//	// extern void glVertexAttrib1f (GLuint indx, GLfloat x) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib1f (uint indx, float x);

//	// extern void glVertexAttrib1fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib1fv (uint indx, float* values);

//	// extern void glVertexAttrib2f (GLuint indx, GLfloat x, GLfloat y) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib2f (uint indx, float x, float y);

//	// extern void glVertexAttrib2fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib2fv (uint indx, float* values);

//	// extern void glVertexAttrib3f (GLuint indx, GLfloat x, GLfloat y, GLfloat z) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib3f (uint indx, float x, float y, float z);

//	// extern void glVertexAttrib3fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib3fv (uint indx, float* values);

//	// extern void glVertexAttrib4f (GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttrib4f (uint indx, float x, float y, float z, float w);

//	// extern void glVertexAttrib4fv (GLuint indx, const GLfloat *values) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttrib4fv (uint indx, float* values);

//	// extern void glVertexAttribPointer (GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *ptr) __attribute__((availability(ios, introduced=3.0)));
//	[iOS (3,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttribPointer (uint indx, int size, uint type, bool normalized, int stride, void* ptr);

//	// extern void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glViewport (int x, int y, int width, int height);

//	// extern void glReadBuffer (GLenum mode) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glReadBuffer (uint mode);

//	// extern void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawRangeElements (uint mode, uint start, uint end, int count, uint type, void* indices);

//	// extern void glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexImage3D (uint target, int level, int internalformat, int width, int height, int depth, int border, uint format, uint type, void* pixels);

//	// extern void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTexSubImage3D (uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, void* pixels);

//	// extern void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTexSubImage3D (uint target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);

//	// extern void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexImage3D (uint target, int level, uint internalformat, int width, int height, int depth, int border, int imageSize, void* data);

//	// extern void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glCompressedTexSubImage3D (uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, int imageSize, void* data);

//	// extern void glGenQueries (GLsizei n, GLuint *ids) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenQueries (int n, uint* ids);

//	// extern void glDeleteQueries (GLsizei n, const GLuint *ids) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteQueries (int n, uint* ids);

//	// extern GLboolean glIsQuery (GLuint id) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsQuery (uint id);

//	// extern void glBeginQuery (GLenum target, GLuint id) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBeginQuery (uint target, uint id);

//	// extern void glEndQuery (GLenum target) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEndQuery (uint target);

//	// extern void glGetQueryiv (GLenum target, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetQueryiv (uint target, uint pname, int* @params);

//	// extern void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetQueryObjectuiv (uint id, uint pname, uint* @params);

//	// extern GLboolean glUnmapBuffer (GLenum target) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glUnmapBuffer (uint target);

//	// extern void glGetBufferPointerv (GLenum target, GLenum pname, GLvoid **params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBufferPointerv (uint target, uint pname, void** @params);

//	// extern void glDrawBuffers (GLsizei n, const GLenum *bufs) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawBuffers (int n, uint* bufs);

//	// extern void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix2x3fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix3x2fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix2x4fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix4x2fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix3x4fv (int location, int count, bool transpose, float* value);

//	// extern void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniformMatrix4x3fv (int location, int count, bool transpose, float* value);

//	// extern void glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBlitFramebuffer (int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);

//	// extern void glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glRenderbufferStorageMultisample (uint target, int samples, uint internalformat, int width, int height);

//	// extern void glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFramebufferTextureLayer (uint target, uint attachment, uint texture, int level, int layer);

//	// extern GLvoid * glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* glMapBufferRange (uint target, IntPtr offset, IntPtr length, uint access);

//	// extern void glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glFlushMappedBufferRange (uint target, IntPtr offset, IntPtr length);

//	// extern void glBindVertexArray (GLuint array) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindVertexArray (uint array);

//	// extern void glDeleteVertexArrays (GLsizei n, const GLuint *arrays) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteVertexArrays (int n, uint* arrays);

//	// extern void glGenVertexArrays (GLsizei n, GLuint *arrays) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenVertexArrays (int n, uint* arrays);

//	// extern GLboolean glIsVertexArray (GLuint array) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsVertexArray (uint array);

//	// extern void glGetIntegeri_v (GLenum target, GLuint index, GLint *data) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetIntegeri_v (uint target, uint index, int* data);

//	// extern void glBeginTransformFeedback (GLenum primitiveMode) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBeginTransformFeedback (uint primitiveMode);

//	// extern void glEndTransformFeedback () __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glEndTransformFeedback ();

//	// extern void glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindBufferRange (uint target, uint index, uint buffer, IntPtr offset, IntPtr size);

//	// extern void glBindBufferBase (GLenum target, GLuint index, GLuint buffer) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindBufferBase (uint target, uint index, uint buffer);

//	// extern void glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glTransformFeedbackVaryings (uint program, int count, sbyte** varyings, uint bufferMode);

//	// extern void glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetTransformFeedbackVarying (uint program, uint index, int bufSize, int* length, int* size, uint* type, sbyte* name);

//	// extern void glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttribIPointer (uint index, int size, uint type, int stride, void* pointer);

//	// extern void glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribIiv (uint index, uint pname, int* @params);

//	// extern void glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetVertexAttribIuiv (uint index, uint pname, uint* @params);

//	// extern void glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttribI4i (uint index, int x, int y, int z, int w);

//	// extern void glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttribI4ui (uint index, uint x, uint y, uint z, uint w);

//	// extern void glVertexAttribI4iv (GLuint index, const GLint *v) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttribI4iv (uint index, int* v);

//	// extern void glVertexAttribI4uiv (GLuint index, const GLuint *v) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glVertexAttribI4uiv (uint index, uint* v);

//	// extern void glGetUniformuiv (GLuint program, GLint location, GLuint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetUniformuiv (uint program, int location, uint* @params);

//	// extern GLint glGetFragDataLocation (GLuint program, const GLchar *name) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int glGetFragDataLocation (uint program, sbyte* name);

//	// extern void glUniform1ui (GLint location, GLuint v0) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform1ui (int location, uint v0);

//	// extern void glUniform2ui (GLint location, GLuint v0, GLuint v1) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform2ui (int location, uint v0, uint v1);

//	// extern void glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform3ui (int location, uint v0, uint v1, uint v2);

//	// extern void glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniform4ui (int location, uint v0, uint v1, uint v2, uint v3);

//	// extern void glUniform1uiv (GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform1uiv (int location, int count, uint* value);

//	// extern void glUniform2uiv (GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform2uiv (int location, int count, uint* value);

//	// extern void glUniform3uiv (GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform3uiv (int location, int count, uint* value);

//	// extern void glUniform4uiv (GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glUniform4uiv (int location, int count, uint* value);

//	// extern void glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glClearBufferiv (uint buffer, int drawbuffer, int* value);

//	// extern void glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glClearBufferuiv (uint buffer, int drawbuffer, uint* value);

//	// extern void glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glClearBufferfv (uint buffer, int drawbuffer, float* value);

//	// extern void glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glClearBufferfi (uint buffer, int drawbuffer, float depth, int stencil);

//	// extern const GLubyte * glGetStringi (GLenum name, GLuint index) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte* glGetStringi (uint name, uint index);

//	// extern void glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyBufferSubData (uint readTarget, uint writeTarget, IntPtr readOffset, IntPtr writeOffset, IntPtr size);

//	// extern void glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *const *uniformNames, GLuint *uniformIndices) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetUniformIndices (uint program, int uniformCount, sbyte** uniformNames, uint* uniformIndices);

//	// extern void glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetActiveUniformsiv (uint program, int uniformCount, uint* uniformIndices, uint pname, int* @params);

//	// extern GLuint glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint glGetUniformBlockIndex (uint program, sbyte* uniformBlockName);

//	// extern void glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetActiveUniformBlockiv (uint program, uint uniformBlockIndex, uint pname, int* @params);

//	// extern void glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetActiveUniformBlockName (uint program, uint uniformBlockIndex, int bufSize, int* length, sbyte* uniformBlockName);

//	// extern void glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUniformBlockBinding (uint program, uint uniformBlockIndex, uint uniformBlockBinding);

//	// extern void glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glDrawArraysInstanced (uint mode, int first, int count, int instancecount);

//	// extern void glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDrawElementsInstanced (uint mode, int count, uint type, void* indices, int instancecount);

//	// extern GLsync glFenceSync (GLenum condition, GLbitfield flags) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe GLsync* glFenceSync (uint condition, uint flags);

//	// extern GLboolean glIsSync (GLsync sync) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool glIsSync (GLsync* sync);

//	// extern void glDeleteSync (GLsync sync) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteSync (GLsync* sync);

//	// extern GLenum glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint glClientWaitSync (GLsync* sync, uint flags, ulong timeout);

//	// extern void glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glWaitSync (GLsync* sync, uint flags, ulong timeout);

//	// extern void glGetInteger64v (GLenum pname, GLint64 *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetInteger64v (uint pname, long* @params);

//	// extern void glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetSynciv (GLsync* sync, uint pname, int bufSize, int* length, int* values);

//	// extern void glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetInteger64i_v (uint target, uint index, long* data);

//	// extern void glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetBufferParameteri64v (uint target, uint pname, long* @params);

//	// extern void glGenSamplers (GLsizei count, GLuint *samplers) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenSamplers (int count, uint* samplers);

//	// extern void glDeleteSamplers (GLsizei count, const GLuint *samplers) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteSamplers (int count, uint* samplers);

//	// extern GLboolean glIsSampler (GLuint sampler) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsSampler (uint sampler);

//	// extern void glBindSampler (GLuint unit, GLuint sampler) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindSampler (uint unit, uint sampler);

//	// extern void glSamplerParameteri (GLuint sampler, GLenum pname, GLint param) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glSamplerParameteri (uint sampler, uint pname, int param);

//	// extern void glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glSamplerParameteriv (uint sampler, uint pname, int* param);

//	// extern void glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glSamplerParameterf (uint sampler, uint pname, float param);

//	// extern void glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glSamplerParameterfv (uint sampler, uint pname, float* param);

//	// extern void glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetSamplerParameteriv (uint sampler, uint pname, int* @params);

//	// extern void glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetSamplerParameterfv (uint sampler, uint pname, float* @params);

//	// extern void glVertexAttribDivisor (GLuint index, GLuint divisor) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glVertexAttribDivisor (uint index, uint divisor);

//	// extern void glBindTransformFeedback (GLenum target, GLuint id) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindTransformFeedback (uint target, uint id);

//	// extern void glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteTransformFeedbacks (int n, uint* ids);

//	// extern void glGenTransformFeedbacks (GLsizei n, GLuint *ids) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenTransformFeedbacks (int n, uint* ids);

//	// extern GLboolean glIsTransformFeedback (GLuint id) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsTransformFeedback (uint id);

//	// extern void glPauseTransformFeedback () __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPauseTransformFeedback ();

//	// extern void glResumeTransformFeedback () __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glResumeTransformFeedback ();

//	// extern void glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramBinary (uint program, int bufSize, int* length, uint* binaryFormat, void* binary);

//	// extern void glProgramBinary (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramBinary (uint program, uint binaryFormat, void* binary, int length);

//	// extern void glProgramParameteri (GLuint program, GLenum pname, GLint value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramParameteri (uint program, uint pname, int value);

//	// extern void glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glInvalidateFramebuffer (uint target, int numAttachments, uint* attachments);

//	// extern void glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glInvalidateSubFramebuffer (uint target, int numAttachments, uint* attachments, int x, int y, int width, int height);

//	// extern void glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexStorage2D (uint target, int levels, uint internalformat, int width, int height);

//	// extern void glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glTexStorage3D (uint target, int levels, uint internalformat, int width, int height, int depth);

//	// extern void glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetInternalformativ (uint target, uint internalformat, uint pname, int bufSize, int* @params);

//	// extern GLvoid glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glCopyTextureLevelsAPPLE (uint destinationTexture, uint sourceTexture, int sourceBaseLevel, int sourceLevelCount);

//	// extern GLvoid glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar *label) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glLabelObjectEXT (uint type, uint @object, int length, sbyte* label);

//	// extern GLvoid glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetObjectLabelEXT (uint type, uint @object, int bufSize, int* length, sbyte* label);

//	// extern GLvoid glInsertEventMarkerEXT (GLsizei length, const GLchar *marker) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glInsertEventMarkerEXT (int length, sbyte* marker);

//	// extern GLvoid glPushGroupMarkerEXT (GLsizei length, const GLchar *marker) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glPushGroupMarkerEXT (int length, sbyte* marker);

//	// extern GLvoid glPopGroupMarkerEXT () __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glPopGroupMarkerEXT ();

//	// extern GLvoid glUseProgramStagesEXT (GLuint pipeline, GLbitfield stages, GLuint program) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glUseProgramStagesEXT (uint pipeline, uint stages, uint program);

//	// extern GLvoid glActiveShaderProgramEXT (GLuint pipeline, GLuint program) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glActiveShaderProgramEXT (uint pipeline, uint program);

//	// extern GLuint glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLchar *const *strings) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint glCreateShaderProgramvEXT (uint type, int count, sbyte** strings);

//	// extern GLvoid glBindProgramPipelineEXT (GLuint pipeline) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glBindProgramPipelineEXT (uint pipeline);

//	// extern GLvoid glDeleteProgramPipelinesEXT (GLsizei n, const GLuint *pipelines) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glDeleteProgramPipelinesEXT (int n, uint* pipelines);

//	// extern GLvoid glGenProgramPipelinesEXT (GLsizei n, GLuint *pipelines) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGenProgramPipelinesEXT (int n, uint* pipelines);

//	// extern GLboolean glIsProgramPipelineEXT (GLuint pipeline) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool glIsProgramPipelineEXT (uint pipeline);

//	// extern GLvoid glProgramParameteriEXT (GLuint program, GLenum pname, GLint value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramParameteriEXT (uint program, uint pname, int value);

//	// extern GLvoid glGetProgramPipelineivEXT (GLuint pipeline, GLenum pname, GLint *params) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramPipelineivEXT (uint pipeline, uint pname, int* @params);

//	// extern GLvoid glValidateProgramPipelineEXT (GLuint pipeline) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glValidateProgramPipelineEXT (uint pipeline);

//	// extern GLvoid glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glGetProgramPipelineInfoLogEXT (uint pipeline, int bufSize, int* length, sbyte* infoLog);

//	// extern GLvoid glProgramUniform1iEXT (GLuint program, GLint location, GLint x) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform1iEXT (uint program, int location, int x);

//	// extern GLvoid glProgramUniform2iEXT (GLuint program, GLint location, GLint x, GLint y) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform2iEXT (uint program, int location, int x, int y);

//	// extern GLvoid glProgramUniform3iEXT (GLuint program, GLint location, GLint x, GLint y, GLint z) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform3iEXT (uint program, int location, int x, int y, int z);

//	// extern GLvoid glProgramUniform4iEXT (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform4iEXT (uint program, int location, int x, int y, int z, int w);

//	// extern GLvoid glProgramUniform1fEXT (GLuint program, GLint location, GLfloat x) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform1fEXT (uint program, int location, float x);

//	// extern GLvoid glProgramUniform2fEXT (GLuint program, GLint location, GLfloat x, GLfloat y) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform2fEXT (uint program, int location, float x, float y);

//	// extern GLvoid glProgramUniform3fEXT (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform3fEXT (uint program, int location, float x, float y, float z);

//	// extern GLvoid glProgramUniform4fEXT (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform4fEXT (uint program, int location, float x, float y, float z, float w);

//	// extern GLvoid glProgramUniform1uiEXT (GLuint program, GLint location, GLuint x) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform1uiEXT (uint program, int location, uint x);

//	// extern GLvoid glProgramUniform2uiEXT (GLuint program, GLint location, GLuint x, GLuint y) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform2uiEXT (uint program, int location, uint x, uint y);

//	// extern GLvoid glProgramUniform3uiEXT (GLuint program, GLint location, GLuint x, GLuint y, GLuint z) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform3uiEXT (uint program, int location, uint x, uint y, uint z);

//	// extern GLvoid glProgramUniform4uiEXT (GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void glProgramUniform4uiEXT (uint program, int location, uint x, uint y, uint z, uint w);

//	// extern GLvoid glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform1ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform2ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform3ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform4ivEXT (uint program, int location, int count, int* value);

//	// extern GLvoid glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform1fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform2fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform3fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform4fvEXT (uint program, int location, int count, float* value);

//	// extern GLvoid glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform1uivEXT (uint program, int location, int count, uint* value);

//	// extern GLvoid glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform2uivEXT (uint program, int location, int count, uint* value);

//	// extern GLvoid glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform3uivEXT (uint program, int location, int count, uint* value);

//	// extern GLvoid glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniform4uivEXT (uint program, int location, int count, uint* value);

//	// extern GLvoid glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix2fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix3fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix4fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix2x3fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix3x2fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix2x4fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix4x2fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix3x4fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// extern GLvoid glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void glProgramUniformMatrix4x3fvEXT (uint program, int location, int count, bool transpose, float* value);

//	// MTLOrigin MTLOriginMake (NSUInteger x, NSUInteger y, NSUInteger z);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLOrigin MTLOriginMake (nuint x, nuint y, nuint z);

//	// MTLSize MTLSizeMake (NSUInteger width, NSUInteger height, NSUInteger depth);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLSize MTLSizeMake (nuint width, nuint height, nuint depth);

//	// MTLRegion MTLRegionMake1D (NSUInteger x, NSUInteger width);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLRegion MTLRegionMake1D (nuint x, nuint width);

//	// MTLRegion MTLRegionMake2D (NSUInteger x, NSUInteger y, NSUInteger width, NSUInteger height);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLRegion MTLRegionMake2D (nuint x, nuint y, nuint width, nuint height);

//	// MTLRegion MTLRegionMake3D (NSUInteger x, NSUInteger y, NSUInteger z, NSUInteger width, NSUInteger height, NSUInteger depth);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLRegion MTLRegionMake3D (nuint x, nuint y, nuint z, nuint width, nuint height, nuint depth);

//	// MTLSamplePosition MTLSamplePositionMake (float x, float y) __attribute__((availability(ios, introduced=11.0)));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLSamplePosition MTLSamplePositionMake (float x, float y);

//	// extern id<MTLDevice> _Nullable MTLCreateSystemDefaultDevice () __attribute__((visibility("default"))) __attribute__((ns_returns_retained)) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern MTLDevice MTLCreateSystemDefaultDevice ();

//	// extern NSArray<id<MTLDevice>> * _Nonnull MTLCopyAllDevices () __attribute__((visibility("default"))) __attribute__((ns_returns_retained)) __attribute__((availability(ios, unavailable)));
//	[NoiOS]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLDevice[] MTLCopyAllDevices ();

//	// MTLClearColor MTLClearColorMake (double red, double green, double blue, double alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLClearColor MTLClearColorMake (double red, double green, double blue, double alpha);

//	// MTLClearColor MTLClearColorMake (double red, double green, double blue, double alpha);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern MTLClearColor MTLClearColorMake (double red, double green, double blue, double alpha);

//	// extern CFTimeInterval CACurrentMediaTime () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=2.0)));
//	[iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double CACurrentMediaTime ();

//	// extern _Bool CATransform3DIsIdentity (CATransform3D t) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CATransform3DIsIdentity (CATransform3D t);

//	// extern _Bool CATransform3DEqualToTransform (CATransform3D a, CATransform3D b) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CATransform3DEqualToTransform (CATransform3D a, CATransform3D b);

//	// extern CATransform3D CATransform3DMakeTranslation (CGFloat tx, CGFloat ty, CGFloat tz) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DMakeTranslation (nfloat tx, nfloat ty, nfloat tz);

//	// extern CATransform3D CATransform3DMakeScale (CGFloat sx, CGFloat sy, CGFloat sz) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DMakeScale (nfloat sx, nfloat sy, nfloat sz);

//	// extern CATransform3D CATransform3DMakeRotation (CGFloat angle, CGFloat x, CGFloat y, CGFloat z) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DMakeRotation (nfloat angle, nfloat x, nfloat y, nfloat z);

//	// extern CATransform3D CATransform3DTranslate (CATransform3D t, CGFloat tx, CGFloat ty, CGFloat tz) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DTranslate (CATransform3D t, nfloat tx, nfloat ty, nfloat tz);

//	// extern CATransform3D CATransform3DScale (CATransform3D t, CGFloat sx, CGFloat sy, CGFloat sz) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DScale (CATransform3D t, nfloat sx, nfloat sy, nfloat sz);

//	// extern CATransform3D CATransform3DRotate (CATransform3D t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DRotate (CATransform3D t, nfloat angle, nfloat x, nfloat y, nfloat z);

//	// extern CATransform3D CATransform3DConcat (CATransform3D a, CATransform3D b) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DConcat (CATransform3D a, CATransform3D b);

//	// extern CATransform3D CATransform3DInvert (CATransform3D t) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DInvert (CATransform3D t);

//	// extern CATransform3D CATransform3DMakeAffineTransform (CGAffineTransform m) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CATransform3D CATransform3DMakeAffineTransform (CGAffineTransform m);

//	// extern _Bool CATransform3DIsAffine (CATransform3D t) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool CATransform3DIsAffine (CATransform3D t);

//	// extern CGAffineTransform CATransform3DGetAffineTransform (CATransform3D t) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CATransform3DGetAffineTransform (CATransform3D t);

//	// extern CVBufferRef _Nullable CVBufferRetain (CVBufferRef _Nullable buffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CVBufferRef* CVBufferRetain ([NullAllowed] CVBufferRef* buffer);

//	// extern void CVBufferRelease (CVBufferRef _Nullable buffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVBufferRelease ([NullAllowed] CVBufferRef* buffer);

//	// extern void CVBufferSetAttachment (CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CFTypeRef _Nonnull value, CVAttachmentMode attachmentMode) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVBufferSetAttachment (CVBufferRef* buffer, CFStringRef* key, void* value, CVAttachmentMode attachmentMode);

//	// extern CFTypeRef _Nullable CVBufferGetAttachment (CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CVAttachmentMode * _Nullable attachmentMode) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CVBufferGetAttachment (CVBufferRef* buffer, CFStringRef* key, [NullAllowed] CVAttachmentMode* attachmentMode);

//	// extern void CVBufferRemoveAttachment (CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVBufferRemoveAttachment (CVBufferRef* buffer, CFStringRef* key);

//	// extern void CVBufferRemoveAllAttachments (CVBufferRef _Nonnull buffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVBufferRemoveAllAttachments (CVBufferRef* buffer);

//	// extern CFDictionaryRef _Nullable CVBufferGetAttachments (CVBufferRef _Nonnull buffer, CVAttachmentMode attachmentMode) __attribute__((cf_returns_not_retained)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CVBufferGetAttachments (CVBufferRef* buffer, CVAttachmentMode attachmentMode);

//	// extern void CVBufferSetAttachments (CVBufferRef _Nonnull buffer, CFDictionaryRef _Nonnull theAttachments, CVAttachmentMode attachmentMode) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVBufferSetAttachments (CVBufferRef* buffer, CFDictionaryRef* theAttachments, CVAttachmentMode attachmentMode);

//	// extern void CVBufferPropagateAttachments (CVBufferRef _Nonnull sourceBuffer, CVBufferRef _Nonnull destinationBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVBufferPropagateAttachments (CVBufferRef* sourceBuffer, CVBufferRef* destinationBuffer);

//	// extern int CVYCbCrMatrixGetIntegerCodePointForString (CFStringRef _Nullable yCbCrMatrixString) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVYCbCrMatrixGetIntegerCodePointForString ([NullAllowed] CFStringRef* yCbCrMatrixString);

//	// extern int CVColorPrimariesGetIntegerCodePointForString (CFStringRef _Nullable colorPrimariesString) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVColorPrimariesGetIntegerCodePointForString ([NullAllowed] CFStringRef* colorPrimariesString);

//	// extern int CVTransferFunctionGetIntegerCodePointForString (CFStringRef _Nullable transferFunctionString) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVTransferFunctionGetIntegerCodePointForString ([NullAllowed] CFStringRef* transferFunctionString);

//	// extern CFStringRef _Nullable CVYCbCrMatrixGetStringForIntegerCodePoint (int yCbCrMatrixCodePoint) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CVYCbCrMatrixGetStringForIntegerCodePoint (int yCbCrMatrixCodePoint);

//	// extern CFStringRef _Nullable CVColorPrimariesGetStringForIntegerCodePoint (int colorPrimariesCodePoint) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CVColorPrimariesGetStringForIntegerCodePoint (int colorPrimariesCodePoint);

//	// extern CFStringRef _Nullable CVTransferFunctionGetStringForIntegerCodePoint (int transferFunctionCodePoint) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.13)));
//	[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CVTransferFunctionGetStringForIntegerCodePoint (int transferFunctionCodePoint);

//	// extern CGSize CVImageBufferGetEncodedSize (CVImageBufferRef _Nonnull imageBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGSize CVImageBufferGetEncodedSize (CVImageBufferRef* imageBuffer);

//	// extern CGSize CVImageBufferGetDisplaySize (CVImageBufferRef _Nonnull imageBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGSize CVImageBufferGetDisplaySize (CVImageBufferRef* imageBuffer);

//	// extern CGRect CVImageBufferGetCleanRect (CVImageBufferRef _Nonnull imageBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CVImageBufferGetCleanRect (CVImageBufferRef* imageBuffer);

//	// extern Boolean CVImageBufferIsFlipped (CVImageBufferRef _Nonnull imageBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CVImageBufferIsFlipped (CVImageBufferRef* imageBuffer);

//	// extern CGColorSpaceRef _Nullable CVImageBufferCreateColorSpaceFromAttachments (CFDictionaryRef _Nonnull attachments) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGColorSpaceRef* CVImageBufferCreateColorSpaceFromAttachments (CFDictionaryRef* attachments);

//	// extern CFTypeID CVPixelBufferGetTypeID () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CVPixelBufferGetTypeID ();

//	// extern CVPixelBufferRef _Nullable CVPixelBufferRetain (CVPixelBufferRef _Nullable texture) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CVPixelBufferRef* CVPixelBufferRetain ([NullAllowed] CVPixelBufferRef* texture);

//	// extern void CVPixelBufferRelease (CVPixelBufferRef _Nullable texture) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVPixelBufferRelease ([NullAllowed] CVPixelBufferRef* texture);

//	// extern CVReturn CVPixelBufferCreateResolvedAttributesDictionary (CFAllocatorRef _Nullable allocator, CFArrayRef _Nullable attributes, CFDictionaryRef  _Nullable * _Nonnull resolvedDictionaryOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferCreateResolvedAttributesDictionary ([NullAllowed] CFAllocatorRef* allocator, [NullAllowed] CFArrayRef* attributes, [NullAllowed] CFDictionaryRef** resolvedDictionaryOut);

//	// extern CVReturn CVPixelBufferCreate (CFAllocatorRef _Nullable allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef _Nullable pixelBufferAttributes, CVPixelBufferRef  _Nullable * _Nonnull pixelBufferOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferCreate ([NullAllowed] CFAllocatorRef* allocator, nuint width, nuint height, uint pixelFormatType, [NullAllowed] CFDictionaryRef* pixelBufferAttributes, [NullAllowed] CVPixelBufferRef** pixelBufferOut);

//	// extern CVReturn CVPixelBufferCreateWithBytes (CFAllocatorRef _Nullable allocator, size_t width, size_t height, OSType pixelFormatType, void * _Nonnull baseAddress, size_t bytesPerRow, CVPixelBufferReleaseBytesCallback _Nullable releaseCallback, void * _Nullable releaseRefCon, CFDictionaryRef _Nullable pixelBufferAttributes, CVPixelBufferRef  _Nullable * _Nonnull pixelBufferOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferCreateWithBytes ([NullAllowed] CFAllocatorRef* allocator, nuint width, nuint height, uint pixelFormatType, void* baseAddress, nuint bytesPerRow, [NullAllowed] CVPixelBufferReleaseBytesCallback* releaseCallback, [NullAllowed] void* releaseRefCon, [NullAllowed] CFDictionaryRef* pixelBufferAttributes, [NullAllowed] CVPixelBufferRef** pixelBufferOut);

//	// extern CVReturn CVPixelBufferCreateWithPlanarBytes (CFAllocatorRef _Nullable allocator, size_t width, size_t height, OSType pixelFormatType, void * _Nullable dataPtr, size_t dataSize, size_t numberOfPlanes, void * _Nullable *planeBaseAddress, size_t *planeWidth, size_t *planeHeight, size_t *planeBytesPerRow, CVPixelBufferReleasePlanarBytesCallback _Nullable releaseCallback, void * _Nullable releaseRefCon, CFDictionaryRef _Nullable pixelBufferAttributes, CVPixelBufferRef  _Nullable * _Nonnull pixelBufferOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferCreateWithPlanarBytes ([NullAllowed] CFAllocatorRef* allocator, nuint width, nuint height, uint pixelFormatType, [NullAllowed] void* dataPtr, nuint dataSize, nuint numberOfPlanes, [NullAllowed] void*[] planeBaseAddress, nuint[] planeWidth, nuint[] planeHeight, nuint[] planeBytesPerRow, [NullAllowed] CVPixelBufferReleasePlanarBytesCallback* releaseCallback, [NullAllowed] void* releaseRefCon, [NullAllowed] CFDictionaryRef* pixelBufferAttributes, [NullAllowed] CVPixelBufferRef** pixelBufferOut);

//	// extern CVReturn CVPixelBufferLockBaseAddress (CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags lockFlags) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferLockBaseAddress (CVPixelBufferRef* pixelBuffer, CVPixelBufferLockFlags lockFlags);

//	// extern CVReturn CVPixelBufferUnlockBaseAddress (CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags unlockFlags) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferUnlockBaseAddress (CVPixelBufferRef* pixelBuffer, CVPixelBufferLockFlags unlockFlags);

//	// extern size_t CVPixelBufferGetWidth (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetWidth (CVPixelBufferRef* pixelBuffer);

//	// extern size_t CVPixelBufferGetHeight (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetHeight (CVPixelBufferRef* pixelBuffer);

//	// extern OSType CVPixelBufferGetPixelFormatType (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CVPixelBufferGetPixelFormatType (CVPixelBufferRef* pixelBuffer);

//	// extern void * _Nullable CVPixelBufferGetBaseAddress (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CVPixelBufferGetBaseAddress (CVPixelBufferRef* pixelBuffer);

//	// extern size_t CVPixelBufferGetBytesPerRow (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetBytesPerRow (CVPixelBufferRef* pixelBuffer);

//	// extern size_t CVPixelBufferGetDataSize (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetDataSize (CVPixelBufferRef* pixelBuffer);

//	// extern Boolean CVPixelBufferIsPlanar (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CVPixelBufferIsPlanar (CVPixelBufferRef* pixelBuffer);

//	// extern size_t CVPixelBufferGetPlaneCount (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetPlaneCount (CVPixelBufferRef* pixelBuffer);

//	// extern size_t CVPixelBufferGetWidthOfPlane (CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetWidthOfPlane (CVPixelBufferRef* pixelBuffer, nuint planeIndex);

//	// extern size_t CVPixelBufferGetHeightOfPlane (CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetHeightOfPlane (CVPixelBufferRef* pixelBuffer, nuint planeIndex);

//	// extern void * _Nullable CVPixelBufferGetBaseAddressOfPlane (CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CVPixelBufferGetBaseAddressOfPlane (CVPixelBufferRef* pixelBuffer, nuint planeIndex);

//	// extern size_t CVPixelBufferGetBytesPerRowOfPlane (CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CVPixelBufferGetBytesPerRowOfPlane (CVPixelBufferRef* pixelBuffer, nuint planeIndex);

//	// extern void CVPixelBufferGetExtendedPixels (CVPixelBufferRef _Nonnull pixelBuffer, size_t * _Nullable extraColumnsOnLeft, size_t * _Nullable extraColumnsOnRight, size_t * _Nullable extraRowsOnTop, size_t * _Nullable extraRowsOnBottom) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVPixelBufferGetExtendedPixels (CVPixelBufferRef* pixelBuffer, [NullAllowed] nuint* extraColumnsOnLeft, [NullAllowed] nuint* extraColumnsOnRight, [NullAllowed] nuint* extraRowsOnTop, [NullAllowed] nuint* extraRowsOnBottom);

//	// extern CVReturn CVPixelBufferFillExtendedPixels (CVPixelBufferRef _Nonnull pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferFillExtendedPixels (CVPixelBufferRef* pixelBuffer);

//	// extern IOSurfaceRef _Nullable CVPixelBufferGetIOSurface (CVPixelBufferRef _Nullable pixelBuffer) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(macos, introduced=10.6)));
//	[Watch (4,0), TV (9,0), Mac (10,6), iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe IOSurfaceRef* CVPixelBufferGetIOSurface ([NullAllowed] CVPixelBufferRef* pixelBuffer);

//	// extern CVReturn CVPixelBufferCreateWithIOSurface (CFAllocatorRef _Nullable allocator, IOSurfaceRef _Nonnull surface, CFDictionaryRef _Nullable pixelBufferAttributes, CVPixelBufferRef  _Nullable * _Nonnull pixelBufferOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferCreateWithIOSurface ([NullAllowed] CFAllocatorRef* allocator, IOSurfaceRef* surface, [NullAllowed] CFDictionaryRef* pixelBufferAttributes, [NullAllowed] CVPixelBufferRef** pixelBufferOut);

//	// extern CFTypeID CVPixelBufferPoolGetTypeID () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CVPixelBufferPoolGetTypeID ();

//	// extern CVPixelBufferPoolRef _Nullable CVPixelBufferPoolRetain (CVPixelBufferPoolRef _Nullable pixelBufferPool) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CVPixelBufferPoolRef* CVPixelBufferPoolRetain ([NullAllowed] CVPixelBufferPoolRef* pixelBufferPool);

//	// extern void CVPixelBufferPoolRelease (CVPixelBufferPoolRef _Nullable pixelBufferPool) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVPixelBufferPoolRelease ([NullAllowed] CVPixelBufferPoolRef* pixelBufferPool);

//	// extern CVReturn CVPixelBufferPoolCreate (CFAllocatorRef _Nullable allocator, CFDictionaryRef _Nullable poolAttributes, CFDictionaryRef _Nullable pixelBufferAttributes, CVPixelBufferPoolRef  _Nullable * _Nonnull poolOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferPoolCreate ([NullAllowed] CFAllocatorRef* allocator, [NullAllowed] CFDictionaryRef* poolAttributes, [NullAllowed] CFDictionaryRef* pixelBufferAttributes, [NullAllowed] CVPixelBufferPoolRef** poolOut);

//	// extern CFDictionaryRef _Nullable CVPixelBufferPoolGetAttributes (CVPixelBufferPoolRef _Nonnull pool) __attribute__((cf_returns_not_retained)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CVPixelBufferPoolGetAttributes (CVPixelBufferPoolRef* pool);

//	// extern CFDictionaryRef _Nullable CVPixelBufferPoolGetPixelBufferAttributes (CVPixelBufferPoolRef _Nonnull pool) __attribute__((cf_returns_not_retained)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CVPixelBufferPoolGetPixelBufferAttributes (CVPixelBufferPoolRef* pool);

//	// extern CVReturn CVPixelBufferPoolCreatePixelBuffer (CFAllocatorRef _Nullable allocator, CVPixelBufferPoolRef _Nonnull pixelBufferPool, CVPixelBufferRef  _Nullable * _Nonnull pixelBufferOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferPoolCreatePixelBuffer ([NullAllowed] CFAllocatorRef* allocator, CVPixelBufferPoolRef* pixelBufferPool, [NullAllowed] CVPixelBufferRef** pixelBufferOut);

//	// extern CVReturn CVPixelBufferPoolCreatePixelBufferWithAuxAttributes (CFAllocatorRef _Nullable allocator, CVPixelBufferPoolRef _Nonnull pixelBufferPool, CFDictionaryRef _Nullable auxAttributes, CVPixelBufferRef  _Nullable * _Nonnull pixelBufferOut) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVPixelBufferPoolCreatePixelBufferWithAuxAttributes ([NullAllowed] CFAllocatorRef* allocator, CVPixelBufferPoolRef* pixelBufferPool, [NullAllowed] CFDictionaryRef* auxAttributes, [NullAllowed] CVPixelBufferRef** pixelBufferOut);

//	// extern void CVPixelBufferPoolFlush (CVPixelBufferPoolRef _Nonnull pool, CVPixelBufferPoolFlushFlags options) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVPixelBufferPoolFlush (CVPixelBufferPoolRef* pool, CVPixelBufferPoolFlushFlags options);

//	// extern CFTypeID CVOpenGLESTextureGetTypeID () __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CVOpenGLESTextureGetTypeID ();

//	// extern GLenum CVOpenGLESTextureGetTarget (CVOpenGLESTextureRef _Nonnull image) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CVOpenGLESTextureGetTarget (CVOpenGLESTextureRef* image);

//	// extern GLuint CVOpenGLESTextureGetName (CVOpenGLESTextureRef _Nonnull image) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CVOpenGLESTextureGetName (CVOpenGLESTextureRef* image);

//	// extern Boolean CVOpenGLESTextureIsFlipped (CVOpenGLESTextureRef _Nonnull image) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CVOpenGLESTextureIsFlipped (CVOpenGLESTextureRef* image);

//	// extern void CVOpenGLESTextureGetCleanTexCoords (CVOpenGLESTextureRef _Nonnull image, GLfloat * _Nonnull lowerLeft, GLfloat * _Nonnull lowerRight, GLfloat * _Nonnull upperRight, GLfloat * _Nonnull upperLeft) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVOpenGLESTextureGetCleanTexCoords (CVOpenGLESTextureRef* image, float[] lowerLeft, float[] lowerRight, float[] upperRight, float[] upperLeft);

//	// extern CFTypeID CVOpenGLESTextureCacheGetTypeID () __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CVOpenGLESTextureCacheGetTypeID ();

//	// extern CVReturn CVOpenGLESTextureCacheCreate (CFAllocatorRef _Nullable allocator, CFDictionaryRef _Nullable cacheAttributes, CVEAGLContext _Nonnull eaglContext, CFDictionaryRef _Nullable textureAttributes, CVOpenGLESTextureCacheRef  _Nullable * _Nonnull cacheOut) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVOpenGLESTextureCacheCreate ([NullAllowed] CFAllocatorRef* allocator, [NullAllowed] CFDictionaryRef* cacheAttributes, EAGLContext eaglContext, [NullAllowed] CFDictionaryRef* textureAttributes, [NullAllowed] CVOpenGLESTextureCacheRef** cacheOut);

//	// extern CVReturn CVOpenGLESTextureCacheCreateTextureFromImage (CFAllocatorRef _Nullable allocator, CVOpenGLESTextureCacheRef _Nonnull textureCache, CVImageBufferRef _Nonnull sourceImage, CFDictionaryRef _Nullable textureAttributes, GLenum target, GLint internalFormat, GLsizei width, GLsizei height, GLenum format, GLenum type, size_t planeIndex, CVOpenGLESTextureRef  _Nullable * _Nonnull textureOut) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVOpenGLESTextureCacheCreateTextureFromImage ([NullAllowed] CFAllocatorRef* allocator, CVOpenGLESTextureCacheRef* textureCache, CVImageBufferRef* sourceImage, [NullAllowed] CFDictionaryRef* textureAttributes, uint target, int internalFormat, int width, int height, uint format, uint type, nuint planeIndex, [NullAllowed] CVOpenGLESTextureRef** textureOut);

//	// extern void CVOpenGLESTextureCacheFlush (CVOpenGLESTextureCacheRef _Nonnull textureCache, CVOptionFlags options) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=5.0)));
//	[TV (9,0), NoWatch, NoMac, iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVOpenGLESTextureCacheFlush (CVOpenGLESTextureCacheRef* textureCache, ulong options);

//	// extern CFDictionaryRef _Nullable CVPixelFormatDescriptionCreateWithPixelFormatType (CFAllocatorRef _Nullable allocator, OSType pixelFormat) __attribute__((cf_returns_retained)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CVPixelFormatDescriptionCreateWithPixelFormatType ([NullAllowed] CFAllocatorRef* allocator, uint pixelFormat);

//	// extern CFArrayRef _Nullable CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes (CFAllocatorRef _Nullable allocator) __attribute__((cf_returns_retained)) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes ([NullAllowed] CFAllocatorRef* allocator);

//	// extern void CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType (CFDictionaryRef _Nonnull description, OSType pixelFormat) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType (CFDictionaryRef* description, uint pixelFormat);

//	// extern CFTypeID CVMetalTextureGetTypeID () __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CVMetalTextureGetTypeID ();

//	// extern id<MTLTexture> _Nullable CVMetalTextureGetTexture (CVMetalTextureRef _Nonnull image) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe MTLTexture CVMetalTextureGetTexture (CVMetalTextureRef* image);

//	// extern Boolean CVMetalTextureIsFlipped (CVMetalTextureRef _Nonnull image) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe byte CVMetalTextureIsFlipped (CVMetalTextureRef* image);

//	// extern void CVMetalTextureGetCleanTexCoords (CVMetalTextureRef _Nonnull image, float *lowerLeft, float *lowerRight, float *upperRight, float *upperLeft) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVMetalTextureGetCleanTexCoords (CVMetalTextureRef* image, float[] lowerLeft, float[] lowerRight, float[] upperRight, float[] upperLeft);

//	// extern CFTypeID CVMetalTextureCacheGetTypeID () __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CVMetalTextureCacheGetTypeID ();

//	// extern CVReturn CVMetalTextureCacheCreate (CFAllocatorRef _Nullable allocator, CFDictionaryRef _Nullable cacheAttributes, id<MTLDevice> _Nonnull metalDevice, CFDictionaryRef _Nullable textureAttributes, CVMetalTextureCacheRef  _Nullable * _Nonnull cacheOut) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVMetalTextureCacheCreate ([NullAllowed] CFAllocatorRef* allocator, [NullAllowed] CFDictionaryRef* cacheAttributes, MTLDevice metalDevice, [NullAllowed] CFDictionaryRef* textureAttributes, [NullAllowed] CVMetalTextureCacheRef** cacheOut);

//	// extern CVReturn CVMetalTextureCacheCreateTextureFromImage (CFAllocatorRef _Nullable allocator, CVMetalTextureCacheRef _Nonnull textureCache, CVImageBufferRef _Nonnull sourceImage, CFDictionaryRef _Nullable textureAttributes, MTLPixelFormat pixelFormat, size_t width, size_t height, size_t planeIndex, CVMetalTextureRef  _Nullable * _Nonnull textureOut) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int CVMetalTextureCacheCreateTextureFromImage ([NullAllowed] CFAllocatorRef* allocator, CVMetalTextureCacheRef* textureCache, CVImageBufferRef* sourceImage, [NullAllowed] CFDictionaryRef* textureAttributes, MTLPixelFormat pixelFormat, nuint width, nuint height, nuint planeIndex, [NullAllowed] CVMetalTextureRef** textureOut);

//	// extern void CVMetalTextureCacheFlush (CVMetalTextureCacheRef _Nonnull textureCache, CVOptionFlags options) __attribute__((visibility("default"))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.11)));
//	[TV (9,0), NoWatch, Mac (10,11), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CVMetalTextureCacheFlush (CVMetalTextureCacheRef* textureCache, ulong options);

//	// extern uint64_t CVGetCurrentHostTime () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern ulong CVGetCurrentHostTime ();

//	// extern double CVGetHostClockFrequency () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern double CVGetHostClockFrequency ();

//	// extern uint32_t CVGetHostClockMinimumTimeDelta () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CVGetHostClockMinimumTimeDelta ();

//	// extern CFTypeID CGImageMetadataGetTypeID () __attribute__((cf_audited_transfer));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGImageMetadataGetTypeID ();

//	// extern CGMutableImageMetadataRef _Nonnull CGImageMetadataCreateMutable () __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGMutableImageMetadataRef* CGImageMetadataCreateMutable ();

//	// extern CGMutableImageMetadataRef _Nullable CGImageMetadataCreateMutableCopy (CGImageMetadataRef _Nonnull metadata) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGMutableImageMetadataRef* CGImageMetadataCreateMutableCopy (CGImageMetadataRef* metadata);

//	// extern CFTypeID CGImageMetadataTagGetTypeID () __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGImageMetadataTagGetTypeID ();

//	// extern CGImageMetadataTagRef _Nullable CGImageMetadataTagCreate (CFStringRef _Nonnull xmlns, CFStringRef _Nullable prefix, CFStringRef _Nonnull name, CGImageMetadataType type, CFTypeRef _Nonnull value) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageMetadataTagRef* CGImageMetadataTagCreate (CFStringRef* xmlns, [NullAllowed] CFStringRef* prefix, CFStringRef* name, CGImageMetadataType type, void* value);

//	// extern CFStringRef _Nullable CGImageMetadataTagCopyNamespace (CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGImageMetadataTagCopyNamespace (CGImageMetadataTagRef* tag);

//	// extern CFStringRef _Nullable CGImageMetadataTagCopyPrefix (CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGImageMetadataTagCopyPrefix (CGImageMetadataTagRef* tag);

//	// extern CFStringRef _Nullable CGImageMetadataTagCopyName (CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGImageMetadataTagCopyName (CGImageMetadataTagRef* tag);

//	// extern CFTypeRef _Nullable CGImageMetadataTagCopyValue (CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CGImageMetadataTagCopyValue (CGImageMetadataTagRef* tag);

//	// extern CGImageMetadataType CGImageMetadataTagGetType (CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGImageMetadataType CGImageMetadataTagGetType (CGImageMetadataTagRef* tag);

//	// extern CFArrayRef _Nullable CGImageMetadataTagCopyQualifiers (CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CGImageMetadataTagCopyQualifiers (CGImageMetadataTagRef* tag);

//	// extern CFArrayRef _Nullable CGImageMetadataCopyTags (CGImageMetadataRef _Nonnull metadata) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CGImageMetadataCopyTags (CGImageMetadataRef* metadata);

//	// extern CGImageMetadataTagRef _Nullable CGImageMetadataCopyTagWithPath (CGImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageMetadataTagRef* CGImageMetadataCopyTagWithPath (CGImageMetadataRef* metadata, [NullAllowed] CGImageMetadataTagRef* parent, CFStringRef* path);

//	// extern CFStringRef _Nullable CGImageMetadataCopyStringValueWithPath (CGImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGImageMetadataCopyStringValueWithPath (CGImageMetadataRef* metadata, [NullAllowed] CGImageMetadataTagRef* parent, CFStringRef* path);

//	// extern _Bool CGImageMetadataRegisterNamespaceForPrefix (CGMutableImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull xmlns, CFStringRef _Nonnull prefix, CFErrorRef  _Nullable * _Nullable err) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageMetadataRegisterNamespaceForPrefix (CGMutableImageMetadataRef* metadata, CFStringRef* xmlns, CFStringRef* prefix, [NullAllowed] CFErrorRef** err);

//	// extern _Bool CGImageMetadataSetTagWithPath (CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path, CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageMetadataSetTagWithPath (CGMutableImageMetadataRef* metadata, [NullAllowed] CGImageMetadataTagRef* parent, CFStringRef* path, CGImageMetadataTagRef* tag);

//	// extern _Bool CGImageMetadataSetValueWithPath (CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path, CFTypeRef _Nonnull value) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageMetadataSetValueWithPath (CGMutableImageMetadataRef* metadata, [NullAllowed] CGImageMetadataTagRef* parent, CFStringRef* path, void* value);

//	// extern _Bool CGImageMetadataRemoveTagWithPath (CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageMetadataRemoveTagWithPath (CGMutableImageMetadataRef* metadata, [NullAllowed] CGImageMetadataTagRef* parent, CFStringRef* path);

//	// extern void CGImageMetadataEnumerateTagsUsingBlock (CGImageMetadataRef _Nonnull metadata, CFStringRef _Nullable rootPath, CFDictionaryRef _Nullable options, CGImageMetadataTagBlock _Nonnull block) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageMetadataEnumerateTagsUsingBlock (CGImageMetadataRef* metadata, [NullAllowed] CFStringRef* rootPath, [NullAllowed] CFDictionaryRef* options, CGImageMetadataTagBlock block);

//	// extern CGImageMetadataTagRef _Nullable CGImageMetadataCopyTagMatchingImageProperty (CGImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull dictionaryName, CFStringRef _Nonnull propertyName) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageMetadataTagRef* CGImageMetadataCopyTagMatchingImageProperty (CGImageMetadataRef* metadata, CFStringRef* dictionaryName, CFStringRef* propertyName);

//	// extern _Bool CGImageMetadataSetValueMatchingImageProperty (CGMutableImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull dictionaryName, CFStringRef _Nonnull propertyName, CFTypeRef _Nonnull value) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageMetadataSetValueMatchingImageProperty (CGMutableImageMetadataRef* metadata, CFStringRef* dictionaryName, CFStringRef* propertyName, void* value);

//	// extern CFDataRef _Nullable CGImageMetadataCreateXMPData (CGImageMetadataRef _Nonnull metadata, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CGImageMetadataCreateXMPData (CGImageMetadataRef* metadata, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageMetadataRef _Nullable CGImageMetadataCreateFromXMPData (CFDataRef _Nonnull data) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageMetadataRef* CGImageMetadataCreateFromXMPData (CFDataRef* data);

//	// extern CFTypeID CGImageSourceGetTypeID () __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGImageSourceGetTypeID ();

//	// extern CFArrayRef _Nonnull CGImageSourceCopyTypeIdentifiers () __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CGImageSourceCopyTypeIdentifiers ();

//	// extern CGImageSourceRef _Nullable CGImageSourceCreateWithDataProvider (CGDataProviderRef _Nonnull provider, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageSourceRef* CGImageSourceCreateWithDataProvider (CGDataProviderRef* provider, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageSourceRef _Nullable CGImageSourceCreateWithData (CFDataRef _Nonnull data, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageSourceRef* CGImageSourceCreateWithData (CFDataRef* data, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageSourceRef _Nullable CGImageSourceCreateWithURL (CFURLRef _Nonnull url, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageSourceRef* CGImageSourceCreateWithURL (CFURLRef* url, [NullAllowed] CFDictionaryRef* options);

//	// extern CFStringRef _Nullable CGImageSourceGetType (CGImageSourceRef _Nonnull isrc) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CGImageSourceGetType (CGImageSourceRef* isrc);

//	// extern size_t CGImageSourceGetCount (CGImageSourceRef _Nonnull isrc) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nuint CGImageSourceGetCount (CGImageSourceRef* isrc);

//	// extern CFDictionaryRef _Nullable CGImageSourceCopyProperties (CGImageSourceRef _Nonnull isrc, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CGImageSourceCopyProperties (CGImageSourceRef* isrc, [NullAllowed] CFDictionaryRef* options);

//	// extern CFDictionaryRef _Nullable CGImageSourceCopyPropertiesAtIndex (CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CGImageSourceCopyPropertiesAtIndex (CGImageSourceRef* isrc, nuint index, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageMetadataRef _Nullable CGImageSourceCopyMetadataAtIndex (CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageMetadataRef* CGImageSourceCopyMetadataAtIndex (CGImageSourceRef* isrc, nuint index, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageRef _Nullable CGImageSourceCreateImageAtIndex (CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageSourceCreateImageAtIndex (CGImageSourceRef* isrc, nuint index, [NullAllowed] CFDictionaryRef* options);

//	// extern void CGImageSourceRemoveCacheAtIndex (CGImageSourceRef _Nonnull isrc, size_t index) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageSourceRemoveCacheAtIndex (CGImageSourceRef* isrc, nuint index);

//	// extern CGImageRef _Nullable CGImageSourceCreateThumbnailAtIndex (CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageRef* CGImageSourceCreateThumbnailAtIndex (CGImageSourceRef* isrc, nuint index, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageSourceRef _Nonnull CGImageSourceCreateIncremental (CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGImageSourceRef* CGImageSourceCreateIncremental ([NullAllowed] CFDictionaryRef* options);

//	// extern void CGImageSourceUpdateData (CGImageSourceRef _Nonnull isrc, CFDataRef _Nonnull data, _Bool final) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageSourceUpdateData (CGImageSourceRef* isrc, CFDataRef* data, bool final);

//	// extern void CGImageSourceUpdateDataProvider (CGImageSourceRef _Nonnull isrc, CGDataProviderRef _Nonnull provider, _Bool final) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageSourceUpdateDataProvider (CGImageSourceRef* isrc, CGDataProviderRef* provider, bool final);

//	// extern CGImageSourceStatus CGImageSourceGetStatus (CGImageSourceRef _Nonnull isrc) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGImageSourceStatus CGImageSourceGetStatus (CGImageSourceRef* isrc);

//	// extern CGImageSourceStatus CGImageSourceGetStatusAtIndex (CGImageSourceRef _Nonnull isrc, size_t index) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGImageSourceStatus CGImageSourceGetStatusAtIndex (CGImageSourceRef* isrc, nuint index);

//	// extern CFDictionaryRef _Nullable CGImageSourceCopyAuxiliaryDataInfoAtIndex (CGImageSourceRef _Nonnull isrc, size_t index, CFStringRef _Nonnull auxiliaryImageDataType) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CGImageSourceCopyAuxiliaryDataInfoAtIndex (CGImageSourceRef* isrc, nuint index, CFStringRef* auxiliaryImageDataType);

//	// extern CFTypeID CGImageDestinationGetTypeID () __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CGImageDestinationGetTypeID ();

//	// extern CFArrayRef _Nonnull CGImageDestinationCopyTypeIdentifiers () __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CGImageDestinationCopyTypeIdentifiers ();

//	// extern CGImageDestinationRef _Nullable CGImageDestinationCreateWithDataConsumer (CGDataConsumerRef _Nonnull consumer, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageDestinationRef* CGImageDestinationCreateWithDataConsumer (CGDataConsumerRef* consumer, CFStringRef* type, nuint count, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageDestinationRef _Nullable CGImageDestinationCreateWithData (CFMutableDataRef _Nonnull data, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageDestinationRef* CGImageDestinationCreateWithData (CFMutableDataRef* data, CFStringRef* type, nuint count, [NullAllowed] CFDictionaryRef* options);

//	// extern CGImageDestinationRef _Nullable CGImageDestinationCreateWithURL (CFURLRef _Nonnull url, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGImageDestinationRef* CGImageDestinationCreateWithURL (CFURLRef* url, CFStringRef* type, nuint count, [NullAllowed] CFDictionaryRef* options);

//	// extern void CGImageDestinationSetProperties (CGImageDestinationRef _Nonnull idst, CFDictionaryRef _Nullable properties) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageDestinationSetProperties (CGImageDestinationRef* idst, [NullAllowed] CFDictionaryRef* properties);

//	// extern void CGImageDestinationAddImage (CGImageDestinationRef _Nonnull idst, CGImageRef _Nonnull image, CFDictionaryRef _Nullable properties) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageDestinationAddImage (CGImageDestinationRef* idst, CGImageRef* image, [NullAllowed] CFDictionaryRef* properties);

//	// extern void CGImageDestinationAddImageFromSource (CGImageDestinationRef _Nonnull idst, CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable properties) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageDestinationAddImageFromSource (CGImageDestinationRef* idst, CGImageSourceRef* isrc, nuint index, [NullAllowed] CFDictionaryRef* properties);

//	// extern _Bool CGImageDestinationFinalize (CGImageDestinationRef _Nonnull idst) __attribute__((availability(ios, introduced=4.0))) __attribute__((cf_audited_transfer));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageDestinationFinalize (CGImageDestinationRef* idst);

//	// extern void CGImageDestinationAddImageAndMetadata (CGImageDestinationRef _Nonnull idst, CGImageRef _Nonnull image, CGImageMetadataRef _Nullable metadata, CFDictionaryRef _Nullable options) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageDestinationAddImageAndMetadata (CGImageDestinationRef* idst, CGImageRef* image, [NullAllowed] CGImageMetadataRef* metadata, [NullAllowed] CFDictionaryRef* options);

//	// extern _Bool CGImageDestinationCopyImageSource (CGImageDestinationRef _Nonnull idst, CGImageSourceRef _Nonnull isrc, CFDictionaryRef _Nullable options, CFErrorRef  _Nullable * _Nullable err) __attribute__((availability(ios, introduced=7.0))) __attribute__((cf_audited_transfer));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CGImageDestinationCopyImageSource (CGImageDestinationRef* idst, CGImageSourceRef* isrc, [NullAllowed] CFDictionaryRef* options, [NullAllowed] CFErrorRef** err);

//	// extern void CGImageDestinationAddAuxiliaryDataInfo (CGImageDestinationRef _Nonnull idst, CFStringRef _Nonnull auxiliaryImageDataType, CFDictionaryRef _Nonnull auxiliaryDataInfoDictionary) __attribute__((availability(ios, introduced=11.0))) __attribute__((cf_audited_transfer));
//	[iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CGImageDestinationAddAuxiliaryDataInfo (CGImageDestinationRef* idst, CFStringRef* auxiliaryImageDataType, CFDictionaryRef* auxiliaryDataInfoDictionary);

//	// extern CFTypeID CTFontDescriptorGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTFontDescriptorGetTypeID ();

//	// extern CTFontDescriptorRef _Nonnull CTFontDescriptorCreateWithNameAndSize (CFStringRef _Nonnull name, CGFloat size) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateWithNameAndSize (CFStringRef* name, nfloat size);

//	// extern CTFontDescriptorRef _Nonnull CTFontDescriptorCreateWithAttributes (CFDictionaryRef _Nonnull attributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateWithAttributes (CFDictionaryRef* attributes);

//	// extern CTFontDescriptorRef _Nonnull CTFontDescriptorCreateCopyWithAttributes (CTFontDescriptorRef _Nonnull original, CFDictionaryRef _Nonnull attributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateCopyWithAttributes (CTFontDescriptorRef* original, CFDictionaryRef* attributes);

//	// extern CTFontDescriptorRef _Nullable CTFontDescriptorCreateCopyWithFamily (CTFontDescriptorRef _Nonnull original, CFStringRef _Nonnull family) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateCopyWithFamily (CTFontDescriptorRef* original, CFStringRef* family);

//	// extern CTFontDescriptorRef _Nullable CTFontDescriptorCreateCopyWithSymbolicTraits (CTFontDescriptorRef _Nonnull original, CTFontSymbolicTraits symTraitValue, CTFontSymbolicTraits symTraitMask) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateCopyWithSymbolicTraits (CTFontDescriptorRef* original, CTFontSymbolicTraits symTraitValue, CTFontSymbolicTraits symTraitMask);

//	// extern CTFontDescriptorRef _Nonnull CTFontDescriptorCreateCopyWithVariation (CTFontDescriptorRef _Nonnull original, CFNumberRef _Nonnull variationIdentifier, CGFloat variationValue) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateCopyWithVariation (CTFontDescriptorRef* original, CFNumberRef* variationIdentifier, nfloat variationValue);

//	// extern CTFontDescriptorRef _Nonnull CTFontDescriptorCreateCopyWithFeature (CTFontDescriptorRef _Nonnull original, CFNumberRef _Nonnull featureTypeIdentifier, CFNumberRef _Nonnull featureSelectorIdentifier) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateCopyWithFeature (CTFontDescriptorRef* original, CFNumberRef* featureTypeIdentifier, CFNumberRef* featureSelectorIdentifier);

//	// extern CFArrayRef _Nullable CTFontDescriptorCreateMatchingFontDescriptors (CTFontDescriptorRef _Nonnull descriptor, CFSetRef _Nullable mandatoryAttributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontDescriptorCreateMatchingFontDescriptors (CTFontDescriptorRef* descriptor, [NullAllowed] CFSetRef* mandatoryAttributes);

//	// extern CTFontDescriptorRef _Nullable CTFontDescriptorCreateMatchingFontDescriptor (CTFontDescriptorRef _Nonnull descriptor, CFSetRef _Nullable mandatoryAttributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontDescriptorRef* CTFontDescriptorCreateMatchingFontDescriptor (CTFontDescriptorRef* descriptor, [NullAllowed] CFSetRef* mandatoryAttributes);

//	// extern _Bool CTFontDescriptorMatchFontDescriptorsWithProgressHandler (CFArrayRef _Nonnull descriptors, CFSetRef _Nullable mandatoryAttributes, CTFontDescriptorProgressHandler _Nonnull progressBlock) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(macos, introduced=10.9))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,9), iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontDescriptorMatchFontDescriptorsWithProgressHandler (CFArrayRef* descriptors, [NullAllowed] CFSetRef* mandatoryAttributes, CTFontDescriptorProgressHandler progressBlock);

//	// extern CFDictionaryRef _Nonnull CTFontDescriptorCopyAttributes (CTFontDescriptorRef _Nonnull descriptor) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CTFontDescriptorCopyAttributes (CTFontDescriptorRef* descriptor);

//	// extern CFTypeRef _Nullable CTFontDescriptorCopyAttribute (CTFontDescriptorRef _Nonnull descriptor, CFStringRef _Nonnull attribute) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CTFontDescriptorCopyAttribute (CTFontDescriptorRef* descriptor, CFStringRef* attribute);

//	// extern CFTypeRef _Nullable CTFontDescriptorCopyLocalizedAttribute (CTFontDescriptorRef _Nonnull descriptor, CFStringRef _Nonnull attribute, CFStringRef  _Nullable * _Nullable language) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CTFontDescriptorCopyLocalizedAttribute (CTFontDescriptorRef* descriptor, CFStringRef* attribute, [NullAllowed] CFStringRef** language);

//	// extern CFTypeID CTFontGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTFontGetTypeID ();

//	// extern CTFontRef _Nonnull CTFontCreateWithName (CFStringRef _Nonnull name, CGFloat size, const CGAffineTransform * _Nullable matrix) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateWithName (CFStringRef* name, nfloat size, [NullAllowed] CGAffineTransform* matrix);

//	// extern CTFontRef _Nonnull CTFontCreateWithFontDescriptor (CTFontDescriptorRef _Nonnull descriptor, CGFloat size, const CGAffineTransform * _Nullable matrix) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateWithFontDescriptor (CTFontDescriptorRef* descriptor, nfloat size, [NullAllowed] CGAffineTransform* matrix);

//	// extern CTFontRef _Nonnull CTFontCreateWithNameAndOptions (CFStringRef _Nonnull name, CGFloat size, const CGAffineTransform * _Nullable matrix, CTFontOptions options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateWithNameAndOptions (CFStringRef* name, nfloat size, [NullAllowed] CGAffineTransform* matrix, CTFontOptions options);

//	// extern CTFontRef _Nonnull CTFontCreateWithFontDescriptorAndOptions (CTFontDescriptorRef _Nonnull descriptor, CGFloat size, const CGAffineTransform * _Nullable matrix, CTFontOptions options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateWithFontDescriptorAndOptions (CTFontDescriptorRef* descriptor, nfloat size, [NullAllowed] CGAffineTransform* matrix, CTFontOptions options);

//	// extern CTFontRef _Nullable CTFontCreateUIFontForLanguage (CTFontUIFontType uiType, CGFloat size, CFStringRef _Nullable language) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontRef* CTFontCreateUIFontForLanguage (CTFontUIFontType uiType, nfloat size, [NullAllowed] CFStringRef* language);

//	// extern CTFontRef _Nonnull CTFontCreateCopyWithAttributes (CTFontRef _Nonnull font, CGFloat size, const CGAffineTransform * _Nullable matrix, CTFontDescriptorRef _Nullable attributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateCopyWithAttributes (CTFontRef* font, nfloat size, [NullAllowed] CGAffineTransform* matrix, [NullAllowed] CTFontDescriptorRef* attributes);

//	// extern CTFontRef _Nullable CTFontCreateCopyWithSymbolicTraits (CTFontRef _Nonnull font, CGFloat size, const CGAffineTransform * _Nullable matrix, CTFontSymbolicTraits symTraitValue, CTFontSymbolicTraits symTraitMask) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontRef* CTFontCreateCopyWithSymbolicTraits (CTFontRef* font, nfloat size, [NullAllowed] CGAffineTransform* matrix, CTFontSymbolicTraits symTraitValue, CTFontSymbolicTraits symTraitMask);

//	// extern CTFontRef _Nullable CTFontCreateCopyWithFamily (CTFontRef _Nonnull font, CGFloat size, const CGAffineTransform * _Nullable matrix, CFStringRef _Nonnull family) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontRef* CTFontCreateCopyWithFamily (CTFontRef* font, nfloat size, [NullAllowed] CGAffineTransform* matrix, CFStringRef* family);

//	// extern CTFontRef _Nonnull CTFontCreateForString (CTFontRef _Nonnull currentFont, CFStringRef _Nonnull string, CFRange range) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateForString (CTFontRef* currentFont, CFStringRef* @string, CFRange range);

//	// extern CTFontDescriptorRef _Nonnull CTFontCopyFontDescriptor (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontDescriptorRef* CTFontCopyFontDescriptor (CTFontRef* font);

//	// extern CFTypeRef _Nullable CTFontCopyAttribute (CTFontRef _Nonnull font, CFStringRef _Nonnull attribute) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe void* CTFontCopyAttribute (CTFontRef* font, CFStringRef* attribute);

//	// extern CGFloat CTFontGetSize (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetSize (CTFontRef* font);

//	// extern CGAffineTransform CTFontGetMatrix (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGAffineTransform CTFontGetMatrix (CTFontRef* font);

//	// extern CTFontSymbolicTraits CTFontGetSymbolicTraits (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontSymbolicTraits CTFontGetSymbolicTraits (CTFontRef* font);

//	// extern CFDictionaryRef _Nonnull CTFontCopyTraits (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CTFontCopyTraits (CTFontRef* font);

//	// extern CFStringRef _Nonnull CTFontCopyPostScriptName (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CTFontCopyPostScriptName (CTFontRef* font);

//	// extern CFStringRef _Nonnull CTFontCopyFamilyName (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CTFontCopyFamilyName (CTFontRef* font);

//	// extern CFStringRef _Nonnull CTFontCopyFullName (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CTFontCopyFullName (CTFontRef* font);

//	// extern CFStringRef _Nonnull CTFontCopyDisplayName (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFStringRef* CTFontCopyDisplayName (CTFontRef* font);

//	// extern CFStringRef _Nullable CTFontCopyName (CTFontRef _Nonnull font, CFStringRef _Nonnull nameKey) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CTFontCopyName (CTFontRef* font, CFStringRef* nameKey);

//	// extern CFStringRef _Nullable CTFontCopyLocalizedName (CTFontRef _Nonnull font, CFStringRef _Nonnull nameKey, CFStringRef  _Nullable * _Nullable actualLanguage) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CTFontCopyLocalizedName (CTFontRef* font, CFStringRef* nameKey, [NullAllowed] CFStringRef** actualLanguage);

//	// extern CFCharacterSetRef _Nonnull CTFontCopyCharacterSet (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFCharacterSetRef* CTFontCopyCharacterSet (CTFontRef* font);

//	// extern CFStringEncoding CTFontGetStringEncoding (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CTFontGetStringEncoding (CTFontRef* font);

//	// extern CFArrayRef _Nonnull CTFontCopySupportedLanguages (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTFontCopySupportedLanguages (CTFontRef* font);

//	// extern _Bool CTFontGetGlyphsForCharacters (CTFontRef _Nonnull font, const UniChar * _Nonnull characters, CGGlyph * _Nonnull glyphs, CFIndex count) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontGetGlyphsForCharacters (CTFontRef* font, ushort[] characters, ushort[] glyphs, nint count);

//	// extern CGFloat CTFontGetAscent (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetAscent (CTFontRef* font);

//	// extern CGFloat CTFontGetDescent (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetDescent (CTFontRef* font);

//	// extern CGFloat CTFontGetLeading (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetLeading (CTFontRef* font);

//	// extern unsigned int CTFontGetUnitsPerEm (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CTFontGetUnitsPerEm (CTFontRef* font);

//	// extern CFIndex CTFontGetGlyphCount (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTFontGetGlyphCount (CTFontRef* font);

//	// extern CGRect CTFontGetBoundingBox (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CTFontGetBoundingBox (CTFontRef* font);

//	// extern CGFloat CTFontGetUnderlinePosition (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetUnderlinePosition (CTFontRef* font);

//	// extern CGFloat CTFontGetUnderlineThickness (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetUnderlineThickness (CTFontRef* font);

//	// extern CGFloat CTFontGetSlantAngle (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetSlantAngle (CTFontRef* font);

//	// extern CGFloat CTFontGetCapHeight (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetCapHeight (CTFontRef* font);

//	// extern CGFloat CTFontGetXHeight (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTFontGetXHeight (CTFontRef* font);

//	// extern CGGlyph CTFontGetGlyphWithName (CTFontRef _Nonnull font, CFStringRef _Nonnull glyphName) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort CTFontGetGlyphWithName (CTFontRef* font, CFStringRef* glyphName);

//	// extern CGRect CTFontGetBoundingRectsForGlyphs (CTFontRef _Nonnull font, CTFontOrientation orientation, const CGGlyph * _Nonnull glyphs, CGRect * _Nullable boundingRects, CFIndex count) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CTFontGetBoundingRectsForGlyphs (CTFontRef* font, CTFontOrientation orientation, ushort[] glyphs, [NullAllowed] CGRect* boundingRects, nint count);

//	// extern CGRect CTFontGetOpticalBoundsForGlyphs (CTFontRef _Nonnull font, const CGGlyph * _Nonnull glyphs, CGRect * _Nullable boundingRects, CFIndex count, CFOptionFlags options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(macos, introduced=10.8))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,8), iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CTFontGetOpticalBoundsForGlyphs (CTFontRef* font, ushort[] glyphs, [NullAllowed] CGRect* boundingRects, nint count, nuint options);

//	// extern double CTFontGetAdvancesForGlyphs (CTFontRef _Nonnull font, CTFontOrientation orientation, const CGGlyph * _Nonnull glyphs, CGSize * _Nullable advances, CFIndex count) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CTFontGetAdvancesForGlyphs (CTFontRef* font, CTFontOrientation orientation, ushort[] glyphs, [NullAllowed] CGSize* advances, nint count);

//	// extern void CTFontGetVerticalTranslationsForGlyphs (CTFontRef _Nonnull font, const CGGlyph * _Nonnull glyphs, CGSize * _Nonnull translations, CFIndex count) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFontGetVerticalTranslationsForGlyphs (CTFontRef* font, ushort[] glyphs, CGSize[] translations, nint count);

//	// extern CGPathRef _Nullable CTFontCreatePathForGlyph (CTFontRef _Nonnull font, CGGlyph glyph, const CGAffineTransform * _Nullable matrix) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPathRef* CTFontCreatePathForGlyph (CTFontRef* font, ushort glyph, [NullAllowed] CGAffineTransform* matrix);

//	// extern CFArrayRef _Nullable CTFontCopyVariationAxes (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCopyVariationAxes (CTFontRef* font);

//	// extern CFDictionaryRef _Nullable CTFontCopyVariation (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CTFontCopyVariation (CTFontRef* font);

//	// extern CFArrayRef _Nullable CTFontCopyFeatures (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCopyFeatures (CTFontRef* font);

//	// extern CFArrayRef _Nullable CTFontCopyFeatureSettings (CTFontRef _Nonnull font) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCopyFeatureSettings (CTFontRef* font);

//	// extern CGFontRef _Nonnull CTFontCopyGraphicsFont (CTFontRef _Nonnull font, CTFontDescriptorRef  _Nullable * _Nullable attributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGFontRef* CTFontCopyGraphicsFont (CTFontRef* font, [NullAllowed] CTFontDescriptorRef** attributes);

//	// extern CTFontRef _Nonnull CTFontCreateWithGraphicsFont (CGFontRef _Nonnull graphicsFont, CGFloat size, const CGAffineTransform * _Nullable matrix, CTFontDescriptorRef _Nullable attributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateWithGraphicsFont (CGFontRef* graphicsFont, nfloat size, [NullAllowed] CGAffineTransform* matrix, [NullAllowed] CTFontDescriptorRef* attributes);

//	// extern ATSFontRef CTFontGetPlatformFont (CTFontRef _Nonnull font, CTFontDescriptorRef  _Nullable * _Nullable attributes) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,5)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe uint CTFontGetPlatformFont (CTFontRef* font, [NullAllowed] CTFontDescriptorRef** attributes);

//	// extern CTFontRef _Nullable CTFontCreateWithPlatformFont (ATSFontRef platformFont, CGFloat size, const CGAffineTransform * _Nullable matrix, CTFontDescriptorRef _Nullable attributes) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,5)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontRef* CTFontCreateWithPlatformFont (uint platformFont, nfloat size, [NullAllowed] CGAffineTransform* matrix, [NullAllowed] CTFontDescriptorRef* attributes);

//	// extern CTFontRef _Nonnull CTFontCreateWithQuickdrawInstance (ConstStr255Param _Nullable name, int16_t identifier, uint8_t style, CGFloat size) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,5)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontRef* CTFontCreateWithQuickdrawInstance ([NullAllowed] byte* name, short identifier, byte style, nfloat size);

//	// extern CFArrayRef _Nullable CTFontCopyAvailableTables (CTFontRef _Nonnull font, CTFontTableOptions options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCopyAvailableTables (CTFontRef* font, CTFontTableOptions options);

//	// extern CFDataRef _Nullable CTFontCopyTable (CTFontRef _Nonnull font, CTFontTableTag table, CTFontTableOptions options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDataRef* CTFontCopyTable (CTFontRef* font, uint table, CTFontTableOptions options);

//	// extern void CTFontDrawGlyphs (CTFontRef _Nonnull font, const CGGlyph * _Nonnull glyphs, const CGPoint * _Nonnull positions, size_t count, CGContextRef _Nonnull context) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.2))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (4,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFontDrawGlyphs (CTFontRef* font, ushort[] glyphs, CGPoint[] positions, nuint count, CGContextRef* context);

//	// extern CFIndex CTFontGetLigatureCaretPositions (CTFontRef _Nonnull font, CGGlyph glyph, CGFloat * _Nullable positions, CFIndex maxPositions) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTFontGetLigatureCaretPositions (CTFontRef* font, ushort glyph, [NullAllowed] nfloat* positions, nint maxPositions);

//	// extern CFArrayRef _Nullable CTFontCopyDefaultCascadeListForLanguages (CTFontRef _Nonnull font, CFArrayRef _Nullable languagePrefList) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(macos, introduced=10.8))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,8), iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCopyDefaultCascadeListForLanguages (CTFontRef* font, [NullAllowed] CFArrayRef* languagePrefList);

//	// extern CFTypeID CTFontCollectionGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTFontCollectionGetTypeID ();

//	// extern CTFontCollectionRef _Nonnull CTFontCollectionCreateFromAvailableFonts (CFDictionaryRef _Nullable options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontCollectionRef* CTFontCollectionCreateFromAvailableFonts ([NullAllowed] CFDictionaryRef* options);

//	// extern CTFontCollectionRef _Nonnull CTFontCollectionCreateWithFontDescriptors (CFArrayRef _Nullable queryDescriptors, CFDictionaryRef _Nullable options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontCollectionRef* CTFontCollectionCreateWithFontDescriptors ([NullAllowed] CFArrayRef* queryDescriptors, [NullAllowed] CFDictionaryRef* options);

//	// extern CTFontCollectionRef _Nonnull CTFontCollectionCreateCopyWithFontDescriptors (CTFontCollectionRef _Nonnull original, CFArrayRef _Nullable queryDescriptors, CFDictionaryRef _Nullable options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontCollectionRef* CTFontCollectionCreateCopyWithFontDescriptors (CTFontCollectionRef* original, [NullAllowed] CFArrayRef* queryDescriptors, [NullAllowed] CFDictionaryRef* options);

//	// extern CTMutableFontCollectionRef _Nonnull CTFontCollectionCreateMutableCopy (CTFontCollectionRef _Nonnull original) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTMutableFontCollectionRef* CTFontCollectionCreateMutableCopy (CTFontCollectionRef* original);

//	// extern CFArrayRef _Nullable CTFontCollectionCopyQueryDescriptors (CTFontCollectionRef _Nonnull collection) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCollectionCopyQueryDescriptors (CTFontCollectionRef* collection);

//	// extern void CTFontCollectionSetQueryDescriptors (CTMutableFontCollectionRef _Nonnull collection, CFArrayRef _Nullable descriptors) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFontCollectionSetQueryDescriptors (CTMutableFontCollectionRef* collection, [NullAllowed] CFArrayRef* descriptors);

//	// extern CFArrayRef _Nullable CTFontCollectionCopyExclusionDescriptors (CTFontCollectionRef _Nonnull collection) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCollectionCopyExclusionDescriptors (CTFontCollectionRef* collection);

//	// extern void CTFontCollectionSetExclusionDescriptors (CTMutableFontCollectionRef _Nonnull collection, CFArrayRef _Nullable descriptors) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFontCollectionSetExclusionDescriptors (CTMutableFontCollectionRef* collection, [NullAllowed] CFArrayRef* descriptors);

//	// extern CFArrayRef _Nullable CTFontCollectionCreateMatchingFontDescriptors (CTFontCollectionRef _Nonnull collection) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCollectionCreateMatchingFontDescriptors (CTFontCollectionRef* collection);

//	// extern CFArrayRef _Nullable CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback (CTFontCollectionRef _Nonnull collection, CTFontCollectionSortDescriptorsCallback _Nullable sortCallback, void * _Nullable refCon) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback (CTFontCollectionRef* collection, [NullAllowed] CTFontCollectionSortDescriptorsCallback* sortCallback, [NullAllowed] void* refCon);

//	// extern CFArrayRef _Nullable CTFontCollectionCreateMatchingFontDescriptorsWithOptions (CTFontCollectionRef _Nonnull collection, CFDictionaryRef _Nullable options) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCollectionCreateMatchingFontDescriptorsWithOptions (CTFontCollectionRef* collection, [NullAllowed] CFDictionaryRef* options);

//	// extern CFArrayRef _Nullable CTFontCollectionCreateMatchingFontDescriptorsForFamily (CTFontCollectionRef _Nonnull collection, CFStringRef _Nonnull familyName, CFDictionaryRef _Nullable options) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontCollectionCreateMatchingFontDescriptorsForFamily (CTFontCollectionRef* collection, CFStringRef* familyName, [NullAllowed] CFDictionaryRef* options);

//	// extern CFArrayRef _Nonnull CTFontCollectionCopyFontAttribute (CTFontCollectionRef _Nonnull collection, CFStringRef _Nonnull attributeName, CTFontCollectionCopyOptions options) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTFontCollectionCopyFontAttribute (CTFontCollectionRef* collection, CFStringRef* attributeName, CTFontCollectionCopyOptions options);

//	// extern CFArrayRef _Nonnull CTFontCollectionCopyFontAttributes (CTFontCollectionRef _Nonnull collection, CFSetRef _Nonnull attributeNames, CTFontCollectionCopyOptions options) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,7)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTFontCollectionCopyFontAttributes (CTFontCollectionRef* collection, CFSetRef* attributeNames, CTFontCollectionCopyOptions options);

//	// extern CFArrayRef _Nonnull CTFontManagerCopyAvailablePostScriptNames () __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,6), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTFontManagerCopyAvailablePostScriptNames ();

//	// extern CFArrayRef _Nonnull CTFontManagerCopyAvailableFontFamilyNames () __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,6), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTFontManagerCopyAvailableFontFamilyNames ();

//	// extern CFArrayRef _Nonnull CTFontManagerCopyAvailableFontURLs () __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTFontManagerCopyAvailableFontURLs ();

//	// extern CFComparisonResult CTFontManagerCompareFontFamilyNames (const void * _Nonnull family1, const void * _Nonnull family2, void * _Nullable context) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFComparisonResult CTFontManagerCompareFontFamilyNames (void* family1, void* family2, [NullAllowed] void* context);

//	// extern CFArrayRef _Nullable CTFontManagerCreateFontDescriptorsFromURL (CFURLRef _Nonnull fileURL) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFArrayRef* CTFontManagerCreateFontDescriptorsFromURL (CFURLRef* fileURL);

//	// extern CTFontDescriptorRef _Nullable CTFontManagerCreateFontDescriptorFromData (CFDataRef _Nonnull data) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(macos, introduced=10.7))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,7), iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTFontDescriptorRef* CTFontManagerCreateFontDescriptorFromData (CFDataRef* data);

//	// extern _Bool CTFontManagerRegisterFontsForURL (CFURLRef _Nonnull fontURL, CTFontManagerScope scope, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.1))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontManagerRegisterFontsForURL (CFURLRef* fontURL, CTFontManagerScope scope, [NullAllowed] CFErrorRef** error);

//	// extern _Bool CTFontManagerUnregisterFontsForURL (CFURLRef _Nonnull fontURL, CTFontManagerScope scope, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.1))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontManagerUnregisterFontsForURL (CFURLRef* fontURL, CTFontManagerScope scope, [NullAllowed] CFErrorRef** error);

//	// extern _Bool CTFontManagerRegisterGraphicsFont (CGFontRef _Nonnull font, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.1))) __attribute__((availability(macos, introduced=10.8))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,8), iOS (4,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontManagerRegisterGraphicsFont (CGFontRef* font, [NullAllowed] CFErrorRef** error);

//	// extern _Bool CTFontManagerUnregisterGraphicsFont (CGFontRef _Nonnull font, CFErrorRef  _Nullable * _Nullable error) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.1))) __attribute__((availability(macos, introduced=10.8))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,8), iOS (4,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontManagerUnregisterGraphicsFont (CGFontRef* font, [NullAllowed] CFErrorRef** error);

//	// extern _Bool CTFontManagerRegisterFontsForURLs (CFArrayRef _Nonnull fontURLs, CTFontManagerScope scope, CFArrayRef  _Nullable * _Nullable errors) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.1))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontManagerRegisterFontsForURLs (CFArrayRef* fontURLs, CTFontManagerScope scope, [NullAllowed] CFArrayRef** errors);

//	// extern _Bool CTFontManagerUnregisterFontsForURLs (CFArrayRef _Nonnull fontURLs, CTFontManagerScope scope, CFArrayRef  _Nullable * _Nullable errors) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=4.1))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontManagerUnregisterFontsForURLs (CFArrayRef* fontURLs, CTFontManagerScope scope, [NullAllowed] CFArrayRef** errors);

//	// extern void CTFontManagerEnableFontDescriptors (CFArrayRef _Nonnull descriptors, _Bool enable) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFontManagerEnableFontDescriptors (CFArrayRef* descriptors, bool enable);

//	// extern CTFontManagerScope CTFontManagerGetScopeForURL (CFURLRef _Nonnull fontURL) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontManagerScope CTFontManagerGetScopeForURL (CFURLRef* fontURL);

//	// extern _Bool CTFontManagerIsSupportedFont (CFURLRef _Nonnull fontURL) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTFontManagerIsSupportedFont (CFURLRef* fontURL);

//	// extern CFRunLoopSourceRef _Nullable CTFontManagerCreateFontRequestRunLoopSource (CFIndex sourceOrder, CFArrayRef  _Nonnull (^ _Nonnull)(CFDictionaryRef _Nonnull, pid_t) createMatchesCallback) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFRunLoopSourceRef* CTFontManagerCreateFontRequestRunLoopSource (nint sourceOrder, Func<CoreFoundation.CFDictionaryRef*, int, CoreFoundation.CFArrayRef*> createMatchesCallback);

//	// extern void CTFontManagerSetAutoActivationSetting (CFStringRef _Nullable bundleIdentifier, CTFontManagerAutoActivationSetting setting) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFontManagerSetAutoActivationSetting ([NullAllowed] CFStringRef* bundleIdentifier, CTFontManagerAutoActivationSetting setting);

//	// extern CTFontManagerAutoActivationSetting CTFontManagerGetAutoActivationSetting (CFStringRef _Nullable bundleIdentifier) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, unavailable))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[NoWatch, NoTV, NoiOS, Mac (10,6)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFontManagerAutoActivationSetting CTFontManagerGetAutoActivationSetting ([NullAllowed] CFStringRef* bundleIdentifier);

//	// extern CFTypeID CTFrameGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTFrameGetTypeID ();

//	// extern CFRange CTFrameGetStringRange (CTFrameRef _Nonnull frame) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CTFrameGetStringRange (CTFrameRef* frame);

//	// extern CFRange CTFrameGetVisibleStringRange (CTFrameRef _Nonnull frame) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CTFrameGetVisibleStringRange (CTFrameRef* frame);

//	// extern CGPathRef _Nonnull CTFrameGetPath (CTFrameRef _Nonnull frame) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGPathRef* CTFrameGetPath (CTFrameRef* frame);

//	// extern CFDictionaryRef _Nullable CTFrameGetFrameAttributes (CTFrameRef _Nonnull frame) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CTFrameGetFrameAttributes (CTFrameRef* frame);

//	// extern CFArrayRef _Nonnull CTFrameGetLines (CTFrameRef _Nonnull frame) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTFrameGetLines (CTFrameRef* frame);

//	// extern void CTFrameGetLineOrigins (CTFrameRef _Nonnull frame, CFRange range, CGPoint * _Nonnull origins) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFrameGetLineOrigins (CTFrameRef* frame, CFRange range, CGPoint[] origins);

//	// extern void CTFrameDraw (CTFrameRef _Nonnull frame, CGContextRef _Nonnull context) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTFrameDraw (CTFrameRef* frame, CGContextRef* context);

//	// extern CFTypeID CTLineGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTLineGetTypeID ();

//	// extern CTLineRef _Nonnull CTLineCreateWithAttributedString (CFAttributedStringRef _Nonnull attrString) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTLineRef* CTLineCreateWithAttributedString (CFAttributedStringRef* attrString);

//	// extern CTLineRef _Nullable CTLineCreateTruncatedLine (CTLineRef _Nonnull line, double width, CTLineTruncationType truncationType, CTLineRef _Nullable truncationToken) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTLineRef* CTLineCreateTruncatedLine (CTLineRef* line, double width, CTLineTruncationType truncationType, [NullAllowed] CTLineRef* truncationToken);

//	// extern CTLineRef _Nullable CTLineCreateJustifiedLine (CTLineRef _Nonnull line, CGFloat justificationFactor, double justificationWidth) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTLineRef* CTLineCreateJustifiedLine (CTLineRef* line, nfloat justificationFactor, double justificationWidth);

//	// extern CFIndex CTLineGetGlyphCount (CTLineRef _Nonnull line) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTLineGetGlyphCount (CTLineRef* line);

//	// extern CFArrayRef _Nonnull CTLineGetGlyphRuns (CTLineRef _Nonnull line) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFArrayRef* CTLineGetGlyphRuns (CTLineRef* line);

//	// extern CFRange CTLineGetStringRange (CTLineRef _Nonnull line) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CTLineGetStringRange (CTLineRef* line);

//	// extern double CTLineGetPenOffsetForFlush (CTLineRef _Nonnull line, CGFloat flushFactor, double flushWidth) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CTLineGetPenOffsetForFlush (CTLineRef* line, nfloat flushFactor, double flushWidth);

//	// extern void CTLineDraw (CTLineRef _Nonnull line, CGContextRef _Nonnull context) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTLineDraw (CTLineRef* line, CGContextRef* context);

//	// extern double CTLineGetTypographicBounds (CTLineRef _Nonnull line, CGFloat * _Nullable ascent, CGFloat * _Nullable descent, CGFloat * _Nullable leading) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CTLineGetTypographicBounds (CTLineRef* line, [NullAllowed] nfloat* ascent, [NullAllowed] nfloat* descent, [NullAllowed] nfloat* leading);

//	// extern CGRect CTLineGetBoundsWithOptions (CTLineRef _Nonnull line, CTLineBoundsOptions options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(macos, introduced=10.8))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,8), iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CTLineGetBoundsWithOptions (CTLineRef* line, CTLineBoundsOptions options);

//	// extern double CTLineGetTrailingWhitespaceWidth (CTLineRef _Nonnull line) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CTLineGetTrailingWhitespaceWidth (CTLineRef* line);

//	// extern CGRect CTLineGetImageBounds (CTLineRef _Nonnull line, CGContextRef _Nullable context) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CTLineGetImageBounds (CTLineRef* line, [NullAllowed] CGContextRef* context);

//	// extern CFIndex CTLineGetStringIndexForPosition (CTLineRef _Nonnull line, CGPoint position) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTLineGetStringIndexForPosition (CTLineRef* line, CGPoint position);

//	// extern CGFloat CTLineGetOffsetForStringIndex (CTLineRef _Nonnull line, CFIndex charIndex, CGFloat * _Nullable secondaryOffset) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTLineGetOffsetForStringIndex (CTLineRef* line, nint charIndex, [NullAllowed] nfloat* secondaryOffset);

//	// extern void CTLineEnumerateCaretOffsets (CTLineRef _Nonnull line, void (^ _Nonnull)(double, CFIndex, _Bool, _Bool * _Nonnull) block) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(macos, introduced=10.11))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTLineEnumerateCaretOffsets (CTLineRef* line, Action<double, nint, bool, bool*> block);

//	// extern CFTypeID CTTypesetterGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTTypesetterGetTypeID ();

//	// extern CTTypesetterRef _Nonnull CTTypesetterCreateWithAttributedString (CFAttributedStringRef _Nonnull string) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTTypesetterRef* CTTypesetterCreateWithAttributedString (CFAttributedStringRef* @string);

//	// extern CTTypesetterRef _Nonnull CTTypesetterCreateWithAttributedStringAndOptions (CFAttributedStringRef _Nonnull string, CFDictionaryRef _Nullable options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTTypesetterRef* CTTypesetterCreateWithAttributedStringAndOptions (CFAttributedStringRef* @string, [NullAllowed] CFDictionaryRef* options);

//	// extern CTLineRef _Nonnull CTTypesetterCreateLineWithOffset (CTTypesetterRef _Nonnull typesetter, CFRange stringRange, double offset) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTLineRef* CTTypesetterCreateLineWithOffset (CTTypesetterRef* typesetter, CFRange stringRange, double offset);

//	// extern CTLineRef _Nonnull CTTypesetterCreateLine (CTTypesetterRef _Nonnull typesetter, CFRange stringRange) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTLineRef* CTTypesetterCreateLine (CTTypesetterRef* typesetter, CFRange stringRange);

//	// extern CFIndex CTTypesetterSuggestLineBreakWithOffset (CTTypesetterRef _Nonnull typesetter, CFIndex startIndex, double width, double offset) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTTypesetterSuggestLineBreakWithOffset (CTTypesetterRef* typesetter, nint startIndex, double width, double offset);

//	// extern CFIndex CTTypesetterSuggestLineBreak (CTTypesetterRef _Nonnull typesetter, CFIndex startIndex, double width) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTTypesetterSuggestLineBreak (CTTypesetterRef* typesetter, nint startIndex, double width);

//	// extern CFIndex CTTypesetterSuggestClusterBreakWithOffset (CTTypesetterRef _Nonnull typesetter, CFIndex startIndex, double width, double offset) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.6))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTTypesetterSuggestClusterBreakWithOffset (CTTypesetterRef* typesetter, nint startIndex, double width, double offset);

//	// extern CFIndex CTTypesetterSuggestClusterBreak (CTTypesetterRef _Nonnull typesetter, CFIndex startIndex, double width) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTTypesetterSuggestClusterBreak (CTTypesetterRef* typesetter, nint startIndex, double width);

//	// extern CFTypeID CTFramesetterGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTFramesetterGetTypeID ();

//	// extern CTFramesetterRef _Nonnull CTFramesetterCreateWithAttributedString (CFAttributedStringRef _Nonnull string) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFramesetterRef* CTFramesetterCreateWithAttributedString (CFAttributedStringRef* @string);

//	// extern CTFrameRef _Nonnull CTFramesetterCreateFrame (CTFramesetterRef _Nonnull framesetter, CFRange stringRange, CGPathRef _Nonnull path, CFDictionaryRef _Nullable frameAttributes) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTFrameRef* CTFramesetterCreateFrame (CTFramesetterRef* framesetter, CFRange stringRange, CGPathRef* path, [NullAllowed] CFDictionaryRef* frameAttributes);

//	// extern CTTypesetterRef _Nonnull CTFramesetterGetTypesetter (CTFramesetterRef _Nonnull framesetter) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTTypesetterRef* CTFramesetterGetTypesetter (CTFramesetterRef* framesetter);

//	// extern CGSize CTFramesetterSuggestFrameSizeWithConstraints (CTFramesetterRef _Nonnull framesetter, CFRange stringRange, CFDictionaryRef _Nullable frameAttributes, CGSize constraints, CFRange * _Nullable fitRange) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGSize CTFramesetterSuggestFrameSizeWithConstraints (CTFramesetterRef* framesetter, CFRange stringRange, [NullAllowed] CFDictionaryRef* frameAttributes, CGSize constraints, [NullAllowed] CFRange* fitRange);

//	// extern CFTypeID CTGlyphInfoGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTGlyphInfoGetTypeID ();

//	// extern CTGlyphInfoRef _Nonnull CTGlyphInfoCreateWithGlyphName (CFStringRef _Nonnull glyphName, CTFontRef _Nonnull font, CFStringRef _Nonnull baseString) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTGlyphInfoRef* CTGlyphInfoCreateWithGlyphName (CFStringRef* glyphName, CTFontRef* font, CFStringRef* baseString);

//	// extern CTGlyphInfoRef _Nonnull CTGlyphInfoCreateWithGlyph (CGGlyph glyph, CTFontRef _Nonnull font, CFStringRef _Nonnull baseString) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTGlyphInfoRef* CTGlyphInfoCreateWithGlyph (ushort glyph, CTFontRef* font, CFStringRef* baseString);

//	// extern CTGlyphInfoRef _Nonnull CTGlyphInfoCreateWithCharacterIdentifier (CGFontIndex cid, CTCharacterCollection collection, CFStringRef _Nonnull baseString) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTGlyphInfoRef* CTGlyphInfoCreateWithCharacterIdentifier (ushort cid, CTCharacterCollection collection, CFStringRef* baseString);

//	// extern CFStringRef _Nullable CTGlyphInfoGetGlyphName (CTGlyphInfoRef _Nonnull glyphInfo) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CTGlyphInfoGetGlyphName (CTGlyphInfoRef* glyphInfo);

//	// extern CGFontIndex CTGlyphInfoGetCharacterIdentifier (CTGlyphInfoRef _Nonnull glyphInfo) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe ushort CTGlyphInfoGetCharacterIdentifier (CTGlyphInfoRef* glyphInfo);

//	// extern CTCharacterCollection CTGlyphInfoGetCharacterCollection (CTGlyphInfoRef _Nonnull glyphInfo) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTCharacterCollection CTGlyphInfoGetCharacterCollection (CTGlyphInfoRef* glyphInfo);

//	// extern CFTypeID CTParagraphStyleGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTParagraphStyleGetTypeID ();

//	// extern CTParagraphStyleRef _Nonnull CTParagraphStyleCreate (const CTParagraphStyleSetting * _Nullable settings, size_t settingCount) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTParagraphStyleRef* CTParagraphStyleCreate ([NullAllowed] CTParagraphStyleSetting* settings, nuint settingCount);

//	// extern CTParagraphStyleRef _Nonnull CTParagraphStyleCreateCopy (CTParagraphStyleRef _Nonnull paragraphStyle) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTParagraphStyleRef* CTParagraphStyleCreateCopy (CTParagraphStyleRef* paragraphStyle);

//	// extern _Bool CTParagraphStyleGetValueForSpecifier (CTParagraphStyleRef _Nonnull paragraphStyle, CTParagraphStyleSpecifier spec, size_t valueBufferSize, void * _Nonnull valueBuffer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe bool CTParagraphStyleGetValueForSpecifier (CTParagraphStyleRef* paragraphStyle, CTParagraphStyleSpecifier spec, nuint valueBufferSize, void* valueBuffer);

//	// extern CFTypeID CTRubyAnnotationGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTRubyAnnotationGetTypeID ();

//	// extern CTRubyAnnotationRef _Nonnull CTRubyAnnotationCreate (CTRubyAlignment alignment, CTRubyOverhang overhang, CGFloat sizeFactor, CFStringRef  _Nullable * _Nonnull text) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTRubyAnnotationRef* CTRubyAnnotationCreate (CTRubyAlignment alignment, CTRubyOverhang overhang, nfloat sizeFactor, [NullAllowed] CFStringRef*[] text);

//	// extern CTRubyAnnotationRef _Nonnull CTRubyAnnotationCreateWithAttributes (CTRubyAlignment alignment, CTRubyOverhang overhang, CTRubyPosition position, CFStringRef _Nonnull string, CFDictionaryRef _Nonnull attributes) __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(macos, introduced=10.12))) __attribute__((cf_audited_transfer));
//	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTRubyAnnotationRef* CTRubyAnnotationCreateWithAttributes (CTRubyAlignment alignment, CTRubyOverhang overhang, CTRubyPosition position, CFStringRef* @string, CFDictionaryRef* attributes);

//	// extern CTRubyAnnotationRef _Nonnull CTRubyAnnotationCreateCopy (CTRubyAnnotationRef _Nonnull rubyAnnotation) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTRubyAnnotationRef* CTRubyAnnotationCreateCopy (CTRubyAnnotationRef* rubyAnnotation);

//	// extern CTRubyAlignment CTRubyAnnotationGetAlignment (CTRubyAnnotationRef _Nonnull rubyAnnotation) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTRubyAlignment CTRubyAnnotationGetAlignment (CTRubyAnnotationRef* rubyAnnotation);

//	// extern CTRubyOverhang CTRubyAnnotationGetOverhang (CTRubyAnnotationRef _Nonnull rubyAnnotation) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTRubyOverhang CTRubyAnnotationGetOverhang (CTRubyAnnotationRef* rubyAnnotation);

//	// extern CGFloat CTRubyAnnotationGetSizeFactor (CTRubyAnnotationRef _Nonnull rubyAnnotation) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nfloat CTRubyAnnotationGetSizeFactor (CTRubyAnnotationRef* rubyAnnotation);

//	// extern CFStringRef _Nullable CTRubyAnnotationGetTextForPosition (CTRubyAnnotationRef _Nonnull rubyAnnotation, CTRubyPosition position) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(macos, introduced=10.10))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFStringRef* CTRubyAnnotationGetTextForPosition (CTRubyAnnotationRef* rubyAnnotation, CTRubyPosition position);

//	// extern CFTypeID CTRunGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTRunGetTypeID ();

//	// extern CFIndex CTRunGetGlyphCount (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe nint CTRunGetGlyphCount (CTRunRef* run);

//	// extern CFDictionaryRef _Nonnull CTRunGetAttributes (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFDictionaryRef* CTRunGetAttributes (CTRunRef* run);

//	// extern CTRunStatus CTRunGetStatus (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTRunStatus CTRunGetStatus (CTRunRef* run);

//	// extern const CGGlyph * _Nullable CTRunGetGlyphsPtr (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe ushort* CTRunGetGlyphsPtr (CTRunRef* run);

//	// extern void CTRunGetGlyphs (CTRunRef _Nonnull run, CFRange range, CGGlyph * _Nonnull buffer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTRunGetGlyphs (CTRunRef* run, CFRange range, ushort[] buffer);

//	// extern const CGPoint * _Nullable CTRunGetPositionsPtr (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGPoint* CTRunGetPositionsPtr (CTRunRef* run);

//	// extern void CTRunGetPositions (CTRunRef _Nonnull run, CFRange range, CGPoint * _Nonnull buffer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTRunGetPositions (CTRunRef* run, CFRange range, CGPoint[] buffer);

//	// extern const CGSize * _Nullable CTRunGetAdvancesPtr (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGSize* CTRunGetAdvancesPtr (CTRunRef* run);

//	// extern void CTRunGetAdvances (CTRunRef _Nonnull run, CFRange range, CGSize * _Nonnull buffer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTRunGetAdvances (CTRunRef* run, CFRange range, CGSize[] buffer);

//	// extern const CFIndex * _Nullable CTRunGetStringIndicesPtr (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe nint* CTRunGetStringIndicesPtr (CTRunRef* run);

//	// extern void CTRunGetStringIndices (CTRunRef _Nonnull run, CFRange range, CFIndex * _Nonnull buffer) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTRunGetStringIndices (CTRunRef* run, CFRange range, nint[] buffer);

//	// extern CFRange CTRunGetStringRange (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CFRange CTRunGetStringRange (CTRunRef* run);

//	// extern double CTRunGetTypographicBounds (CTRunRef _Nonnull run, CFRange range, CGFloat * _Nullable ascent, CGFloat * _Nullable descent, CGFloat * _Nullable leading) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CTRunGetTypographicBounds (CTRunRef* run, CFRange range, [NullAllowed] nfloat* ascent, [NullAllowed] nfloat* descent, [NullAllowed] nfloat* leading);

//	// extern CGRect CTRunGetImageBounds (CTRunRef _Nonnull run, CGContextRef _Nullable context, CFRange range) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGRect CTRunGetImageBounds (CTRunRef* run, [NullAllowed] CGContextRef* context, CFRange range);

//	// extern CGAffineTransform CTRunGetTextMatrix (CTRunRef _Nonnull run) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CGAffineTransform CTRunGetTextMatrix (CTRunRef* run);

//	// extern void CTRunDraw (CTRunRef _Nonnull run, CGContextRef _Nonnull context, CFRange range) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void CTRunDraw (CTRunRef* run, CGContextRef* context, CFRange range);

//	// extern CFTypeID CTRunDelegateGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTRunDelegateGetTypeID ();

//	// extern CTRunDelegateRef _Nullable CTRunDelegateCreate (const CTRunDelegateCallbacks * _Nonnull callbacks, void * _Nullable refCon) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CTRunDelegateRef* CTRunDelegateCreate (CTRunDelegateCallbacks* callbacks, [NullAllowed] void* refCon);

//	// extern void * _Nonnull CTRunDelegateGetRefCon (CTRunDelegateRef _Nonnull runDelegate) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void* CTRunDelegateGetRefCon (CTRunDelegateRef* runDelegate);

//	// extern CFTypeID CTTextTabGetTypeID () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern nuint CTTextTabGetTypeID ();

//	// extern CTTextTabRef _Nonnull CTTextTabCreate (CTTextAlignment alignment, double location, CFDictionaryRef _Nullable options) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTTextTabRef* CTTextTabCreate (CTTextAlignment alignment, double location, [NullAllowed] CFDictionaryRef* options);

//	// extern CTTextAlignment CTTextTabGetAlignment (CTTextTabRef _Nonnull tab) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe CTTextAlignment CTTextTabGetAlignment (CTTextTabRef* tab);

//	// extern double CTTextTabGetLocation (CTTextTabRef _Nonnull tab) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe double CTTextTabGetLocation (CTTextTabRef* tab);

//	// extern CFDictionaryRef _Nullable CTTextTabGetOptions (CTTextTabRef _Nonnull tab) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5))) __attribute__((cf_audited_transfer));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CFDictionaryRef* CTTextTabGetOptions (CTTextTabRef* tab);

//	// extern uint32_t CTGetCoreTextVersion () __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(macos, introduced=10.5)));
//	[Watch (2,0), TV (9,0), Mac (10,5), iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern uint CTGetCoreTextVersion ();

//	// UIEdgeInsets UIEdgeInsetsMake (CGFloat top, CGFloat left, CGFloat bottom, CGFloat right);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIEdgeInsets UIEdgeInsetsMake (nfloat top, nfloat left, nfloat bottom, nfloat right);

//	// NSDirectionalEdgeInsets NSDirectionalEdgeInsetsMake (CGFloat top, CGFloat leading, CGFloat bottom, CGFloat trailing) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0)));
//	[Watch (4,0), TV (11,0), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSDirectionalEdgeInsets NSDirectionalEdgeInsetsMake (nfloat top, nfloat leading, nfloat bottom, nfloat trailing);

//	// CGRect UIEdgeInsetsInsetRect (CGRect rect, UIEdgeInsets insets);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect UIEdgeInsetsInsetRect (CGRect rect, UIEdgeInsets insets);

//	// UIOffset UIOffsetMake (CGFloat horizontal, CGFloat vertical);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIOffset UIOffsetMake (nfloat horizontal, nfloat vertical);

//	// BOOL UIEdgeInsetsEqualToEdgeInsets (UIEdgeInsets insets1, UIEdgeInsets insets2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIEdgeInsetsEqualToEdgeInsets (UIEdgeInsets insets1, UIEdgeInsets insets2);

//	// BOOL NSDirectionalEdgeInsetsEqualToDirectionalEdgeInsets (NSDirectionalEdgeInsets insets1, NSDirectionalEdgeInsets insets2) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0)));
//	[Watch (4,0), TV (11,0), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool NSDirectionalEdgeInsetsEqualToDirectionalEdgeInsets (NSDirectionalEdgeInsets insets1, NSDirectionalEdgeInsets insets2);

//	// BOOL UIOffsetEqualToOffset (UIOffset offset1, UIOffset offset2);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIOffsetEqualToOffset (UIOffset offset1, UIOffset offset2);

//	// extern NSString * _Nonnull NSStringFromCGPoint (CGPoint point) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromCGPoint (CGPoint point);

//	// extern NSString * _Nonnull NSStringFromCGVector (CGVector vector) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromCGVector (CGVector vector);

//	// extern NSString * _Nonnull NSStringFromCGSize (CGSize size) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromCGSize (CGSize size);

//	// extern NSString * _Nonnull NSStringFromCGRect (CGRect rect) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromCGRect (CGRect rect);

//	// extern NSString * _Nonnull NSStringFromCGAffineTransform (CGAffineTransform transform) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromCGAffineTransform (CGAffineTransform transform);

//	// extern NSString * _Nonnull NSStringFromUIEdgeInsets (UIEdgeInsets insets) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromUIEdgeInsets (UIEdgeInsets insets);

//	// extern NSString * _Nonnull NSStringFromDirectionalEdgeInsets (NSDirectionalEdgeInsets insets) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0)));
//	[Watch (4,0), TV (11,0), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromDirectionalEdgeInsets (NSDirectionalEdgeInsets insets);

//	// extern NSString * _Nonnull NSStringFromUIOffset (UIOffset offset) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSString NSStringFromUIOffset (UIOffset offset);

//	// extern CGPoint CGPointFromString (NSString * _Nonnull string) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGPoint CGPointFromString (NSString @string);

//	// extern CGVector CGVectorFromString (NSString * _Nonnull string) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGVector CGVectorFromString (NSString @string);

//	// extern CGSize CGSizeFromString (NSString * _Nonnull string) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGSize CGSizeFromString (NSString @string);

//	// extern CGRect CGRectFromString (NSString * _Nonnull string) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect CGRectFromString (NSString @string);

//	// extern CGAffineTransform CGAffineTransformFromString (NSString * _Nonnull string) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGAffineTransform CGAffineTransformFromString (NSString @string);

//	// extern UIEdgeInsets UIEdgeInsetsFromString (NSString * _Nonnull string) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIEdgeInsets UIEdgeInsetsFromString (NSString @string);

//	// extern NSDirectionalEdgeInsets NSDirectionalEdgeInsetsFromString (NSString * _Nonnull string) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0)));
//	[Watch (4,0), TV (11,0), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSDirectionalEdgeInsets NSDirectionalEdgeInsetsFromString (NSString @string);

//	// extern UIOffset UIOffsetFromString (NSString * _Nonnull string) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIOffset UIOffsetFromString (NSString @string);

//	// extern NSDictionary * _Nonnull _NSDictionaryOfVariableBindings (NSString * _Nonnull commaSeparatedKeysString, id _Nullable firstValue, ...) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSDictionary _NSDictionaryOfVariableBindings (NSString commaSeparatedKeysString, [NullAllowed] NSObject firstValue, IntPtr varArgs);

//	// BOOL UIDeviceOrientationIsPortrait (UIDeviceOrientation orientation) __attribute__((availability(tvos, unavailable)));
//	[NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIDeviceOrientationIsPortrait (UIDeviceOrientation orientation);

//	// BOOL UIDeviceOrientationIsLandscape (UIDeviceOrientation orientation) __attribute__((availability(tvos, unavailable)));
//	[NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIDeviceOrientationIsLandscape (UIDeviceOrientation orientation);

//	// UIUserInterfaceIdiom UI_USER_INTERFACE_IDIOM ();
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIUserInterfaceIdiom UI_USER_INTERFACE_IDIOM ();

//	// extern BOOL UIContentSizeCategoryIsAccessibilityCategory (UIContentSizeCategory _Nonnull category) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0)));
//	[Watch (4,0), TV (11,0), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIContentSizeCategoryIsAccessibilityCategory (NSString category);

//	// extern NSComparisonResult UIContentSizeCategoryCompareToCategory (UIContentSizeCategory _Nonnull lhs, UIContentSizeCategory _Nonnull rhs) __attribute__((visibility("default"))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, introduced=11.0)));
//	[Watch (4,0), TV (11,0), iOS (11,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSComparisonResult UIContentSizeCategoryCompareToCategory (NSString lhs, NSString rhs);

//	// extern NSData * _Nullable UIImagePNGRepresentation (UIImage * _Nonnull image) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSData UIImagePNGRepresentation (UIImage image);

//	// extern NSData * _Nullable UIImageJPEGRepresentation (UIImage * _Nonnull image, CGFloat compressionQuality) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSData UIImageJPEGRepresentation (UIImage image, nfloat compressionQuality);

//	// extern void UIAccessibilityZoomFocusChanged (UIAccessibilityZoomType type, CGRect frame, UIView * _Nonnull view) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIAccessibilityZoomFocusChanged (UIAccessibilityZoomType type, CGRect frame, UIView view);

//	// extern void UIAccessibilityRegisterGestureConflictWithZoom () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIAccessibilityRegisterGestureConflictWithZoom ();

//	// extern UIGuidedAccessRestrictionState UIGuidedAccessRestrictionStateForIdentifier (NSString * _Nonnull restrictionIdentifier) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIGuidedAccessRestrictionState UIGuidedAccessRestrictionStateForIdentifier (NSString restrictionIdentifier);

//	// extern CGRect UIAccessibilityConvertFrameToScreenCoordinates (CGRect rect, UIView * _Nonnull view) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect UIAccessibilityConvertFrameToScreenCoordinates (CGRect rect, UIView view);

//	// extern UIBezierPath * _Nonnull UIAccessibilityConvertPathToScreenCoordinates (UIBezierPath * _Nonnull path, UIView * _Nonnull view) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIBezierPath UIAccessibilityConvertPathToScreenCoordinates (UIBezierPath path, UIView view);

//	// extern id _Nullable UIAccessibilityFocusedElement (NSString * _Nullable assistiveTechnologyIdentifier) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern NSObject UIAccessibilityFocusedElement ([NullAllowed] NSString assistiveTechnologyIdentifier);

//	// extern void UIAccessibilityPostNotification (UIAccessibilityNotifications notification, id _Nullable argument) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIAccessibilityPostNotification (uint notification, [NullAllowed] NSObject argument);

//	// extern BOOL UIAccessibilityIsVoiceOverRunning () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsVoiceOverRunning ();

//	// extern BOOL UIAccessibilityIsMonoAudioEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsMonoAudioEnabled ();

//	// extern BOOL UIAccessibilityIsClosedCaptioningEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
//	[iOS (5,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsClosedCaptioningEnabled ();

//	// extern BOOL UIAccessibilityIsInvertColorsEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsInvertColorsEnabled ();

//	// extern BOOL UIAccessibilityIsGuidedAccessEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsGuidedAccessEnabled ();

//	// extern BOOL UIAccessibilityIsBoldTextEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsBoldTextEnabled ();

//	// extern BOOL UIAccessibilityIsGrayscaleEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsGrayscaleEnabled ();

//	// extern BOOL UIAccessibilityIsReduceTransparencyEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsReduceTransparencyEnabled ();

//	// extern BOOL UIAccessibilityIsReduceMotionEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsReduceMotionEnabled ();

//	// extern BOOL UIAccessibilityDarkerSystemColorsEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityDarkerSystemColorsEnabled ();

//	// extern BOOL UIAccessibilityIsSwitchControlRunning () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsSwitchControlRunning ();

//	// extern BOOL UIAccessibilityIsSpeakSelectionEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsSpeakSelectionEnabled ();

//	// extern BOOL UIAccessibilityIsSpeakScreenEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
//	[iOS (8,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsSpeakScreenEnabled ();

//	// extern BOOL UIAccessibilityIsShakeToUndoEnabled () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsShakeToUndoEnabled ();

//	// extern BOOL UIAccessibilityIsAssistiveTouchRunning () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
//	[iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIAccessibilityIsAssistiveTouchRunning ();

//	// extern void UIAccessibilityRequestGuidedAccessSession (BOOL enable, void (^ _Nonnull)(BOOL) completionHandler) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
//	[iOS (7,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIAccessibilityRequestGuidedAccessSession (bool enable, Action<bool> completionHandler);

//	// extern UIAccessibilityHearingDeviceEar UIAccessibilityHearingDevicePairedEar () __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=10.0)));
//	[NoTV, iOS (10,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIAccessibilityHearingDeviceEar UIAccessibilityHearingDevicePairedEar ();

//	// extern CTTextAlignment NSTextAlignmentToCTTextAlignment (NSTextAlignment nsTextAlignment) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CTTextAlignment NSTextAlignmentToCTTextAlignment (NSTextAlignment nsTextAlignment);

//	// extern NSTextAlignment NSTextAlignmentFromCTTextAlignment (CTTextAlignment ctTextAlignment) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
//	[iOS (6,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern NSTextAlignment NSTextAlignmentFromCTTextAlignment (CTTextAlignment ctTextAlignment);

//	// BOOL UIInterfaceOrientationIsPortrait (UIInterfaceOrientation orientation) __attribute__((availability(tvos, unavailable)));
//	[NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIInterfaceOrientationIsPortrait (UIInterfaceOrientation orientation);

//	// BOOL UIInterfaceOrientationIsLandscape (UIInterfaceOrientation orientation) __attribute__((availability(tvos, unavailable)));
//	[NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIInterfaceOrientationIsLandscape (UIInterfaceOrientation orientation);

//	// extern int UIApplicationMain (int argc, char * _Nonnull * _Null_unspecified argv, NSString * _Nullable principalClassName, NSString * _Nullable delegateClassName) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe int UIApplicationMain (int argc, sbyte** argv, [NullAllowed] NSString principalClassName, [NullAllowed] NSString delegateClassName);

//	// extern CGContextRef _Nullable UIGraphicsGetCurrentContext () __attribute__((visibility("default"))) __attribute__((cf_returns_not_retained));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern unsafe CGContextRef* UIGraphicsGetCurrentContext ();

//	// extern void UIGraphicsPushContext (CGContextRef _Nonnull context) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void UIGraphicsPushContext (CGContextRef* context);

//	// extern void UIGraphicsPopContext () __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsPopContext ();

//	// extern void UIRectFillUsingBlendMode (CGRect rect, CGBlendMode blendMode) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIRectFillUsingBlendMode (CGRect rect, CGBlendMode blendMode);

//	// extern void UIRectFill (CGRect rect) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIRectFill (CGRect rect);

//	// extern void UIRectFrameUsingBlendMode (CGRect rect, CGBlendMode blendMode) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIRectFrameUsingBlendMode (CGRect rect, CGBlendMode blendMode);

//	// extern void UIRectFrame (CGRect rect) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIRectFrame (CGRect rect);

//	// extern void UIRectClip (CGRect rect) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIRectClip (CGRect rect);

//	// extern void UIGraphicsBeginImageContext (CGSize size) __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsBeginImageContext (CGSize size);

//	// extern void UIGraphicsBeginImageContextWithOptions (CGSize size, BOOL opaque, CGFloat scale) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
//	[iOS (4,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsBeginImageContextWithOptions (CGSize size, bool opaque, nfloat scale);

//	// extern UIImage * _Nullable UIGraphicsGetImageFromCurrentImageContext () __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	[return: NullAllowed]
//	static extern UIImage UIGraphicsGetImageFromCurrentImageContext ();

//	// extern void UIGraphicsEndImageContext () __attribute__((visibility("default")));
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsEndImageContext ();

//	// extern BOOL UIGraphicsBeginPDFContextToFile (NSString * _Nonnull path, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIGraphicsBeginPDFContextToFile (NSString path, CGRect bounds, [NullAllowed] NSDictionary documentInfo);

//	// extern void UIGraphicsBeginPDFContextToData (NSMutableData * _Nonnull data, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsBeginPDFContextToData (NSMutableData data, CGRect bounds, [NullAllowed] NSDictionary documentInfo);

//	// extern void UIGraphicsEndPDFContext () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsEndPDFContext ();

//	// extern void UIGraphicsBeginPDFPage () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsBeginPDFPage ();

//	// extern void UIGraphicsBeginPDFPageWithInfo (CGRect bounds, NSDictionary * _Nullable pageInfo) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsBeginPDFPageWithInfo (CGRect bounds, [NullAllowed] NSDictionary pageInfo);

//	// extern CGRect UIGraphicsGetPDFContextBounds () __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern CGRect UIGraphicsGetPDFContextBounds ();

//	// extern void UIGraphicsSetPDFContextURLForRect (NSURL * _Nonnull url, CGRect rect) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsSetPDFContextURLForRect (NSUrl url, CGRect rect);

//	// extern void UIGraphicsAddPDFContextDestinationAtPoint (NSString * _Nonnull name, CGPoint point) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsAddPDFContextDestinationAtPoint (NSString name, CGPoint point);

//	// extern void UIGraphicsSetPDFContextDestinationForRect (NSString * _Nonnull name, CGRect rect) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
//	[iOS (3,2)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern void UIGraphicsSetPDFContextDestinationForRect (NSString name, CGRect rect);

//	// extern void UIImageWriteToSavedPhotosAlbum (UIImage * _Nonnull image, id _Nullable completionTarget, SEL _Nullable completionSelector, void * _Nullable contextInfo) __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
//	[NoTV]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void UIImageWriteToSavedPhotosAlbum (UIImage image, [NullAllowed] NSObject completionTarget, [NullAllowed] Selector completionSelector, [NullAllowed] void* contextInfo);

//	// extern BOOL UIVideoAtPathIsCompatibleWithSavedPhotosAlbum (NSString * _Nonnull videoPath) __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=3.1)));
//	[NoTV, iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIVideoAtPathIsCompatibleWithSavedPhotosAlbum (NSString videoPath);

//	// extern void UISaveVideoAtPathToSavedPhotosAlbum (NSString * _Nonnull videoPath, id _Nullable completionTarget, SEL _Nullable completionSelector, void * _Nullable contextInfo) __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=3.1)));
//	[NoTV, iOS (3,1)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern unsafe void UISaveVideoAtPathToSavedPhotosAlbum (NSString videoPath, [NullAllowed] NSObject completionTarget, [NullAllowed] Selector completionSelector, [NullAllowed] void* contextInfo);

//	// extern BOOL UIFloatRangeIsInfinite (UIFloatRange range) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIFloatRangeIsInfinite (UIFloatRange range);

//	// extern BOOL UIFloatRangeIsEqualToRange (UIFloatRange range, UIFloatRange otherRange) __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
//	[iOS (9,0)]
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern bool UIFloatRangeIsEqualToRange (UIFloatRange range, UIFloatRange otherRange);

//	// UIFloatRange UIFloatRangeMake (CGFloat minimum, CGFloat maximum);
//	[DllImport ("__Internal")]
//	[Verify (PlatformInvoke)]
//	static extern UIFloatRange UIFloatRangeMake (nfloat minimum, nfloat maximum);
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct mbstate_t
//{
//	[FieldOffset (0)]
//	public sbyte[] __mbstate8;

//	[FieldOffset (0)]
//	public long _mbstateL;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __darwin_pthread_handler_rec
//{
//	public unsafe Action<void*>* __routine;

//	public unsafe void* __arg;

//	public unsafe __darwin_pthread_handler_rec* __next;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_attr_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_cond_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_condattr_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_mutex_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_mutexattr_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_once_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_rwlock_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pthread_rwlockattr_t
//{
//	public nint __sig;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _opaque_pthread_t
//{
//	public nint __sig;

//	public unsafe __darwin_pthread_handler_rec* __cleanup_stack;

//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _RuneEntry
//{
//	public int __min;

//	public int __max;

//	public int __map;

//	public unsafe uint* __types;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _RuneRange
//{
//	public int __nranges;

//	public unsafe _RuneEntry* __ranges;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _RuneCharClass
//{
//	public sbyte[] __name;

//	public uint __mask;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _RuneLocale
//{
//	public sbyte[] __magic;

//	public sbyte[] __encoding;

//	public unsafe Func<sbyte*, nuint, sbyte**, int>* __sgetrune;

//	public unsafe Func<int, sbyte*, nuint, sbyte**, int>* __sputrune;

//	public int __invalid_rune;

//	public uint[] __runetype;

//	public int[] __maplower;

//	public int[] __mapupper;

//	public _RuneRange __runetype_ext;

//	public _RuneRange __maplower_ext;

//	public _RuneRange __mapupper_ext;

//	public unsafe void* __variable;

//	public int __variable_len;

//	public int __ncharclasses;

//	public unsafe _RuneCharClass* __charclasses;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fenv_t
//{
//	public ulong __fpsr;

//	public ulong __fpcr;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum __fpcr_ : uint
//{
//	trap_invalid = 256,
//	trap_divbyzero = 512,
//	trap_overflow = 1024,
//	trap_underflow = 2048,
//	trap_inexact = 4096,
//	trap_denormal = 32768,
//	flush_to_zero = 16777216
//}

//public enum  : uint
//{
//	__fpsr_saturation = 134217728
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct imaxdiv_t
//{
//	public nint quot;

//	public nint rem;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct lconv
//{
//	public unsafe sbyte* decimal_point;

//	public unsafe sbyte* thousands_sep;

//	public unsafe sbyte* grouping;

//	public unsafe sbyte* int_curr_symbol;

//	public unsafe sbyte* currency_symbol;

//	public unsafe sbyte* mon_decimal_point;

//	public unsafe sbyte* mon_thousands_sep;

//	public unsafe sbyte* mon_grouping;

//	public unsafe sbyte* positive_sign;

//	public unsafe sbyte* negative_sign;

//	public sbyte int_frac_digits;

//	public sbyte frac_digits;

//	public sbyte p_cs_precedes;

//	public sbyte p_sep_by_space;

//	public sbyte n_cs_precedes;

//	public sbyte n_sep_by_space;

//	public sbyte p_sign_posn;

//	public sbyte n_sign_posn;

//	public sbyte int_p_cs_precedes;

//	public sbyte int_n_cs_precedes;

//	public sbyte int_p_sep_by_space;

//	public sbyte int_n_sep_by_space;

//	public sbyte int_p_sign_posn;

//	public sbyte int_n_sign_posn;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct 
//{
//	[FieldOffset (0)]
//	public float __f;

//	[FieldOffset (0)]
//	public uint __u;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct 
//{
//	[FieldOffset (0)]
//	public double __f;

//	[FieldOffset (0)]
//	public ulong __u;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct 
//{
//	[FieldOffset (0)]
//	public [unsupported Builtin: long double] __f;

//	[FieldOffset (0)]
//	public ulong __u;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __float2
//{
//	public float __sinval;

//	public float __cosval;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __double2
//{
//	public double __sinval;

//	public double __cosval;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct exception
//{
//	public int type;

//	public unsafe sbyte* name;

//	public double arg1;

//	public double arg2;

//	public double retval;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_exception_state32_t
//{
//	public uint __exception;

//	public uint __fsr;

//	public uint __far;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_exception_state64_t
//{
//	public ulong __far;

//	public uint __esr;

//	public uint __exception;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_thread_state32_t
//{
//	public uint[] __r;

//	public uint __sp;

//	public uint __lr;

//	public uint __pc;

//	public uint __cpsr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_thread_state64_t
//{
//	public ulong[] __x;

//	public ulong __fp;

//	public ulong __lr;

//	public ulong __sp;

//	public ulong __pc;

//	public uint __cpsr;

//	public uint __pad;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_vfp_state_t
//{
//	public uint[] __r;

//	public uint __fpscr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_neon_state64_t
//{
//	public [unsupported Builtin: unsigned __int128][] __v;

//	public uint __fpsr;

//	public uint __fpcr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_neon_state32_t
//{
//	public [unsupported Builtin: unsigned __int128][] __v;

//	public uint __fpsr;

//	public uint __fpcr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_debug_state_t
//{
//	public uint[] __bvr;

//	public uint[] __bcr;

//	public uint[] __wvr;

//	public uint[] __wcr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_debug_state32_t
//{
//	public uint[] __bvr;

//	public uint[] __bcr;

//	public uint[] __wvr;

//	public uint[] __wcr;

//	public ulong __mdscr_el1;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_debug_state64_t
//{
//	public ulong[] __bvr;

//	public ulong[] __bcr;

//	public ulong[] __wvr;

//	public ulong[] __wcr;

//	public ulong __mdscr_el1;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __darwin_arm_cpmu_state64
//{
//	public ulong[] __ctrs;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __darwin_mcontext32
//{
//	public __darwin_arm_exception_state __es;

//	public __darwin_arm_thread_state __ss;

//	public __darwin_arm_vfp_state __fs;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __darwin_mcontext64
//{
//	public __darwin_arm_exception_state64 __es;

//	public __darwin_arm_thread_state64 __ss;

//	public __darwin_arm_neon_state64 __ns;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct stack_t
//{
//	public unsafe void* ss_sp;

//	public nuint ss_size;

//	public int ss_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ucontext_t
//{
//	public int uc_onstack;

//	public uint uc_sigmask;

//	public __darwin_sigaltstack uc_stack;

//	public unsafe __darwin_ucontext* uc_link;

//	public nuint uc_mcsize;

//	public unsafe __darwin_mcontext64* uc_mcontext;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct sigval
//{
//	[FieldOffset (0)]
//	public int sival_int;

//	[FieldOffset (0)]
//	public unsafe void* sival_ptr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sigevent
//{
//	public int sigev_notify;

//	public int sigev_signo;

//	public sigval sigev_value;

//	public unsafe Action<sigval>* sigev_notify_function;

//	public unsafe pthread_attr_t* sigev_notify_attributes;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct siginfo_t
//{
//	public int si_signo;

//	public int si_errno;

//	public int si_code;

//	public int si_pid;

//	public uint si_uid;

//	public int si_status;

//	public unsafe void* si_addr;

//	public sigval si_value;

//	public nint si_band;

//	public nuint[] __pad;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __sigaction_u
//{
//	[FieldOffset (0)]
//	public unsafe Action<int>* __sa_handler;

//	[FieldOffset (0)]
//	public unsafe Action<int, Darwin.__siginfo*, void*>* __sa_sigaction;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __sigaction
//{
//	public __sigaction_u __sigaction_u;

//	public unsafe Action<void*, int, int, Darwin.siginfo_t*, void*>* sa_tramp;

//	public uint sa_mask;

//	public int sa_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sigaction
//{
//	public __sigaction_u __sigaction_u;

//	public uint sa_mask;

//	public int sa_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sigvec
//{
//	public unsafe Action<int>* sv_handler;

//	public int sv_mask;

//	public int sv_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sigstack
//{
//	public unsafe sbyte* ss_sp;

//	public int ss_onstack;
//}

//public enum memory_order : uint
//{
//	relaxed = 0,
//	consume = 1,
//	acquire = 2,
//	release = 3,
//	acq_rel = 4,
//	seq_cst = 5
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct atomic_flag
//{
//	public [unsupported Atomic: _Atomic(_Bool)] _Value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __sbuf
//{
//	public unsafe byte* _base;

//	public int _size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct FILE
//{
//	public unsafe byte* _p;

//	public int _r;

//	public int _w;

//	public short _flags;

//	public short _file;

//	public __sbuf _bf;

//	public int _lbfsize;

//	public unsafe void* _cookie;

//	public unsafe Func<void*, int>* _close;

//	public unsafe Func<void*, sbyte*, int, int>* _read;

//	public unsafe Func<void*, long, int, long>* _seek;

//	public unsafe Func<void*, sbyte*, int, int>* _write;

//	public __sbuf _ub;

//	public unsafe __sFILEX* _extra;

//	public int _ur;

//	public byte[] _ubuf;

//	public byte[] _nbuf;

//	public __sbuf _lb;

//	public int _blksize;

//	public long _offset;
//}

//public enum idtype_t : uint
//{
//	All,
//	Pid,
//	Pgid
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct timeval
//{
//	public nint tv_sec;

//	public int tv_usec;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rusage
//{
//	public timeval ru_utime;

//	public timeval ru_stime;

//	public nint ru_maxrss;

//	public nint ru_ixrss;

//	public nint ru_idrss;

//	public nint ru_isrss;

//	public nint ru_minflt;

//	public nint ru_majflt;

//	public nint ru_nswap;

//	public nint ru_inblock;

//	public nint ru_oublock;

//	public nint ru_msgsnd;

//	public nint ru_msgrcv;

//	public nint ru_nsignals;

//	public nint ru_nvcsw;

//	public nint ru_nivcsw;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rusage_info_v0
//{
//	public byte[] ri_uuid;

//	public ulong ri_user_time;

//	public ulong ri_system_time;

//	public ulong ri_pkg_idle_wkups;

//	public ulong ri_interrupt_wkups;

//	public ulong ri_pageins;

//	public ulong ri_wired_size;

//	public ulong ri_resident_size;

//	public ulong ri_phys_footprint;

//	public ulong ri_proc_start_abstime;

//	public ulong ri_proc_exit_abstime;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rusage_info_v1
//{
//	public byte[] ri_uuid;

//	public ulong ri_user_time;

//	public ulong ri_system_time;

//	public ulong ri_pkg_idle_wkups;

//	public ulong ri_interrupt_wkups;

//	public ulong ri_pageins;

//	public ulong ri_wired_size;

//	public ulong ri_resident_size;

//	public ulong ri_phys_footprint;

//	public ulong ri_proc_start_abstime;

//	public ulong ri_proc_exit_abstime;

//	public ulong ri_child_user_time;

//	public ulong ri_child_system_time;

//	public ulong ri_child_pkg_idle_wkups;

//	public ulong ri_child_interrupt_wkups;

//	public ulong ri_child_pageins;

//	public ulong ri_child_elapsed_abstime;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rusage_info_v2
//{
//	public byte[] ri_uuid;

//	public ulong ri_user_time;

//	public ulong ri_system_time;

//	public ulong ri_pkg_idle_wkups;

//	public ulong ri_interrupt_wkups;

//	public ulong ri_pageins;

//	public ulong ri_wired_size;

//	public ulong ri_resident_size;

//	public ulong ri_phys_footprint;

//	public ulong ri_proc_start_abstime;

//	public ulong ri_proc_exit_abstime;

//	public ulong ri_child_user_time;

//	public ulong ri_child_system_time;

//	public ulong ri_child_pkg_idle_wkups;

//	public ulong ri_child_interrupt_wkups;

//	public ulong ri_child_pageins;

//	public ulong ri_child_elapsed_abstime;

//	public ulong ri_diskio_bytesread;

//	public ulong ri_diskio_byteswritten;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rusage_info_v3
//{
//	public byte[] ri_uuid;

//	public ulong ri_user_time;

//	public ulong ri_system_time;

//	public ulong ri_pkg_idle_wkups;

//	public ulong ri_interrupt_wkups;

//	public ulong ri_pageins;

//	public ulong ri_wired_size;

//	public ulong ri_resident_size;

//	public ulong ri_phys_footprint;

//	public ulong ri_proc_start_abstime;

//	public ulong ri_proc_exit_abstime;

//	public ulong ri_child_user_time;

//	public ulong ri_child_system_time;

//	public ulong ri_child_pkg_idle_wkups;

//	public ulong ri_child_interrupt_wkups;

//	public ulong ri_child_pageins;

//	public ulong ri_child_elapsed_abstime;

//	public ulong ri_diskio_bytesread;

//	public ulong ri_diskio_byteswritten;

//	public ulong ri_cpu_time_qos_default;

//	public ulong ri_cpu_time_qos_maintenance;

//	public ulong ri_cpu_time_qos_background;

//	public ulong ri_cpu_time_qos_utility;

//	public ulong ri_cpu_time_qos_legacy;

//	public ulong ri_cpu_time_qos_user_initiated;

//	public ulong ri_cpu_time_qos_user_interactive;

//	public ulong ri_billed_system_time;

//	public ulong ri_serviced_system_time;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rusage_info_current
//{
//	public byte[] ri_uuid;

//	public ulong ri_user_time;

//	public ulong ri_system_time;

//	public ulong ri_pkg_idle_wkups;

//	public ulong ri_interrupt_wkups;

//	public ulong ri_pageins;

//	public ulong ri_wired_size;

//	public ulong ri_resident_size;

//	public ulong ri_phys_footprint;

//	public ulong ri_proc_start_abstime;

//	public ulong ri_proc_exit_abstime;

//	public ulong ri_child_user_time;

//	public ulong ri_child_system_time;

//	public ulong ri_child_pkg_idle_wkups;

//	public ulong ri_child_interrupt_wkups;

//	public ulong ri_child_pageins;

//	public ulong ri_child_elapsed_abstime;

//	public ulong ri_diskio_bytesread;

//	public ulong ri_diskio_byteswritten;

//	public ulong ri_cpu_time_qos_default;

//	public ulong ri_cpu_time_qos_maintenance;

//	public ulong ri_cpu_time_qos_background;

//	public ulong ri_cpu_time_qos_utility;

//	public ulong ri_cpu_time_qos_legacy;

//	public ulong ri_cpu_time_qos_user_initiated;

//	public ulong ri_cpu_time_qos_user_interactive;

//	public ulong ri_billed_system_time;

//	public ulong ri_serviced_system_time;

//	public ulong ri_logical_writes;

//	public ulong ri_lifetime_max_phys_footprint;

//	public ulong ri_instructions;

//	public ulong ri_cycles;

//	public ulong ri_billed_energy;

//	public ulong ri_serviced_energy;

//	public ulong[] ri_unused;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rlimit
//{
//	public ulong rlim_cur;

//	public ulong rlim_max;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct proc_rlimit_control_wakeupmon
//{
//	public uint wm_flags;

//	public int wm_rate;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct ullc
//{
//	[FieldOffset (0)]
//	public ulong ull;

//	[FieldOffset (0)]
//	public uint[] ul;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct wait
//{
//	[FieldOffset (0)]
//	public int w_status;

//	[StructLayout (LayoutKind.Sequential)]
//	public struct W_T
//	{
//		public uint w_Termsig;

//		public uint w_Coredump;

//		public uint w_Retcode;

//		public uint w_Filler;
//	}


//	[FieldOffset (0)]
//	public W_T w_T;

//	[StructLayout (LayoutKind.Sequential)]
//	public struct W_S
//	{
//		public uint w_Stopval;

//		public uint w_Stopsig;

//		public uint w_Filler;
//	}


//	[FieldOffset (0)]
//	public W_S w_S;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct div_t
//{
//	public int quot;

//	public int rem;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ldiv_t
//{
//	public nint quot;

//	public nint rem;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct lldiv_t
//{
//	public long quot;

//	public long rem;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct timespec
//{
//	public nint tv_sec;

//	public nint tv_nsec;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct tm
//{
//	public int tm_sec;

//	public int tm_min;

//	public int tm_hour;

//	public int tm_mday;

//	public int tm_mon;

//	public int tm_year;

//	public int tm_wday;

//	public int tm_yday;

//	public int tm_isdst;

//	public nint tm_gmtoff;

//	public unsafe sbyte* tm_zone;
//}

//public enum clockid_t : uint
//{
//	Realtime = 0,
//	Monotonic = 6,
//	MonotonicRaw = 4,
//	MonotonicRawApprox = 5,
//	UptimeRaw = 8,
//	UptimeRawApprox = 9,
//	ProcessCputimeId = 12,
//	ThreadCputimeId = 16
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct winsize
//{
//	public ushort ws_row;

//	public ushort ws_col;

//	public ushort ws_xpixel;

//	public ushort ws_ypixel;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fd_set
//{
//	public int[] fds_bits;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct passwd
//{
//	public unsafe sbyte* pw_name;

//	public unsafe sbyte* pw_passwd;

//	public uint pw_uid;

//	public uint pw_gid;

//	public nint pw_change;

//	public unsafe sbyte* pw_class;

//	public unsafe sbyte* pw_gecos;

//	public unsafe sbyte* pw_dir;

//	public unsafe sbyte* pw_shell;

//	public nint pw_expire;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct termios
//{
//	public nuint c_iflag;

//	public nuint c_oflag;

//	public nuint c_cflag;

//	public nuint c_lflag;

//	public byte[] c_cc;

//	public nuint c_ispeed;

//	public nuint c_ospeed;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct aiocb
//{
//	public int aio_fildes;

//	public long aio_offset;

//	public unsafe void* aio_buf;

//	public nuint aio_nbytes;

//	public int aio_reqprio;

//	public sigevent aio_sigevent;

//	public int aio_lio_opcode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct iovec
//{
//	public unsafe void* iov_base;

//	public nuint iov_len;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sa_endpoints_t
//{
//	public uint sae_srcif;

//	public unsafe sockaddr* sae_srcaddr;

//	public uint sae_srcaddrlen;

//	public unsafe sockaddr* sae_dstaddr;

//	public uint sae_dstaddrlen;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct linger
//{
//	public int l_onoff;

//	public int l_linger;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct so_np_extensions
//{
//	public uint npx_flags;

//	public uint npx_mask;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sockaddr
//{
//	public byte sa_len;

//	public byte sa_family;

//	public sbyte[] sa_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sockproto
//{
//	public ushort sp_family;

//	public ushort sp_protocol;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sockaddr_storage
//{
//	public byte ss_len;

//	public byte ss_family;

//	public sbyte[] __ss_pad1;

//	public long __ss_align;

//	public sbyte[] __ss_pad2;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct msghdr
//{
//	public unsafe void* msg_name;

//	public uint msg_namelen;

//	public unsafe iovec* msg_iov;

//	public int msg_iovlen;

//	public unsafe void* msg_control;

//	public uint msg_controllen;

//	public int msg_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct cmsghdr
//{
//	public uint cmsg_len;

//	public int cmsg_level;

//	public int cmsg_type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sf_hdtr
//{
//	public unsafe iovec* headers;

//	public int hdr_cnt;

//	public unsafe iovec* trailers;

//	public int trl_cnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct in_addr
//{
//	public uint s_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sockaddr_in
//{
//	public byte sin_len;

//	public byte sin_family;

//	public ushort sin_port;

//	public in_addr sin_addr;

//	public sbyte[] sin_zero;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ip_opts
//{
//	public in_addr ip_dst;

//	public sbyte[] ip_opts;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ip_mreq
//{
//	public in_addr imr_multiaddr;

//	public in_addr imr_interface;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ip_mreqn
//{
//	public in_addr imr_multiaddr;

//	public in_addr imr_address;

//	public int imr_ifindex;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ip_mreq_source
//{
//	public in_addr imr_multiaddr;

//	public in_addr imr_sourceaddr;

//	public in_addr imr_interface;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct group_req
//{
//	public uint gr_interface;

//	public sockaddr_storage gr_group;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct group_source_req
//{
//	public uint gsr_interface;

//	public sockaddr_storage gsr_group;

//	public sockaddr_storage gsr_source;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __msfilterreq
//{
//	public uint msfr_ifindex;

//	public uint msfr_fmode;

//	public uint msfr_nsrcs;

//	public uint __msfr_align;

//	public sockaddr_storage msfr_group;

//	public unsafe sockaddr_storage* msfr_srcs;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct in_pktinfo
//{
//	public uint ipi_ifindex;

//	public in_addr ipi_spec_dst;

//	public in_addr ipi_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct in6_addr
//{
//	[StructLayout (LayoutKind.Explicit)]
//	public struct ___u6_addr
//	{
//		[FieldOffset (0)]
//		public byte[] __u6_addr8;

//		[FieldOffset (0)]
//		public ushort[] __u6_addr16;

//		[FieldOffset (0)]
//		public uint[] __u6_addr32;
//	}


//	public ___u6_addr __u6_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sockaddr_in6
//{
//	public byte sin6_len;

//	public byte sin6_family;

//	public ushort sin6_port;

//	public uint sin6_flowinfo;

//	public in6_addr sin6_addr;

//	public uint sin6_scope_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ipv6_mreq
//{
//	public in6_addr ipv6mr_multiaddr;

//	public uint ipv6mr_interface;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct in6_pktinfo
//{
//	public in6_addr ipi6_addr;

//	public uint ipi6_ifindex;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ip6_mtuinfo
//{
//	public sockaddr_in6 ip6m_addr;

//	public uint ip6m_mtu;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct dirent
//{
//	public ulong d_ino;

//	public ulong d_seekoff;

//	public ushort d_reclen;

//	public ushort d_namlen;

//	public byte d_type;

//	public sbyte[] d_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct DIR
//{
//	public int __dd_fd;

//	public nint __dd_loc;

//	public nint __dd_size;

//	public unsafe sbyte* __dd_buf;

//	public int __dd_len;

//	public nint __dd_seek;

//	public nint __padding;

//	public int __dd_flags;

//	public __darwin_pthread_mutex_t __dd_lock;

//	public unsafe _telldir* __dd_td;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct Dl_info
//{
//	public unsafe sbyte* dli_fname;

//	public unsafe void* dli_fbase;

//	public unsafe sbyte* dli_sname;

//	public unsafe void* dli_saddr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct flock
//{
//	public long l_start;

//	public long l_len;

//	public int l_pid;

//	public short l_type;

//	public short l_whence;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct flocktimeout
//{
//	public flock fl;

//	public timespec timeout;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct radvisory
//{
//	public long ra_offset;

//	public int ra_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fcodeblobs_t
//{
//	public unsafe void* f_cd_hash;

//	public nuint f_hash_size;

//	public unsafe void* f_cd_buffer;

//	public nuint f_cd_size;

//	public unsafe uint* f_out_size;

//	public int f_arch;

//	public int __padding;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fsignatures_t
//{
//	public long fs_file_start;

//	public unsafe void* fs_blob_start;

//	public nuint fs_blob_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fchecklv_t
//{
//	public long lv_file_start;

//	public nuint lv_error_message_size;

//	public unsafe void* lv_error_message;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fstore_t
//{
//	public uint fst_flags;

//	public int fst_posmode;

//	public long fst_offset;

//	public long fst_length;

//	public long fst_bytesalloc;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fpunchhole_t
//{
//	public uint fp_flags;

//	public uint reserved;

//	public long fp_offset;

//	public long fp_length;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ftrimactivefile_t
//{
//	public long fta_offset;

//	public long fta_length;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fbootstraptransfer_t
//{
//	public long fbt_offset;

//	public nuint fbt_length;

//	public unsafe void* fbt_buffer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct log2phys
//{
//	public uint l2p_flags;

//	public long l2p_contigbytes;

//	public long l2p_devoffset;
//}

//public enum filesec_property_t : uint
//{
//	Owner = 1,
//	Group = 2,
//	Uuid = 3,
//	Mode = 4,
//	Acl = 5,
//	Grpuuid = 6,
//	AclRaw = 100,
//	AclAllocsize = 101
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ostat
//{
//	public ushort st_dev;

//	public ulong st_ino;

//	public ushort st_mode;

//	public ushort st_nlink;

//	public ushort st_uid;

//	public ushort st_gid;

//	public ushort st_rdev;

//	public int st_size;

//	public timespec st_atimespec;

//	public timespec st_mtimespec;

//	public timespec st_ctimespec;

//	public int st_blksize;

//	public int st_blocks;

//	public uint st_flags;

//	public uint st_gen;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct stat
//{
//	public int st_dev;

//	public ushort st_mode;

//	public ushort st_nlink;

//	public ulong st_ino;

//	public uint st_uid;

//	public uint st_gid;

//	public int st_rdev;

//	public timespec st_atimespec;

//	public timespec st_mtimespec;

//	public timespec st_ctimespec;

//	public timespec st_birthtimespec;

//	public long st_size;

//	public long st_blocks;

//	public int st_blksize;

//	public uint st_flags;

//	public uint st_gen;

//	public int st_lspare;

//	public long[] st_qspare;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct FTW
//{
//	public int @base;

//	public int level;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct glob_t
//{
//	public nuint gl_pathc;

//	public int gl_matchc;

//	public nuint gl_offs;

//	public int gl_flags;

//	public unsafe sbyte** gl_pathv;

//	[StructLayout (LayoutKind.Explicit)]
//	public struct _
//	{
//		[FieldOffset (0)]
//		public unsafe Func<sbyte*, int, int>* gl_errfunc;

//		[FieldOffset (0)]
//		public unsafe Func<sbyte*, int, int> gl_errblk;
//	}


//	public _ ;

//	public unsafe Action<void*>* gl_closedir;

//	public unsafe Func<void*, Darwin.dirent*>* gl_readdir;

//	public unsafe Func<sbyte*, void*>* gl_opendir;

//	public unsafe Func<sbyte*, Darwin.stat*, int>* gl_lstat;

//	public unsafe Func<sbyte*, Darwin.stat*, int>* gl_stat;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct group
//{
//	public unsafe sbyte* gr_name;

//	public unsafe sbyte* gr_passwd;

//	public uint gr_gid;

//	public unsafe sbyte** gr_mem;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct iconv_hooks
//{
//	public unsafe iconv_unicode_char_hook* uc_hook;

//	public unsafe iconv_wide_char_hook* wc_hook;

//	public unsafe void* data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct iconv_fallbacks
//{
//	public unsafe iconv_unicode_mb_to_uc_fallback* mb_to_uc_fallback;

//	public unsafe iconv_unicode_uc_to_mb_fallback* uc_to_mb_fallback;

//	public unsafe iconv_wchar_mb_to_wc_fallback* mb_to_wc_fallback;

//	public unsafe iconv_wchar_wc_to_mb_fallback* wc_to_mb_fallback;

//	public unsafe void* data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifaddrs
//{
//	public unsafe ifaddrs* ifa_next;

//	public unsafe sbyte* ifa_name;

//	public uint ifa_flags;

//	public unsafe sockaddr* ifa_addr;

//	public unsafe sockaddr* ifa_netmask;

//	public unsafe sockaddr* ifa_dstaddr;

//	public unsafe void* ifa_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifmaddrs
//{
//	public unsafe ifmaddrs* ifma_next;

//	public unsafe sockaddr* ifma_name;

//	public unsafe sockaddr* ifma_addr;

//	public unsafe sockaddr* ifma_lladdr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ttysize
//{
//	public ushort ts_lines;

//	public ushort ts_cols;

//	public ushort ts_xxx;

//	public ushort ts_yyy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct datum
//{
//	public unsafe void* dptr;

//	public nuint dsize;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct DBM
//{
//	public sbyte[] __opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct hostent
//{
//	public unsafe sbyte* h_name;

//	public unsafe sbyte** h_aliases;

//	public int h_addrtype;

//	public int h_length;

//	public unsafe sbyte** h_addr_list;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct netent
//{
//	public unsafe sbyte* n_name;

//	public unsafe sbyte** n_aliases;

//	public int n_addrtype;

//	public uint n_net;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct servent
//{
//	public unsafe sbyte* s_name;

//	public unsafe sbyte** s_aliases;

//	public int s_port;

//	public unsafe sbyte* s_proto;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct protoent
//{
//	public unsafe sbyte* p_name;

//	public unsafe sbyte** p_aliases;

//	public int p_proto;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct addrinfo
//{
//	public int ai_flags;

//	public int ai_family;

//	public int ai_socktype;

//	public int ai_protocol;

//	public uint ai_addrlen;

//	public unsafe sbyte* ai_canonname;

//	public unsafe sockaddr* ai_addr;

//	public unsafe addrinfo* ai_next;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rpcent
//{
//	public unsafe sbyte* r_name;

//	public unsafe sbyte** r_aliases;

//	public int r_number;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sockaddr_dl
//{
//	public byte sdl_len;

//	public byte sdl_family;

//	public ushort sdl_index;

//	public byte sdl_type;

//	public byte sdl_nlen;

//	public byte sdl_alen;

//	public byte sdl_slen;

//	public sbyte[] sdl_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct timeval64
//{
//	public long tv_sec;

//	public long tv_usec;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct itimerval
//{
//	public timeval it_interval;

//	public timeval it_value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct timezone
//{
//	public int tz_minuteswest;

//	public int tz_dsttime;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct clockinfo
//{
//	public int hz;

//	public int tick;

//	public int tickadj;

//	public int stathz;

//	public int profhz;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct net_event_data
//{
//	public uint if_family;

//	public uint if_unit;

//	public sbyte[] if_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct timeval32
//{
//	public int tv_sec;

//	public int tv_usec;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct if_data
//{
//	public byte ifi_type;

//	public byte ifi_typelen;

//	public byte ifi_physical;

//	public byte ifi_addrlen;

//	public byte ifi_hdrlen;

//	public byte ifi_recvquota;

//	public byte ifi_xmitquota;

//	public byte ifi_unused1;

//	public uint ifi_mtu;

//	public uint ifi_metric;

//	public uint ifi_baudrate;

//	public uint ifi_ipackets;

//	public uint ifi_ierrors;

//	public uint ifi_opackets;

//	public uint ifi_oerrors;

//	public uint ifi_collisions;

//	public uint ifi_ibytes;

//	public uint ifi_obytes;

//	public uint ifi_imcasts;

//	public uint ifi_omcasts;

//	public uint ifi_iqdrops;

//	public uint ifi_noproto;

//	public uint ifi_recvtiming;

//	public uint ifi_xmittiming;

//	public timeval32 ifi_lastchange;

//	public uint ifi_unused2;

//	public uint ifi_hwassist;

//	public uint ifi_reserved1;

//	public uint ifi_reserved2;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct if_data64
//{
//	public byte ifi_type;

//	public byte ifi_typelen;

//	public byte ifi_physical;

//	public byte ifi_addrlen;

//	public byte ifi_hdrlen;

//	public byte ifi_recvquota;

//	public byte ifi_xmitquota;

//	public byte ifi_unused1;

//	public uint ifi_mtu;

//	public uint ifi_metric;

//	public ulong ifi_baudrate;

//	public ulong ifi_ipackets;

//	public ulong ifi_ierrors;

//	public ulong ifi_opackets;

//	public ulong ifi_oerrors;

//	public ulong ifi_collisions;

//	public ulong ifi_ibytes;

//	public ulong ifi_obytes;

//	public ulong ifi_imcasts;

//	public ulong ifi_omcasts;

//	public ulong ifi_iqdrops;

//	public ulong ifi_noproto;

//	public uint ifi_recvtiming;

//	public uint ifi_xmittiming;

//	public timeval32 ifi_lastchange;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifqueue
//{
//	public unsafe void* ifq_head;

//	public unsafe void* ifq_tail;

//	public int ifq_len;

//	public int ifq_maxlen;

//	public int ifq_drops;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct if_clonereq
//{
//	public int ifcr_total;

//	public int ifcr_count;

//	public unsafe sbyte* ifcr_buffer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct if_msghdr
//{
//	public ushort ifm_msglen;

//	public byte ifm_version;

//	public byte ifm_type;

//	public int ifm_addrs;

//	public int ifm_flags;

//	public ushort ifm_index;

//	public if_data ifm_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifa_msghdr
//{
//	public ushort ifam_msglen;

//	public byte ifam_version;

//	public byte ifam_type;

//	public int ifam_addrs;

//	public int ifam_flags;

//	public ushort ifam_index;

//	public int ifam_metric;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifma_msghdr
//{
//	public ushort ifmam_msglen;

//	public byte ifmam_version;

//	public byte ifmam_type;

//	public int ifmam_addrs;

//	public int ifmam_flags;

//	public ushort ifmam_index;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct if_msghdr2
//{
//	public ushort ifm_msglen;

//	public byte ifm_version;

//	public byte ifm_type;

//	public int ifm_addrs;

//	public int ifm_flags;

//	public ushort ifm_index;

//	public int ifm_snd_len;

//	public int ifm_snd_maxlen;

//	public int ifm_snd_drops;

//	public int ifm_timer;

//	public if_data64 ifm_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifma_msghdr2
//{
//	public ushort ifmam_msglen;

//	public byte ifmam_version;

//	public byte ifmam_type;

//	public int ifmam_addrs;

//	public int ifmam_flags;

//	public ushort ifmam_index;

//	public int ifmam_refcount;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifdevmtu
//{
//	public int ifdm_current;

//	public int ifdm_min;

//	public int ifdm_max;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifkpi
//{
//	public uint ifk_module_id;

//	public uint ifk_type;

//	[StructLayout (LayoutKind.Explicit)]
//	public struct Ifk_data
//	{
//		[FieldOffset (0)]
//		public unsafe void* ifk_ptr;

//		[FieldOffset (0)]
//		public int ifk_value;
//	}


//	public Ifk_data ifk_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifreq
//{
//	public sbyte[] ifr_name;

//	[StructLayout (LayoutKind.Explicit)]
//	public struct Ifr_ifru
//	{
//		[FieldOffset (0)]
//		public sockaddr ifru_addr;

//		[FieldOffset (0)]
//		public sockaddr ifru_dstaddr;

//		[FieldOffset (0)]
//		public sockaddr ifru_broadaddr;

//		[FieldOffset (0)]
//		public short ifru_flags;

//		[FieldOffset (0)]
//		public int ifru_metric;

//		[FieldOffset (0)]
//		public int ifru_mtu;

//		[FieldOffset (0)]
//		public int ifru_phys;

//		[FieldOffset (0)]
//		public int ifru_media;

//		[FieldOffset (0)]
//		public int ifru_intval;

//		[FieldOffset (0)]
//		public unsafe sbyte* ifru_data;

//		[FieldOffset (0)]
//		public ifdevmtu ifru_devmtu;

//		[FieldOffset (0)]
//		public ifkpi ifru_kpi;

//		[FieldOffset (0)]
//		public uint ifru_wake_flags;

//		[FieldOffset (0)]
//		public uint ifru_route_refcnt;

//		[FieldOffset (0)]
//		public int[] ifru_cap;

//		[FieldOffset (0)]
//		public uint ifru_functional_type;
//	}


//	public Ifr_ifru ifr_ifru;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifaliasreq
//{
//	public sbyte[] ifra_name;

//	public sockaddr ifra_addr;

//	public sockaddr ifra_broadaddr;

//	public sockaddr ifra_mask;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rslvmulti_req
//{
//	public unsafe sockaddr* sa;

//	public unsafe sockaddr** llsa;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifmediareq
//{
//	public sbyte[] ifm_name;

//	public int ifm_current;

//	public int ifm_mask;

//	public int ifm_status;

//	public int ifm_active;

//	public int ifm_count;

//	public unsafe int* ifm_ulist;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifdrv
//{
//	public sbyte[] ifd_name;

//	public nuint ifd_cmd;

//	public nuint ifd_len;

//	public unsafe void* ifd_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifstat
//{
//	public sbyte[] ifs_name;

//	public sbyte[] ascii;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ifconf
//{
//	public int ifc_len;

//	[StructLayout (LayoutKind.Explicit)]
//	public struct Ifc_ifcu
//	{
//		[FieldOffset (0)]
//		public unsafe sbyte* ifcu_buf;

//		[FieldOffset (0)]
//		public unsafe ifreq* ifcu_req;
//	}


//	public Ifc_ifcu ifc_ifcu;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kev_dl_proto_data
//{
//	public net_event_data link_data;

//	public uint proto_family;

//	public uint proto_remaining_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct if_nameindex
//{
//	public uint if_index;

//	public unsafe sbyte* if_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct tcphdr
//{
//	public ushort th_sport;

//	public ushort th_dport;

//	public uint th_seq;

//	public uint th_ack;

//	public uint th_x2;

//	public uint th_off;

//	public byte th_flags;

//	public ushort th_win;

//	public ushort th_sum;

//	public ushort th_urp;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct tcp_connection_info
//{
//	public byte tcpi_state;

//	public byte tcpi_snd_wscale;

//	public byte tcpi_rcv_wscale;

//	public byte __pad1;

//	public uint tcpi_options;

//	public uint tcpi_flags;

//	public uint tcpi_rto;

//	public uint tcpi_maxseg;

//	public uint tcpi_snd_ssthresh;

//	public uint tcpi_snd_cwnd;

//	public uint tcpi_snd_wnd;

//	public uint tcpi_snd_sbbytes;

//	public uint tcpi_rcv_wnd;

//	public uint tcpi_rttcur;

//	public uint tcpi_srtt;

//	public uint tcpi_rttvar;

//	public uint tcpi_tfo_cookie_req;

//	public uint tcpi_tfo_cookie_rcv;

//	public uint tcpi_tfo_syn_loss;

//	public uint tcpi_tfo_syn_data_sent;

//	public uint tcpi_tfo_syn_data_acked;

//	public uint tcpi_tfo_syn_data_rcv;

//	public uint tcpi_tfo_cookie_req_rcv;

//	public uint tcpi_tfo_cookie_sent;

//	public uint tcpi_tfo_cookie_invalid;

//	public uint tcpi_tfo_cookie_wrong;

//	public uint tcpi_tfo_no_cookie_rcv;

//	public uint tcpi_tfo_heuristics_disable;

//	public uint tcpi_tfo_send_blackhole;

//	public uint tcpi_tfo_recv_blackhole;

//	public uint tcpi_tfo_onebyte_proxy;

//	public uint __pad2;

//	public ulong tcpi_txpackets;

//	public ulong tcpi_txbytes;

//	public ulong tcpi_txretransmitbytes;

//	public ulong tcpi_rxpackets;

//	public ulong tcpi_rxbytes;

//	public ulong tcpi_rxoutoforderbytes;

//	public ulong tcpi_txretransmitpackets;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __nl_cat_d
//{
//	public unsafe void* __data;

//	public int __size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct pollfd
//{
//	public int fd;

//	public short events;

//	public short revents;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sched_param
//{
//	public int sched_priority;

//	public sbyte[] __opaque;
//}

//public enum dispatch_qos_class_t : uint
//{
//	UserInteractive = 33,
//	UserInitiated = 25,
//	Default = 21,
//	Utility = 17,
//	Background = 9,
//	Unspecified = 0
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_port_status_t
//{
//	public uint mps_pset;

//	public uint mps_seqno;

//	public uint mps_mscount;

//	public uint mps_qlimit;

//	public uint mps_msgcount;

//	public uint mps_sorights;

//	public int mps_srights;

//	public int mps_pdrequest;

//	public int mps_nsrequest;

//	public uint mps_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_port_limits_t
//{
//	public uint mpl_qlimit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_port_info_ext_t
//{
//	public mach_port_status_t mpie_status;

//	public uint mpie_boost_cnt;

//	public uint[] reserved;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_port_qos_t
//{
//	public uint name;

//	public uint prealloc;

//	public int pad1;

//	public uint len;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_port_options_t
//{
//	public uint flags;

//	public mach_port_limits_t mpl;

//	public ulong[] reserved;
//}

//public enum mach_port_guard_exception_codes : uint
//{
//	Destroy = 1 << 0,
//	ModRefs = 1 << 1,
//	SetContext = 1 << 2,
//	Unguarded = 1 << 3,
//	IncorrectGuard = 1 << 4
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct routine_arg_descriptor
//{
//	public uint pad1;

//	public uint pad2;

//	public uint pad3;

//	public uint type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_port_descriptor_t
//{
//	public uint name;

//	public uint pad1;

//	public uint pad2;

//	public uint disposition;

//	public uint type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_ool_descriptor32_t
//{
//	public uint address;

//	public uint size;

//	public int deallocate;

//	public uint copy;

//	public uint pad1;

//	public uint type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_ool_descriptor64_t
//{
//	public ulong address;

//	public int deallocate;

//	public uint copy;

//	public uint pad1;

//	public uint type;

//	public uint size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_ool_descriptor_t
//{
//	public unsafe void* address;

//	public int deallocate;

//	public uint copy;

//	public uint pad1;

//	public uint type;

//	public uint size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_ool_ports_descriptor32_t
//{
//	public uint address;

//	public uint count;

//	public int deallocate;

//	public uint copy;

//	public uint disposition;

//	public uint type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_ool_ports_descriptor64_t
//{
//	public ulong address;

//	public int deallocate;

//	public uint copy;

//	public uint disposition;

//	public uint type;

//	public uint count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_ool_ports_descriptor_t
//{
//	public unsafe void* address;

//	public int deallocate;

//	public uint copy;

//	public uint disposition;

//	public uint type;

//	public uint count;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct mach_msg_descriptor_t
//{
//	[FieldOffset (0)]
//	public mach_msg_port_descriptor_t port;

//	[FieldOffset (0)]
//	public mach_msg_ool_descriptor_t out_of_line;

//	[FieldOffset (0)]
//	public mach_msg_ool_ports_descriptor_t ool_ports;

//	[FieldOffset (0)]
//	public mach_msg_type_descriptor_t type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_body_t
//{
//	public uint msgh_descriptor_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_header_t
//{
//	public uint msgh_bits;

//	public uint msgh_size;

//	public uint msgh_remote_port;

//	public uint msgh_local_port;

//	public uint msgh_voucher_port;

//	public int msgh_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_base_t
//{
//	public mach_msg_header_t header;

//	public mach_msg_body_t body;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_trailer_t
//{
//	public uint msgh_trailer_type;

//	public uint msgh_trailer_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_seqno_trailer_t
//{
//	public uint msgh_trailer_type;

//	public uint msgh_trailer_size;

//	public uint msgh_seqno;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct security_token_t
//{
//	public uint[] val;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_format_0_trailer_t
//{
//	public uint msgh_trailer_type;

//	public uint msgh_trailer_size;

//	public uint msgh_seqno;

//	public security_token_t msgh_sender;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct audit_token_t
//{
//	public uint[] val;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_audit_trailer_t
//{
//	public uint msgh_trailer_type;

//	public uint msgh_trailer_size;

//	public uint msgh_seqno;

//	public security_token_t msgh_sender;

//	public audit_token_t msgh_audit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_context_trailer_t
//{
//	public uint msgh_trailer_type;

//	public uint msgh_trailer_size;

//	public uint msgh_seqno;

//	public security_token_t msgh_sender;

//	public audit_token_t msgh_audit;

//	public UIntPtr msgh_context;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct msg_labels_t
//{
//	public uint sender;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_max_trailer_t
//{
//	public uint msgh_trailer_type;

//	public uint msgh_trailer_size;

//	public uint msgh_seqno;

//	public security_token_t msgh_sender;

//	public audit_token_t msgh_audit;

//	public UIntPtr msgh_context;

//	public int msgh_ad;

//	public msg_labels_t msgh_labels;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_empty_send_t
//{
//	public mach_msg_header_t header;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_msg_empty_rcv_t
//{
//	public mach_msg_header_t header;

//	public mach_msg_trailer_t trailer;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct mach_msg_empty_t
//{
//	[FieldOffset (0)]
//	public mach_msg_empty_send_t send;

//	[FieldOffset (0)]
//	public mach_msg_empty_rcv_t rcv;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_state_hdr_t
//{
//	public uint flavor;

//	public uint count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct arm_unified_thread_state_t
//{
//	public arm_state_hdr_t ash;

//	[StructLayout (LayoutKind.Explicit)]
//	public struct Uts
//	{
//		[FieldOffset (0)]
//		public arm_thread_state32_t ts_32;

//		[FieldOffset (0)]
//		public arm_thread_state64_t ts_64;
//	}


//	public Uts uts;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct regex_t
//{
//	public int re_magic;

//	public nuint re_nsub;

//	public unsafe sbyte* re_endp;

//	public unsafe re_guts* re_g;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct regmatch_t
//{
//	public long rm_so;

//	public long rm_eo;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ENTRY
//{
//	public unsafe sbyte* key;

//	public unsafe void* data;
//}

//public enum Action : uint
//{
//	Find,
//	Enter
//}

//public enum Visit : uint
//{
//	preorder,
//	postorder,
//	endorder,
//	leaf
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ipc_perm
//{
//	public uint uid;

//	public uint gid;

//	public uint cuid;

//	public uint cgid;

//	public ushort mode;

//	public ushort _seq;

//	public int _key;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __msqid_ds_new
//{
//	public ipc_perm msg_perm;

//	public int msg_first;

//	public int msg_last;

//	public nuint msg_cbytes;

//	public nuint msg_qnum;

//	public nuint msg_qbytes;

//	public int msg_lspid;

//	public int msg_lrpid;

//	public nint msg_stime;

//	public int msg_pad1;

//	public nint msg_rtime;

//	public int msg_pad2;

//	public nint msg_ctime;

//	public int msg_pad3;

//	public int[] msg_pad4;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct msg
//{
//	public unsafe msg* msg_next;

//	public nint msg_type;

//	public ushort msg_ts;

//	public short msg_spot;

//	public unsafe label* label;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mymsg
//{
//	public nint mtype;

//	public sbyte[] mtext;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct msginfo
//{
//	public int msgmax;

//	public int msgmni;

//	public int msgmnb;

//	public int msgtql;

//	public int msgssz;

//	public int msgseg;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __semid_ds_new
//{
//	public ipc_perm sem_perm;

//	public int sem_base;

//	public ushort sem_nsems;

//	public nint sem_otime;

//	public int sem_pad1;

//	public nint sem_ctime;

//	public int sem_pad2;

//	public int[] sem_pad3;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sem
//{
//	public ushort semval;

//	public int sempid;

//	public ushort semncnt;

//	public ushort semzcnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sembuf
//{
//	public ushort sem_num;

//	public short sem_op;

//	public short sem_flg;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct semun_t
//{
//	[FieldOffset (0)]
//	public int val;

//	[FieldOffset (0)]
//	public unsafe __semid_ds_new* buf;

//	[FieldOffset (0)]
//	public unsafe ushort* array;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __shmid_ds_new
//{
//	public ipc_perm shm_perm;

//	public nuint shm_segsz;

//	public int shm_lpid;

//	public int shm_cpid;

//	public ushort shm_nattch;

//	public nint shm_atime;

//	public nint shm_dtime;

//	public nint shm_ctime;

//	public unsafe void* shm_internal;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct statvfs
//{
//	public nuint f_bsize;

//	public nuint f_frsize;

//	public uint f_blocks;

//	public uint f_bfree;

//	public uint f_bavail;

//	public uint f_files;

//	public uint f_ffree;

//	public uint f_favail;

//	public nuint f_fsid;

//	public nuint f_flag;

//	public nuint f_namemax;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct tms
//{
//	public nuint tms_utime;

//	public nuint tms_stime;

//	public nuint tms_cutime;

//	public nuint tms_cstime;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fsid_t
//{
//	public int[] val;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fsobj_id_t
//{
//	public uint fid_objno;

//	public uint fid_generation;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct guid_t
//{
//	public byte[] g_guid;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ucontext64_t
//{
//	public int uc_onstack;

//	public uint uc_sigmask;

//	public __darwin_sigaltstack uc_stack;

//	public unsafe __darwin_ucontext64* uc_link;

//	public nuint uc_mcsize;

//	public unsafe __darwin_mcontext64* uc_mcontext64;
//}

//public enum uio_rw : uint
//{
//	Read,
//	Write
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sockaddr_un
//{
//	public byte sun_len;

//	public byte sun_family;

//	public sbyte[] sun_path;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct utsname
//{
//	public sbyte[] sysname;

//	public sbyte[] nodename;

//	public sbyte[] release;

//	public sbyte[] version;

//	public sbyte[] machine;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct accessx_descriptor
//{
//	public uint ad_name_offset;

//	public int ad_flags;

//	public int[] ad_pad;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct utimbuf
//{
//	public nint actime;

//	public nint modtime;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct utmpx
//{
//	public sbyte[] ut_user;

//	public sbyte[] ut_id;

//	public sbyte[] ut_line;

//	public int ut_pid;

//	public short ut_type;

//	public timeval ut_tv;

//	public sbyte[] ut_host;

//	public uint[] ut_pad;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct lastlogx
//{
//	public timeval ll_tv;

//	public sbyte[] ll_line;

//	public sbyte[] ll_host;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct wordexp_t
//{
//	public nuint we_wordc;

//	public unsafe sbyte** we_wordv;

//	public nuint we_offs;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct option
//{
//	public unsafe sbyte* name;

//	public int has_arg;

//	public unsafe int* flag;

//	public int val;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CompTimeValue
//{
//	public uint lo;

//	public int hi;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct AbsoluteTime
//{
//	public uint lo;

//	public uint hi;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct extended80
//{
//	public short exp;

//	public ushort[] man;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct extended96
//{
//	public short[] exp;

//	public ushort[] man;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct Float32Point
//{
//	public float x;

//	public float y;
//}

//public enum  : uint
//{
//	noErr = 0
//}

//public enum  : uint
//{
//	NilOptions = 0
//}

//public enum  : uint
//{
//	VariableLengthArray = 1
//}

//public enum  : uint
//{
//	UnknownType = 1061109567
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ProcessSerialNumber
//{
//	public uint highLongOfPSN;

//	public uint lowLongOfPSN;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct Point
//{
//	public short v;

//	public short h;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct Rect
//{
//	public short top;

//	public short left;

//	public short bottom;

//	public short right;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct FixedPoint
//{
//	public int x;

//	public int y;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct FixedRect
//{
//	public int left;

//	public int top;

//	public int right;

//	public int bottom;
//}

//public enum  : uint
//{
//	normal = 0,
//	bold = 1,
//	italic = 2,
//	underline = 4,
//	outline = 8,
//	shadow = 16,
//	condense = 32,
//	extend = 64
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct TimeRecord
//{
//	public CompTimeValue value;

//	public int scale;

//	public unsafe TimeBase* @base;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NumVersion
//{
//	public byte nonRelRev;

//	public byte stage;

//	public byte minorAndBugRev;

//	public byte majorRev;
//}

//public enum  : uint
//{
//	developStage = 32,
//	alphaStage = 64,
//	betaStage = 96,
//	finalStage = 128
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct NumVersionVariant
//{
//	[FieldOffset (0)]
//	public NumVersion parts;

//	[FieldOffset (0)]
//	public uint whole;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct VersRec
//{
//	public NumVersion numericVersion;

//	public short countryCode;

//	public byte[] shortVersion;

//	public byte[] reserved;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_statistics_data_t
//{
//	public uint free_count;

//	public uint active_count;

//	public uint inactive_count;

//	public uint wire_count;

//	public uint zero_fill_count;

//	public uint reactivations;

//	public uint pageins;

//	public uint pageouts;

//	public uint faults;

//	public uint cow_faults;

//	public uint lookups;

//	public uint hits;

//	public uint purgeable_count;

//	public uint purges;

//	public uint speculative_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_statistics64_data_t
//{
//	public uint free_count;

//	public uint active_count;

//	public uint inactive_count;

//	public uint wire_count;

//	public ulong zero_fill_count;

//	public ulong reactivations;

//	public ulong pageins;

//	public ulong pageouts;

//	public ulong faults;

//	public ulong cow_faults;

//	public ulong lookups;

//	public ulong hits;

//	public ulong purges;

//	public uint purgeable_count;

//	public uint speculative_count;

//	public ulong decompressions;

//	public ulong compressions;

//	public ulong swapins;

//	public ulong swapouts;

//	public uint compressor_page_count;

//	public uint throttled_count;

//	public uint external_page_count;

//	public uint internal_page_count;

//	public ulong total_uncompressed_pages_in_compressor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_extmod_statistics_data_t
//{
//	public long task_for_pid_count;

//	public long task_for_pid_caller_count;

//	public long thread_creation_count;

//	public long thread_creation_caller_count;

//	public long thread_set_state_count;

//	public long thread_set_state_caller_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_purgeable_stat_t
//{
//	public ulong count;

//	public ulong size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_purgable_info_t
//{
//	public vm_purgeable_stat_t[] fifo_data;

//	public vm_purgeable_stat_t obsolete_data;

//	public vm_purgeable_stat_t[] lifo_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct time_value_t
//{
//	public int seconds;

//	public int microseconds;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct host_can_has_debugger_info_data_t
//{
//	public int can_has_debugger;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct host_basic_info_data_t
//{
//	public int max_cpus;

//	public int avail_cpus;

//	public uint memory_size;

//	public int cpu_type;

//	public int cpu_subtype;

//	public int cpu_threadtype;

//	public int physical_cpu;

//	public int physical_cpu_max;

//	public int logical_cpu;

//	public int logical_cpu_max;

//	public ulong max_mem;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct host_sched_info_data_t
//{
//	public int min_timeout;

//	public int min_quantum;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kernel_resource_sizes_data_t
//{
//	public uint task;

//	public uint thread;

//	public uint port;

//	public uint memory_region;

//	public uint memory_object;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct host_priority_info_data_t
//{
//	public int kernel_priority;

//	public int system_priority;

//	public int server_priority;

//	public int user_priority;

//	public int depress_priority;

//	public int idle_priority;

//	public int minimum_priority;

//	public int maximum_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct host_load_info_data_t
//{
//	public int[] avenrun;

//	public int[] mach_factor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct host_cpu_load_info_data_t
//{
//	public uint[] cpu_ticks;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct memory_object_perf_info_data_t
//{
//	public uint cluster_size;

//	public int may_cache;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct memory_object_attr_info_data_t
//{
//	public int copy_strategy;

//	public uint cluster_size;

//	public int may_cache_object;

//	public int temporary;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct memory_object_behave_info_data_t
//{
//	public int copy_strategy;

//	public int temporary;

//	public int invalidate;

//	public int silent_overwrite;

//	public int advisory_pageout;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_voucher_attr_recipe_data_t
//{
//	public uint key;

//	public uint command;

//	public uint previous_voucher;

//	public uint content_size;

//	public byte[] content;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct processor_cpu_stat_data_t
//{
//	public uint irq_ex_cnt;

//	public uint ipi_cnt;

//	public uint timer_cnt;

//	public uint undef_ex_cnt;

//	public uint unaligned_cnt;

//	public uint vfp_cnt;

//	public uint vfp_shortv_cnt;

//	public uint data_ex_cnt;

//	public uint instr_ex_cnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct processor_basic_info_data_t
//{
//	public int cpu_type;

//	public int cpu_subtype;

//	public int running;

//	public int slot_num;

//	public int is_master;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct processor_cpu_load_info_data_t
//{
//	public uint[] cpu_ticks;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct processor_set_basic_info_data_t
//{
//	public int processor_count;

//	public int default_policy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct processor_set_load_info_data_t
//{
//	public int task_count;

//	public int thread_count;

//	public int load_average;

//	public int mach_factor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_timeshare_base_data_t
//{
//	public int base_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_timeshare_limit_data_t
//{
//	public int max_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_timeshare_info_data_t
//{
//	public int max_priority;

//	public int base_priority;

//	public int cur_priority;

//	public int depressed;

//	public int depress_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_rr_base_data_t
//{
//	public int base_priority;

//	public int quantum;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_rr_limit_data_t
//{
//	public int max_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_rr_info_data_t
//{
//	public int max_priority;

//	public int base_priority;

//	public int quantum;

//	public int depressed;

//	public int depress_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_fifo_base_data_t
//{
//	public int base_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_fifo_limit_data_t
//{
//	public int max_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_fifo_info_data_t
//{
//	public int max_priority;

//	public int base_priority;

//	public int depressed;

//	public int depress_priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_base_data_t
//{
//	public policy_timeshare_base_data_t ts;

//	public policy_rr_base_data_t rr;

//	public policy_fifo_base_data_t fifo;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_limit_data_t
//{
//	public policy_timeshare_limit_data_t ts;

//	public policy_rr_limit_data_t rr;

//	public policy_fifo_limit_data_t fifo;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct policy_info_data_t
//{
//	public policy_timeshare_info_data_t ts;

//	public policy_rr_info_data_t rr;

//	public policy_fifo_info_data_t fifo;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_basic_info_32_data_t
//{
//	public int suspend_count;

//	public uint virtual_size;

//	public uint resident_size;

//	public time_value_t user_time;

//	public time_value_t system_time;

//	public int policy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_basic_info_64_data_t
//{
//	public int suspend_count;

//	public ulong virtual_size;

//	public ulong resident_size;

//	public time_value_t user_time;

//	public time_value_t system_time;

//	public int policy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_basic_info_data_t
//{
//	public int suspend_count;

//	public UIntPtr virtual_size;

//	public UIntPtr resident_size;

//	public time_value_t user_time;

//	public time_value_t system_time;

//	public int policy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_events_info_data_t
//{
//	public int faults;

//	public int pageins;

//	public int cow_faults;

//	public int messages_sent;

//	public int messages_received;

//	public int syscalls_mach;

//	public int syscalls_unix;

//	public int csw;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_thread_times_info_data_t
//{
//	public time_value_t user_time;

//	public time_value_t system_time;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_absolutetime_info_data_t
//{
//	public ulong total_user;

//	public ulong total_system;

//	public ulong threads_user;

//	public ulong threads_system;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_kernelmemory_info_data_t
//{
//	public ulong total_palloc;

//	public ulong total_pfree;

//	public ulong total_salloc;

//	public ulong total_sfree;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_affinity_tag_info_data_t
//{
//	public int set_count;

//	public int min;

//	public int max;

//	public int task_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_dyld_info_data_t
//{
//	public ulong all_image_info_addr;

//	public ulong all_image_info_size;

//	public int all_image_info_format;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_basic_info_64_2_data_t
//{
//	public int suspend_count;

//	public ulong virtual_size;

//	public ulong resident_size;

//	public time_value_t user_time;

//	public time_value_t system_time;

//	public int policy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_extmod_info_data_t
//{
//	public byte[] task_uuid;

//	public vm_extmod_statistics_data_t extmod_statistics;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_task_basic_info_data_t
//{
//	public ulong virtual_size;

//	public ulong resident_size;

//	public ulong resident_size_max;

//	public time_value_t user_time;

//	public time_value_t system_time;

//	public int policy;

//	public int suspend_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_power_info_data_t
//{
//	public ulong total_user;

//	public ulong total_system;

//	public ulong task_interrupt_wakeups;

//	public ulong task_platform_idle_wakeups;

//	public ulong task_timer_wakeups_bin_1;

//	public ulong task_timer_wakeups_bin_2;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_vm_info_data_t
//{
//	public ulong virtual_size;

//	public int region_count;

//	public int page_size;

//	public ulong resident_size;

//	public ulong resident_size_peak;

//	public ulong device;

//	public ulong device_peak;

//	public ulong @internal;

//	public ulong internal_peak;

//	public ulong external;

//	public ulong external_peak;

//	public ulong reusable;

//	public ulong reusable_peak;

//	public ulong purgeable_volatile_pmap;

//	public ulong purgeable_volatile_resident;

//	public ulong purgeable_volatile_virtual;

//	public ulong compressed;

//	public ulong compressed_peak;

//	public ulong compressed_lifetime;

//	public ulong phys_footprint;

//	public ulong min_address;

//	public ulong max_address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_trace_memory_info_data_t
//{
//	public ulong user_memory_address;

//	public ulong buffer_size;

//	public ulong mailbox_array_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_wait_state_info_data_t
//{
//	public ulong total_wait_state_time;

//	public ulong total_wait_sfi_state_time;

//	public uint[] _reserved;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct gpu_energy_data
//{
//	public ulong task_gpu_utilisation;

//	public ulong task_gpu_stat_reserved0;

//	public ulong task_gpu_stat_reserved1;

//	public ulong task_gpu_stat_reserved2;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_power_info_v2_data_t
//{
//	public task_power_info_data_t cpu_energy;

//	public gpu_energy_data gpu_energy;

//	public ulong task_energy;

//	public ulong task_ptime;

//	public ulong task_pset_switches;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_flags_info_data_t
//{
//	public uint flags;
//}

//public enum task_inspect_flavor : uint
//{
//	TaskInspectBasicCounts = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_inspect_basic_counts_data_t
//{
//	public ulong instructions;

//	public ulong cycles;
//}

//public enum task_role
//{
//	Reniced = -1,
//	Unspecified = 0,
//	ForegroundApplication,
//	BackgroundApplication,
//	ControlApplication,
//	GraphicsServer,
//	ThrottleApplication,
//	NonuiApplication,
//	DefaultApplication
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_category_policy_data_t
//{
//	public int role;
//}

//public enum task_latency_qos : uint
//{
//	Unspecified = 0,
//	LatencyQosTier0 = ((255 << 16) | 1),
//	LatencyQosTier1 = ((255 << 16) | 2),
//	LatencyQosTier2 = ((255 << 16) | 3),
//	LatencyQosTier3 = ((255 << 16) | 4),
//	LatencyQosTier4 = ((255 << 16) | 5),
//	LatencyQosTier5 = ((255 << 16) | 6)
//}

//public enum task_throughput_qos : uint
//{
//	Unspecified = 0,
//	ThroughputQosTier0 = ((254 << 16) | 1),
//	ThroughputQosTier1 = ((254 << 16) | 2),
//	ThroughputQosTier2 = ((254 << 16) | 3),
//	ThroughputQosTier3 = ((254 << 16) | 4),
//	ThroughputQosTier4 = ((254 << 16) | 5),
//	ThroughputQosTier5 = ((254 << 16) | 6)
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_qos_policy
//{
//	public int task_latency_qos_tier;

//	public int task_throughput_qos_tier;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_basic_info_data_t
//{
//	public time_value_t user_time;

//	public time_value_t system_time;

//	public int cpu_usage;

//	public int policy;

//	public int run_state;

//	public int flags;

//	public int suspend_count;

//	public int sleep_time;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_identifier_info_data_t
//{
//	public ulong thread_id;

//	public ulong thread_handle;

//	public ulong dispatch_qaddr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_extended_info_data_t
//{
//	public ulong pth_user_time;

//	public ulong pth_system_time;

//	public int pth_cpu_usage;

//	public int pth_policy;

//	public int pth_run_state;

//	public int pth_flags;

//	public int pth_sleep_time;

//	public int pth_curpri;

//	public int pth_priority;

//	public int pth_maxpriority;

//	public sbyte[] pth_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct io_stat_entry
//{
//	public ulong count;

//	public ulong size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct io_stat_info
//{
//	public io_stat_entry disk_reads;

//	public io_stat_entry[] io_priority;

//	public io_stat_entry paging;

//	public io_stat_entry metadata;

//	public io_stat_entry total_io;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_standard_policy_data_t
//{
//	public uint no_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_extended_policy_data_t
//{
//	public int timeshare;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_time_constraint_policy_data_t
//{
//	public uint period;

//	public uint computation;

//	public uint constraint;

//	public int preemptible;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_precedence_policy_data_t
//{
//	public int importance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_affinity_policy_data_t
//{
//	public int affinity_tag;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_background_policy_data_t
//{
//	public int priority;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_latency_qos_policy_data_t
//{
//	public int thread_latency_qos_tier;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct thread_throughput_qos_policy_data_t
//{
//	public int thread_throughput_qos_tier;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_timespec_t
//{
//	public uint tv_sec;

//	public int tv_nsec;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_region_basic_info_data_64_t
//{
//	public int protection;

//	public int max_protection;

//	public uint inheritance;

//	public int shared;

//	public int reserved;

//	public ulong offset;

//	public int behavior;

//	public ushort user_wired_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_region_basic_info_data_t
//{
//	public int protection;

//	public int max_protection;

//	public uint inheritance;

//	public int shared;

//	public int reserved;

//	public uint offset;

//	public int behavior;

//	public ushort user_wired_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_region_extended_info_data_t
//{
//	public int protection;

//	public uint user_tag;

//	public uint pages_resident;

//	public uint pages_shared_now_private;

//	public uint pages_swapped_out;

//	public uint pages_dirtied;

//	public uint ref_count;

//	public ushort shadow_depth;

//	public byte external_pager;

//	public byte share_mode;

//	public uint pages_reusable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_region_top_info_data_t
//{
//	public uint obj_id;

//	public uint ref_count;

//	public uint private_pages_resident;

//	public uint shared_pages_resident;

//	public byte share_mode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_region_submap_info_data_t
//{
//	public int protection;

//	public int max_protection;

//	public uint inheritance;

//	public uint offset;

//	public uint user_tag;

//	public uint pages_resident;

//	public uint pages_shared_now_private;

//	public uint pages_swapped_out;

//	public uint pages_dirtied;

//	public uint ref_count;

//	public ushort shadow_depth;

//	public byte external_pager;

//	public byte share_mode;

//	public int is_submap;

//	public int behavior;

//	public uint object_id;

//	public ushort user_wired_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_region_submap_info_data_64_t
//{
//	public int protection;

//	public int max_protection;

//	public uint inheritance;

//	public ulong offset;

//	public uint user_tag;

//	public uint pages_resident;

//	public uint pages_shared_now_private;

//	public uint pages_swapped_out;

//	public uint pages_dirtied;

//	public uint ref_count;

//	public ushort shadow_depth;

//	public byte external_pager;

//	public byte share_mode;

//	public int is_submap;

//	public int behavior;

//	public uint object_id;

//	public ushort user_wired_count;

//	public uint pages_reusable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_region_submap_short_info_data_64_t
//{
//	public int protection;

//	public int max_protection;

//	public uint inheritance;

//	public ulong offset;

//	public uint user_tag;

//	public uint ref_count;

//	public ushort shadow_depth;

//	public byte external_pager;

//	public byte share_mode;

//	public int is_submap;

//	public int behavior;

//	public uint object_id;

//	public ushort user_wired_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_vm_read_entry
//{
//	public ulong address;

//	public ulong size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_read_entry
//{
//	public UIntPtr address;

//	public UIntPtr size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_page_info_basic_data_t
//{
//	public int disposition;

//	public int ref_count;

//	public ulong object_id;

//	public ulong offset;

//	public int depth;

//	public int __pad;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kmod_reference_t
//{
//	public unsafe kmod_reference* next;

//	public unsafe kmod_info* info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kmod_info_t
//{
//	public unsafe kmod_info* next;

//	public int info_version;

//	public uint id;

//	public sbyte[] name;

//	public sbyte[] version;

//	public int reference_count;

//	public unsafe kmod_reference_t* reference_list;

//	public UIntPtr address;

//	public UIntPtr size;

//	public UIntPtr hdr_size;

//	public unsafe kmod_start_func_t* start;

//	public unsafe kmod_stop_func_t* stop;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kmod_info_32_v1_t
//{
//	public uint next_addr;

//	public int info_version;

//	public uint id;

//	public byte[] name;

//	public byte[] version;

//	public int reference_count;

//	public uint reference_list_addr;

//	public uint address;

//	public uint size;

//	public uint hdr_size;

//	public uint start_addr;

//	public uint stop_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kmod_info_64_v1_t
//{
//	public ulong next_addr;

//	public int info_version;

//	public uint id;

//	public byte[] name;

//	public byte[] version;

//	public int reference_count;

//	public ulong reference_list_addr;

//	public ulong address;

//	public ulong size;

//	public ulong hdr_size;

//	public ulong start_addr;

//	public ulong stop_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct dyld_kernel_image_info_t
//{
//	public byte[] uuid;

//	public fsobj_id_t fsobjid;

//	public fsid_t fsid;

//	public ulong load_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct dyld_kernel_process_info_t
//{
//	public dyld_kernel_image_info cache_image_info;

//	public ulong timestamp;

//	public uint imageCount;

//	public uint initialImageCount;

//	public byte dyldState;

//	public int no_cache;

//	public int private_cache;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum Os : uint
//{
//	UnknownByteOrder,
//	LittleEndian,
//	BigEndian
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NDR_record_t
//{
//	public byte mig_vers;

//	public byte if_vers;

//	public byte reserved1;

//	public byte mig_encoding;

//	public byte int_rep;

//	public byte char_rep;

//	public byte float_rep;

//	public byte reserved2;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_port_deleted_notification_t
//{
//	public mach_msg_header_t not_header;

//	public NDR_record_t NDR;

//	public uint not_port;

//	public mach_msg_format_0_trailer_t trailer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_send_possible_notification_t
//{
//	public mach_msg_header_t not_header;

//	public NDR_record_t NDR;

//	public uint not_port;

//	public mach_msg_format_0_trailer_t trailer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_port_destroyed_notification_t
//{
//	public mach_msg_header_t not_header;

//	public mach_msg_body_t not_body;

//	public mach_msg_port_descriptor_t not_port;

//	public mach_msg_format_0_trailer_t trailer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_no_senders_notification_t
//{
//	public mach_msg_header_t not_header;

//	public NDR_record_t NDR;

//	public uint not_count;

//	public mach_msg_format_0_trailer_t trailer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_send_once_notification_t
//{
//	public mach_msg_header_t not_header;

//	public mach_msg_format_0_trailer_t trailer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_dead_name_notification_t
//{
//	public mach_msg_header_t not_header;

//	public NDR_record_t NDR;

//	public uint not_port;

//	public mach_msg_format_0_trailer_t trailer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mig_routine_descriptor
//{
//	public unsafe mig_impl_routine_t* impl_routine;

//	public unsafe mig_stub_routine_t* stub_routine;

//	public uint argc;

//	public uint descr_count;

//	public unsafe routine_arg_descriptor_t* arg_descr;

//	public uint max_reply_msg;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mig_subsystem
//{
//	public unsafe mig_server_routine_t* server;

//	public int start;

//	public int end;

//	public uint maxsize;

//	public UIntPtr reserved;

//	public mig_routine_descriptor[] routine;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mig_symtab_t
//{
//	public unsafe sbyte* ms_routine_name;

//	public int ms_routine_number;

//	public unsafe Action* ms_routine;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mig_reply_error_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__clock_set_time_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public mach_timespec_t new_time;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__clock_set_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint clock_attrCnt;

//	public int[] clock_attr;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__clock_priv_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__clock_set_time_t Request_clock_set_time;

//	[FieldOffset (0)]
//	public __Request__clock_set_attributes_t Request_clock_set_attributes;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__clock_set_time_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__clock_set_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__clock_priv_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__clock_set_time_t Reply_clock_set_time;

//	[FieldOffset (0)]
//	public __Reply__clock_set_attributes_t Reply_clock_set_attributes;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ipc_info_space_t
//{
//	public uint iis_genno_mask;

//	public uint iis_table_size;

//	public uint iis_table_next;

//	public uint iis_tree_size;

//	public uint iis_tree_small;

//	public uint iis_tree_hash;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ipc_info_space_basic_t
//{
//	public uint iisb_genno_mask;

//	public uint iisb_table_size;

//	public uint iisb_table_next;

//	public uint iisb_table_inuse;

//	public uint[] iisb_reserved;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ipc_info_name_t
//{
//	public uint iin_name;

//	public int iin_collision;

//	public uint iin_type;

//	public uint iin_urefs;

//	public uint iin_object;

//	public uint iin_next;

//	public uint iin_hash;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ipc_info_tree_name_t
//{
//	public ipc_info_name_t iitn_name;

//	public uint iitn_lchild;

//	public uint iitn_rchild;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_vm_info_region_t
//{
//	public ulong vir_start;

//	public ulong vir_end;

//	public ulong vir_object;

//	public ulong vir_offset;

//	public int vir_needs_copy;

//	public int vir_protection;

//	public int vir_max_protection;

//	public uint vir_inheritance;

//	public uint vir_wired_count;

//	public uint vir_user_wired_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_info_region_64_t
//{
//	public uint vir_start;

//	public uint vir_end;

//	public uint vir_object;

//	public ulong vir_offset;

//	public int vir_needs_copy;

//	public int vir_protection;

//	public int vir_max_protection;

//	public uint vir_inheritance;

//	public uint vir_wired_count;

//	public uint vir_user_wired_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_info_region_t
//{
//	public uint vir_start;

//	public uint vir_end;

//	public uint vir_object;

//	public uint vir_offset;

//	public int vir_needs_copy;

//	public int vir_protection;

//	public int vir_max_protection;

//	public uint vir_inheritance;

//	public uint vir_wired_count;

//	public uint vir_user_wired_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_info_object_t
//{
//	public uint vio_object;

//	public uint vio_size;

//	public uint vio_ref_count;

//	public uint vio_resident_page_count;

//	public uint vio_absent_count;

//	public uint vio_copy;

//	public uint vio_shadow;

//	public uint vio_shadow_offset;

//	public uint vio_paging_offset;

//	public int vio_copy_strategy;

//	public UIntPtr vio_last_alloc;

//	public uint vio_paging_in_progress;

//	public int vio_pager_created;

//	public int vio_pager_initialized;

//	public int vio_pager_ready;

//	public int vio_can_persist;

//	public int vio_internal;

//	public int vio_temporary;

//	public int vio_alive;

//	public int vio_purgable;

//	public int vio_purgable_volatile;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct zone_name_t
//{
//	public sbyte[] zn_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct zone_info_t
//{
//	public int zi_count;

//	public UIntPtr zi_cur_size;

//	public UIntPtr zi_max_size;

//	public UIntPtr zi_elem_size;

//	public UIntPtr zi_alloc_size;

//	public int zi_pageable;

//	public int zi_sleepable;

//	public int zi_exhaustible;

//	public int zi_collectable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_zone_name_t
//{
//	public sbyte[] mzn_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_zone_info_t
//{
//	public ulong mzi_count;

//	public ulong mzi_cur_size;

//	public ulong mzi_max_size;

//	public ulong mzi_elem_size;

//	public ulong mzi_alloc_size;

//	public ulong mzi_sum_size;

//	public ulong mzi_exhaustible;

//	public ulong mzi_collectable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct task_zone_info_t
//{
//	public ulong tzi_count;

//	public ulong tzi_cur_size;

//	public ulong tzi_max_size;

//	public ulong tzi_elem_size;

//	public ulong tzi_alloc_size;

//	public ulong tzi_sum_size;

//	public ulong tzi_exhaustible;

//	public ulong tzi_collectable;

//	public ulong tzi_caller_acct;

//	public ulong tzi_task_alloc;

//	public ulong tzi_task_free;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_memory_info_t
//{
//	public ulong flags;

//	public ulong site;

//	public ulong size;

//	public ulong free;

//	public ulong largest;

//	public ulong collectable_bytes;

//	public ulong mapped;

//	public ulong peak;

//	public ushort tag;

//	public ushort zone;

//	public ushort[] _resvA;

//	public ulong[] _resv;

//	public sbyte[] name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct hash_info_bucket_t
//{
//	public uint hib_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct lockgroup_info_t
//{
//	public sbyte[] lockgroup_name;

//	public ulong lockgroup_attr;

//	public ulong lock_spin_cnt;

//	public ulong lock_spin_util_cnt;

//	public ulong lock_spin_held_cnt;

//	public ulong lock_spin_miss_cnt;

//	public ulong lock_spin_held_max;

//	public ulong lock_spin_held_cum;

//	public ulong lock_mtx_cnt;

//	public ulong lock_mtx_util_cnt;

//	public ulong lock_mtx_held_cnt;

//	public ulong lock_mtx_miss_cnt;

//	public ulong lock_mtx_wait_cnt;

//	public ulong lock_mtx_held_max;

//	public ulong lock_mtx_held_cum;

//	public ulong lock_mtx_wait_max;

//	public ulong lock_mtx_wait_cum;

//	public ulong lock_rw_cnt;

//	public ulong lock_rw_util_cnt;

//	public ulong lock_rw_held_cnt;

//	public ulong lock_rw_miss_cnt;

//	public ulong lock_rw_wait_cnt;

//	public ulong lock_rw_held_max;

//	public ulong lock_rw_held_cum;

//	public ulong lock_rw_wait_max;

//	public ulong lock_rw_wait_cum;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_core_details
//{
//	public ulong gzip_offset;

//	public ulong gzip_length;

//	public sbyte[] core_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_core_fileheader
//{
//	public ulong signature;

//	public ulong log_offset;

//	public ulong log_length;

//	public ulong num_files;

//	public mach_core_details[] files;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_boot_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_reboot_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int options;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_priv_statistics_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint host_info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_default_memory_manager_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t default_manager;

//	public NDR_record_t NDR;

//	public uint cluster_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_wire_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t task;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public int desired_access;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_wire_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t thread;

//	public NDR_record_t NDR;

//	public int wired;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_allocate_cpm_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t task;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public int flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_processors_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_clock_control_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int clock_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__kmod_create_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__kmod_destroy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int module;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__kmod_control_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t data;

//	public NDR_record_t NDR;

//	public int module;

//	public int flavor;

//	public uint dataCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_special_port_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int node;

//	public int which;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_set_special_port_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t port;

//	public NDR_record_t NDR;

//	public int which;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_set_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_port;

//	public NDR_record_t NDR;

//	public uint exception_mask;

//	public int behavior;

//	public int new_flavor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint exception_mask;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_swap_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_port;

//	public NDR_record_t NDR;

//	public uint exception_mask;

//	public int behavior;

//	public int new_flavor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_vm_wire_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t task;

//	public NDR_record_t NDR;

//	public ulong address;

//	public ulong size;

//	public int desired_access;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_processor_sets_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_processor_set_priv_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t set_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_set_UNDServer_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t server;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_UNDServer_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__kext_request_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t request_data;

//	public NDR_record_t NDR;

//	public uint user_log_flags;

//	public uint request_dataCnt;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__host_priv_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__host_get_boot_info_t Request_host_get_boot_info;

//	[FieldOffset (0)]
//	public __Request__host_reboot_t Request_host_reboot;

//	[FieldOffset (0)]
//	public __Request__host_priv_statistics_t Request_host_priv_statistics;

//	[FieldOffset (0)]
//	public __Request__host_default_memory_manager_t Request_host_default_memory_manager;

//	[FieldOffset (0)]
//	public __Request__vm_wire_t Request_vm_wire;

//	[FieldOffset (0)]
//	public __Request__thread_wire_t Request_thread_wire;

//	[FieldOffset (0)]
//	public __Request__vm_allocate_cpm_t Request_vm_allocate_cpm;

//	[FieldOffset (0)]
//	public __Request__host_processors_t Request_host_processors;

//	[FieldOffset (0)]
//	public __Request__host_get_clock_control_t Request_host_get_clock_control;

//	[FieldOffset (0)]
//	public __Request__kmod_create_t Request_kmod_create;

//	[FieldOffset (0)]
//	public __Request__kmod_destroy_t Request_kmod_destroy;

//	[FieldOffset (0)]
//	public __Request__kmod_control_t Request_kmod_control;

//	[FieldOffset (0)]
//	public __Request__host_get_special_port_t Request_host_get_special_port;

//	[FieldOffset (0)]
//	public __Request__host_set_special_port_t Request_host_set_special_port;

//	[FieldOffset (0)]
//	public __Request__host_set_exception_ports_t Request_host_set_exception_ports;

//	[FieldOffset (0)]
//	public __Request__host_get_exception_ports_t Request_host_get_exception_ports;

//	[FieldOffset (0)]
//	public __Request__host_swap_exception_ports_t Request_host_swap_exception_ports;

//	[FieldOffset (0)]
//	public __Request__mach_vm_wire_t Request_mach_vm_wire;

//	[FieldOffset (0)]
//	public __Request__host_processor_sets_t Request_host_processor_sets;

//	[FieldOffset (0)]
//	public __Request__host_processor_set_priv_t Request_host_processor_set_priv;

//	[FieldOffset (0)]
//	public __Request__host_set_UNDServer_t Request_host_set_UNDServer;

//	[FieldOffset (0)]
//	public __Request__host_get_UNDServer_t Request_host_get_UNDServer;

//	[FieldOffset (0)]
//	public __Request__kext_request_t Request_kext_request;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_boot_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint boot_infoOffset;

//	public uint boot_infoCnt;

//	public sbyte[] boot_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_reboot_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_priv_statistics_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint host_info_outCnt;

//	public int[] host_info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_default_memory_manager_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t default_manager;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_wire_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_wire_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_allocate_cpm_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_processors_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t out_processor_list;

//	public NDR_record_t NDR;

//	public uint out_processor_listCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_clock_control_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t clock_ctrl;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__kmod_create_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public int module;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__kmod_destroy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__kmod_control_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t data;

//	public NDR_record_t NDR;

//	public uint dataCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_special_port_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_set_special_port_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_set_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t[] old_handlers;

//	public NDR_record_t NDR;

//	public uint masksCnt;

//	public uint[] masks;

//	public int[] old_behaviors;

//	public int[] old_flavors;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_swap_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t[] old_handlerss;

//	public NDR_record_t NDR;

//	public uint masksCnt;

//	public uint[] masks;

//	public int[] old_behaviors;

//	public int[] old_flavors;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_vm_wire_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_processor_sets_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t processor_sets;

//	public NDR_record_t NDR;

//	public uint processor_setsCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_processor_set_priv_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t set;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_set_UNDServer_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_UNDServer_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t server;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__kext_request_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t response_data;

//	public mach_msg_ool_descriptor_t log_data;

//	public NDR_record_t NDR;

//	public uint response_dataCnt;

//	public uint log_dataCnt;

//	public int op_result;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__host_priv_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__host_get_boot_info_t Reply_host_get_boot_info;

//	[FieldOffset (0)]
//	public __Reply__host_reboot_t Reply_host_reboot;

//	[FieldOffset (0)]
//	public __Reply__host_priv_statistics_t Reply_host_priv_statistics;

//	[FieldOffset (0)]
//	public __Reply__host_default_memory_manager_t Reply_host_default_memory_manager;

//	[FieldOffset (0)]
//	public __Reply__vm_wire_t Reply_vm_wire;

//	[FieldOffset (0)]
//	public __Reply__thread_wire_t Reply_thread_wire;

//	[FieldOffset (0)]
//	public __Reply__vm_allocate_cpm_t Reply_vm_allocate_cpm;

//	[FieldOffset (0)]
//	public __Reply__host_processors_t Reply_host_processors;

//	[FieldOffset (0)]
//	public __Reply__host_get_clock_control_t Reply_host_get_clock_control;

//	[FieldOffset (0)]
//	public __Reply__kmod_create_t Reply_kmod_create;

//	[FieldOffset (0)]
//	public __Reply__kmod_destroy_t Reply_kmod_destroy;

//	[FieldOffset (0)]
//	public __Reply__kmod_control_t Reply_kmod_control;

//	[FieldOffset (0)]
//	public __Reply__host_get_special_port_t Reply_host_get_special_port;

//	[FieldOffset (0)]
//	public __Reply__host_set_special_port_t Reply_host_set_special_port;

//	[FieldOffset (0)]
//	public __Reply__host_set_exception_ports_t Reply_host_set_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__host_get_exception_ports_t Reply_host_get_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__host_swap_exception_ports_t Reply_host_swap_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__mach_vm_wire_t Reply_mach_vm_wire;

//	[FieldOffset (0)]
//	public __Reply__host_processor_sets_t Reply_host_processor_sets;

//	[FieldOffset (0)]
//	public __Reply__host_processor_set_priv_t Reply_host_processor_set_priv;

//	[FieldOffset (0)]
//	public __Reply__host_set_UNDServer_t Reply_host_set_UNDServer;

//	[FieldOffset (0)]
//	public __Reply__host_get_UNDServer_t Reply_host_get_UNDServer;

//	[FieldOffset (0)]
//	public __Reply__kext_request_t Reply_kext_request;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_security_create_task_token_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t parent_task;

//	public mach_msg_port_descriptor_t host;

//	public mach_msg_ool_ports_descriptor_t ledgers;

//	public NDR_record_t NDR;

//	public security_token_t sec_token;

//	public audit_token_t audit_token;

//	public uint ledgersCnt;

//	public int inherit_memory;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_security_set_task_token_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t target_task;

//	public mach_msg_port_descriptor_t host;

//	public NDR_record_t NDR;

//	public security_token_t sec_token;

//	public audit_token_t audit_token;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__host_security_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__host_security_create_task_token_t Request_host_security_create_task_token;

//	[FieldOffset (0)]
//	public __Request__host_security_set_task_token_t Request_host_security_set_task_token;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_security_create_task_token_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t child_task;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_security_set_task_token_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__host_security_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__host_security_create_task_token_t Reply_host_security_create_task_token;

//	[FieldOffset (0)]
//	public __Reply__host_security_set_task_token_t Reply_host_security_set_task_token;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_acquire_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int lock_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_release_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int lock_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_try_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int lock_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_make_stable_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int lock_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_handoff_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int lock_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_handoff_accept_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int lock_id;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__lock_set_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__lock_acquire_t Request_lock_acquire;

//	[FieldOffset (0)]
//	public __Request__lock_release_t Request_lock_release;

//	[FieldOffset (0)]
//	public __Request__lock_try_t Request_lock_try;

//	[FieldOffset (0)]
//	public __Request__lock_make_stable_t Request_lock_make_stable;

//	[FieldOffset (0)]
//	public __Request__lock_handoff_t Request_lock_handoff;

//	[FieldOffset (0)]
//	public __Request__lock_handoff_accept_t Request_lock_handoff_accept;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_acquire_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_release_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_try_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_make_stable_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_handoff_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_handoff_accept_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__lock_set_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__lock_acquire_t Reply_lock_acquire;

//	[FieldOffset (0)]
//	public __Reply__lock_release_t Reply_lock_release;

//	[FieldOffset (0)]
//	public __Reply__lock_try_t Reply_lock_try;

//	[FieldOffset (0)]
//	public __Reply__lock_make_stable_t Reply_lock_make_stable;

//	[FieldOffset (0)]
//	public __Reply__lock_handoff_t Reply_lock_handoff;

//	[FieldOffset (0)]
//	public __Reply__lock_handoff_accept_t Reply_lock_handoff_accept;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_start_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_exit_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint processor_info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_control_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint processor_cmdCnt;

//	public int[] processor_cmd;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_assign_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_set;

//	public NDR_record_t NDR;

//	public int wait;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_get_assignment_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__processor_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__processor_start_t Request_processor_start;

//	[FieldOffset (0)]
//	public __Request__processor_exit_t Request_processor_exit;

//	[FieldOffset (0)]
//	public __Request__processor_info_t Request_processor_info;

//	[FieldOffset (0)]
//	public __Request__processor_control_t Request_processor_control;

//	[FieldOffset (0)]
//	public __Request__processor_assign_t Request_processor_assign;

//	[FieldOffset (0)]
//	public __Request__processor_get_assignment_t Request_processor_get_assignment;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_start_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_exit_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t host;

//	public NDR_record_t NDR;

//	public uint processor_info_outCnt;

//	public int[] processor_info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_control_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_assign_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_get_assignment_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t assigned_set;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__processor_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__processor_start_t Reply_processor_start;

//	[FieldOffset (0)]
//	public __Reply__processor_exit_t Reply_processor_exit;

//	[FieldOffset (0)]
//	public __Reply__processor_info_t Reply_processor_info;

//	[FieldOffset (0)]
//	public __Reply__processor_control_t Reply_processor_control;

//	[FieldOffset (0)]
//	public __Reply__processor_assign_t Reply_processor_assign;

//	[FieldOffset (0)]
//	public __Reply__processor_get_assignment_t Reply_processor_get_assignment;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_statistics_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_destroy_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_max_priority_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int max_priority;

//	public int change_threads;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_policy_enable_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int policy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_policy_disable_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int policy;

//	public int change_threads;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_tasks_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_threads_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_policy_control_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint policy_infoCnt;

//	public int[] policy_info;

//	public int change;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_stack_usage_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint info_outCnt;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__processor_set_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__processor_set_statistics_t Request_processor_set_statistics;

//	[FieldOffset (0)]
//	public __Request__processor_set_destroy_t Request_processor_set_destroy;

//	[FieldOffset (0)]
//	public __Request__processor_set_max_priority_t Request_processor_set_max_priority;

//	[FieldOffset (0)]
//	public __Request__processor_set_policy_enable_t Request_processor_set_policy_enable;

//	[FieldOffset (0)]
//	public __Request__processor_set_policy_disable_t Request_processor_set_policy_disable;

//	[FieldOffset (0)]
//	public __Request__processor_set_tasks_t Request_processor_set_tasks;

//	[FieldOffset (0)]
//	public __Request__processor_set_threads_t Request_processor_set_threads;

//	[FieldOffset (0)]
//	public __Request__processor_set_policy_control_t Request_processor_set_policy_control;

//	[FieldOffset (0)]
//	public __Request__processor_set_stack_usage_t Request_processor_set_stack_usage;

//	[FieldOffset (0)]
//	public __Request__processor_set_info_t Request_processor_set_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_statistics_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint info_outCnt;

//	public int[] info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_destroy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_max_priority_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_policy_enable_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_policy_disable_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_tasks_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t task_list;

//	public NDR_record_t NDR;

//	public uint task_listCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_threads_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t thread_list;

//	public NDR_record_t NDR;

//	public uint thread_listCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_policy_control_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_stack_usage_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint ltotal;

//	public UIntPtr space;

//	public UIntPtr resident;

//	public UIntPtr maxusage;

//	public UIntPtr maxstack;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t host;

//	public NDR_record_t NDR;

//	public uint info_outCnt;

//	public int[] info_out;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__processor_set_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__processor_set_statistics_t Reply_processor_set_statistics;

//	[FieldOffset (0)]
//	public __Reply__processor_set_destroy_t Reply_processor_set_destroy;

//	[FieldOffset (0)]
//	public __Reply__processor_set_max_priority_t Reply_processor_set_max_priority;

//	[FieldOffset (0)]
//	public __Reply__processor_set_policy_enable_t Reply_processor_set_policy_enable;

//	[FieldOffset (0)]
//	public __Reply__processor_set_policy_disable_t Reply_processor_set_policy_disable;

//	[FieldOffset (0)]
//	public __Reply__processor_set_tasks_t Reply_processor_set_tasks;

//	[FieldOffset (0)]
//	public __Reply__processor_set_threads_t Reply_processor_set_threads;

//	[FieldOffset (0)]
//	public __Reply__processor_set_policy_control_t Reply_processor_set_policy_control;

//	[FieldOffset (0)]
//	public __Reply__processor_set_stack_usage_t Reply_processor_set_stack_usage;

//	[FieldOffset (0)]
//	public __Reply__processor_set_info_t Reply_processor_set_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_create_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t ledgers;

//	public NDR_record_t NDR;

//	public uint ledgersCnt;

//	public int inherit_memory;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_terminate_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_threads_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_ports_register_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t init_port_set;

//	public NDR_record_t NDR;

//	public uint init_port_setCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_ports_lookup_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint task_info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint task_info_inCnt;

//	public int[] task_info_in;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_suspend_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_resume_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_get_special_port_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int which_port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_special_port_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t special_port;

//	public NDR_record_t NDR;

//	public int which_port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_create_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_create_running_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint new_stateCnt;

//	public uint[] new_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_port;

//	public NDR_record_t NDR;

//	public uint exception_mask;

//	public int behavior;

//	public int new_flavor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_get_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint exception_mask;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_swap_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_port;

//	public NDR_record_t NDR;

//	public uint exception_mask;

//	public int behavior;

//	public int new_flavor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_set_create_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int n_ulocks;

//	public int policy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__lock_set_destroy_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t lock_set;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__semaphore_create_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int policy;

//	public int value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__semaphore_destroy_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t semaphore;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_policy_set_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint policy_infoCnt;

//	public int[] policy_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_policy_get_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint policy_infoCnt;

//	public int get_default;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_sample_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t reply;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_policy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int policy;

//	public uint baseCnt;

//	public int[] @base;

//	public int set_limit;

//	public int change;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_emulation_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr routine_entry_pt;

//	public int routine_number;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_get_emulation_vector_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_emulation_vector_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t emulation_vector;

//	public NDR_record_t NDR;

//	public int vector_start;

//	public uint emulation_vectorCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_ras_pc_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr basepc;

//	public UIntPtr boundspc;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_zone_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_assign_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_set;

//	public NDR_record_t NDR;

//	public int assign_threads;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_assign_default_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int assign_threads;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_get_assignment_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_policy_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t pset;

//	public NDR_record_t NDR;

//	public int policy;

//	public uint baseCnt;

//	public int[] @base;

//	public uint limitCnt;

//	public int[] limit;

//	public int change;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_get_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint old_stateCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint new_stateCnt;

//	public uint[] new_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_phys_footprint_limit_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int new_limit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_suspend2_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_resume2_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_purgable_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_get_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint which;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_swap_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_voucher;

//	public mach_msg_port_descriptor_t old_voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_generate_corpse_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_map_corpse_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t corspe_task;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_register_dyld_image_infos_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t dyld_images;

//	public NDR_record_t NDR;

//	public uint dyld_imagesCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_unregister_dyld_image_infos_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t dyld_images;

//	public NDR_record_t NDR;

//	public uint dyld_imagesCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_get_dyld_image_infos_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_register_dyld_shared_cache_image_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public dyld_kernel_image_info_t dyld_cache_image;

//	public int no_cache;

//	public int private_cache;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_register_dyld_set_dyld_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public byte dyld_state;

//	public sbyte[] dyld_statePad;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_register_dyld_get_process_state_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_map_corpse_info_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t corspe_task;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_inspect_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint info_outCnt;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__task_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__task_create_t Request_task_create;

//	[FieldOffset (0)]
//	public __Request__task_terminate_t Request_task_terminate;

//	[FieldOffset (0)]
//	public __Request__task_threads_t Request_task_threads;

//	[FieldOffset (0)]
//	public __Request__mach_ports_register_t Request_mach_ports_register;

//	[FieldOffset (0)]
//	public __Request__mach_ports_lookup_t Request_mach_ports_lookup;

//	[FieldOffset (0)]
//	public __Request__task_info_t Request_task_info;

//	[FieldOffset (0)]
//	public __Request__task_set_info_t Request_task_set_info;

//	[FieldOffset (0)]
//	public __Request__task_suspend_t Request_task_suspend;

//	[FieldOffset (0)]
//	public __Request__task_resume_t Request_task_resume;

//	[FieldOffset (0)]
//	public __Request__task_get_special_port_t Request_task_get_special_port;

//	[FieldOffset (0)]
//	public __Request__task_set_special_port_t Request_task_set_special_port;

//	[FieldOffset (0)]
//	public __Request__thread_create_t Request_thread_create;

//	[FieldOffset (0)]
//	public __Request__thread_create_running_t Request_thread_create_running;

//	[FieldOffset (0)]
//	public __Request__task_set_exception_ports_t Request_task_set_exception_ports;

//	[FieldOffset (0)]
//	public __Request__task_get_exception_ports_t Request_task_get_exception_ports;

//	[FieldOffset (0)]
//	public __Request__task_swap_exception_ports_t Request_task_swap_exception_ports;

//	[FieldOffset (0)]
//	public __Request__lock_set_create_t Request_lock_set_create;

//	[FieldOffset (0)]
//	public __Request__lock_set_destroy_t Request_lock_set_destroy;

//	[FieldOffset (0)]
//	public __Request__semaphore_create_t Request_semaphore_create;

//	[FieldOffset (0)]
//	public __Request__semaphore_destroy_t Request_semaphore_destroy;

//	[FieldOffset (0)]
//	public __Request__task_policy_set_t Request_task_policy_set;

//	[FieldOffset (0)]
//	public __Request__task_policy_get_t Request_task_policy_get;

//	[FieldOffset (0)]
//	public __Request__task_sample_t Request_task_sample;

//	[FieldOffset (0)]
//	public __Request__task_policy_t Request_task_policy;

//	[FieldOffset (0)]
//	public __Request__task_set_emulation_t Request_task_set_emulation;

//	[FieldOffset (0)]
//	public __Request__task_get_emulation_vector_t Request_task_get_emulation_vector;

//	[FieldOffset (0)]
//	public __Request__task_set_emulation_vector_t Request_task_set_emulation_vector;

//	[FieldOffset (0)]
//	public __Request__task_set_ras_pc_t Request_task_set_ras_pc;

//	[FieldOffset (0)]
//	public __Request__task_zone_info_t Request_task_zone_info;

//	[FieldOffset (0)]
//	public __Request__task_assign_t Request_task_assign;

//	[FieldOffset (0)]
//	public __Request__task_assign_default_t Request_task_assign_default;

//	[FieldOffset (0)]
//	public __Request__task_get_assignment_t Request_task_get_assignment;

//	[FieldOffset (0)]
//	public __Request__task_set_policy_t Request_task_set_policy;

//	[FieldOffset (0)]
//	public __Request__task_get_state_t Request_task_get_state;

//	[FieldOffset (0)]
//	public __Request__task_set_state_t Request_task_set_state;

//	[FieldOffset (0)]
//	public __Request__task_set_phys_footprint_limit_t Request_task_set_phys_footprint_limit;

//	[FieldOffset (0)]
//	public __Request__task_suspend2_t Request_task_suspend2;

//	[FieldOffset (0)]
//	public __Request__task_resume2_t Request_task_resume2;

//	[FieldOffset (0)]
//	public __Request__task_purgable_info_t Request_task_purgable_info;

//	[FieldOffset (0)]
//	public __Request__task_get_mach_voucher_t Request_task_get_mach_voucher;

//	[FieldOffset (0)]
//	public __Request__task_set_mach_voucher_t Request_task_set_mach_voucher;

//	[FieldOffset (0)]
//	public __Request__task_swap_mach_voucher_t Request_task_swap_mach_voucher;

//	[FieldOffset (0)]
//	public __Request__task_generate_corpse_t Request_task_generate_corpse;

//	[FieldOffset (0)]
//	public __Request__task_map_corpse_info_t Request_task_map_corpse_info;

//	[FieldOffset (0)]
//	public __Request__task_register_dyld_image_infos_t Request_task_register_dyld_image_infos;

//	[FieldOffset (0)]
//	public __Request__task_unregister_dyld_image_infos_t Request_task_unregister_dyld_image_infos;

//	[FieldOffset (0)]
//	public __Request__task_get_dyld_image_infos_t Request_task_get_dyld_image_infos;

//	[FieldOffset (0)]
//	public __Request__task_register_dyld_shared_cache_image_info_t Request_task_register_dyld_shared_cache_image_info;

//	[FieldOffset (0)]
//	public __Request__task_register_dyld_set_dyld_state_t Request_task_register_dyld_set_dyld_state;

//	[FieldOffset (0)]
//	public __Request__task_register_dyld_get_process_state_t Request_task_register_dyld_get_process_state;

//	[FieldOffset (0)]
//	public __Request__task_map_corpse_info_64_t Request_task_map_corpse_info_64;

//	[FieldOffset (0)]
//	public __Request__task_inspect_t Request_task_inspect;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_create_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t child_task;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_terminate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_threads_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t act_list;

//	public NDR_record_t NDR;

//	public uint act_listCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_ports_register_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_ports_lookup_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_ports_descriptor_t init_port_set;

//	public NDR_record_t NDR;

//	public uint init_port_setCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint task_info_outCnt;

//	public int[] task_info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_suspend_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_resume_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_get_special_port_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t special_port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_special_port_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_create_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t child_act;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_create_running_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t child_act;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_get_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t[] old_handlers;

//	public NDR_record_t NDR;

//	public uint masksCnt;

//	public uint[] masks;

//	public int[] old_behaviors;

//	public int[] old_flavors;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_swap_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t[] old_handlerss;

//	public NDR_record_t NDR;

//	public uint masksCnt;

//	public uint[] masks;

//	public int[] old_behaviors;

//	public int[] old_flavors;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_set_create_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_lock_set;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__lock_set_destroy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__semaphore_create_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t semaphore;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__semaphore_destroy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_policy_set_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_policy_get_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint policy_infoCnt;

//	public int[] policy_info;

//	public int get_default;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_sample_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_policy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_emulation_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_get_emulation_vector_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t emulation_vector;

//	public NDR_record_t NDR;

//	public int vector_start;

//	public uint emulation_vectorCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_emulation_vector_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_ras_pc_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_zone_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t names;

//	public mach_msg_ool_descriptor_t info;

//	public NDR_record_t NDR;

//	public uint namesCnt;

//	public uint infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_assign_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_assign_default_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_get_assignment_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t assigned_set;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_policy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_get_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint old_stateCnt;

//	public uint[] old_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_phys_footprint_limit_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public int old_limit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_suspend2_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t suspend_token;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_resume2_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_purgable_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public task_purgable_info_t stats;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_get_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_swap_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t old_voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_generate_corpse_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t corpse_task_port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_map_corpse_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr kcd_addr_begin;

//	public uint kcd_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_register_dyld_image_infos_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_unregister_dyld_image_infos_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_get_dyld_image_infos_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t dyld_images;

//	public NDR_record_t NDR;

//	public uint dyld_imagesCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_register_dyld_shared_cache_image_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_register_dyld_set_dyld_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_register_dyld_get_process_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public dyld_kernel_process_info_t dyld_process_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_map_corpse_info_64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public ulong kcd_addr_begin;

//	public ulong kcd_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_inspect_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint info_outCnt;

//	public int[] info_out;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__task_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__task_create_t Reply_task_create;

//	[FieldOffset (0)]
//	public __Reply__task_terminate_t Reply_task_terminate;

//	[FieldOffset (0)]
//	public __Reply__task_threads_t Reply_task_threads;

//	[FieldOffset (0)]
//	public __Reply__mach_ports_register_t Reply_mach_ports_register;

//	[FieldOffset (0)]
//	public __Reply__mach_ports_lookup_t Reply_mach_ports_lookup;

//	[FieldOffset (0)]
//	public __Reply__task_info_t Reply_task_info;

//	[FieldOffset (0)]
//	public __Reply__task_set_info_t Reply_task_set_info;

//	[FieldOffset (0)]
//	public __Reply__task_suspend_t Reply_task_suspend;

//	[FieldOffset (0)]
//	public __Reply__task_resume_t Reply_task_resume;

//	[FieldOffset (0)]
//	public __Reply__task_get_special_port_t Reply_task_get_special_port;

//	[FieldOffset (0)]
//	public __Reply__task_set_special_port_t Reply_task_set_special_port;

//	[FieldOffset (0)]
//	public __Reply__thread_create_t Reply_thread_create;

//	[FieldOffset (0)]
//	public __Reply__thread_create_running_t Reply_thread_create_running;

//	[FieldOffset (0)]
//	public __Reply__task_set_exception_ports_t Reply_task_set_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__task_get_exception_ports_t Reply_task_get_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__task_swap_exception_ports_t Reply_task_swap_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__lock_set_create_t Reply_lock_set_create;

//	[FieldOffset (0)]
//	public __Reply__lock_set_destroy_t Reply_lock_set_destroy;

//	[FieldOffset (0)]
//	public __Reply__semaphore_create_t Reply_semaphore_create;

//	[FieldOffset (0)]
//	public __Reply__semaphore_destroy_t Reply_semaphore_destroy;

//	[FieldOffset (0)]
//	public __Reply__task_policy_set_t Reply_task_policy_set;

//	[FieldOffset (0)]
//	public __Reply__task_policy_get_t Reply_task_policy_get;

//	[FieldOffset (0)]
//	public __Reply__task_sample_t Reply_task_sample;

//	[FieldOffset (0)]
//	public __Reply__task_policy_t Reply_task_policy;

//	[FieldOffset (0)]
//	public __Reply__task_set_emulation_t Reply_task_set_emulation;

//	[FieldOffset (0)]
//	public __Reply__task_get_emulation_vector_t Reply_task_get_emulation_vector;

//	[FieldOffset (0)]
//	public __Reply__task_set_emulation_vector_t Reply_task_set_emulation_vector;

//	[FieldOffset (0)]
//	public __Reply__task_set_ras_pc_t Reply_task_set_ras_pc;

//	[FieldOffset (0)]
//	public __Reply__task_zone_info_t Reply_task_zone_info;

//	[FieldOffset (0)]
//	public __Reply__task_assign_t Reply_task_assign;

//	[FieldOffset (0)]
//	public __Reply__task_assign_default_t Reply_task_assign_default;

//	[FieldOffset (0)]
//	public __Reply__task_get_assignment_t Reply_task_get_assignment;

//	[FieldOffset (0)]
//	public __Reply__task_set_policy_t Reply_task_set_policy;

//	[FieldOffset (0)]
//	public __Reply__task_get_state_t Reply_task_get_state;

//	[FieldOffset (0)]
//	public __Reply__task_set_state_t Reply_task_set_state;

//	[FieldOffset (0)]
//	public __Reply__task_set_phys_footprint_limit_t Reply_task_set_phys_footprint_limit;

//	[FieldOffset (0)]
//	public __Reply__task_suspend2_t Reply_task_suspend2;

//	[FieldOffset (0)]
//	public __Reply__task_resume2_t Reply_task_resume2;

//	[FieldOffset (0)]
//	public __Reply__task_purgable_info_t Reply_task_purgable_info;

//	[FieldOffset (0)]
//	public __Reply__task_get_mach_voucher_t Reply_task_get_mach_voucher;

//	[FieldOffset (0)]
//	public __Reply__task_set_mach_voucher_t Reply_task_set_mach_voucher;

//	[FieldOffset (0)]
//	public __Reply__task_swap_mach_voucher_t Reply_task_swap_mach_voucher;

//	[FieldOffset (0)]
//	public __Reply__task_generate_corpse_t Reply_task_generate_corpse;

//	[FieldOffset (0)]
//	public __Reply__task_map_corpse_info_t Reply_task_map_corpse_info;

//	[FieldOffset (0)]
//	public __Reply__task_register_dyld_image_infos_t Reply_task_register_dyld_image_infos;

//	[FieldOffset (0)]
//	public __Reply__task_unregister_dyld_image_infos_t Reply_task_unregister_dyld_image_infos;

//	[FieldOffset (0)]
//	public __Reply__task_get_dyld_image_infos_t Reply_task_get_dyld_image_infos;

//	[FieldOffset (0)]
//	public __Reply__task_register_dyld_shared_cache_image_info_t Reply_task_register_dyld_shared_cache_image_info;

//	[FieldOffset (0)]
//	public __Reply__task_register_dyld_set_dyld_state_t Reply_task_register_dyld_set_dyld_state;

//	[FieldOffset (0)]
//	public __Reply__task_register_dyld_get_process_state_t Reply_task_register_dyld_get_process_state;

//	[FieldOffset (0)]
//	public __Reply__task_map_corpse_info_64_t Reply_task_map_corpse_info_64;

//	[FieldOffset (0)]
//	public __Reply__task_inspect_t Reply_task_inspect;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_terminate_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__act_get_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint old_stateCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__act_set_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint new_stateCnt;

//	public uint[] new_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_get_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint old_stateCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_set_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint new_stateCnt;

//	public uint[] new_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_suspend_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_resume_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_abort_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_abort_safely_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_depress_abort_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_get_special_port_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int which_port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_set_special_port_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t special_port;

//	public NDR_record_t NDR;

//	public int which_port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint thread_info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_set_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_port;

//	public NDR_record_t NDR;

//	public uint exception_mask;

//	public int behavior;

//	public int new_flavor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_get_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint exception_mask;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_swap_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_port;

//	public NDR_record_t NDR;

//	public uint exception_mask;

//	public int behavior;

//	public int new_flavor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_policy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int policy;

//	public uint baseCnt;

//	public int[] @base;

//	public int set_limit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_policy_set_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint policy_infoCnt;

//	public int[] policy_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_policy_get_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint flavor;

//	public uint policy_infoCnt;

//	public int get_default;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_sample_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t reply;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__etap_trace_thread_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int trace_status;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_assign_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_set;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_assign_default_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_get_assignment_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_set_policy_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t pset;

//	public NDR_record_t NDR;

//	public int policy;

//	public uint baseCnt;

//	public int[] @base;

//	public uint limitCnt;

//	public int[] limit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_get_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint which;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_set_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__thread_swap_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_voucher;

//	public mach_msg_port_descriptor_t old_voucher;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__thread_act_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__thread_terminate_t Request_thread_terminate;

//	[FieldOffset (0)]
//	public __Request__act_get_state_t Request_act_get_state;

//	[FieldOffset (0)]
//	public __Request__act_set_state_t Request_act_set_state;

//	[FieldOffset (0)]
//	public __Request__thread_get_state_t Request_thread_get_state;

//	[FieldOffset (0)]
//	public __Request__thread_set_state_t Request_thread_set_state;

//	[FieldOffset (0)]
//	public __Request__thread_suspend_t Request_thread_suspend;

//	[FieldOffset (0)]
//	public __Request__thread_resume_t Request_thread_resume;

//	[FieldOffset (0)]
//	public __Request__thread_abort_t Request_thread_abort;

//	[FieldOffset (0)]
//	public __Request__thread_abort_safely_t Request_thread_abort_safely;

//	[FieldOffset (0)]
//	public __Request__thread_depress_abort_t Request_thread_depress_abort;

//	[FieldOffset (0)]
//	public __Request__thread_get_special_port_t Request_thread_get_special_port;

//	[FieldOffset (0)]
//	public __Request__thread_set_special_port_t Request_thread_set_special_port;

//	[FieldOffset (0)]
//	public __Request__thread_info_t Request_thread_info;

//	[FieldOffset (0)]
//	public __Request__thread_set_exception_ports_t Request_thread_set_exception_ports;

//	[FieldOffset (0)]
//	public __Request__thread_get_exception_ports_t Request_thread_get_exception_ports;

//	[FieldOffset (0)]
//	public __Request__thread_swap_exception_ports_t Request_thread_swap_exception_ports;

//	[FieldOffset (0)]
//	public __Request__thread_policy_t Request_thread_policy;

//	[FieldOffset (0)]
//	public __Request__thread_policy_set_t Request_thread_policy_set;

//	[FieldOffset (0)]
//	public __Request__thread_policy_get_t Request_thread_policy_get;

//	[FieldOffset (0)]
//	public __Request__thread_sample_t Request_thread_sample;

//	[FieldOffset (0)]
//	public __Request__etap_trace_thread_t Request_etap_trace_thread;

//	[FieldOffset (0)]
//	public __Request__thread_assign_t Request_thread_assign;

//	[FieldOffset (0)]
//	public __Request__thread_assign_default_t Request_thread_assign_default;

//	[FieldOffset (0)]
//	public __Request__thread_get_assignment_t Request_thread_get_assignment;

//	[FieldOffset (0)]
//	public __Request__thread_set_policy_t Request_thread_set_policy;

//	[FieldOffset (0)]
//	public __Request__thread_get_mach_voucher_t Request_thread_get_mach_voucher;

//	[FieldOffset (0)]
//	public __Request__thread_set_mach_voucher_t Request_thread_set_mach_voucher;

//	[FieldOffset (0)]
//	public __Request__thread_swap_mach_voucher_t Request_thread_swap_mach_voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_terminate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__act_get_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint old_stateCnt;

//	public uint[] old_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__act_set_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_get_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint old_stateCnt;

//	public uint[] old_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_set_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_suspend_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_resume_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_abort_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_abort_safely_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_depress_abort_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_get_special_port_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t special_port;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_set_special_port_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint thread_info_outCnt;

//	public int[] thread_info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_set_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_get_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t[] old_handlers;

//	public NDR_record_t NDR;

//	public uint masksCnt;

//	public uint[] masks;

//	public int[] old_behaviors;

//	public int[] old_flavors;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_swap_exception_ports_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t[] old_handlers;

//	public NDR_record_t NDR;

//	public uint masksCnt;

//	public uint[] masks;

//	public int[] old_behaviors;

//	public int[] old_flavors;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_policy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_policy_set_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_policy_get_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint policy_infoCnt;

//	public int[] policy_info;

//	public int get_default;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_sample_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__etap_trace_thread_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_assign_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_assign_default_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_get_assignment_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t assigned_set;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_set_policy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_get_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_set_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__thread_swap_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t old_voucher;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__thread_act_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__thread_terminate_t Reply_thread_terminate;

//	[FieldOffset (0)]
//	public __Reply__act_get_state_t Reply_act_get_state;

//	[FieldOffset (0)]
//	public __Reply__act_set_state_t Reply_act_set_state;

//	[FieldOffset (0)]
//	public __Reply__thread_get_state_t Reply_thread_get_state;

//	[FieldOffset (0)]
//	public __Reply__thread_set_state_t Reply_thread_set_state;

//	[FieldOffset (0)]
//	public __Reply__thread_suspend_t Reply_thread_suspend;

//	[FieldOffset (0)]
//	public __Reply__thread_resume_t Reply_thread_resume;

//	[FieldOffset (0)]
//	public __Reply__thread_abort_t Reply_thread_abort;

//	[FieldOffset (0)]
//	public __Reply__thread_abort_safely_t Reply_thread_abort_safely;

//	[FieldOffset (0)]
//	public __Reply__thread_depress_abort_t Reply_thread_depress_abort;

//	[FieldOffset (0)]
//	public __Reply__thread_get_special_port_t Reply_thread_get_special_port;

//	[FieldOffset (0)]
//	public __Reply__thread_set_special_port_t Reply_thread_set_special_port;

//	[FieldOffset (0)]
//	public __Reply__thread_info_t Reply_thread_info;

//	[FieldOffset (0)]
//	public __Reply__thread_set_exception_ports_t Reply_thread_set_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__thread_get_exception_ports_t Reply_thread_get_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__thread_swap_exception_ports_t Reply_thread_swap_exception_ports;

//	[FieldOffset (0)]
//	public __Reply__thread_policy_t Reply_thread_policy;

//	[FieldOffset (0)]
//	public __Reply__thread_policy_set_t Reply_thread_policy_set;

//	[FieldOffset (0)]
//	public __Reply__thread_policy_get_t Reply_thread_policy_get;

//	[FieldOffset (0)]
//	public __Reply__thread_sample_t Reply_thread_sample;

//	[FieldOffset (0)]
//	public __Reply__etap_trace_thread_t Reply_etap_trace_thread;

//	[FieldOffset (0)]
//	public __Reply__thread_assign_t Reply_thread_assign;

//	[FieldOffset (0)]
//	public __Reply__thread_assign_default_t Reply_thread_assign_default;

//	[FieldOffset (0)]
//	public __Reply__thread_get_assignment_t Reply_thread_get_assignment;

//	[FieldOffset (0)]
//	public __Reply__thread_set_policy_t Reply_thread_set_policy;

//	[FieldOffset (0)]
//	public __Reply__thread_get_mach_voucher_t Reply_thread_get_mach_voucher;

//	[FieldOffset (0)]
//	public __Reply__thread_set_mach_voucher_t Reply_thread_set_mach_voucher;

//	[FieldOffset (0)]
//	public __Reply__thread_swap_mach_voucher_t Reply_thread_swap_mach_voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_region_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public int flavor;

//	public uint infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_allocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public int flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_deallocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_protect_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public int set_maximum;

//	public int new_protection;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_inherit_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public uint new_inheritance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_read_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_read_list_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public vm_read_entry_t[] data_list;

//	public uint count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_write_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t data;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public uint dataCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_copy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr source_address;

//	public UIntPtr size;

//	public UIntPtr dest_address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_read_overwrite_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public UIntPtr data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_msync_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public uint sync_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_behavior_set_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public int new_behavior;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_map_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t @object;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public UIntPtr mask;

//	public int flags;

//	public UIntPtr offset;

//	public int copy;

//	public int cur_protection;

//	public int max_protection;

//	public uint inheritance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_machine_attribute_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public uint attribute;

//	public int value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_remap_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t src_task;

//	public NDR_record_t NDR;

//	public UIntPtr target_address;

//	public UIntPtr size;

//	public UIntPtr mask;

//	public int flags;

//	public UIntPtr src_address;

//	public int copy;

//	public uint inheritance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_wire_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int must_wire;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_make_memory_entry_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t parent_entry;

//	public NDR_record_t NDR;

//	public UIntPtr size;

//	public UIntPtr offset;

//	public int permission;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_map_page_query_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr offset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_vm_region_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_mapped_pages_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_region_recurse_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public uint nesting_depth;

//	public uint infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_region_recurse_64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public uint nesting_depth;

//	public uint infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_vm_region_info_64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_region_64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public int flavor;

//	public uint infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_make_memory_entry_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t parent_entry;

//	public NDR_record_t NDR;

//	public ulong size;

//	public ulong offset;

//	public int permission;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_map_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t @object;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public UIntPtr mask;

//	public int flags;

//	public ulong offset;

//	public int copy;

//	public int cur_protection;

//	public int max_protection;

//	public uint inheritance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__vm_purgable_control_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public int control;

//	public int state;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__vm_map_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__vm_region_t Request_vm_region;

//	[FieldOffset (0)]
//	public __Request__vm_allocate_t Request_vm_allocate;

//	[FieldOffset (0)]
//	public __Request__vm_deallocate_t Request_vm_deallocate;

//	[FieldOffset (0)]
//	public __Request__vm_protect_t Request_vm_protect;

//	[FieldOffset (0)]
//	public __Request__vm_inherit_t Request_vm_inherit;

//	[FieldOffset (0)]
//	public __Request__vm_read_t Request_vm_read;

//	[FieldOffset (0)]
//	public __Request__vm_read_list_t Request_vm_read_list;

//	[FieldOffset (0)]
//	public __Request__vm_write_t Request_vm_write;

//	[FieldOffset (0)]
//	public __Request__vm_copy_t Request_vm_copy;

//	[FieldOffset (0)]
//	public __Request__vm_read_overwrite_t Request_vm_read_overwrite;

//	[FieldOffset (0)]
//	public __Request__vm_msync_t Request_vm_msync;

//	[FieldOffset (0)]
//	public __Request__vm_behavior_set_t Request_vm_behavior_set;

//	[FieldOffset (0)]
//	public __Request__vm_map_t Request_vm_map;

//	[FieldOffset (0)]
//	public __Request__vm_machine_attribute_t Request_vm_machine_attribute;

//	[FieldOffset (0)]
//	public __Request__vm_remap_t Request_vm_remap;

//	[FieldOffset (0)]
//	public __Request__task_wire_t Request_task_wire;

//	[FieldOffset (0)]
//	public __Request__mach_make_memory_entry_t Request_mach_make_memory_entry;

//	[FieldOffset (0)]
//	public __Request__vm_map_page_query_t Request_vm_map_page_query;

//	[FieldOffset (0)]
//	public __Request__mach_vm_region_info_t Request_mach_vm_region_info;

//	[FieldOffset (0)]
//	public __Request__vm_mapped_pages_info_t Request_vm_mapped_pages_info;

//	[FieldOffset (0)]
//	public __Request__vm_region_recurse_t Request_vm_region_recurse;

//	[FieldOffset (0)]
//	public __Request__vm_region_recurse_64_t Request_vm_region_recurse_64;

//	[FieldOffset (0)]
//	public __Request__mach_vm_region_info_64_t Request_mach_vm_region_info_64;

//	[FieldOffset (0)]
//	public __Request__vm_region_64_t Request_vm_region_64;

//	[FieldOffset (0)]
//	public __Request__mach_make_memory_entry_64_t Request_mach_make_memory_entry_64;

//	[FieldOffset (0)]
//	public __Request__vm_map_64_t Request_vm_map_64;

//	[FieldOffset (0)]
//	public __Request__vm_purgable_control_t Request_vm_purgable_control;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_region_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t object_name;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public uint infoCnt;

//	public int[] info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_allocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_deallocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_protect_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_inherit_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_read_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t data;

//	public NDR_record_t NDR;

//	public uint dataCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_read_list_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public vm_read_entry_t[] data_list;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_write_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_copy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_read_overwrite_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr outsize;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_msync_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_behavior_set_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_map_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_machine_attribute_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public int value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_remap_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr target_address;

//	public int cur_protection;

//	public int max_protection;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_wire_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_make_memory_entry_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t object_handle;

//	public NDR_record_t NDR;

//	public UIntPtr size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_map_page_query_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public int disposition;

//	public int ref_count;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_vm_region_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t objects;

//	public NDR_record_t NDR;

//	public vm_info_region_t region;

//	public uint objectsCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_mapped_pages_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t pages;

//	public NDR_record_t NDR;

//	public uint pagesCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_region_recurse_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr address;

//	public UIntPtr size;

//	public uint nesting_depth;

//	public uint infoCnt;

//	public int[] info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_region_recurse_64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr address;

//	public UIntPtr size;

//	public uint nesting_depth;

//	public uint infoCnt;

//	public int[] info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_vm_region_info_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t objects;

//	public NDR_record_t NDR;

//	public vm_info_region_64_t region;

//	public uint objectsCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_region_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t object_name;

//	public NDR_record_t NDR;

//	public UIntPtr address;

//	public UIntPtr size;

//	public uint infoCnt;

//	public int[] info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_make_memory_entry_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t object_handle;

//	public NDR_record_t NDR;

//	public ulong size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_map_64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr address;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__vm_purgable_control_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public int state;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__vm_map_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__vm_region_t Reply_vm_region;

//	[FieldOffset (0)]
//	public __Reply__vm_allocate_t Reply_vm_allocate;

//	[FieldOffset (0)]
//	public __Reply__vm_deallocate_t Reply_vm_deallocate;

//	[FieldOffset (0)]
//	public __Reply__vm_protect_t Reply_vm_protect;

//	[FieldOffset (0)]
//	public __Reply__vm_inherit_t Reply_vm_inherit;

//	[FieldOffset (0)]
//	public __Reply__vm_read_t Reply_vm_read;

//	[FieldOffset (0)]
//	public __Reply__vm_read_list_t Reply_vm_read_list;

//	[FieldOffset (0)]
//	public __Reply__vm_write_t Reply_vm_write;

//	[FieldOffset (0)]
//	public __Reply__vm_copy_t Reply_vm_copy;

//	[FieldOffset (0)]
//	public __Reply__vm_read_overwrite_t Reply_vm_read_overwrite;

//	[FieldOffset (0)]
//	public __Reply__vm_msync_t Reply_vm_msync;

//	[FieldOffset (0)]
//	public __Reply__vm_behavior_set_t Reply_vm_behavior_set;

//	[FieldOffset (0)]
//	public __Reply__vm_map_t Reply_vm_map;

//	[FieldOffset (0)]
//	public __Reply__vm_machine_attribute_t Reply_vm_machine_attribute;

//	[FieldOffset (0)]
//	public __Reply__vm_remap_t Reply_vm_remap;

//	[FieldOffset (0)]
//	public __Reply__task_wire_t Reply_task_wire;

//	[FieldOffset (0)]
//	public __Reply__mach_make_memory_entry_t Reply_mach_make_memory_entry;

//	[FieldOffset (0)]
//	public __Reply__vm_map_page_query_t Reply_vm_map_page_query;

//	[FieldOffset (0)]
//	public __Reply__mach_vm_region_info_t Reply_mach_vm_region_info;

//	[FieldOffset (0)]
//	public __Reply__vm_mapped_pages_info_t Reply_vm_mapped_pages_info;

//	[FieldOffset (0)]
//	public __Reply__vm_region_recurse_t Reply_vm_region_recurse;

//	[FieldOffset (0)]
//	public __Reply__vm_region_recurse_64_t Reply_vm_region_recurse_64;

//	[FieldOffset (0)]
//	public __Reply__mach_vm_region_info_64_t Reply_mach_vm_region_info_64;

//	[FieldOffset (0)]
//	public __Reply__vm_region_64_t Reply_vm_region_64;

//	[FieldOffset (0)]
//	public __Reply__mach_make_memory_entry_64_t Reply_mach_make_memory_entry_64;

//	[FieldOffset (0)]
//	public __Reply__vm_map_64_t Reply_vm_map_64;

//	[FieldOffset (0)]
//	public __Reply__vm_purgable_control_t Reply_vm_purgable_control;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_names_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_type_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_rename_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint old_name;

//	public uint new_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_allocate_name_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint right;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_allocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint right;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_destroy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_deallocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_get_refs_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint right;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_mod_refs_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint right;

//	public int delta;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_peek_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint trailer_type;

//	public uint request_seqnop;

//	public uint trailer_infopCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_set_mscount_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint mscount;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_get_set_status_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_move_member_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint member;

//	public uint after;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_request_notification_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t notify;

//	public NDR_record_t NDR;

//	public uint name;

//	public int msgid;

//	public uint sync;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_insert_right_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t poly;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_extract_right_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint msgt_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_set_seqno_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint seqno;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_get_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public int flavor;

//	public uint port_info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_set_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public int flavor;

//	public uint port_infoCnt;

//	public int[] port_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_allocate_qos_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint right;

//	public mach_port_qos_t qos;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_allocate_full_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t proto;

//	public NDR_record_t NDR;

//	public uint right;

//	public mach_port_qos_t qos;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__task_set_port_space_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int table_entries;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_get_srights_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_space_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_dnrequest_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_kernel_object_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_insert_member_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint pset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_extract_member_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public uint pset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_get_context_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_set_context_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public UIntPtr context;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_kobject_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_construct_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t options;

//	public NDR_record_t NDR;

//	public UIntPtr context;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_destruct_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public int srdelta;

//	public UIntPtr guard;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_guard_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public UIntPtr guard;

//	public int strict;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_unguard_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint name;

//	public UIntPtr guard;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_port_space_basic_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__mach_port_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__mach_port_names_t Request_mach_port_names;

//	[FieldOffset (0)]
//	public __Request__mach_port_type_t Request_mach_port_type;

//	[FieldOffset (0)]
//	public __Request__mach_port_rename_t Request_mach_port_rename;

//	[FieldOffset (0)]
//	public __Request__mach_port_allocate_name_t Request_mach_port_allocate_name;

//	[FieldOffset (0)]
//	public __Request__mach_port_allocate_t Request_mach_port_allocate;

//	[FieldOffset (0)]
//	public __Request__mach_port_destroy_t Request_mach_port_destroy;

//	[FieldOffset (0)]
//	public __Request__mach_port_deallocate_t Request_mach_port_deallocate;

//	[FieldOffset (0)]
//	public __Request__mach_port_get_refs_t Request_mach_port_get_refs;

//	[FieldOffset (0)]
//	public __Request__mach_port_mod_refs_t Request_mach_port_mod_refs;

//	[FieldOffset (0)]
//	public __Request__mach_port_peek_t Request_mach_port_peek;

//	[FieldOffset (0)]
//	public __Request__mach_port_set_mscount_t Request_mach_port_set_mscount;

//	[FieldOffset (0)]
//	public __Request__mach_port_get_set_status_t Request_mach_port_get_set_status;

//	[FieldOffset (0)]
//	public __Request__mach_port_move_member_t Request_mach_port_move_member;

//	[FieldOffset (0)]
//	public __Request__mach_port_request_notification_t Request_mach_port_request_notification;

//	[FieldOffset (0)]
//	public __Request__mach_port_insert_right_t Request_mach_port_insert_right;

//	[FieldOffset (0)]
//	public __Request__mach_port_extract_right_t Request_mach_port_extract_right;

//	[FieldOffset (0)]
//	public __Request__mach_port_set_seqno_t Request_mach_port_set_seqno;

//	[FieldOffset (0)]
//	public __Request__mach_port_get_attributes_t Request_mach_port_get_attributes;

//	[FieldOffset (0)]
//	public __Request__mach_port_set_attributes_t Request_mach_port_set_attributes;

//	[FieldOffset (0)]
//	public __Request__mach_port_allocate_qos_t Request_mach_port_allocate_qos;

//	[FieldOffset (0)]
//	public __Request__mach_port_allocate_full_t Request_mach_port_allocate_full;

//	[FieldOffset (0)]
//	public __Request__task_set_port_space_t Request_task_set_port_space;

//	[FieldOffset (0)]
//	public __Request__mach_port_get_srights_t Request_mach_port_get_srights;

//	[FieldOffset (0)]
//	public __Request__mach_port_space_info_t Request_mach_port_space_info;

//	[FieldOffset (0)]
//	public __Request__mach_port_dnrequest_info_t Request_mach_port_dnrequest_info;

//	[FieldOffset (0)]
//	public __Request__mach_port_kernel_object_t Request_mach_port_kernel_object;

//	[FieldOffset (0)]
//	public __Request__mach_port_insert_member_t Request_mach_port_insert_member;

//	[FieldOffset (0)]
//	public __Request__mach_port_extract_member_t Request_mach_port_extract_member;

//	[FieldOffset (0)]
//	public __Request__mach_port_get_context_t Request_mach_port_get_context;

//	[FieldOffset (0)]
//	public __Request__mach_port_set_context_t Request_mach_port_set_context;

//	[FieldOffset (0)]
//	public __Request__mach_port_kobject_t Request_mach_port_kobject;

//	[FieldOffset (0)]
//	public __Request__mach_port_construct_t Request_mach_port_construct;

//	[FieldOffset (0)]
//	public __Request__mach_port_destruct_t Request_mach_port_destruct;

//	[FieldOffset (0)]
//	public __Request__mach_port_guard_t Request_mach_port_guard;

//	[FieldOffset (0)]
//	public __Request__mach_port_unguard_t Request_mach_port_unguard;

//	[FieldOffset (0)]
//	public __Request__mach_port_space_basic_info_t Request_mach_port_space_basic_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_names_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t names;

//	public mach_msg_ool_descriptor_t types;

//	public NDR_record_t NDR;

//	public uint namesCnt;

//	public uint typesCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_type_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint ptype;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_rename_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_allocate_name_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_allocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_destroy_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_deallocate_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_get_refs_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint refs;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_mod_refs_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_peek_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint request_seqnop;

//	public uint msg_sizep;

//	public int msg_idp;

//	public uint trailer_infopCnt;

//	public sbyte[] trailer_infop;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_set_mscount_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_get_set_status_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t members;

//	public NDR_record_t NDR;

//	public uint membersCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_move_member_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_request_notification_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t previous;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_insert_right_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_extract_right_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t poly;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_set_seqno_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_get_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint port_info_outCnt;

//	public int[] port_info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_set_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_allocate_qos_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public mach_port_qos_t qos;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_allocate_full_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public mach_port_qos_t qos;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__task_set_port_space_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_get_srights_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint srights;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_space_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t table_info;

//	public mach_msg_ool_descriptor_t tree_info;

//	public NDR_record_t NDR;

//	public ipc_info_space_t space_info;

//	public uint table_infoCnt;

//	public uint tree_infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_dnrequest_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint dnr_total;

//	public uint dnr_used;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_kernel_object_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint object_type;

//	public uint object_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_insert_member_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_extract_member_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_get_context_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr context;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_set_context_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_kobject_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint object_type;

//	public ulong object_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_construct_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_destruct_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_guard_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_unguard_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_port_space_basic_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public ipc_info_space_basic_t basic_info;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__mach_port_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__mach_port_names_t Reply_mach_port_names;

//	[FieldOffset (0)]
//	public __Reply__mach_port_type_t Reply_mach_port_type;

//	[FieldOffset (0)]
//	public __Reply__mach_port_rename_t Reply_mach_port_rename;

//	[FieldOffset (0)]
//	public __Reply__mach_port_allocate_name_t Reply_mach_port_allocate_name;

//	[FieldOffset (0)]
//	public __Reply__mach_port_allocate_t Reply_mach_port_allocate;

//	[FieldOffset (0)]
//	public __Reply__mach_port_destroy_t Reply_mach_port_destroy;

//	[FieldOffset (0)]
//	public __Reply__mach_port_deallocate_t Reply_mach_port_deallocate;

//	[FieldOffset (0)]
//	public __Reply__mach_port_get_refs_t Reply_mach_port_get_refs;

//	[FieldOffset (0)]
//	public __Reply__mach_port_mod_refs_t Reply_mach_port_mod_refs;

//	[FieldOffset (0)]
//	public __Reply__mach_port_peek_t Reply_mach_port_peek;

//	[FieldOffset (0)]
//	public __Reply__mach_port_set_mscount_t Reply_mach_port_set_mscount;

//	[FieldOffset (0)]
//	public __Reply__mach_port_get_set_status_t Reply_mach_port_get_set_status;

//	[FieldOffset (0)]
//	public __Reply__mach_port_move_member_t Reply_mach_port_move_member;

//	[FieldOffset (0)]
//	public __Reply__mach_port_request_notification_t Reply_mach_port_request_notification;

//	[FieldOffset (0)]
//	public __Reply__mach_port_insert_right_t Reply_mach_port_insert_right;

//	[FieldOffset (0)]
//	public __Reply__mach_port_extract_right_t Reply_mach_port_extract_right;

//	[FieldOffset (0)]
//	public __Reply__mach_port_set_seqno_t Reply_mach_port_set_seqno;

//	[FieldOffset (0)]
//	public __Reply__mach_port_get_attributes_t Reply_mach_port_get_attributes;

//	[FieldOffset (0)]
//	public __Reply__mach_port_set_attributes_t Reply_mach_port_set_attributes;

//	[FieldOffset (0)]
//	public __Reply__mach_port_allocate_qos_t Reply_mach_port_allocate_qos;

//	[FieldOffset (0)]
//	public __Reply__mach_port_allocate_full_t Reply_mach_port_allocate_full;

//	[FieldOffset (0)]
//	public __Reply__task_set_port_space_t Reply_task_set_port_space;

//	[FieldOffset (0)]
//	public __Reply__mach_port_get_srights_t Reply_mach_port_get_srights;

//	[FieldOffset (0)]
//	public __Reply__mach_port_space_info_t Reply_mach_port_space_info;

//	[FieldOffset (0)]
//	public __Reply__mach_port_dnrequest_info_t Reply_mach_port_dnrequest_info;

//	[FieldOffset (0)]
//	public __Reply__mach_port_kernel_object_t Reply_mach_port_kernel_object;

//	[FieldOffset (0)]
//	public __Reply__mach_port_insert_member_t Reply_mach_port_insert_member;

//	[FieldOffset (0)]
//	public __Reply__mach_port_extract_member_t Reply_mach_port_extract_member;

//	[FieldOffset (0)]
//	public __Reply__mach_port_get_context_t Reply_mach_port_get_context;

//	[FieldOffset (0)]
//	public __Reply__mach_port_set_context_t Reply_mach_port_set_context;

//	[FieldOffset (0)]
//	public __Reply__mach_port_kobject_t Reply_mach_port_kobject;

//	[FieldOffset (0)]
//	public __Reply__mach_port_construct_t Reply_mach_port_construct;

//	[FieldOffset (0)]
//	public __Reply__mach_port_destruct_t Reply_mach_port_destruct;

//	[FieldOffset (0)]
//	public __Reply__mach_port_guard_t Reply_mach_port_guard;

//	[FieldOffset (0)]
//	public __Reply__mach_port_unguard_t Reply_mach_port_unguard;

//	[FieldOffset (0)]
//	public __Reply__mach_port_space_basic_info_t Reply_mach_port_space_basic_info;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint host_info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_kernel_version_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request___host_page_size_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_memory_object_memory_entry_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t pager;

//	public NDR_record_t NDR;

//	public int @internal;

//	public UIntPtr size;

//	public int permission;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_processor_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_io_master_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_clock_service_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int clock_id;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__kmod_get_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_virtual_physical_table_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_default_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__processor_set_create_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_memory_object_memory_entry_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t pager;

//	public NDR_record_t NDR;

//	public int @internal;

//	public ulong size;

//	public int permission;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_statistics_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint host_info_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_request_notification_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t notify_port;

//	public NDR_record_t NDR;

//	public int notify_type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_lockgroup_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_statistics64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint host_info64_outCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_zone_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_create_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint recipesCnt;

//	public byte[] recipes;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_register_mach_voucher_attr_manager_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t attr_manager;

//	public NDR_record_t NDR;

//	public ulong default_value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_register_well_known_mach_voucher_attr_manager_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t attr_manager;

//	public NDR_record_t NDR;

//	public ulong default_value;

//	public uint key;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_set_atm_diagnostic_flag_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint diagnostic_flag;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_atm_diagnostic_flag_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__mach_memory_info_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_set_multiuser_config_flags_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public uint multiuser_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_get_multiuser_config_flags_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__host_check_multiuser_mode_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__mach_host_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__host_info_t Request_host_info;

//	[FieldOffset (0)]
//	public __Request__host_kernel_version_t Request_host_kernel_version;

//	[FieldOffset (0)]
//	public __Request___host_page_size_t Request__host_page_size;

//	[FieldOffset (0)]
//	public __Request__mach_memory_object_memory_entry_t Request_mach_memory_object_memory_entry;

//	[FieldOffset (0)]
//	public __Request__host_processor_info_t Request_host_processor_info;

//	[FieldOffset (0)]
//	public __Request__host_get_io_master_t Request_host_get_io_master;

//	[FieldOffset (0)]
//	public __Request__host_get_clock_service_t Request_host_get_clock_service;

//	[FieldOffset (0)]
//	public __Request__kmod_get_info_t Request_kmod_get_info;

//	[FieldOffset (0)]
//	public __Request__host_virtual_physical_table_info_t Request_host_virtual_physical_table_info;

//	[FieldOffset (0)]
//	public __Request__processor_set_default_t Request_processor_set_default;

//	[FieldOffset (0)]
//	public __Request__processor_set_create_t Request_processor_set_create;

//	[FieldOffset (0)]
//	public __Request__mach_memory_object_memory_entry_64_t Request_mach_memory_object_memory_entry_64;

//	[FieldOffset (0)]
//	public __Request__host_statistics_t Request_host_statistics;

//	[FieldOffset (0)]
//	public __Request__host_request_notification_t Request_host_request_notification;

//	[FieldOffset (0)]
//	public __Request__host_lockgroup_info_t Request_host_lockgroup_info;

//	[FieldOffset (0)]
//	public __Request__host_statistics64_t Request_host_statistics64;

//	[FieldOffset (0)]
//	public __Request__mach_zone_info_t Request_mach_zone_info;

//	[FieldOffset (0)]
//	public __Request__host_create_mach_voucher_t Request_host_create_mach_voucher;

//	[FieldOffset (0)]
//	public __Request__host_register_mach_voucher_attr_manager_t Request_host_register_mach_voucher_attr_manager;

//	[FieldOffset (0)]
//	public __Request__host_register_well_known_mach_voucher_attr_manager_t Request_host_register_well_known_mach_voucher_attr_manager;

//	[FieldOffset (0)]
//	public __Request__host_set_atm_diagnostic_flag_t Request_host_set_atm_diagnostic_flag;

//	[FieldOffset (0)]
//	public __Request__host_get_atm_diagnostic_flag_t Request_host_get_atm_diagnostic_flag;

//	[FieldOffset (0)]
//	public __Request__mach_memory_info_t Request_mach_memory_info;

//	[FieldOffset (0)]
//	public __Request__host_set_multiuser_config_flags_t Request_host_set_multiuser_config_flags;

//	[FieldOffset (0)]
//	public __Request__host_get_multiuser_config_flags_t Request_host_get_multiuser_config_flags;

//	[FieldOffset (0)]
//	public __Request__host_check_multiuser_mode_t Request_host_check_multiuser_mode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_info_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint host_info_outCnt;

//	public int[] host_info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_kernel_version_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint kernel_versionOffset;

//	public uint kernel_versionCnt;

//	public sbyte[] kernel_version;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply___host_page_size_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public UIntPtr out_page_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_memory_object_memory_entry_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t entry_handle;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_processor_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t out_processor_info;

//	public NDR_record_t NDR;

//	public uint out_processor_count;

//	public uint out_processor_infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_io_master_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t io_master;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_clock_service_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t clock_serv;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__kmod_get_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t modules;

//	public NDR_record_t NDR;

//	public uint modulesCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_virtual_physical_table_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t info;

//	public NDR_record_t NDR;

//	public uint infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_default_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t default_set;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__processor_set_create_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_set;

//	public mach_msg_port_descriptor_t new_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_memory_object_memory_entry_64_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t entry_handle;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_statistics_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint host_info_outCnt;

//	public int[] host_info_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_request_notification_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_lockgroup_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t lockgroup_info;

//	public NDR_record_t NDR;

//	public uint lockgroup_infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_statistics64_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint host_info64_outCnt;

//	public int[] host_info64_out;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_zone_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t names;

//	public mach_msg_ool_descriptor_t info;

//	public NDR_record_t NDR;

//	public uint namesCnt;

//	public uint infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_create_mach_voucher_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t voucher;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_register_mach_voucher_attr_manager_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_attr_control;

//	public NDR_record_t NDR;

//	public uint new_key;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_register_well_known_mach_voucher_attr_manager_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t new_attr_control;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_set_atm_diagnostic_flag_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_atm_diagnostic_flag_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint diagnostic_flag;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__mach_memory_info_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_ool_descriptor_t names;

//	public mach_msg_ool_descriptor_t info;

//	public mach_msg_ool_descriptor_t memory_info;

//	public NDR_record_t NDR;

//	public uint namesCnt;

//	public uint infoCnt;

//	public uint memory_infoCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_set_multiuser_config_flags_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_get_multiuser_config_flags_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint multiuser_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__host_check_multiuser_mode_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint multiuser_mode;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__mach_host_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__host_info_t Reply_host_info;

//	[FieldOffset (0)]
//	public __Reply__host_kernel_version_t Reply_host_kernel_version;

//	[FieldOffset (0)]
//	public __Reply___host_page_size_t Reply__host_page_size;

//	[FieldOffset (0)]
//	public __Reply__mach_memory_object_memory_entry_t Reply_mach_memory_object_memory_entry;

//	[FieldOffset (0)]
//	public __Reply__host_processor_info_t Reply_host_processor_info;

//	[FieldOffset (0)]
//	public __Reply__host_get_io_master_t Reply_host_get_io_master;

//	[FieldOffset (0)]
//	public __Reply__host_get_clock_service_t Reply_host_get_clock_service;

//	[FieldOffset (0)]
//	public __Reply__kmod_get_info_t Reply_kmod_get_info;

//	[FieldOffset (0)]
//	public __Reply__host_virtual_physical_table_info_t Reply_host_virtual_physical_table_info;

//	[FieldOffset (0)]
//	public __Reply__processor_set_default_t Reply_processor_set_default;

//	[FieldOffset (0)]
//	public __Reply__processor_set_create_t Reply_processor_set_create;

//	[FieldOffset (0)]
//	public __Reply__mach_memory_object_memory_entry_64_t Reply_mach_memory_object_memory_entry_64;

//	[FieldOffset (0)]
//	public __Reply__host_statistics_t Reply_host_statistics;

//	[FieldOffset (0)]
//	public __Reply__host_request_notification_t Reply_host_request_notification;

//	[FieldOffset (0)]
//	public __Reply__host_lockgroup_info_t Reply_host_lockgroup_info;

//	[FieldOffset (0)]
//	public __Reply__host_statistics64_t Reply_host_statistics64;

//	[FieldOffset (0)]
//	public __Reply__mach_zone_info_t Reply_mach_zone_info;

//	[FieldOffset (0)]
//	public __Reply__host_create_mach_voucher_t Reply_host_create_mach_voucher;

//	[FieldOffset (0)]
//	public __Reply__host_register_mach_voucher_attr_manager_t Reply_host_register_mach_voucher_attr_manager;

//	[FieldOffset (0)]
//	public __Reply__host_register_well_known_mach_voucher_attr_manager_t Reply_host_register_well_known_mach_voucher_attr_manager;

//	[FieldOffset (0)]
//	public __Reply__host_set_atm_diagnostic_flag_t Reply_host_set_atm_diagnostic_flag;

//	[FieldOffset (0)]
//	public __Reply__host_get_atm_diagnostic_flag_t Reply_host_get_atm_diagnostic_flag;

//	[FieldOffset (0)]
//	public __Reply__mach_memory_info_t Reply_mach_memory_info;

//	[FieldOffset (0)]
//	public __Reply__host_set_multiuser_config_flags_t Reply_host_set_multiuser_config_flags;

//	[FieldOffset (0)]
//	public __Reply__host_get_multiuser_config_flags_t Reply_host_get_multiuser_config_flags;

//	[FieldOffset (0)]
//	public __Reply__host_check_multiuser_mode_t Reply_host_check_multiuser_mode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rpc_routine_arg_descriptor
//{
//	public uint type;

//	public uint size;

//	public uint count;

//	public uint offset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rpc_routine_descriptor
//{
//	public unsafe mig_impl_routine_t* impl_routine;

//	public unsafe mig_stub_routine_t* stub_routine;

//	public uint argc;

//	public uint descr_count;

//	public unsafe rpc_routine_arg_descriptor_t* arg_descr;

//	public uint max_reply_msg;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rpc_signature
//{
//	public rpc_routine_descriptor rd;

//	public rpc_routine_arg_descriptor[] rad;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rpc_subsystem
//{
//	public unsafe void* reserved;

//	public int start;

//	public int end;

//	public uint maxsize;

//	public UIntPtr base_addr;

//	public rpc_routine_descriptor[] routine;

//	public rpc_routine_arg_descriptor[] arg_descriptor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__clock_get_time_t
//{
//	public mach_msg_header_t Head;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__clock_get_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int flavor;

//	public uint clock_attrCnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__clock_alarm_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t alarm_port;

//	public NDR_record_t NDR;

//	public int alarm_type;

//	public mach_timespec_t alarm_time;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__clock_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__clock_get_time_t Request_clock_get_time;

//	[FieldOffset (0)]
//	public __Request__clock_get_attributes_t Request_clock_get_attributes;

//	[FieldOffset (0)]
//	public __Request__clock_alarm_t Request_clock_alarm;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__clock_get_time_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public mach_timespec_t cur_time;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__clock_get_attributes_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public uint clock_attrCnt;

//	public int[] clock_attr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__clock_alarm_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__clock_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__clock_get_time_t Reply_clock_get_time;

//	[FieldOffset (0)]
//	public __Reply__clock_get_attributes_t Reply_clock_get_attributes;

//	[FieldOffset (0)]
//	public __Reply__clock_alarm_t Reply_clock_alarm;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__clock_alarm_reply_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int alarm_code;

//	public int alarm_type;

//	public mach_timespec_t alarm_time;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__clock_reply_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__clock_alarm_reply_t Request_clock_alarm_reply;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__clock_alarm_reply_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__clock_reply_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__clock_alarm_reply_t Reply_clock_alarm_reply;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__exception_raise_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t thread;

//	public mach_msg_port_descriptor_t task;

//	public NDR_record_t NDR;

//	public int exception;

//	public uint codeCnt;

//	public int[] code;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__exception_raise_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int exception;

//	public uint codeCnt;

//	public int[] code;

//	public int flavor;

//	public uint old_stateCnt;

//	public uint[] old_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Request__exception_raise_state_identity_t
//{
//	public mach_msg_header_t Head;

//	public mach_msg_body_t msgh_body;

//	public mach_msg_port_descriptor_t thread;

//	public mach_msg_port_descriptor_t task;

//	public NDR_record_t NDR;

//	public int exception;

//	public uint codeCnt;

//	public int[] code;

//	public int flavor;

//	public uint old_stateCnt;

//	public uint[] old_state;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __RequestUnion__exc_subsystem
//{
//	[FieldOffset (0)]
//	public __Request__exception_raise_t Request_exception_raise;

//	[FieldOffset (0)]
//	public __Request__exception_raise_state_t Request_exception_raise_state;

//	[FieldOffset (0)]
//	public __Request__exception_raise_state_identity_t Request_exception_raise_state_identity;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__exception_raise_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__exception_raise_state_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public int flavor;

//	public uint new_stateCnt;

//	public uint[] new_state;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct __Reply__exception_raise_state_identity_t
//{
//	public mach_msg_header_t Head;

//	public NDR_record_t NDR;

//	public int RetCode;

//	public int flavor;

//	public uint new_stateCnt;

//	public uint[] new_state;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct __ReplyUnion__exc_subsystem
//{
//	[FieldOffset (0)]
//	public __Reply__exception_raise_t Reply_exception_raise;

//	[FieldOffset (0)]
//	public __Reply__exception_raise_state_t Reply_exception_raise_state;

//	[FieldOffset (0)]
//	public __Reply__exception_raise_state_identity_t Reply_exception_raise_state_identity;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mach_timebase_info_data_t
//{
//	public uint numer;

//	public uint denom;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct port_obj_tentry
//{
//	public unsafe void* pos_value;

//	public int pos_type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct OSQueueHead
//{
//	public unsafe void* opaque1;

//	public nint opaque2;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct os_unfair_lock
//{
//	public uint _os_unfair_lock_opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct malloc_zone_t
//{
//	public unsafe void* reserved1;

//	public unsafe void* reserved2;

//	public unsafe Func<Darwin._malloc_zone_t*, void*, nuint>* size;

//	public unsafe Func<Darwin._malloc_zone_t*, nuint, void*>* malloc;

//	public unsafe Func<Darwin._malloc_zone_t*, nuint, nuint, void*>* calloc;

//	public unsafe Func<Darwin._malloc_zone_t*, nuint, void*>* valloc;

//	public unsafe Action<Darwin._malloc_zone_t*, void*>* free;

//	public unsafe Func<Darwin._malloc_zone_t*, void*, nuint, void*>* realloc;

//	public unsafe Action<Darwin._malloc_zone_t*>* destroy;

//	public unsafe sbyte* zone_name;

//	public unsafe Func<Darwin._malloc_zone_t*, nuint, void**, uint, uint>* batch_malloc;

//	public unsafe Action<Darwin._malloc_zone_t*, void**, uint>* batch_free;

//	public unsafe malloc_introspection_t* introspect;

//	public uint version;

//	public unsafe Func<Darwin._malloc_zone_t*, nuint, nuint, void*>* memalign;

//	public unsafe Action<Darwin._malloc_zone_t*, void*, nuint>* free_definite_size;

//	public unsafe Func<Darwin._malloc_zone_t*, nuint, nuint>* pressure_relief;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vm_range_t
//{
//	public UIntPtr address;

//	public UIntPtr size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct malloc_statistics_t
//{
//	public uint blocks_in_use;

//	public nuint size_in_use;

//	public nuint max_size_in_use;

//	public nuint size_allocated;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct malloc_introspection_t
//{
//	public unsafe Func<uint, void*, uint, UIntPtr, memory_reader_t, vm_range_recorder_t, int>* enumerator;

//	public unsafe Func<Darwin.malloc_zone_t*, nuint, nuint>* good_size;

//	public unsafe Func<Darwin.malloc_zone_t*, int>* check;

//	public unsafe Action<Darwin.malloc_zone_t*, int>* print;

//	public unsafe Action<Darwin.malloc_zone_t*, void*>* log;

//	public unsafe Action<Darwin.malloc_zone_t*>* force_lock;

//	public unsafe Action<Darwin.malloc_zone_t*>* force_unlock;

//	public unsafe Action<Darwin.malloc_zone_t*, Darwin.malloc_statistics_t*>* statistics;

//	public unsafe Func<Darwin.malloc_zone_t*, int>* zone_locked;

//	public unsafe Func<Darwin.malloc_zone_t*, int>* enable_discharge_checking;

//	public unsafe Action<Darwin.malloc_zone_t*>* disable_discharge_checking;

//	public unsafe Action<Darwin.malloc_zone_t*, void*>* discharge;

//	public unsafe Action<Darwin.malloc_zone_t*, Action<void*, void*>>* enumerate_discharged_pointers;

//	public unsafe Action<Darwin.malloc_zone_t*>* reinit_lock;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct mstats
//{
//	public nuint bytes_total;

//	public nuint chunks_used;

//	public nuint bytes_used;

//	public nuint chunks_free;

//	public nuint bytes_free;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_tid_t
//{
//	public int port;

//	public uint machine;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_tid_addr_t
//{
//	public int at_port;

//	public uint at_type;

//	public uint[] at_addr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_mask_t
//{
//	public uint am_success;

//	public uint am_failure;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct auditinfo_t
//{
//	public uint ai_auid;

//	public au_mask_t ai_mask;

//	public au_tid_t ai_termid;

//	public int ai_asid;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct auditinfo_addr_t
//{
//	public uint ai_auid;

//	public au_mask_t ai_mask;

//	public au_tid_addr_t ai_termid;

//	public int ai_asid;

//	public ulong ai_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct auditpinfo_t
//{
//	public int ap_pid;

//	public uint ap_auid;

//	public au_mask_t ap_mask;

//	public au_tid_t ap_termid;

//	public int ap_asid;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct auditpinfo_addr_t
//{
//	public int ap_pid;

//	public uint ap_auid;

//	public au_mask_t ap_mask;

//	public au_tid_addr_t ap_termid;

//	public int ap_asid;

//	public ulong ap_flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_session_t
//{
//	public unsafe auditinfo_addr_t* as_aia_p;

//	public au_mask_t as_mask;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_qctrl_t
//{
//	public int aq_hiwater;

//	public int aq_lowater;

//	public int aq_bufsz;

//	public int aq_delay;

//	public int aq_minfree;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_stat_t
//{
//	public uint as_version;

//	public uint as_numevent;

//	public int as_generated;

//	public int as_nonattrib;

//	public int as_kernel;

//	public int as_audit;

//	public int as_auditctl;

//	public int as_enqueue;

//	public int as_written;

//	public int as_wblocked;

//	public int as_rblocked;

//	public int as_dropped;

//	public int as_totalsize;

//	public uint as_memused;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_fstat_t
//{
//	public ulong af_filesz;

//	public ulong af_currsz;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct au_evclass_map_t
//{
//	public ushort ec_number;

//	public uint ec_class;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ntsid_t
//{
//	public byte sid_kind;

//	public byte sid_authcount;

//	public byte[] sid_authority;

//	public uint[] sid_authorities;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kauth_identity_extlookup
//{
//	public uint el_seqno;

//	public uint el_result;

//	public uint el_flags;

//	public int el_info_pid;

//	public ulong el_extend;

//	public uint el_info_reserved_1;

//	public uint el_uid;

//	public guid_t el_uguid;

//	public uint el_uguid_valid;

//	public ntsid_t el_usid;

//	public uint el_usid_valid;

//	public uint el_gid;

//	public guid_t el_gguid;

//	public uint el_gguid_valid;

//	public ntsid_t el_gsid;

//	public uint el_gsid_valid;

//	public uint el_member_valid;

//	public uint el_sup_grp_cnt;

//	public uint[] el_sup_groups;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kauth_cache_sizes
//{
//	public uint kcs_group_size;

//	public uint kcs_id_size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kauth_ace
//{
//	public guid_t ace_applicable;

//	public uint ace_flags;

//	public uint ace_rights;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kauth_acl
//{
//	public uint acl_entrycount;

//	public uint acl_flags;

//	public kauth_ace[] acl_ace;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kauth_filesec
//{
//	public uint fsec_magic;

//	public guid_t fsec_owner;

//	public guid_t fsec_group;

//	public kauth_acl fsec_acl;
//}

//public enum acl_perm_t : uint
//{
//	ReadData = (1 << 1),
//	ListDirectory = (1 << 1),
//	WriteData = (1 << 2),
//	AddFile = (1 << 2),
//	Execute = (1 << 3),
//	Search = (1 << 3),
//	Delete = (1 << 4),
//	AppendData = (1 << 5),
//	AddSubdirectory = (1 << 5),
//	DeleteChild = (1 << 6),
//	ReadAttributes = (1 << 7),
//	WriteAttributes = (1 << 8),
//	ReadExtattributes = (1 << 9),
//	WriteExtattributes = (1 << 10),
//	ReadSecurity = (1 << 11),
//	WriteSecurity = (1 << 12),
//	ChangeOwner = (1 << 13),
//	Synchronize = (1 << 20)
//}

//public enum acl_tag_t : uint
//{
//	UndefinedTag = 0,
//	ExtendedAllow = 1,
//	ExtendedDeny = 2
//}

//public enum acl_type_t : uint
//{
//	Extended = 256,
//	Access = 0,
//	Default = 1,
//	Afs = 2,
//	Coda = 3,
//	Ntfs = 4,
//	Nwfs = 5
//}

//public enum acl_entry_id_t
//{
//	FirstEntry = 0,
//	NextEntry = -1,
//	LastEntry = -2
//}

//public enum acl_flag_t : uint
//{
//	FlagDeferInherit = (1 << 0),
//	FlagNoInherit = (1 << 17),
//	EntryInherited = (1 << 4),
//	EntryFileInherit = (1 << 5),
//	EntryDirectoryInherit = (1 << 6),
//	EntryLimitInherit = (1 << 7),
//	EntryOnlyInherit = (1 << 8)
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ucred
//{
//	[StructLayout (LayoutKind.Sequential)]
//	public struct Cr_link
//	{
//		public unsafe ucred* tqe_next;

//		public unsafe ucred** tqe_prev;
//	}


//	public Cr_link cr_link;

//	public nuint cr_ref;

//	[StructLayout (LayoutKind.Sequential)]
//	public struct posix_cred
//	{
//		public uint cr_uid;

//		public uint cr_ruid;

//		public uint cr_svuid;

//		public short cr_ngroups;

//		public uint[] cr_groups;

//		public uint cr_rgid;

//		public uint cr_svgid;

//		public uint cr_gmuid;

//		public int cr_flags;
//	}


//	public posix_cred cr_posix;

//	public unsafe label* cr_label;

//	public au_session cr_audit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct xucred
//{
//	public uint cr_version;

//	public uint cr_uid;

//	public short cr_ngroups;

//	public uint[] cr_groups;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct attrlist
//{
//	public ushort bitmapcount;

//	public ushort reserved;

//	public uint commonattr;

//	public uint volattr;

//	public uint dirattr;

//	public uint fileattr;

//	public uint forkattr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct attribute_set_t
//{
//	public uint commonattr;

//	public uint volattr;

//	public uint dirattr;

//	public uint fileattr;

//	public uint forkattr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct attrreference_t
//{
//	public int attr_dataoffset;

//	public uint attr_length;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct diskextent
//{
//	public uint startblock;

//	public uint blockcount;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vol_capabilities_attr_t
//{
//	public uint[] capabilities;

//	public uint[] valid;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vol_attributes_attr_t
//{
//	public attribute_set_t validattr;

//	public attribute_set_t nativeattr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fssearchblock
//{
//	public unsafe attrlist* returnattrs;

//	public unsafe void* returnbuffer;

//	public nuint returnbuffersize;

//	public nuint maxmatches;

//	public timeval timelimit;

//	public unsafe void* searchparams1;

//	public nuint sizeofsearchparams1;

//	public unsafe void* searchparams2;

//	public nuint sizeofsearchparams2;

//	public attrlist searchattrs;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct searchstate
//{
//	public uint ss_union_flags;

//	public uint ss_union_layer;

//	public byte[] ss_fsstate;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kevent
//{
//	public UIntPtr ident;

//	public short filter;

//	public ushort flags;

//	public uint fflags;

//	public IntPtr data;

//	public unsafe void* udata;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kevent64_s
//{
//	public ulong ident;

//	public short filter;

//	public ushort flags;

//	public uint fflags;

//	public long data;

//	public ulong udata;

//	public ulong[] ext;
//}

//public enum  : uint
//{
//	eNoteReapDeprecated = 268435456
//}

//public enum  : uint
//{
//	eNoteExitReparentedDeprecated = 524288
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct klist
//{
//	public unsafe knote* slh_first;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct statfs
//{
//	public uint f_bsize;

//	public int f_iosize;

//	public ulong f_blocks;

//	public ulong f_bfree;

//	public ulong f_bavail;

//	public ulong f_files;

//	public ulong f_ffree;

//	public fsid_t f_fsid;

//	public uint f_owner;

//	public uint f_type;

//	public uint f_flags;

//	public uint f_fssubtype;

//	public sbyte[] f_fstypename;

//	public sbyte[] f_mntonname;

//	public sbyte[] f_mntfromname;

//	public uint[] f_reserved;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vfsstatfs
//{
//	public uint f_bsize;

//	public nuint f_iosize;

//	public ulong f_blocks;

//	public ulong f_bfree;

//	public ulong f_bavail;

//	public ulong f_bused;

//	public ulong f_files;

//	public ulong f_ffree;

//	public fsid_t f_fsid;

//	public uint f_owner;

//	public ulong f_flags;

//	public sbyte[] f_fstypename;

//	public sbyte[] f_mntonname;

//	public sbyte[] f_mntfromname;

//	public uint f_fssubtype;

//	public unsafe void*[] f_reserved;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vfsconf
//{
//	public uint vfc_reserved1;

//	public sbyte[] vfc_name;

//	public int vfc_typenum;

//	public int vfc_refcount;

//	public int vfc_flags;

//	public uint vfc_reserved2;

//	public uint vfc_reserved3;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vfsidctl
//{
//	public int vc_vers;

//	public fsid_t vc_fsid;

//	public unsafe void* vc_ptr;

//	public nuint vc_len;

//	public uint[] vc_spare;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vfsquery
//{
//	public uint vq_flags;

//	public uint[] vq_spare;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vfs_server
//{
//	public int vs_minutes;

//	public byte[] vs_server_name;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct netfs_status
//{
//	public uint ns_status;

//	public sbyte[] ns_mountopts;

//	public uint ns_waittime;

//	public uint ns_threadcount;

//	public ulong[] ns_threadids;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct fhandle_t
//{
//	public int fh_len;

//	public byte[] fh_data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct extern_proc
//{
//	[StructLayout (LayoutKind.Explicit)]
//	public struct P_un
//	{
//		[StructLayout (LayoutKind.Sequential)]
//		public struct P_st1
//		{
//			public unsafe proc* __p_forw;

//			public unsafe proc* __p_back;
//		}


//		[FieldOffset (0)]
//		public P_st1 p_st1;

//		[FieldOffset (0)]
//		public timeval __p_starttime;
//	}


//	public P_un p_un;

//	public unsafe vmspace* p_vmspace;

//	public unsafe sigacts* p_sigacts;

//	public int p_flag;

//	public sbyte p_stat;

//	public int p_pid;

//	public int p_oppid;

//	public int p_dupfd;

//	public unsafe sbyte* user_stack;

//	public unsafe void* exit_thread;

//	public int p_debugger;

//	public int sigwait;

//	public uint p_estcpu;

//	public int p_cpticks;

//	public uint p_pctcpu;

//	public unsafe void* p_wchan;

//	public unsafe sbyte* p_wmesg;

//	public uint p_swtime;

//	public uint p_slptime;

//	public itimerval p_realtimer;

//	public timeval p_rtime;

//	public ulong p_uticks;

//	public ulong p_sticks;

//	public ulong p_iticks;

//	public int p_traceflag;

//	public unsafe vnode* p_tracep;

//	public int p_siglist;

//	public unsafe vnode* p_textvp;

//	public int p_holdcnt;

//	public uint p_sigmask;

//	public uint p_sigignore;

//	public uint p_sigcatch;

//	public byte p_priority;

//	public byte p_usrpri;

//	public sbyte p_nice;

//	public sbyte[] p_comm;

//	public unsafe pgrp* p_pgrp;

//	public unsafe user* p_addr;

//	public ushort p_xstat;

//	public ushort p_acflag;

//	public unsafe rusage* p_ru;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct dqfilehdr
//{
//	public uint dqh_magic;

//	public uint dqh_version;

//	public uint dqh_maxentries;

//	public uint dqh_entrycnt;

//	public uint dqh_flags;

//	public uint dqh_chktime;

//	public uint dqh_btime;

//	public uint dqh_itime;

//	public sbyte[] dqh_string;

//	public uint[] dqh_spare;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct dqblk
//{
//	public ulong dqb_bhardlimit;

//	public ulong dqb_bsoftlimit;

//	public ulong dqb_curbytes;

//	public uint dqb_ihardlimit;

//	public uint dqb_isoftlimit;

//	public uint dqb_curinodes;

//	public uint dqb_btime;

//	public uint dqb_itime;

//	public uint dqb_id;

//	public uint[] dqb_spare;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rb_tree_ops_t
//{
//	public unsafe rbto_compare_nodes_fn* rbto_compare_nodes;

//	public unsafe rbto_compare_key_fn* rbto_compare_key;

//	public nuint rbto_node_offset;

//	public unsafe void* rbto_context;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rb_node_t
//{
//	public unsafe void*[] opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct rb_tree_t
//{
//	public unsafe void*[] opaque;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct vmspace
//{
//	public int dummy;

//	public unsafe sbyte* dummy2;

//	public int[] dummy3;

//	public unsafe sbyte*[] dummy4;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ctlname
//{
//	public unsafe sbyte* ctl_name;

//	public int ctl_type;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _pcred
//{
//	public sbyte[] pc_lock;

//	public unsafe ucred* pc_ucred;

//	public uint p_ruid;

//	public uint p_svuid;

//	public uint p_rgid;

//	public uint p_svgid;

//	public int p_refcnt;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _ucred
//{
//	public int cr_ref;

//	public uint cr_uid;

//	public short cr_ngroups;

//	public uint[] cr_groups;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct kinfo_proc
//{
//	public extern_proc kp_proc;

//	[StructLayout (LayoutKind.Sequential)]
//	public struct eproc
//	{
//		public unsafe proc* e_paddr;

//		public unsafe session* e_sess;

//		public _pcred e_pcred;

//		public _ucred e_ucred;

//		public vmspace e_vm;

//		public int e_ppid;

//		public int e_pgid;

//		public short e_jobc;

//		public int e_tdev;

//		public int e_tpgid;

//		public unsafe session* e_tsess;

//		public sbyte[] e_wmesg;

//		public int e_xsize;

//		public short e_xrssize;

//		public short e_xccount;

//		public short e_xswrss;

//		public int e_flag;

//		public sbyte[] e_login;

//		public int[] e_spare;
//	}


//	public eproc kp_eproc;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct xsw_usage
//{
//	public ulong xsu_total;

//	public ulong xsu_avail;

//	public ulong xsu_used;

//	public uint xsu_pagesize;

//	public int xsu_encrypted;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct loadavg
//{
//	public uint[] ldavg;

//	public nint fscale;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct timeb
//{
//	public nint time;

//	public ushort millitm;

//	public short timezone;

//	public short dstflag;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct fconv
//{
//	[FieldOffset (0)]
//	public float number;

//	[FieldOffset (0)]
//	public nuint sf;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct fconv
//{
//	[FieldOffset (0)]
//	public float number;

//	[FieldOffset (0)]
//	public nuint sf;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct dconv
//{
//	[FieldOffset (0)]
//	public double number;

//	[FieldOffset (0)]
//	public ulong sd;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct dconv
//{
//	[FieldOffset (0)]
//	public double number;

//	[FieldOffset (0)]
//	public ulong sd;
//}

//public enum NXByteOrder : uint
//{
//	UnknownByteOrder,
//	LittleEndian,
//	BigEndian
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct objc_object
//{
//	public Class isa;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct objc_method_description
//{
//	public Selector name;

//	public unsafe sbyte* types;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct objc_property_attribute_t
//{
//	public unsafe sbyte* name;

//	public unsafe sbyte* value;
//}

//public enum objc_AssociationPolicy : UIntPtr
//{
//	Assign = 0,
//	RetainNonatomic = 1,
//	CopyNonatomic = 3,
//	Retain = 769,
//	Copy = 771
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct objc_super
//{
//	public NSObject receiver;

//	public Class super_class;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum Objc : uint
//{
//	RatioCollection = (0 << 0),
//	GenerationalCollection = (1 << 0),
//	FullCollection = (2 << 0),
//	ExhaustiveCollection = (3 << 0),
//	CollectIfNeeded = (1 << 3),
//	WaitUntilDone = (1 << 4)
//}

//public enum  : uint
//{
//	ObjcClearResidentStack = (1 << 0)
//}

//[Verify (InferredFromMemberPrefix)]
//public enum ObjcSync
//{
//	Success = 0,
//	NotOwningThreadError = -1
//}

//[Native]
//public enum dispatch_autorelease_frequency_t : nuint
//{
//	Inherit = 0,
//	WorkItem = 1,
//	Never = 2
//}

//[Native]
//public enum dispatch_block_flags_t : nuint
//{
//	Barrier = 1,
//	Detached = 2,
//	AssignCurrent = 4,
//	NoQosClass = 8,
//	InheritQosClass = 16,
//	EnforceQosClass = 32
//}

//[Native]
//public enum CFComparisonResult : nint
//{
//	LessThan = -1,
//	EqualTo = 0,
//	GreaterThan = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFRange
//{
//	public nint location;

//	public nint length;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFAllocatorContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe CFAllocatorRetainCallBack* retain;

//	public unsafe CFAllocatorReleaseCallBack* release;

//	public unsafe CFAllocatorCopyDescriptionCallBack* copyDescription;

//	public unsafe CFAllocatorAllocateCallBack* allocate;

//	public unsafe CFAllocatorReallocateCallBack* reallocate;

//	public unsafe CFAllocatorDeallocateCallBack* deallocate;

//	public unsafe CFAllocatorPreferredSizeCallBack* preferredSize;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFArrayCallBacks
//{
//	public nint version;

//	public unsafe CFArrayRetainCallBack* retain;

//	public unsafe CFArrayReleaseCallBack* release;

//	public unsafe CFArrayCopyDescriptionCallBack* copyDescription;

//	public unsafe CFArrayEqualCallBack* equal;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFBagCallBacks
//{
//	public nint version;

//	public unsafe CFBagRetainCallBack* retain;

//	public unsafe CFBagReleaseCallBack* release;

//	public unsafe CFBagCopyDescriptionCallBack* copyDescription;

//	public unsafe CFBagEqualCallBack* equal;

//	public unsafe CFBagHashCallBack* hash;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFBinaryHeapCompareContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFBinaryHeapCallBacks
//{
//	public nint version;

//	public unsafe Func<CoreFoundation.CFAllocatorRef*, void*, void*>* retain;

//	public unsafe Action<CoreFoundation.CFAllocatorRef*, void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;

//	public unsafe Func<void*, void*, void*, CFComparisonResult>* compare;
//}

//public enum __CFByteOrder : uint
//{
//	Unknown,
//	LittleEndian,
//	BigEndian
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFSwappedFloat32
//{
//	public uint v;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFSwappedFloat64
//{
//	public ulong v;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public float v;

//	[FieldOffset (0)]
//	public CFSwappedFloat32 sv;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public float v;

//	[FieldOffset (0)]
//	public CFSwappedFloat32 sv;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public double v;

//	[FieldOffset (0)]
//	public CFSwappedFloat64 sv;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public double v;

//	[FieldOffset (0)]
//	public CFSwappedFloat64 sv;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public float v;

//	[FieldOffset (0)]
//	public CFSwappedFloat32 sv;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public float v;

//	[FieldOffset (0)]
//	public CFSwappedFloat32 sv;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public double v;

//	[FieldOffset (0)]
//	public CFSwappedFloat64 sv;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct CFSwap
//{
//	[FieldOffset (0)]
//	public double v;

//	[FieldOffset (0)]
//	public CFSwappedFloat64 sv;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFDictionaryKeyCallBacks
//{
//	public nint version;

//	public unsafe CFDictionaryRetainCallBack* retain;

//	public unsafe CFDictionaryReleaseCallBack* release;

//	public unsafe CFDictionaryCopyDescriptionCallBack* copyDescription;

//	public unsafe CFDictionaryEqualCallBack* equal;

//	public unsafe CFDictionaryHashCallBack* hash;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFDictionaryValueCallBacks
//{
//	public nint version;

//	public unsafe CFDictionaryRetainCallBack* retain;

//	public unsafe CFDictionaryReleaseCallBack* release;

//	public unsafe CFDictionaryCopyDescriptionCallBack* copyDescription;

//	public unsafe CFDictionaryEqualCallBack* equal;
//}

//[Native]
//public enum CFNotificationSuspensionBehavior : nint
//{
//	Drop = 1,
//	Coalesce = 2,
//	Hold = 3,
//	DeliverImmediately = 4
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum kCFNotification : nuint
//{
//	DeliverImmediately = (1 << 0),
//	PostToAllSessions = (1 << 1)
//}

//[Native]
//public enum CFLocaleLanguageDirection : nint
//{
//	Unknown = 0,
//	LeftToRight = 1,
//	RightToLeft = 2,
//	TopToBottom = 3,
//	BottomToTop = 4
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFGregorianDate
//{
//	public int year;

//	public sbyte month;

//	public sbyte day;

//	public sbyte hour;

//	public sbyte minute;

//	public double second;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFGregorianUnits
//{
//	public int years;

//	public int months;

//	public int days;

//	public int hours;

//	public int minutes;

//	public double seconds;
//}

//[Native]
//public enum CFGregorianUnitFlags : nuint
//{
//	UnitsYears = (1 << 0),
//	UnitsMonths = (1 << 1),
//	UnitsDays = (1 << 2),
//	UnitsHours = (1 << 3),
//	UnitsMinutes = (1 << 4),
//	UnitsSeconds = (1 << 5),
//	AllUnits = 16777215
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum CFDataSearchFlags : nuint
//{
//	Backwards = 1 << 0,
//	Anchored = 1 << 1
//}

//[Native]
//public enum CFCharacterSetPredefinedSet : nint
//{
//	Control = 1,
//	Whitespace,
//	WhitespaceAndNewline,
//	DecimalDigit,
//	Letter,
//	LowercaseLetter,
//	UppercaseLetter,
//	NonBase,
//	Decomposable,
//	AlphaNumeric,
//	Punctuation,
//	CapitalizedLetter = 13,
//	Symbol = 14,
//	Newline = 15,
//	Illegal = 12
//}

//public enum CFStringBuiltInEncodings : uint
//{
//	MacRoman = 0,
//	WindowsLatin1 = 1280,
//	ISOLatin1 = 513,
//	NextStepLatin = 2817,
//	Ascii = 1536,
//	Unicode = 256,
//	Utf8 = 134217984,
//	NonLossyASCII = 3071,
//	Utf16 = 256,
//	Utf16be = 268435712,
//	Utf16le = 335544576,
//	Utf32 = 201326848,
//	Utf32be = 402653440,
//	Utf32le = 469762304
//}

//[Native]
//public enum CFStringCompareFlags : nuint
//{
//	CaseInsensitive = 1,
//	Backwards = 4,
//	Anchored = 8,
//	Nonliteral = 16,
//	Localized = 32,
//	Numerically = 64,
//	DiacriticInsensitive = 128,
//	WidthInsensitive = 256,
//	ForcedOrdering = 512
//}

//[Native]
//public enum CFStringNormalizationForm : nint
//{
//	D = 0,
//	Kd,
//	C,
//	Kc
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFStringInlineBuffer
//{
//	public ushort[] buffer;

//	public unsafe CFStringRef* theString;

//	public unsafe ushort* directUniCharBuffer;

//	public unsafe sbyte* directCStringBuffer;

//	public CFRange rangeToBuffer;

//	public nint bufferedRangeStart;

//	public nint bufferedRangeEnd;
//}

//[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//[Native]
//public enum CFTimeZoneNameStyle : nint
//{
//	Standard,
//	ShortStandard,
//	DaylightSaving,
//	ShortDaylightSaving,
//	Generic,
//	ShortGeneric
//}

//[Native]
//public enum CFCalendarUnit : nuint
//{
//	Era = (1 << 1),
//	Year = (1 << 2),
//	Month = (1 << 3),
//	Day = (1 << 4),
//	Hour = (1 << 5),
//	Minute = (1 << 6),
//	Second = (1 << 7),
//	Week = (1 << 8),
//	Weekday = (1 << 9),
//	WeekdayOrdinal = (1 << 10),
//	Quarter = (1 << 11),
//	WeekOfMonth = (1 << 12),
//	WeekOfYear = (1 << 13),
//	YearForWeekOfYear = (1 << 14)
//}

//[Native]
//public enum  : nuint
//{
//	CFCalendarComponentsWrap = (1 << 0)
//}

//[Native]
//public enum CFDateFormatterStyle : nint
//{
//	NoStyle = 0,
//	ShortStyle = 1,
//	MediumStyle = 2,
//	LongStyle = 3,
//	FullStyle = 4
//}

//[Native]
//public enum CFISO8601DateFormatOptions : nuint
//{
//	Year = (1 << 0),
//	Month = (1 << 1),
//	WeekOfYear = (1 << 2),
//	Day = (1 << 4),
//	Time = (1 << 5),
//	TimeZone = (1 << 6),
//	SpaceBetweenDateAndTime = (1 << 7),
//	DashSeparatorInDate = (1 << 8),
//	ColonSeparatorInTime = (1 << 9),
//	ColonSeparatorInTimeZone = (1 << 10),
//	FractionalSeconds = (1 << 11),
//	FullDate = Year | Month | Day | DashSeparatorInDate,
//	FullTime = Time | ColonSeparatorInTime | TimeZone | ColonSeparatorInTimeZone,
//	InternetDateTime = FullDate | FullTime
//}

//[Native]
//public enum CFNumberType : nint
//{
//	SInt8Type = 1,
//	SInt16Type = 2,
//	SInt32Type = 3,
//	SInt64Type = 4,
//	Float32Type = 5,
//	Float64Type = 6,
//	CharType = 7,
//	ShortType = 8,
//	IntType = 9,
//	LongType = 10,
//	LongLongType = 11,
//	FloatType = 12,
//	DoubleType = 13,
//	CFIndexType = 14,
//	NSIntegerType = 15,
//	CGFloatType = 16,
//	MaxType = 16
//}

//[Native]
//public enum CFNumberFormatterStyle : nint
//{
//	NoStyle = 0,
//	DecimalStyle = 1,
//	CurrencyStyle = 2,
//	PercentStyle = 3,
//	ScientificStyle = 4,
//	SpellOutStyle = 5,
//	OrdinalStyle = 6,
//	CurrencyISOCodeStyle = 8,
//	CurrencyPluralStyle = 9,
//	CurrencyAccountingStyle = 10
//}

//[Native]
//public enum CFNumberFormatterOptionFlags : nuint
//{
//	CFNumberFormatterParseIntegersOnly = 1
//}

//[Native]
//public enum CFNumberFormatterRoundingMode : nint
//{
//	Ceiling = 0,
//	Floor = 1,
//	Down = 2,
//	Up = 3,
//	HalfEven = 4,
//	HalfDown = 5,
//	HalfUp = 6
//}

//[Native]
//public enum CFNumberFormatterPadPosition : nint
//{
//	BeforePrefix = 0,
//	AfterPrefix = 1,
//	BeforeSuffix = 2,
//	AfterSuffix = 3
//}

//[Native]
//public enum CFURLPathStyle : nint
//{
//	POSIXPathStyle = 0,
//	HFSPathStyle,
//	WindowsPathStyle
//}

//[Native]
//public enum CFURLComponentType : nint
//{
//	Scheme = 1,
//	NetLocation = 2,
//	Path = 3,
//	ResourceSpecifier = 4,
//	User = 5,
//	Password = 6,
//	UserInfo = 7,
//	Host = 8,
//	Port = 9,
//	ParameterString = 10,
//	Query = 11,
//	Fragment = 12
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum CFURLBookmarkCreationOptions : nuint
//{
//	MinimalBookmarkMask = (1 << 9),
//	SuitableForBookmarkFile = (1 << 10),
//	WithSecurityScope = (1 << 11),
//	SecurityScopeAllowOnlyReadAccess = (1 << 12),
//	PreferFileIDResolutionMask = (1 << 8)
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum CFURLBookmarkResolutionOptions : nuint
//{
//	URLBookmarkResolutionWithoutUIMask = (1 << 8),
//	URLBookmarkResolutionWithoutMountingMask = (1 << 9),
//	URLBookmarkResolutionWithSecurityScope = (1 << 10),
//	BookmarkResolutionWithoutUIMask = URLBookmarkResolutionWithoutUIMask,
//	BookmarkResolutionWithoutMountingMask = URLBookmarkResolutionWithoutMountingMask
//}

//public enum CFRunLoopRunResult
//{
//	Finished = 1,
//	Stopped = 2,
//	TimedOut = 3,
//	HandledSource = 4
//}

//[Native]
//public enum CFRunLoopActivity : nuint
//{
//	Entry = (1 << 0),
//	BeforeTimers = (1 << 1),
//	BeforeSources = (1 << 2),
//	BeforeWaiting = (1 << 5),
//	AfterWaiting = (1 << 6),
//	Exit = (1 << 7),
//	AllActivities = 268435455
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFRunLoopSourceContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;

//	public unsafe Func<void*, void*, byte>* equal;

//	public unsafe Func<void*, nuint>* hash;

//	public unsafe Action<void*, CoreFoundation.CFRunLoopRef*, CoreFoundation.CFRunLoopMode*>* schedule;

//	public unsafe Action<void*, CoreFoundation.CFRunLoopRef*, CoreFoundation.CFRunLoopMode*>* cancel;

//	public unsafe Action<void*>* perform;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFRunLoopSourceContext1
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;

//	public unsafe Func<void*, void*, byte>* equal;

//	public unsafe Func<void*, nuint>* hash;

//	public unsafe Func<void*, uint>* getPort;

//	public unsafe Func<void*, nint, CoreFoundation.CFAllocatorRef*, void*, void*>* perform;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFRunLoopObserverContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFRunLoopTimerContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[Native]
//public enum CFSocketError : nint
//{
//	Success = 0,
//	Error = -1,
//	Timeout = -2
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFSocketSignature
//{
//	public int protocolFamily;

//	public int socketType;

//	public int protocol;

//	public unsafe CFDataRef* address;
//}

//[Native]
//public enum CFSocketCallBackType : nuint
//{
//	NoCallBack = 0,
//	ReadCallBack = 1,
//	AcceptCallBack = 2,
//	DataCallBack = 3,
//	ConnectCallBack = 4,
//	WriteCallBack = 8
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum kCFSocket : nuint
//{
//	AutomaticallyReenableReadCallBack = 1,
//	AutomaticallyReenableAcceptCallBack = 2,
//	AutomaticallyReenableDataCallBack = 3,
//	AutomaticallyReenableWriteCallBack = 8,
//	LeaveErrors = 64,
//	CloseOnInvalidate = 128
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFSocketContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[Native]
//public enum CFStreamStatus : nint
//{
//	NotOpen = 0,
//	Opening,
//	Open,
//	Reading,
//	Writing,
//	AtEnd,
//	Closed,
//	Error
//}

//[Native]
//public enum CFStreamEventType : nuint
//{
//	None = 0,
//	OpenCompleted = 1,
//	HasBytesAvailable = 2,
//	CanAcceptBytes = 4,
//	ErrorOccurred = 8,
//	EndEncountered = 16
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFStreamClientContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[Native]
//public enum CFStreamErrorDomain : nint
//{
//	Custom = -1,
//	Posix = 1,
//	MacOSStatus
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFStreamError
//{
//	public nint domain;

//	public int error;
//}

//[Native]
//public enum CFPropertyListMutabilityOptions : nuint
//{
//	Immutable = 0,
//	MutableContainers = 1 << 0,
//	MutableContainersAndLeaves = 1 << 1
//}

//[Native]
//public enum CFPropertyListFormat : nint
//{
//	OpenStepFormat = 1,
//	XMLFormat_v1_0 = 100,
//	BinaryFormat_v1_0 = 200
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum kCFPropertyList : nint
//{
//	ReadCorruptError = 3840,
//	ReadUnknownVersionError = 3841,
//	ReadStreamError = 3842,
//	WriteStreamError = 3851
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFSetCallBacks
//{
//	public nint version;

//	public unsafe CFSetRetainCallBack* retain;

//	public unsafe CFSetReleaseCallBack* release;

//	public unsafe CFSetCopyDescriptionCallBack* copyDescription;

//	public unsafe CFSetEqualCallBack* equal;

//	public unsafe CFSetHashCallBack* hash;
//}

//[Native]
//public enum CFStringEncodings : nint
//{
//	MacJapanese = 1,
//	MacChineseTrad = 2,
//	MacKorean = 3,
//	MacArabic = 4,
//	MacHebrew = 5,
//	MacGreek = 6,
//	MacCyrillic = 7,
//	MacDevanagari = 9,
//	MacGurmukhi = 10,
//	MacGujarati = 11,
//	MacOriya = 12,
//	MacBengali = 13,
//	MacTamil = 14,
//	MacTelugu = 15,
//	MacKannada = 16,
//	MacMalayalam = 17,
//	MacSinhalese = 18,
//	MacBurmese = 19,
//	MacKhmer = 20,
//	MacThai = 21,
//	MacLaotian = 22,
//	MacGeorgian = 23,
//	MacArmenian = 24,
//	MacChineseSimp = 25,
//	MacTibetan = 26,
//	MacMongolian = 27,
//	MacEthiopic = 28,
//	MacCentralEurRoman = 29,
//	MacVietnamese = 30,
//	MacExtArabic = 31,
//	MacSymbol = 33,
//	MacDingbats = 34,
//	MacTurkish = 35,
//	MacCroatian = 36,
//	MacIcelandic = 37,
//	MacRomanian = 38,
//	MacCeltic = 39,
//	MacGaelic = 40,
//	MacFarsi = 140,
//	MacUkrainian = 152,
//	MacInuit = 236,
//	MacVT100 = 252,
//	MacHFS = 255,
//	ISOLatin2 = 514,
//	ISOLatin3 = 515,
//	ISOLatin4 = 516,
//	ISOLatinCyrillic = 517,
//	ISOLatinArabic = 518,
//	ISOLatinGreek = 519,
//	ISOLatinHebrew = 520,
//	ISOLatin5 = 521,
//	ISOLatin6 = 522,
//	ISOLatinThai = 523,
//	ISOLatin7 = 525,
//	ISOLatin8 = 526,
//	ISOLatin9 = 527,
//	ISOLatin10 = 528,
//	DOSLatinUS = 1024,
//	DOSGreek = 1029,
//	DOSBalticRim = 1030,
//	DOSLatin1 = 1040,
//	DOSGreek1 = 1041,
//	DOSLatin2 = 1042,
//	DOSCyrillic = 1043,
//	DOSTurkish = 1044,
//	DOSPortuguese = 1045,
//	DOSIcelandic = 1046,
//	DOSHebrew = 1047,
//	DOSCanadianFrench = 1048,
//	DOSArabic = 1049,
//	DOSNordic = 1050,
//	DOSRussian = 1051,
//	DOSGreek2 = 1052,
//	DOSThai = 1053,
//	DOSJapanese = 1056,
//	DOSChineseSimplif = 1057,
//	DOSKorean = 1058,
//	DOSChineseTrad = 1059,
//	WindowsLatin2 = 1281,
//	WindowsCyrillic = 1282,
//	WindowsGreek = 1283,
//	WindowsLatin5 = 1284,
//	WindowsHebrew = 1285,
//	WindowsArabic = 1286,
//	WindowsBalticRim = 1287,
//	WindowsVietnamese = 1288,
//	WindowsKoreanJohab = 1296,
//	Ansel = 1537,
//	JisX020176 = 1568,
//	JisX020883 = 1569,
//	JisX020890 = 1570,
//	JisX021290 = 1571,
//	JisC622678 = 1572,
//	ShiftJIS_X0213 = 1576,
//	ShiftJIS_X0213_MenKuTen = 1577,
//	Gb231280 = 1584,
//	Gbk95 = 1585,
//	Gb180302000 = 1586,
//	Ksc560187 = 1600,
//	KSC_5601_92_Johab = 1601,
//	Cns1164392P1 = 1617,
//	Cns1164392P2 = 1618,
//	Cns1164392P3 = 1619,
//	Iso2022Jp = 2080,
//	Iso2022Jp2 = 2081,
//	Iso2022Jp1 = 2082,
//	Iso2022Jp3 = 2083,
//	Iso2022Cn = 2096,
//	Iso2022CnExt = 2097,
//	Iso2022Kr = 2112,
//	EucJp = 2336,
//	EucCn = 2352,
//	EucTw = 2353,
//	EucKr = 2368,
//	ShiftJIS = 2561,
//	Koi8R = 2562,
//	Big5 = 2563,
//	MacRomanLatin1 = 2564,
//	HzGb2312 = 2565,
//	Big5_HKSCS_1999 = 2566,
//	Viscii = 2567,
//	Koi8U = 2568,
//	Big5_E = 2569,
//	NextStepJapanese = 2818,
//	EbcdicUs = 3073,
//	EbcdicCp037 = 3074,
//	Utf7 = 67109120,
//	Utf7Imap = 2576,
//	ShiftJIS_X0213_00 = 1576
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFTreeContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe CFTreeRetainCallBack* retain;

//	public unsafe CFTreeReleaseCallBack* release;

//	public unsafe CFTreeCopyDescriptionCallBack* copyDescription;
//}

//[Introduced (PlatformName.TvOS, 9, 0, message: "Use CFError codes instead")]
//[Deprecated (PlatformName.TvOS, 9, 0, message: "Use CFError codes instead")]
//[Introduced (PlatformName.WatchOS, 2, 0, message: "Use CFError codes instead")]
//[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use CFError codes instead")]
//[Introduced (PlatformName.iOS, 2, 0, message: "Use CFError codes instead")]
//[Deprecated (PlatformName.iOS, 7, 0, message: "Use CFError codes instead")]
//[Introduced (PlatformName.MacOSX, 10, 0, message: "Use CFError codes instead")]
//[Deprecated (PlatformName.MacOSX, 10, 9, message: "Use CFError codes instead")]
//[Native]
//public enum CFURLError : nint
//{
//	UnknownError = -10,
//	UnknownSchemeError = -11,
//	ResourceNotFoundError = -12,
//	ResourceAccessViolationError = -13,
//	RemoteHostUnavailableError = -14,
//	ImproperArgumentsError = -15,
//	UnknownPropertyKeyError = -16,
//	PropertyKeyUnavailableError = -17,
//	TimeoutError = -18
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct REFIID
//{
//	public byte byte0;

//	public byte byte1;

//	public byte byte2;

//	public byte byte3;

//	public byte byte4;

//	public byte byte5;

//	public byte byte6;

//	public byte byte7;

//	public byte byte8;

//	public byte byte9;

//	public byte byte10;

//	public byte byte11;

//	public byte byte12;

//	public byte byte13;

//	public byte byte14;

//	public byte byte15;
//}

//[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//[Verify (InferredFromMemberPrefix)]
//public enum kCFBundleExecutableArchitecture : uint
//{
//	I386 = 7,
//	Ppc = 18,
//	X8664 = 16777223,
//	Ppc64 = 16777234
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCFMessagePort
//{
//	Success = 0,
//	SendTimeout = -1,
//	ReceiveTimeout = -2,
//	IsInvalid = -3,
//	TransportError = -4,
//	BecameInvalidError = -5
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFMessagePortContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFMachPortContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[Native]
//public enum CFURLEnumeratorOptions : nuint
//{
//	DefaultBehavior = 0,
//	DescendRecursively = 1 << 0,
//	SkipInvisibles = 1 << 1,
//	GenerateFileReferenceURLs = 1 << 2,
//	SkipPackageContents = 1 << 3,
//	IncludeDirectoriesPreOrder = 1 << 4,
//	IncludeDirectoriesPostOrder = 1 << 5
//}

//[Native]
//public enum CFURLEnumeratorResult : nint
//{
//	Success = 1,
//	End = 2,
//	Error = 3,
//	DirectoryPostOrderSuccess = 4
//}

//[Watch (2,0), TV (9,0), Mac (10,8), iOS (6,0)]
//[Native]
//public enum CFFileSecurityClearOptions : nuint
//{
//	Owner = 1 << 0,
//	Group = 1 << 1,
//	Mode = 1 << 2,
//	OwnerUUID = 1 << 3,
//	GroupUUID = 1 << 4,
//	AccessControlList = 1 << 5
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum kCFStringTokenizer : nuint
//{
//	UnitWord = 0,
//	UnitSentence = 1,
//	UnitParagraph = 2,
//	UnitLineBreak = 3,
//	UnitWordBoundary = 4,
//	AttributeLatinTranscription = 1 << 16,
//	AttributeLanguage = 1 << 17
//}

//[Native]
//public enum CFStringTokenizerTokenType : nuint
//{
//	None = 0,
//	Normal = 1 << 0,
//	HasSubTokensMask = 1 << 1,
//	HasDerivedSubTokensMask = 1 << 2,
//	HasHasNumbersMask = 1 << 3,
//	HasNonLettersMask = 1 << 4,
//	IsCJWordMask = 1 << 5
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum kCFFileDescriptor : nuint
//{
//	ReadCallBack = 1 << 0,
//	WriteCallBack = 1 << 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFFileDescriptorContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe Func<void*, void*>* retain;

//	public unsafe Action<void*>* release;

//	public unsafe Func<void*, CoreFoundation.CFStringRef*>* copyDescription;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct IUnknownVTbl
//{
//	public unsafe void* _reserved;

//	public unsafe Func<void*, REFIID, void**, int>* QueryInterface;

//	public unsafe Func<void*, uint>* AddRef;

//	public unsafe Func<void*, uint>* Release;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum errSec
//{
//	Success = 0,
//	Unimplemented = -4,
//	DskFull = -34,
//	Io = -36,
//	OpWr = -49,
//	Param = -50,
//	WrPerm = -61,
//	Allocate = -108,
//	UserCanceled = -128,
//	BadReq = -909,
//	InternalComponent = -2070,
//	CoreFoundationUnknown = -4960,
//	MissingEntitlement = -34018,
//	NotAvailable = -25291,
//	ReadOnly = -25292,
//	AuthFailed = -25293,
//	NoSuchKeychain = -25294,
//	InvalidKeychain = -25295,
//	DuplicateKeychain = -25296,
//	DuplicateCallback = -25297,
//	InvalidCallback = -25298,
//	DuplicateItem = -25299,
//	ItemNotFound = -25300,
//	BufferTooSmall = -25301,
//	DataTooLarge = -25302,
//	NoSuchAttr = -25303,
//	InvalidItemRef = -25304,
//	InvalidSearchRef = -25305,
//	NoSuchClass = -25306,
//	NoDefaultKeychain = -25307,
//	InteractionNotAllowed = -25308,
//	ReadOnlyAttr = -25309,
//	WrongSecVersion = -25310,
//	KeySizeNotAllowed = -25311,
//	NoStorageModule = -25312,
//	NoCertificateModule = -25313,
//	NoPolicyModule = -25314,
//	InteractionRequired = -25315,
//	DataNotAvailable = -25316,
//	DataNotModifiable = -25317,
//	CreateChainFailed = -25318,
//	InvalidPrefsDomain = -25319,
//	InDarkWake = -25320,
//	ACLNotSimple = -25240,
//	PolicyNotFound = -25241,
//	InvalidTrustSetting = -25242,
//	NoAccessForItem = -25243,
//	InvalidOwnerEdit = -25244,
//	TrustNotAvailable = -25245,
//	UnsupportedFormat = -25256,
//	UnknownFormat = -25257,
//	KeyIsSensitive = -25258,
//	MultiplePrivKeys = -25259,
//	PassphraseRequired = -25260,
//	InvalidPasswordRef = -25261,
//	InvalidTrustSettings = -25262,
//	NoTrustSettings = -25263,
//	Pkcs12VerifyFailure = -25264,
//	NotSigner = -26267,
//	Decode = -26275,
//	ServiceNotAvailable = -67585,
//	InsufficientClientID = -67586,
//	DeviceReset = -67587,
//	DeviceFailed = -67588,
//	AppleAddAppACLSubject = -67589,
//	ApplePublicKeyIncomplete = -67590,
//	AppleSignatureMismatch = -67591,
//	AppleInvalidKeyStartDate = -67592,
//	AppleInvalidKeyEndDate = -67593,
//	ConversionError = -67594,
//	AppleSSLv2Rollback = -67595,
//	DiskFull = -34,
//	QuotaExceeded = -67596,
//	FileTooBig = -67597,
//	InvalidDatabaseBlob = -67598,
//	InvalidKeyBlob = -67599,
//	IncompatibleDatabaseBlob = -67600,
//	IncompatibleKeyBlob = -67601,
//	HostNameMismatch = -67602,
//	UnknownCriticalExtensionFlag = -67603,
//	NoBasicConstraints = -67604,
//	NoBasicConstraintsCA = -67605,
//	InvalidAuthorityKeyID = -67606,
//	InvalidSubjectKeyID = -67607,
//	InvalidKeyUsageForPolicy = -67608,
//	InvalidExtendedKeyUsage = -67609,
//	InvalidIDLinkage = -67610,
//	PathLengthConstraintExceeded = -67611,
//	InvalidRoot = -67612,
//	CRLExpired = -67613,
//	CRLNotValidYet = -67614,
//	CRLNotFound = -67615,
//	CRLServerDown = -67616,
//	CRLBadURI = -67617,
//	UnknownCertExtension = -67618,
//	UnknownCRLExtension = -67619,
//	CRLNotTrusted = -67620,
//	CRLPolicyFailed = -67621,
//	IDPFailure = -67622,
//	SMIMEEmailAddressesNotFound = -67623,
//	SMIMEBadExtendedKeyUsage = -67624,
//	SMIMEBadKeyUsage = -67625,
//	SMIMEKeyUsageNotCritical = -67626,
//	SMIMENoEmailAddress = -67627,
//	SMIMESubjAltNameNotCritical = -67628,
//	SSLBadExtendedKeyUsage = -67629,
//	OCSPBadResponse = -67630,
//	OCSPBadRequest = -67631,
//	OCSPUnavailable = -67632,
//	OCSPStatusUnrecognized = -67633,
//	EndOfData = -67634,
//	IncompleteCertRevocationCheck = -67635,
//	NetworkFailure = -67636,
//	OCSPNotTrustedToAnchor = -67637,
//	RecordModified = -67638,
//	OCSPSignatureError = -67639,
//	OCSPNoSigner = -67640,
//	OCSPResponderMalformedReq = -67641,
//	OCSPResponderInternalError = -67642,
//	OCSPResponderTryLater = -67643,
//	OCSPResponderSignatureRequired = -67644,
//	OCSPResponderUnauthorized = -67645,
//	OCSPResponseNonceMismatch = -67646,
//	CodeSigningBadCertChainLength = -67647,
//	CodeSigningNoBasicConstraints = -67648,
//	CodeSigningBadPathLengthConstraint = -67649,
//	CodeSigningNoExtendedKeyUsage = -67650,
//	CodeSigningDevelopment = -67651,
//	ResourceSignBadCertChainLength = -67652,
//	ResourceSignBadExtKeyUsage = -67653,
//	TrustSettingDeny = -67654,
//	InvalidSubjectName = -67655,
//	UnknownQualifiedCertStatement = -67656,
//	MobileMeRequestQueued = -67657,
//	MobileMeRequestRedirected = -67658,
//	MobileMeServerError = -67659,
//	MobileMeServerNotAvailable = -67660,
//	MobileMeServerAlreadyExists = -67661,
//	MobileMeServerServiceErr = -67662,
//	MobileMeRequestAlreadyPending = -67663,
//	MobileMeNoRequestPending = -67664,
//	MobileMeCSRVerifyFailure = -67665,
//	MobileMeFailedConsistencyCheck = -67666,
//	NotInitialized = -67667,
//	InvalidHandleUsage = -67668,
//	PVCReferentNotFound = -67669,
//	FunctionIntegrityFail = -67670,
//	InternalError = -67671,
//	MemoryError = -67672,
//	InvalidData = -67673,
//	MDSError = -67674,
//	InvalidPointer = -67675,
//	SelfCheckFailed = -67676,
//	FunctionFailed = -67677,
//	ModuleManifestVerifyFailed = -67678,
//	InvalidGUID = -67679,
//	InvalidHandle = -67680,
//	InvalidDBList = -67681,
//	InvalidPassthroughID = -67682,
//	InvalidNetworkAddress = -67683,
//	CRLAlreadySigned = -67684,
//	InvalidNumberOfFields = -67685,
//	VerificationFailure = -67686,
//	UnknownTag = -67687,
//	InvalidSignature = -67688,
//	InvalidName = -67689,
//	InvalidCertificateRef = -67690,
//	InvalidCertificateGroup = -67691,
//	TagNotFound = -67692,
//	InvalidQuery = -67693,
//	InvalidValue = -67694,
//	CallbackFailed = -67695,
//	ACLDeleteFailed = -67696,
//	ACLReplaceFailed = -67697,
//	ACLAddFailed = -67698,
//	ACLChangeFailed = -67699,
//	InvalidAccessCredentials = -67700,
//	InvalidRecord = -67701,
//	InvalidACL = -67702,
//	InvalidSampleValue = -67703,
//	IncompatibleVersion = -67704,
//	PrivilegeNotGranted = -67705,
//	InvalidScope = -67706,
//	PVCAlreadyConfigured = -67707,
//	InvalidPVC = -67708,
//	EMMLoadFailed = -67709,
//	EMMUnloadFailed = -67710,
//	AddinLoadFailed = -67711,
//	InvalidKeyRef = -67712,
//	InvalidKeyHierarchy = -67713,
//	AddinUnloadFailed = -67714,
//	LibraryReferenceNotFound = -67715,
//	InvalidAddinFunctionTable = -67716,
//	InvalidServiceMask = -67717,
//	ModuleNotLoaded = -67718,
//	InvalidSubServiceID = -67719,
//	AttributeNotInContext = -67720,
//	ModuleManagerInitializeFailed = -67721,
//	ModuleManagerNotFound = -67722,
//	EventNotificationCallbackNotFound = -67723,
//	InputLengthError = -67724,
//	OutputLengthError = -67725,
//	PrivilegeNotSupported = -67726,
//	DeviceError = -67727,
//	AttachHandleBusy = -67728,
//	NotLoggedIn = -67729,
//	AlgorithmMismatch = -67730,
//	KeyUsageIncorrect = -67731,
//	KeyBlobTypeIncorrect = -67732,
//	KeyHeaderInconsistent = -67733,
//	UnsupportedKeyFormat = -67734,
//	UnsupportedKeySize = -67735,
//	InvalidKeyUsageMask = -67736,
//	UnsupportedKeyUsageMask = -67737,
//	InvalidKeyAttributeMask = -67738,
//	UnsupportedKeyAttributeMask = -67739,
//	InvalidKeyLabel = -67740,
//	UnsupportedKeyLabel = -67741,
//	InvalidKeyFormat = -67742,
//	UnsupportedVectorOfBuffers = -67743,
//	InvalidInputVector = -67744,
//	InvalidOutputVector = -67745,
//	InvalidContext = -67746,
//	InvalidAlgorithm = -67747,
//	InvalidAttributeKey = -67748,
//	MissingAttributeKey = -67749,
//	InvalidAttributeInitVector = -67750,
//	MissingAttributeInitVector = -67751,
//	InvalidAttributeSalt = -67752,
//	MissingAttributeSalt = -67753,
//	InvalidAttributePadding = -67754,
//	MissingAttributePadding = -67755,
//	InvalidAttributeRandom = -67756,
//	MissingAttributeRandom = -67757,
//	InvalidAttributeSeed = -67758,
//	MissingAttributeSeed = -67759,
//	InvalidAttributePassphrase = -67760,
//	MissingAttributePassphrase = -67761,
//	InvalidAttributeKeyLength = -67762,
//	MissingAttributeKeyLength = -67763,
//	InvalidAttributeBlockSize = -67764,
//	MissingAttributeBlockSize = -67765,
//	InvalidAttributeOutputSize = -67766,
//	MissingAttributeOutputSize = -67767,
//	InvalidAttributeRounds = -67768,
//	MissingAttributeRounds = -67769,
//	InvalidAlgorithmParms = -67770,
//	MissingAlgorithmParms = -67771,
//	InvalidAttributeLabel = -67772,
//	MissingAttributeLabel = -67773,
//	InvalidAttributeKeyType = -67774,
//	MissingAttributeKeyType = -67775,
//	InvalidAttributeMode = -67776,
//	MissingAttributeMode = -67777,
//	InvalidAttributeEffectiveBits = -67778,
//	MissingAttributeEffectiveBits = -67779,
//	InvalidAttributeStartDate = -67780,
//	MissingAttributeStartDate = -67781,
//	InvalidAttributeEndDate = -67782,
//	MissingAttributeEndDate = -67783,
//	InvalidAttributeVersion = -67784,
//	MissingAttributeVersion = -67785,
//	InvalidAttributePrime = -67786,
//	MissingAttributePrime = -67787,
//	InvalidAttributeBase = -67788,
//	MissingAttributeBase = -67789,
//	InvalidAttributeSubprime = -67790,
//	MissingAttributeSubprime = -67791,
//	InvalidAttributeIterationCount = -67792,
//	MissingAttributeIterationCount = -67793,
//	InvalidAttributeDLDBHandle = -67794,
//	MissingAttributeDLDBHandle = -67795,
//	InvalidAttributeAccessCredentials = -67796,
//	MissingAttributeAccessCredentials = -67797,
//	InvalidAttributePublicKeyFormat = -67798,
//	MissingAttributePublicKeyFormat = -67799,
//	InvalidAttributePrivateKeyFormat = -67800,
//	MissingAttributePrivateKeyFormat = -67801,
//	InvalidAttributeSymmetricKeyFormat = -67802,
//	MissingAttributeSymmetricKeyFormat = -67803,
//	InvalidAttributeWrappedKeyFormat = -67804,
//	MissingAttributeWrappedKeyFormat = -67805,
//	StagedOperationInProgress = -67806,
//	StagedOperationNotStarted = -67807,
//	VerifyFailed = -67808,
//	QuerySizeUnknown = -67809,
//	BlockSizeMismatch = -67810,
//	PublicKeyInconsistent = -67811,
//	DeviceVerifyFailed = -67812,
//	InvalidLoginName = -67813,
//	AlreadyLoggedIn = -67814,
//	InvalidDigestAlgorithm = -67815,
//	InvalidCRLGroup = -67816,
//	CertificateCannotOperate = -67817,
//	CertificateExpired = -67818,
//	CertificateNotValidYet = -67819,
//	CertificateRevoked = -67820,
//	CertificateSuspended = -67821,
//	InsufficientCredentials = -67822,
//	InvalidAction = -67823,
//	InvalidAuthority = -67824,
//	VerifyActionFailed = -67825,
//	InvalidCertAuthority = -67826,
//	InvaldCRLAuthority = -67827,
//	InvalidCRLEncoding = -67828,
//	InvalidCRLType = -67829,
//	InvalidCRL = -67830,
//	InvalidFormType = -67831,
//	InvalidID = -67832,
//	InvalidIdentifier = -67833,
//	InvalidIndex = -67834,
//	InvalidPolicyIdentifiers = -67835,
//	InvalidTimeString = -67836,
//	InvalidReason = -67837,
//	InvalidRequestInputs = -67838,
//	InvalidResponseVector = -67839,
//	InvalidStopOnPolicy = -67840,
//	InvalidTuple = -67841,
//	MultipleValuesUnsupported = -67842,
//	NotTrusted = -67843,
//	NoDefaultAuthority = -67844,
//	RejectedForm = -67845,
//	RequestLost = -67846,
//	RequestRejected = -67847,
//	UnsupportedAddressType = -67848,
//	UnsupportedService = -67849,
//	InvalidTupleGroup = -67850,
//	InvalidBaseACLs = -67851,
//	InvalidTupleCredendtials = -67852,
//	InvalidEncoding = -67853,
//	InvalidValidityPeriod = -67854,
//	InvalidRequestor = -67855,
//	RequestDescriptor = -67856,
//	InvalidBundleInfo = -67857,
//	InvalidCRLIndex = -67858,
//	NoFieldValues = -67859,
//	UnsupportedFieldFormat = -67860,
//	UnsupportedIndexInfo = -67861,
//	UnsupportedLocality = -67862,
//	UnsupportedNumAttributes = -67863,
//	UnsupportedNumIndexes = -67864,
//	UnsupportedNumRecordTypes = -67865,
//	FieldSpecifiedMultiple = -67866,
//	IncompatibleFieldFormat = -67867,
//	InvalidParsingModule = -67868,
//	DatabaseLocked = -67869,
//	DatastoreIsOpen = -67870,
//	MissingValue = -67871,
//	UnsupportedQueryLimits = -67872,
//	UnsupportedNumSelectionPreds = -67873,
//	UnsupportedOperator = -67874,
//	InvalidDBLocation = -67875,
//	InvalidAccessRequest = -67876,
//	InvalidIndexInfo = -67877,
//	InvalidNewOwner = -67878,
//	InvalidModifyMode = -67879,
//	MissingRequiredExtension = -67880,
//	ExtendedKeyUsageNotCritical = -67881,
//	TimestampMissing = -67882,
//	TimestampInvalid = -67883,
//	TimestampNotTrusted = -67884,
//	TimestampServiceNotAvailable = -67885,
//	TimestampBadAlg = -67886,
//	TimestampBadRequest = -67887,
//	TimestampBadDataFormat = -67888,
//	TimestampTimeNotAvailable = -67889,
//	TimestampUnacceptedPolicy = -67890,
//	TimestampUnacceptedExtension = -67891,
//	TimestampAddInfoNotAvailable = -67892,
//	TimestampSystemFailure = -67893,
//	SigningTimeMissing = -67894,
//	TimestampRejection = -67895,
//	TimestampWaiting = -67896,
//	TimestampRevocationWarning = -67897,
//	TimestampRevocationNotification = -67898
//}

//[iOS (8,0)]
//[Native]
//public enum SecAccessControlCreateFlags : nuint
//{
//	UserPresence = 1 << 0,
//	TouchIDAny = 1 << 1,
//	TouchIDCurrentSet = 1 << 3,
//	DevicePasscode = 1 << 4,
//	Or = 1 << 14,
//	And = 1 << 15,
//	PrivateKeyUsage = 1 << 30,
//	ApplicationPassword = 1 << 31
//}

//public enum SecPadding : uint
//{
//	None = 0,
//	Pkcs1 = 1,
//	Oaep = 2,
//	SigRaw = 16384,
//	Pkcs1md2 = 32768,
//	Pkcs1md5 = 32769,
//	Pkcs1sha1 = 32770,
//	Pkcs1sha224 = 32771,
//	Pkcs1sha256 = 32772,
//	Pkcs1sha384 = 32773,
//	Pkcs1sha512 = 32774
//}

//[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//[Native]
//public enum SecKeyOperationType : nint
//{
//	Sign = 0,
//	Verify = 1,
//	Encrypt = 2,
//	Decrypt = 3,
//	KeyExchange = 4
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum kSecRevocation : nuint
//{
//	OCSPMethod = (1 << 0),
//	CRLMethod = (1 << 1),
//	PreferCRL = (1 << 2),
//	RequirePositiveResponse = (1 << 3),
//	NetworkAccessDisabled = (1 << 4),
//	UseAnyAvailableMethod = (OCSPMethod | CRLMethod)
//}

//public enum SecTrustResultType : uint
//{
//	Invalid = 0,
//	Proceed = 1,
//	Confirm = 2,
//	Deny = 3,
//	Unspecified = 4,
//	RecoverableTrustFailure = 5,
//	FatalTrustFailure = 6,
//	OtherError = 7
//}

//public enum  : ushort
//{
//	SslNullWithNullNull = 0,
//	SslRsaWithNullMd5 = 1,
//	SslRsaWithNullSha = 2,
//	SslRsaExportWithRc440Md5 = 3,
//	SslRsaWithRc4128Md5 = 4,
//	SslRsaWithRc4128Sha = 5,
//	SslRsaExportWithRc2Cbc40Md5 = 6,
//	SslRsaWithIdeaCbcSha = 7,
//	SslRsaExportWithDes40CbcSha = 8,
//	SslRsaWithDesCbcSha = 9,
//	SslRsaWith3desEdeCbcSha = 10,
//	SslDhDssExportWithDes40CbcSha = 11,
//	SslDhDssWithDesCbcSha = 12,
//	SslDhDssWith3desEdeCbcSha = 13,
//	SslDhRsaExportWithDes40CbcSha = 14,
//	SslDhRsaWithDesCbcSha = 15,
//	SslDhRsaWith3desEdeCbcSha = 16,
//	SslDheDssExportWithDes40CbcSha = 17,
//	SslDheDssWithDesCbcSha = 18,
//	SslDheDssWith3desEdeCbcSha = 19,
//	SslDheRsaExportWithDes40CbcSha = 20,
//	SslDheRsaWithDesCbcSha = 21,
//	SslDheRsaWith3desEdeCbcSha = 22,
//	SSL_DH_anon_EXPORT_WITH_RC4_40_MD5 = 23,
//	SSL_DH_anon_WITH_RC4_128_MD5 = 24,
//	SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 25,
//	SSL_DH_anon_WITH_DES_CBC_SHA = 26,
//	SSL_DH_anon_WITH_3DES_EDE_CBC_SHA = 27,
//	SslFortezzaDmsWithNullSha = 28,
//	SslFortezzaDmsWithFortezzaCbcSha = 29,
//	TlsRsaWithAes128CbcSha = 47,
//	TlsDhDssWithAes128CbcSha = 48,
//	TlsDhRsaWithAes128CbcSha = 49,
//	TlsDheDssWithAes128CbcSha = 50,
//	TlsDheRsaWithAes128CbcSha = 51,
//	TLS_DH_anon_WITH_AES_128_CBC_SHA = 52,
//	TlsRsaWithAes256CbcSha = 53,
//	TlsDhDssWithAes256CbcSha = 54,
//	TlsDhRsaWithAes256CbcSha = 55,
//	TlsDheDssWithAes256CbcSha = 56,
//	TlsDheRsaWithAes256CbcSha = 57,
//	TLS_DH_anon_WITH_AES_256_CBC_SHA = 58,
//	TlsEcdhEcdsaWithNullSha = 49153,
//	TlsEcdhEcdsaWithRc4128Sha = 49154,
//	TlsEcdhEcdsaWith3desEdeCbcSha = 49155,
//	TlsEcdhEcdsaWithAes128CbcSha = 49156,
//	TlsEcdhEcdsaWithAes256CbcSha = 49157,
//	TlsEcdheEcdsaWithNullSha = 49158,
//	TlsEcdheEcdsaWithRc4128Sha = 49159,
//	TlsEcdheEcdsaWith3desEdeCbcSha = 49160,
//	TlsEcdheEcdsaWithAes128CbcSha = 49161,
//	TlsEcdheEcdsaWithAes256CbcSha = 49162,
//	TlsEcdhRsaWithNullSha = 49163,
//	TlsEcdhRsaWithRc4128Sha = 49164,
//	TlsEcdhRsaWith3desEdeCbcSha = 49165,
//	TlsEcdhRsaWithAes128CbcSha = 49166,
//	TlsEcdhRsaWithAes256CbcSha = 49167,
//	TlsEcdheRsaWithNullSha = 49168,
//	TlsEcdheRsaWithRc4128Sha = 49169,
//	TlsEcdheRsaWith3desEdeCbcSha = 49170,
//	TlsEcdheRsaWithAes128CbcSha = 49171,
//	TlsEcdheRsaWithAes256CbcSha = 49172,
//	TLS_ECDH_anon_WITH_NULL_SHA = 49173,
//	TLS_ECDH_anon_WITH_RC4_128_SHA = 49174,
//	TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 49175,
//	TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 49176,
//	TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 49177,
//	TlsNullWithNullNull = 0,
//	TlsRsaWithNullMd5 = 1,
//	TlsRsaWithNullSha = 2,
//	TlsRsaWithRc4128Md5 = 4,
//	TlsRsaWithRc4128Sha = 5,
//	TlsRsaWith3desEdeCbcSha = 10,
//	TlsRsaWithNullSha256 = 59,
//	TlsRsaWithAes128CbcSha256 = 60,
//	TlsRsaWithAes256CbcSha256 = 61,
//	TlsDhDssWith3desEdeCbcSha = 13,
//	TlsDhRsaWith3desEdeCbcSha = 16,
//	TlsDheDssWith3desEdeCbcSha = 19,
//	TlsDheRsaWith3desEdeCbcSha = 22,
//	TlsDhDssWithAes128CbcSha256 = 62,
//	TlsDhRsaWithAes128CbcSha256 = 63,
//	TlsDheDssWithAes128CbcSha256 = 64,
//	TlsDheRsaWithAes128CbcSha256 = 103,
//	TlsDhDssWithAes256CbcSha256 = 104,
//	TlsDhRsaWithAes256CbcSha256 = 105,
//	TlsDheDssWithAes256CbcSha256 = 106,
//	TlsDheRsaWithAes256CbcSha256 = 107,
//	TLS_DH_anon_WITH_RC4_128_MD5 = 24,
//	TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 27,
//	TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 108,
//	TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 109,
//	TlsPskWithRc4128Sha = 138,
//	TlsPskWith3desEdeCbcSha = 139,
//	TlsPskWithAes128CbcSha = 140,
//	TlsPskWithAes256CbcSha = 141,
//	TlsDhePskWithRc4128Sha = 142,
//	TlsDhePskWith3desEdeCbcSha = 143,
//	TlsDhePskWithAes128CbcSha = 144,
//	TlsDhePskWithAes256CbcSha = 145,
//	TlsRsaPskWithRc4128Sha = 146,
//	TlsRsaPskWith3desEdeCbcSha = 147,
//	TlsRsaPskWithAes128CbcSha = 148,
//	TlsRsaPskWithAes256CbcSha = 149,
//	TlsPskWithNullSha = 44,
//	TlsDhePskWithNullSha = 45,
//	TlsRsaPskWithNullSha = 46,
//	TlsRsaWithAes128GcmSha256 = 156,
//	TlsRsaWithAes256GcmSha384 = 157,
//	TlsDheRsaWithAes128GcmSha256 = 158,
//	TlsDheRsaWithAes256GcmSha384 = 159,
//	TlsDhRsaWithAes128GcmSha256 = 160,
//	TlsDhRsaWithAes256GcmSha384 = 161,
//	TlsDheDssWithAes128GcmSha256 = 162,
//	TlsDheDssWithAes256GcmSha384 = 163,
//	TlsDhDssWithAes128GcmSha256 = 164,
//	TlsDhDssWithAes256GcmSha384 = 165,
//	TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 166,
//	TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 167,
//	TlsPskWithAes128GcmSha256 = 168,
//	TlsPskWithAes256GcmSha384 = 169,
//	TlsDhePskWithAes128GcmSha256 = 170,
//	TlsDhePskWithAes256GcmSha384 = 171,
//	TlsRsaPskWithAes128GcmSha256 = 172,
//	TlsRsaPskWithAes256GcmSha384 = 173,
//	TlsPskWithAes128CbcSha256 = 174,
//	TlsPskWithAes256CbcSha384 = 175,
//	TlsPskWithNullSha256 = 176,
//	TlsPskWithNullSha384 = 177,
//	TlsDhePskWithAes128CbcSha256 = 178,
//	TlsDhePskWithAes256CbcSha384 = 179,
//	TlsDhePskWithNullSha256 = 180,
//	TlsDhePskWithNullSha384 = 181,
//	TlsRsaPskWithAes128CbcSha256 = 182,
//	TlsRsaPskWithAes256CbcSha384 = 183,
//	TlsRsaPskWithNullSha256 = 184,
//	TlsRsaPskWithNullSha384 = 185,
//	TlsAes128GcmSha256 = 4865,
//	TlsAes256GcmSha384 = 4866,
//	TlsChacha20Poly1305Sha256 = 4867,
//	TlsAes128CcmSha256 = 4868,
//	TlsAes128Ccm8Sha256 = 4869,
//	TlsEcdheEcdsaWithAes128CbcSha256 = 49187,
//	TlsEcdheEcdsaWithAes256CbcSha384 = 49188,
//	TlsEcdhEcdsaWithAes128CbcSha256 = 49189,
//	TlsEcdhEcdsaWithAes256CbcSha384 = 49190,
//	TlsEcdheRsaWithAes128CbcSha256 = 49191,
//	TlsEcdheRsaWithAes256CbcSha384 = 49192,
//	TlsEcdhRsaWithAes128CbcSha256 = 49193,
//	TlsEcdhRsaWithAes256CbcSha384 = 49194,
//	TlsEcdheEcdsaWithAes128GcmSha256 = 49195,
//	TlsEcdheEcdsaWithAes256GcmSha384 = 49196,
//	TlsEcdhEcdsaWithAes128GcmSha256 = 49197,
//	TlsEcdhEcdsaWithAes256GcmSha384 = 49198,
//	TlsEcdheRsaWithAes128GcmSha256 = 49199,
//	TlsEcdheRsaWithAes256GcmSha384 = 49200,
//	TlsEcdhRsaWithAes128GcmSha256 = 49201,
//	TlsEcdhRsaWithAes256GcmSha384 = 49202,
//	TlsEcdheRsaWithChacha20Poly1305Sha256 = 52392,
//	TlsEcdheEcdsaWithChacha20Poly1305Sha256 = 52393,
//	TlsEmptyRenegotiationInfoScsv = 255,
//	SslRsaWithRc2CbcMd5 = 65408,
//	SslRsaWithIdeaCbcMd5 = 65409,
//	SslRsaWithDesCbcMd5 = 65410,
//	SslRsaWith3desEdeCbcMd5 = 65411,
//	SslNoSuchCiphersuite = 65535
//}

//public enum SSLProtocol
//{
//	SSLProtocolUnknown = 0,
//	SSLProtocol3 = 2,
//	TLSProtocol1 = 4,
//	TLSProtocol11 = 7,
//	TLSProtocol12 = 8,
//	DTLSProtocol1 = 9,
//	TLSProtocol13 = 10,
//	TLSProtocolMaxSupported = 999,
//	SSLProtocol2 = 1,
//	SSLProtocol3Only = 3,
//	TLSProtocol1Only = 5,
//	SSLProtocolAll = 6
//}

//public enum SSLSessionOption
//{
//	BreakOnServerAuth = 0,
//	BreakOnCertRequested = 1,
//	BreakOnClientAuth = 2,
//	FalseStart = 3,
//	SendOneByteRecord = 4,
//	AllowServerIdentityChange = 5,
//	Fallback = 6,
//	BreakOnClientHello = 7,
//	AllowRenegotiation = 8,
//	EnableSessionTickets = 9
//}

//public enum SSLSessionState
//{
//	Idle,
//	Handshake,
//	Connected,
//	Closed,
//	Aborted
//}

//public enum SSLClientCertificateState
//{
//	None,
//	Requested,
//	Sent,
//	Rejected
//}

//[Verify (InferredFromMemberPrefix)]
//public enum errSSL
//{
//	Protocol = -9800,
//	Negotiation = -9801,
//	FatalAlert = -9802,
//	WouldBlock = -9803,
//	SessionNotFound = -9804,
//	ClosedGraceful = -9805,
//	ClosedAbort = -9806,
//	XCertChainInvalid = -9807,
//	BadCert = -9808,
//	Crypto = -9809,
//	Internal = -9810,
//	ModuleAttach = -9811,
//	UnknownRootCert = -9812,
//	NoRootCert = -9813,
//	CertExpired = -9814,
//	CertNotYetValid = -9815,
//	ClosedNoNotify = -9816,
//	BufferOverflow = -9817,
//	BadCipherSuite = -9818,
//	PeerUnexpectedMsg = -9819,
//	PeerBadRecordMac = -9820,
//	PeerDecryptionFail = -9821,
//	PeerRecordOverflow = -9822,
//	PeerDecompressFail = -9823,
//	PeerHandshakeFail = -9824,
//	PeerBadCert = -9825,
//	PeerUnsupportedCert = -9826,
//	PeerCertRevoked = -9827,
//	PeerCertExpired = -9828,
//	PeerCertUnknown = -9829,
//	IllegalParam = -9830,
//	PeerUnknownCA = -9831,
//	PeerAccessDenied = -9832,
//	PeerDecodeError = -9833,
//	PeerDecryptError = -9834,
//	PeerExportRestriction = -9835,
//	PeerProtocolVersion = -9836,
//	PeerInsufficientSecurity = -9837,
//	PeerInternalError = -9838,
//	PeerUserCancelled = -9839,
//	PeerNoRenegotiation = -9840,
//	PeerAuthCompleted = -9841,
//	ClientCertRequested = -9842,
//	HostNameMismatch = -9843,
//	ConnectionRefused = -9844,
//	DecryptionFail = -9845,
//	BadRecordMac = -9846,
//	RecordOverflow = -9847,
//	BadConfiguration = -9848,
//	UnexpectedRecord = -9849,
//	WeakPeerEphemeralDHKey = -9850,
//	ClientHelloReceived = -9851
//}

//public enum SSLProtocolSide
//{
//	ServerSide,
//	ClientSide
//}

//public enum SSLConnectionType
//{
//	StreamType,
//	DatagramType
//}

//public enum SSLAuthenticate
//{
//	NeverAuthenticate,
//	AlwaysAuthenticate,
//	TryAuthenticate
//}

//public enum CFNetworkErrors
//{
//	HostErrorHostNotFound = 1,
//	HostErrorUnknown = 2,
//	SOCKSErrorUnknownClientVersion = 100,
//	SOCKSErrorUnsupportedServerVersion = 101,
//	SOCKS4ErrorRequestFailed = 110,
//	SOCKS4ErrorIdentdFailed = 111,
//	SOCKS4ErrorIdConflict = 112,
//	SOCKS4ErrorUnknownStatusCode = 113,
//	SOCKS5ErrorBadState = 120,
//	SOCKS5ErrorBadResponseAddr = 121,
//	SOCKS5ErrorBadCredentials = 122,
//	SOCKS5ErrorUnsupportedNegotiationMethod = 123,
//	SOCKS5ErrorNoAcceptableMethod = 124,
//	FTPErrorUnexpectedStatusCode = 200,
//	ErrorHTTPAuthenticationTypeUnsupported = 300,
//	ErrorHTTPBadCredentials = 301,
//	ErrorHTTPConnectionLost = 302,
//	ErrorHTTPParseFailure = 303,
//	ErrorHTTPRedirectionLoopDetected = 304,
//	ErrorHTTPBadURL = 305,
//	ErrorHTTPProxyConnectionFailure = 306,
//	ErrorHTTPBadProxyCredentials = 307,
//	ErrorPACFileError = 308,
//	ErrorPACFileAuth = 309,
//	ErrorHTTPSProxyConnectionFailure = 310,
//	StreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod = 311,
//	URLErrorBackgroundSessionInUseByAnotherProcess = -996,
//	URLErrorBackgroundSessionWasDisconnected = -997,
//	URLErrorUnknown = -998,
//	URLErrorCancelled = -999,
//	URLErrorBadURL = -1000,
//	URLErrorTimedOut = -1001,
//	URLErrorUnsupportedURL = -1002,
//	URLErrorCannotFindHost = -1003,
//	URLErrorCannotConnectToHost = -1004,
//	URLErrorNetworkConnectionLost = -1005,
//	URLErrorDNSLookupFailed = -1006,
//	URLErrorHTTPTooManyRedirects = -1007,
//	URLErrorResourceUnavailable = -1008,
//	URLErrorNotConnectedToInternet = -1009,
//	URLErrorRedirectToNonExistentLocation = -1010,
//	URLErrorBadServerResponse = -1011,
//	URLErrorUserCancelledAuthentication = -1012,
//	URLErrorUserAuthenticationRequired = -1013,
//	URLErrorZeroByteResource = -1014,
//	URLErrorCannotDecodeRawData = -1015,
//	URLErrorCannotDecodeContentData = -1016,
//	URLErrorCannotParseResponse = -1017,
//	URLErrorInternationalRoamingOff = -1018,
//	URLErrorCallIsActive = -1019,
//	URLErrorDataNotAllowed = -1020,
//	URLErrorRequestBodyStreamExhausted = -1021,
//	URLErrorAppTransportSecurityRequiresSecureConnection = -1022,
//	URLErrorFileDoesNotExist = -1100,
//	URLErrorFileIsDirectory = -1101,
//	URLErrorNoPermissionsToReadFile = -1102,
//	URLErrorDataLengthExceedsMaximum = -1103,
//	URLErrorFileOutsideSafeArea = -1104,
//	URLErrorSecureConnectionFailed = -1200,
//	URLErrorServerCertificateHasBadDate = -1201,
//	URLErrorServerCertificateUntrusted = -1202,
//	URLErrorServerCertificateHasUnknownRoot = -1203,
//	URLErrorServerCertificateNotYetValid = -1204,
//	URLErrorClientCertificateRejected = -1205,
//	URLErrorClientCertificateRequired = -1206,
//	URLErrorCannotLoadFromNetwork = -2000,
//	URLErrorCannotCreateFile = -3000,
//	URLErrorCannotOpenFile = -3001,
//	URLErrorCannotCloseFile = -3002,
//	URLErrorCannotWriteToFile = -3003,
//	URLErrorCannotRemoveFile = -3004,
//	URLErrorCannotMoveFile = -3005,
//	URLErrorDownloadDecodingFailedMidStream = -3006,
//	URLErrorDownloadDecodingFailedToComplete = -3007,
//	HTTPCookieCannotParseCookieFile = -4000,
//	NetServiceErrorUnknown = -72000,
//	NetServiceErrorCollision = -72001,
//	NetServiceErrorNotFound = -72002,
//	NetServiceErrorInProgress = -72003,
//	NetServiceErrorBadArgument = -72004,
//	NetServiceErrorCancel = -72005,
//	NetServiceErrorInvalid = -72006,
//	NetServiceErrorTimeout = -72007,
//	NetServiceErrorDNSServiceFailure = -73000
//}

//public enum CFHostInfoType
//{
//	Addresses = 0,
//	Names = 1,
//	Reachability = 2
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFHostClientContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe CFAllocatorRetainCallBack* retain;

//	public unsafe CFAllocatorReleaseCallBack* release;

//	public unsafe CFAllocatorCopyDescriptionCallBack* copyDescription;
//}

//public enum CFNetServicesError
//{
//	Unknown = -72000,
//	Collision = -72001,
//	NotFound = -72002,
//	InProgress = -72003,
//	BadArgument = -72004,
//	Cancel = -72005,
//	Invalid = -72006,
//	Timeout = -72007
//}

//public enum CFNetServiceMonitorType
//{
//	CFNetServiceMonitorTXT = 1
//}

//[Native]
//public enum CFNetServiceRegisterFlags : nuint
//{
//	CFNetServiceFlagNoAutoRename = 1
//}

//[Native]
//public enum CFNetServiceBrowserFlags : nuint
//{
//	MoreComing = 1,
//	IsDomain = 2,
//	IsDefault = 4,
//	IsRegistrationDomain = 4,
//	Remove = 8
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CFNetServiceClientContext
//{
//	public nint version;

//	public unsafe void* info;

//	public unsafe CFAllocatorRetainCallBack* retain;

//	public unsafe CFAllocatorReleaseCallBack* release;

//	public unsafe CFAllocatorCopyDescriptionCallBack* copyDescription;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCFStreamErrorSOCKS : uint
//{
//	SubDomainNone = 0,
//	SubDomainVersionCode = 1,
//	kCFStreamErrorSOCKS4SubDomainResponse = 2,
//	kCFStreamErrorSOCKS5SubDomainUserPass = 3,
//	kCFStreamErrorSOCKS5SubDomainMethod = 4,
//	kCFStreamErrorSOCKS5SubDomainResponse = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCFStreamErrorSOCKS : uint
//{
//	kCFStreamErrorSOCKS5BadResponseAddr = 1,
//	kCFStreamErrorSOCKS5BadState = 2,
//	UnknownClientVersion = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCFStreamErrorSOCKS4 : uint
//{
//	RequestFailed = 91,
//	IdentdFailed = 92,
//	IdConflict = 93
//}

//public enum  : uint
//{
//	SOCKS5NoAcceptableMethod = 255
//}

//public enum CFStreamErrorHTTP
//{
//	ParseFailure = -1,
//	RedirectionLoop = -2,
//	BadURL = -3
//}

//public enum CFStreamErrorHTTPAuthentication
//{
//	TypeUnsupported = -1000,
//	BadUserName = -1001,
//	BadPassword = -1002
//}

//[Introduced (PlatformName.iOS, 2, 0)]
//[Deprecated (PlatformName.iOS, 11, 0)]
//public enum CFNetDiagnosticStatusValues
//{
//	NoErr = 0,
//	Err = -66560,
//	ConnectionUp = -66559,
//	ConnectionIndeterminate = -66558,
//	ConnectionDown = -66557
//}

//[Native]
//public enum NSComparisonResult : nint
//{
//	Ascending = -1,
//	Same,
//	Descending
//}

//[Native]
//public enum NSEnumerationOptions : nuint
//{
//	Concurrent = (1 << 0),
//	Reverse = (1 << 1)
//}

//[Native]
//public enum NSSortOptions : nuint
//{
//	Concurrent = (1 << 0),
//	Stable = (1 << 4)
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSQualityOfService : nint
//{
//	UserInteractive = 33,
//	UserInitiated = 25,
//	Utility = 17,
//	Background = 9,
//	Default = -1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NSFastEnumerationState
//{
//	public nuint state;

//	public unsafe NSObject* itemsPtr;

//	public unsafe nuint* mutationsPtr;

//	public nuint[] extra;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NSRange
//{
//	public nuint location;

//	public nuint length;
//}

//[Native]
//public enum NSBinarySearchingOptions : nuint
//{
//	FirstEqual = (1 << 8),
//	LastEqual = (1 << 9),
//	InsertionIndex = (1 << 10)
//}

//[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//[Native]
//public enum NSItemProviderRepresentationVisibility : nint
//{
//	All = 0,
//	Team = 1,
//	Group = 2,
//	OwnProcess = 3
//}

//[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//[Native]
//public enum NSItemProviderFileOptions : nint
//{
//	NSItemProviderFileOptionOpenInPlace = 1
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSItemProviderErrorCode : nint
//{
//	UnknownError = -1,
//	ItemUnavailableError = -1000,
//	UnexpectedValueClassError = -1100,
//	UnavailableCoercionError = -1200
//}

//[Native]
//public enum NSStringCompareOptions : nuint
//{
//	CaseInsensitiveSearch = 1,
//	LiteralSearch = 2,
//	BackwardsSearch = 4,
//	AnchoredSearch = 8,
//	NumericSearch = 64,
//	DiacriticInsensitiveSearch = 128,
//	WidthInsensitiveSearch = 256,
//	ForcedOrderingSearch = 512,
//	RegularExpressionSearch = 1024
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum Ns : nuint
//{
//	ASCIIStringEncoding = 1,
//	NEXTSTEPStringEncoding = 2,
//	JapaneseEUCStringEncoding = 3,
//	UTF8StringEncoding = 4,
//	ISOLatin1StringEncoding = 5,
//	SymbolStringEncoding = 6,
//	NonLossyASCIIStringEncoding = 7,
//	ShiftJISStringEncoding = 8,
//	ISOLatin2StringEncoding = 9,
//	UnicodeStringEncoding = 10,
//	WindowsCP1251StringEncoding = 11,
//	WindowsCP1252StringEncoding = 12,
//	WindowsCP1253StringEncoding = 13,
//	WindowsCP1254StringEncoding = 14,
//	WindowsCP1250StringEncoding = 15,
//	ISO2022JPStringEncoding = 21,
//	MacOSRomanStringEncoding = 30,
//	UTF16StringEncoding = UnicodeStringEncoding,
//	UTF16BigEndianStringEncoding = 2415919360L,
//	UTF16LittleEndianStringEncoding = 2483028224L,
//	UTF32StringEncoding = 2348810496L,
//	UTF32BigEndianStringEncoding = 2550137088L,
//	UTF32LittleEndianStringEncoding = 2617245952L
//}

//[Native]
//public enum NSStringEncodingConversionOptions : nuint
//{
//	AllowLossy = 1,
//	ExternalRepresentation = 2
//}

//[Native]
//public enum NSStringEnumerationOptions : nuint
//{
//	ByLines = 0,
//	ByParagraphs = 1,
//	ByComposedCharacterSequences = 2,
//	ByWords = 3,
//	BySentences = 4,
//	Reverse = 1 << 8,
//	SubstringNotRequired = 1 << 9,
//	Localized = 1 << 10
//}

//[Native]
//public enum  : nuint
//{
//	NSProprietaryStringEncoding = 65536
//}

//[Verify (InferredFromMemberPrefix)]
//public enum NSBundleExecutableArchitecture : uint
//{
//	I386 = 7,
//	Ppc = 18,
//	X8664 = 16777223,
//	Ppc64 = 16777234
//}

//[Verify (InferredFromMemberPrefix)]
//public enum Ns : uint
//{
//	UnknownByteOrder = CFByteOrderUnknown,
//	LittleEndian = CFByteOrderLittleEndian,
//	BigEndian = CFByteOrderBigEndian
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NSSwappedFloat
//{
//	public uint v;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NSSwappedDouble
//{
//	public ulong v;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct fconv
//{
//	[FieldOffset (0)]
//	public float number;

//	[FieldOffset (0)]
//	public NSSwappedFloat sf;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct fconv
//{
//	[FieldOffset (0)]
//	public float number;

//	[FieldOffset (0)]
//	public NSSwappedFloat sf;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct dconv
//{
//	[FieldOffset (0)]
//	public double number;

//	[FieldOffset (0)]
//	public NSSwappedDouble sd;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct dconv
//{
//	[FieldOffset (0)]
//	public double number;

//	[FieldOffset (0)]
//	public NSSwappedDouble sd;
//}

//[Native]
//public enum NSCalendarUnit : nuint
//{
//	CalendarUnitEra = kCFCalendarUnitEra,
//	CalendarUnitYear = kCFCalendarUnitYear,
//	CalendarUnitMonth = kCFCalendarUnitMonth,
//	CalendarUnitDay = kCFCalendarUnitDay,
//	CalendarUnitHour = kCFCalendarUnitHour,
//	CalendarUnitMinute = kCFCalendarUnitMinute,
//	CalendarUnitSecond = kCFCalendarUnitSecond,
//	CalendarUnitWeekday = kCFCalendarUnitWeekday,
//	CalendarUnitWeekdayOrdinal = kCFCalendarUnitWeekdayOrdinal,
//	CalendarUnitQuarter = kCFCalendarUnitQuarter,
//	CalendarUnitWeekOfMonth = kCFCalendarUnitWeekOfMonth,
//	CalendarUnitWeekOfYear = kCFCalendarUnitWeekOfYear,
//	CalendarUnitYearForWeekOfYear = kCFCalendarUnitYearForWeekOfYear,
//	CalendarUnitNanosecond = (1 << 15),
//	CalendarUnitCalendar = (1 << 20),
//	CalendarUnitTimeZone = (1 << 21),
//	EraCalendarUnit = CalendarUnitEra,
//	YearCalendarUnit = CalendarUnitYear,
//	MonthCalendarUnit = CalendarUnitMonth,
//	DayCalendarUnit = CalendarUnitDay,
//	HourCalendarUnit = CalendarUnitHour,
//	MinuteCalendarUnit = CalendarUnitMinute,
//	SecondCalendarUnit = CalendarUnitSecond,
//	WeekCalendarUnit = kCFCalendarUnitWeek,
//	WeekdayCalendarUnit = CalendarUnitWeekday,
//	WeekdayOrdinalCalendarUnit = CalendarUnitWeekdayOrdinal,
//	QuarterCalendarUnit = CalendarUnitQuarter,
//	WeekOfMonthCalendarUnit = CalendarUnitWeekOfMonth,
//	WeekOfYearCalendarUnit = CalendarUnitWeekOfYear,
//	YearForWeekOfYearCalendarUnit = CalendarUnitYearForWeekOfYear,
//	CalendarCalendarUnit = CalendarUnitCalendar,
//	TimeZoneCalendarUnit = CalendarUnitTimeZone
//}

//[Native]
//public enum NSCalendarOptions : nuint
//{
//	WrapComponents = (1 << 0),
//	MatchStrictly = (1 << 1),
//	SearchBackwards = (1 << 2),
//	MatchPreviousTimePreservingSmallerUnits = (1 << 8),
//	MatchNextTimePreservingSmallerUnits = (1 << 9),
//	MatchNextTime = (1 << 10),
//	MatchFirst = (1 << 12),
//	MatchLast = (1 << 13)
//}

//public enum  : uint
//{
//	NSWrapCalendarComponents = NSCalendarWrapComponents
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum Ns : nint
//{
//	DateComponentUndefined = 9223372036854775807L,
//	UndefinedDateComponent = DateComponentUndefined
//}

//public enum  : uint
//{
//	NSOpenStepUnicodeReservedBase = 62464
//}

//[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
//[Native]
//public enum NSDecodingFailurePolicy : nint
//{
//	RaiseException,
//	SetErrorAndReturn
//}

//[Native]
//public enum NSDataReadingOptions : nuint
//{
//	DataReadingMappedIfSafe = 1 << 0,
//	DataReadingUncached = 1 << 1,
//	DataReadingMappedAlways = 1 << 3,
//	DataReadingMapped = DataReadingMappedIfSafe,
//	MappedRead = DataReadingMapped,
//	UncachedRead = DataReadingUncached
//}

//[Native]
//public enum NSDataWritingOptions : nuint
//{
//	DataWritingAtomic = 1 << 0,
//	DataWritingWithoutOverwriting = 1 << 1,
//	DataWritingFileProtectionNone = 268435456,
//	DataWritingFileProtectionComplete = 536870912,
//	DataWritingFileProtectionCompleteUnlessOpen = 805306368,
//	DataWritingFileProtectionCompleteUntilFirstUserAuthentication = 1073741824,
//	DataWritingFileProtectionMask = 4026531840L,
//	AtomicWrite = DataWritingAtomic
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSDataSearchOptions : nuint
//{
//	Backwards = 1 << 0,
//	Anchored = 1 << 1
//}

//[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//[Native]
//public enum NSDataBase64EncodingOptions : nuint
//{
//	NSDataBase64Encoding64CharacterLineLength = 1 << 0,
//	NSDataBase64Encoding76CharacterLineLength = 1 << 1,
//	EndLineWithCarriageReturn = 1 << 4,
//	EndLineWithLineFeed = 1 << 5
//}

//[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//[Native]
//public enum NSDataBase64DecodingOptions : nuint
//{
//	NSDataBase64DecodingIgnoreUnknownCharacters = 1 << 0
//}

//[Native]
//public enum NSAttributedStringEnumerationOptions : nuint
//{
//	Reverse = (1 << 1),
//	LongestEffectiveRangeNotRequired = (1 << 20)
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSFormattingContext : nint
//{
//	Unknown = 0,
//	Dynamic = 1,
//	Standalone = 2,
//	ListItem = 3,
//	BeginningOfSentence = 4,
//	MiddleOfSentence = 5
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSFormattingUnitStyle : nint
//{
//	Short = 1,
//	Medium,
//	Long
//}

//[Native]
//public enum NSDateFormatterStyle : nuint
//{
//	NoStyle = kCFDateFormatterNoStyle,
//	ShortStyle = kCFDateFormatterShortStyle,
//	MediumStyle = kCFDateFormatterMediumStyle,
//	LongStyle = kCFDateFormatterLongStyle,
//	FullStyle = kCFDateFormatterFullStyle
//}

//[Native]
//public enum NSDateFormatterBehavior : nuint
//{
//	Default = 0,
//	NSDateFormatterBehavior10_4 = 1040
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSDateIntervalFormatterStyle : nuint
//{
//	NoStyle = 0,
//	ShortStyle = 1,
//	MediumStyle = 2,
//	LongStyle = 3,
//	FullStyle = 4
//}

//[Native]
//public enum NSISO8601DateFormatOptions : nuint
//{
//	Year = kCFISO8601DateFormatWithYear,
//	Month = kCFISO8601DateFormatWithMonth,
//	WeekOfYear = kCFISO8601DateFormatWithWeekOfYear,
//	Day = kCFISO8601DateFormatWithDay,
//	Time = kCFISO8601DateFormatWithTime,
//	TimeZone = kCFISO8601DateFormatWithTimeZone,
//	SpaceBetweenDateAndTime = kCFISO8601DateFormatWithSpaceBetweenDateAndTime,
//	DashSeparatorInDate = kCFISO8601DateFormatWithDashSeparatorInDate,
//	ColonSeparatorInTime = kCFISO8601DateFormatWithColonSeparatorInTime,
//	ColonSeparatorInTimeZone = kCFISO8601DateFormatWithColonSeparatorInTimeZone,
//	FractionalSeconds = kCFISO8601DateFormatWithFractionalSeconds,
//	FullDate = kCFISO8601DateFormatWithFullDate,
//	FullTime = kCFISO8601DateFormatWithFullTime,
//	InternetDateTime = kCFISO8601DateFormatWithInternetDateTime
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSMassFormatterUnit : nint
//{
//	Gram = 11,
//	Kilogram = 14,
//	Ounce = (6 << 8) + 1,
//	Pound = (6 << 8) + 2,
//	Stone = (6 << 8) + 3
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSLengthFormatterUnit : nint
//{
//	Millimeter = 8,
//	Centimeter = 9,
//	Meter = 11,
//	Kilometer = 14,
//	Inch = (5 << 8) + 1,
//	Foot = (5 << 8) + 2,
//	Yard = (5 << 8) + 3,
//	Mile = (5 << 8) + 4
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSEnergyFormatterUnit : nint
//{
//	Joule = 11,
//	Kilojoule = 14,
//	Calorie = (7 << 8) + 1,
//	Kilocalorie = (7 << 8) + 2
//}

//[Native]
//public enum NSNumberFormatterBehavior : nuint
//{
//	Default = 0,
//	NSNumberFormatterBehavior10_4 = 1040
//}

//[Native]
//public enum NSNumberFormatterStyle : nuint
//{
//	NoStyle = kCFNumberFormatterNoStyle,
//	DecimalStyle = kCFNumberFormatterDecimalStyle,
//	CurrencyStyle = kCFNumberFormatterCurrencyStyle,
//	PercentStyle = kCFNumberFormatterPercentStyle,
//	ScientificStyle = kCFNumberFormatterScientificStyle,
//	SpellOutStyle = kCFNumberFormatterSpellOutStyle,
//	OrdinalStyle = kCFNumberFormatterOrdinalStyle,
//	CurrencyISOCodeStyle = kCFNumberFormatterCurrencyISOCodeStyle,
//	CurrencyPluralStyle = kCFNumberFormatterCurrencyPluralStyle,
//	CurrencyAccountingStyle = kCFNumberFormatterCurrencyAccountingStyle
//}

//[Native]
//public enum NSNumberFormatterPadPosition : nuint
//{
//	BeforePrefix = kCFNumberFormatterPadBeforePrefix,
//	AfterPrefix = kCFNumberFormatterPadAfterPrefix,
//	BeforeSuffix = kCFNumberFormatterPadBeforeSuffix,
//	AfterSuffix = kCFNumberFormatterPadAfterSuffix
//}

//[Native]
//public enum NSNumberFormatterRoundingMode : nuint
//{
//	Ceiling = kCFNumberFormatterRoundCeiling,
//	Floor = kCFNumberFormatterRoundFloor,
//	Down = kCFNumberFormatterRoundDown,
//	Up = kCFNumberFormatterRoundUp,
//	HalfEven = kCFNumberFormatterRoundHalfEven,
//	HalfDown = kCFNumberFormatterRoundHalfDown,
//	HalfUp = kCFNumberFormatterRoundHalfUp
//}

//[Native]
//public enum NSLocaleLanguageDirection : nuint
//{
//	Unknown = kCFLocaleLanguageDirectionUnknown,
//	LeftToRight = kCFLocaleLanguageDirectionLeftToRight,
//	RightToLeft = kCFLocaleLanguageDirectionRightToLeft,
//	TopToBottom = kCFLocaleLanguageDirectionTopToBottom,
//	BottomToTop = kCFLocaleLanguageDirectionBottomToTop
//}

//[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//[Native]
//public enum NSMeasurementFormatterUnitOptions : nuint
//{
//	ProvidedUnit = (1 << 0),
//	NaturalScale = (1 << 1),
//	TemperatureWithoutUnit = (1 << 2)
//}

//[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
//[Native]
//public enum NSPersonNameComponentsFormatterStyle : nint
//{
//	Default = 0,
//	Short,
//	Medium,
//	Long,
//	Abbreviated
//}

//[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
//[Native]
//public enum NSPersonNameComponentsFormatterOptions : nuint
//{
//	NSPersonNameComponentsFormatterPhonetic = (1 << 1)
//}

//[Native]
//public enum NSRoundingMode : nuint
//{
//	Plain,
//	Down,
//	Up,
//	Bankers
//}

//[Native]
//public enum NSCalculationError : nuint
//{
//	NoError = 0,
//	LossOfPrecision,
//	Underflow,
//	Overflow,
//	DivideByZero
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NSDecimal
//{
//	public int _exponent;

//	public uint _length;

//	public uint _isNegative;

//	public uint _isCompact;

//	public uint _reserved;

//	public ushort[] _mantissa;
//}

//[Native]
//public enum NSSearchPathDirectory : nuint
//{
//	ApplicationDirectory = 1,
//	DemoApplicationDirectory,
//	DeveloperApplicationDirectory,
//	AdminApplicationDirectory,
//	LibraryDirectory,
//	DeveloperDirectory,
//	UserDirectory,
//	DocumentationDirectory,
//	DocumentDirectory,
//	CoreServiceDirectory,
//	AutosavedInformationDirectory = 11,
//	DesktopDirectory = 12,
//	CachesDirectory = 13,
//	ApplicationSupportDirectory = 14,
//	DownloadsDirectory = 15,
//	InputMethodsDirectory = 16,
//	MoviesDirectory = 17,
//	MusicDirectory = 18,
//	PicturesDirectory = 19,
//	PrinterDescriptionDirectory = 20,
//	SharedPublicDirectory = 21,
//	PreferencePanesDirectory = 22,
//	ApplicationScriptsDirectory = 23,
//	ItemReplacementDirectory = 99,
//	AllApplicationsDirectory = 100,
//	AllLibrariesDirectory = 101,
//	TrashDirectory = 102
//}

//[Native]
//public enum NSSearchPathDomainMask : nuint
//{
//	UserDomainMask = 1,
//	LocalDomainMask = 2,
//	NetworkDomainMask = 4,
//	SystemDomainMask = 8,
//	AllDomainsMask = 65535
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSURLBookmarkCreationOptions : nuint
//{
//	PreferFileIDResolution = (1 << 8),
//	MinimalBookmark = (1 << 9),
//	SuitableForBookmarkFile = (1 << 10),
//	WithSecurityScope = (1 << 11),
//	SecurityScopeAllowOnlyReadAccess = (1 << 12)
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSURLBookmarkResolutionOptions : nuint
//{
//	outUI = (1 << 8),
//	outMounting = (1 << 9),
//	SecurityScope = (1 << 10)
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSVolumeEnumerationOptions : nuint
//{
//	SkipHiddenVolumes = 1 << 1,
//	ProduceFileReferenceURLs = 1 << 2
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSDirectoryEnumerationOptions : nuint
//{
//	SubdirectoryDescendants = 1 << 0,
//	PackageDescendants = 1 << 1,
//	HiddenFiles = 1 << 2
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSFileManagerItemReplacementOptions : nuint
//{
//	UsingNewMetadataOnly = 1 << 0,
//	WithoutDeletingBackupItem = 1 << 1
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//[Native]
//public enum NSURLRelationship : nint
//{
//	Contains,
//	Same,
//	Other
//}

//[NoiOS]
//[Native]
//public enum NSFileManagerUnmountOptions : nuint
//{
//	AllPartitionsAndEjectDisk = 1 << 0,
//	WithoutUI = 1 << 1
//}

//[Native]
//public enum NSPointerFunctionsOptions : nuint
//{
//	StrongMemory = (0 << 0),
//	OpaqueMemory = (2 << 0),
//	MallocMemory = (3 << 0),
//	MachVirtualMemory = (4 << 0),
//	WeakMemory = (5 << 0),
//	ObjectPersonality = (0 << 8),
//	OpaquePersonality = (1 << 8),
//	ObjectPointerPersonality = (2 << 8),
//	CStringPersonality = (3 << 8),
//	StructPersonality = (4 << 8),
//	IntegerPersonality = (5 << 8),
//	CopyIn = (1 << 16)
//}

//[Native]
//public enum NSHTTPCookieAcceptPolicy : nuint
//{
//	Always,
//	Never,
//	OnlyFromMainDocumentDomain
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct 
//{
//	public nuint _isEmpty;

//	public nuint _hasSingleRange;

//	public nuint _cacheValid;

//	public nuint _reservedArrayBinderController;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct 
//{
//	[StructLayout (LayoutKind.Sequential)]
//	public struct __singleRange
//	{
//		public NSRange _range;
//	}


//	[FieldOffset (0)]
//	public __singleRange _singleRange;

//	[StructLayout (LayoutKind.Sequential)]
//	public struct __multipleRanges
//	{
//		public unsafe void* _data;

//		public unsafe void* _reserved;
//	}


//	[FieldOffset (0)]
//	public __multipleRanges _multipleRanges;
//}

//[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//[Native]
//public enum NSJSONReadingOptions : nuint
//{
//	MutableContainers = (1 << 0),
//	MutableLeaves = (1 << 1),
//	AllowFragments = (1 << 2)
//}

//[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
//[Native]
//public enum NSJSONWritingOptions : nuint
//{
//	PrettyPrinted = (1 << 0),
//	SortedKeys = (1 << 1)
//}

//[Native]
//public enum NSKeyValueObservingOptions : nuint
//{
//	New = 1,
//	Old = 2,
//	Initial = 4,
//	Prior = 8
//}

//[Native]
//public enum NSKeyValueChange : nuint
//{
//	Setting = 1,
//	Insertion = 2,
//	Removal = 3,
//	Replacement = 4
//}

//[Native]
//public enum NSKeyValueSetMutationKind : nuint
//{
//	UnionSetMutation = 1,
//	MinusSetMutation = 2,
//	IntersectSetMutation = 3,
//	SetSetMutation = 4
//}

//[Native]
//public enum NSPropertyListReadOptions : nuint
//{
//	Immutable = kCFPropertyListImmutable,
//	MutableContainers = kCFPropertyListMutableContainers,
//	MutableContainersAndLeaves = kCFPropertyListMutableContainersAndLeaves
//}

//[Native]
//public enum NSPropertyListFormat : nuint
//{
//	OpenStepFormat = kCFPropertyListOpenStepFormat,
//	XMLFormat_v1_0 = kCFPropertyListXMLFormat_v1_0,
//	BinaryFormat_v1_0 = kCFPropertyListBinaryFormat_v1_0
//}

//[Native]
//public enum NSPostingStyle : nuint
//{
//	WhenIdle = 1,
//	Asap = 2,
//	Now = 3
//}

//[Native]
//public enum NSNotificationCoalescing : nuint
//{
//	NoCoalescing = 0,
//	CoalescingOnName = 1,
//	CoalescingOnSender = 2
//}

//[Native]
//public enum NSOperationQueuePriority : nint
//{
//	VeryLow = -8,
//	Low = -4,
//	Normal = 0,
//	High = 4,
//	VeryHigh = 8
//}

//[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
//[Native]
//public enum NSMachPortOptions : nuint
//{
//	None = 0,
//	SendRight = (1 << 0),
//	ReceiveRight = (1 << 1)
//}

//[Introduced (PlatformName.TvOS, 9, 0, message: "Not supported")]
//[Deprecated (PlatformName.TvOS, 9, 0, message: "Not supported")]
//[Introduced (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//[Deprecated (PlatformName.WatchOS, 2, 0, message: "Not supported")]
//[Introduced (PlatformName.iOS, 2, 0, message: "Not supported")]
//[Deprecated (PlatformName.iOS, 8, 0, message: "Not supported")]
//[Introduced (PlatformName.MacOSX, 10, 0, message: "Not supported")]
//[Deprecated (PlatformName.MacOSX, 10, 10, message: "Not supported")]
//[Verify (InferredFromMemberPrefix)]
//public enum Ns : uint
//{
//	WindowsNTOperatingSystem = 1,
//	Windows95OperatingSystem,
//	SolarisOperatingSystem,
//	HPUXOperatingSystem,
//	MACHOperatingSystem,
//	SunOSOperatingSystem,
//	OSF1OperatingSystem
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NSOperatingSystemVersion
//{
//	public nint majorVersion;

//	public nint minorVersion;

//	public nint patchVersion;
//}

//[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
//public enum NSActivityOptions : ulong
//{
//	IdleDisplaySleepDisabled = (1 << 40),
//	IdleSystemSleepDisabled = (1 << 20),
//	SuddenTerminationDisabled = (1 << 14),
//	AutomaticTerminationDisabled = (1 << 15),
//	UserInitiated = (16777215 | IdleSystemSleepDisabled),
//	UserInitiatedAllowingIdleSystemSleep = (UserInitiated & ~IdleSystemSleepDisabled),
//	Background = 255,
//	LatencyCritical = 1095216660480L
//}

//[Watch (4,0), TV (11,0), Mac (10,10,3), iOS (11,0)]
//[Native]
//public enum NSProcessInfoThermalState : nint
//{
//	Nominal,
//	Fair,
//	Serious,
//	Critical
//}

//public enum NSTextCheckingType : ulong
//{
//	Orthography = 1 << 0,
//	Spelling = 1 << 1,
//	Grammar = 1 << 2,
//	Date = 1 << 3,
//	Address = 1 << 4,
//	Link = 1 << 5,
//	Quote = 1 << 6,
//	Dash = 1 << 7,
//	Replacement = 1 << 8,
//	Correction = 1 << 9,
//	RegularExpression = 1 << 10,
//	PhoneNumber = 1 << 11,
//	TransitInformation = 1 << 12
//}

//[Verify (InferredFromMemberPrefix)]
//public enum NSTextCheckingAll : ulong
//{
//	SystemTypes = 4294967295L,
//	CustomTypes = 4294967295L << 32,
//	Types = (SystemTypes | CustomTypes)
//}

//[Native]
//public enum NSRegularExpressionOptions : nuint
//{
//	CaseInsensitive = 1 << 0,
//	AllowCommentsAndWhitespace = 1 << 1,
//	IgnoreMetacharacters = 1 << 2,
//	DotMatchesLineSeparators = 1 << 3,
//	AnchorsMatchLines = 1 << 4,
//	UseUnixLineSeparators = 1 << 5,
//	UseUnicodeWordBoundaries = 1 << 6
//}

//[Native]
//public enum NSMatchingOptions : nuint
//{
//	ReportProgress = 1 << 0,
//	ReportCompletion = 1 << 1,
//	Anchored = 1 << 2,
//	WithTransparentBounds = 1 << 3,
//	WithoutAnchoringBounds = 1 << 4
//}

//[Native]
//public enum NSMatchingFlags : nuint
//{
//	Progress = 1 << 0,
//	Completed = 1 << 1,
//	HitEnd = 1 << 2,
//	RequiredEnd = 1 << 3,
//	InternalError = 1 << 4
//}

//[Native]
//public enum NSStreamStatus : nuint
//{
//	NotOpen = 0,
//	Opening = 1,
//	Open = 2,
//	Reading = 3,
//	Writing = 4,
//	AtEnd = 5,
//	Closed = 6,
//	Error = 7
//}

//[Native]
//public enum NSStreamEvent : nuint
//{
//	None = 0,
//	OpenCompleted = 1 << 0,
//	HasBytesAvailable = 1 << 1,
//	HasSpaceAvailable = 1 << 2,
//	ErrorOccurred = 1 << 3,
//	EndEncountered = 1 << 4
//}

//[Native]
//public enum NSTimeZoneNameStyle : nint
//{
//	Standard,
//	ShortStandard,
//	DaylightSaving,
//	ShortDaylightSaving,
//	Generic,
//	ShortGeneric
//}

//[Native]
//public enum NSURLCacheStoragePolicy : nuint
//{
//	Allowed,
//	AllowedInMemoryOnly,
//	NotAllowed
//}

//[Native]
//public enum NSURLCredentialPersistence : nuint
//{
//	None,
//	ForSession,
//	Permanent,
//	Synchronizable
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (7,0)]
//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum NSURLErrorCancelledReason : nint
//{
//	UserForceQuitApplication = 0,
//	BackgroundUpdatesDisabled = 1,
//	InsufficientSystemResources = 2
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum NSURLError : nint
//{
//	Unknown = -1,
//	Cancelled = -999,
//	BadURL = -1000,
//	TimedOut = -1001,
//	UnsupportedURL = -1002,
//	CannotFindHost = -1003,
//	CannotConnectToHost = -1004,
//	NetworkConnectionLost = -1005,
//	DNSLookupFailed = -1006,
//	HTTPTooManyRedirects = -1007,
//	ResourceUnavailable = -1008,
//	NotConnectedToInternet = -1009,
//	RedirectToNonExistentLocation = -1010,
//	BadServerResponse = -1011,
//	UserCancelledAuthentication = -1012,
//	UserAuthenticationRequired = -1013,
//	ZeroByteResource = -1014,
//	CannotDecodeRawData = -1015,
//	CannotDecodeContentData = -1016,
//	CannotParseResponse = -1017,
//	AppTransportSecurityRequiresSecureConnection = -1022,
//	FileDoesNotExist = -1100,
//	FileIsDirectory = -1101,
//	NoPermissionsToReadFile = -1102,
//	DataLengthExceedsMaximum = -1103,
//	FileOutsideSafeArea = -1104,
//	SecureConnectionFailed = -1200,
//	ServerCertificateHasBadDate = -1201,
//	ServerCertificateUntrusted = -1202,
//	ServerCertificateHasUnknownRoot = -1203,
//	ServerCertificateNotYetValid = -1204,
//	ClientCertificateRejected = -1205,
//	ClientCertificateRequired = -1206,
//	CannotLoadFromNetwork = -2000,
//	CannotCreateFile = -3000,
//	CannotOpenFile = -3001,
//	CannotCloseFile = -3002,
//	CannotWriteToFile = -3003,
//	CannotRemoveFile = -3004,
//	CannotMoveFile = -3005,
//	DownloadDecodingFailedMidStream = -3006,
//	DownloadDecodingFailedToComplete = -3007,
//	InternationalRoamingOff = -1018,
//	CallIsActive = -1019,
//	DataNotAllowed = -1020,
//	RequestBodyStreamExhausted = -1021,
//	BackgroundSessionRequiresSharedContainer = -995,
//	BackgroundSessionInUseByAnotherProcess = -996,
//	BackgroundSessionWasDisconnected = -997
//}

//[Native]
//public enum NSURLRequestCachePolicy : nuint
//{
//	UseProtocolCachePolicy = 0,
//	ReloadIgnoringLocalCacheData = 1,
//	ReloadIgnoringLocalAndRemoteCacheData = 4,
//	ReloadIgnoringCacheData = ReloadIgnoringLocalCacheData,
//	ReturnCacheDataElseLoad = 2,
//	ReturnCacheDataDontLoad = 3,
//	ReloadRevalidatingCacheData = 5
//}

//[Native]
//public enum NSURLRequestNetworkServiceType : nuint
//{
//	Default = 0,
//	VoIP = 1,
//	Video = 2,
//	Background = 3,
//	Voice = 4,
//	CallSignaling = 11
//}

//[Native]
//public enum NSXMLParserExternalEntityResolvingPolicy : nuint
//{
//	Never = 0,
//	NoNetwork,
//	SameOriginOnly,
//	Always
//}

//[Native]
//public enum NSXMLParserError : nint
//{
//	InternalError = 1,
//	OutOfMemoryError = 2,
//	DocumentStartError = 3,
//	EmptyDocumentError = 4,
//	PrematureDocumentEndError = 5,
//	InvalidHexCharacterRefError = 6,
//	InvalidDecimalCharacterRefError = 7,
//	InvalidCharacterRefError = 8,
//	InvalidCharacterError = 9,
//	CharacterRefAtEOFError = 10,
//	CharacterRefInPrologError = 11,
//	CharacterRefInEpilogError = 12,
//	CharacterRefInDTDError = 13,
//	EntityRefAtEOFError = 14,
//	EntityRefInPrologError = 15,
//	EntityRefInEpilogError = 16,
//	EntityRefInDTDError = 17,
//	ParsedEntityRefAtEOFError = 18,
//	ParsedEntityRefInPrologError = 19,
//	ParsedEntityRefInEpilogError = 20,
//	ParsedEntityRefInInternalSubsetError = 21,
//	EntityReferenceWithoutNameError = 22,
//	EntityReferenceMissingSemiError = 23,
//	ParsedEntityRefNoNameError = 24,
//	ParsedEntityRefMissingSemiError = 25,
//	UndeclaredEntityError = 26,
//	UnparsedEntityError = 28,
//	EntityIsExternalError = 29,
//	EntityIsParameterError = 30,
//	UnknownEncodingError = 31,
//	EncodingNotSupportedError = 32,
//	StringNotStartedError = 33,
//	StringNotClosedError = 34,
//	NamespaceDeclarationError = 35,
//	EntityNotStartedError = 36,
//	EntityNotFinishedError = 37,
//	LessThanSymbolInAttributeError = 38,
//	AttributeNotStartedError = 39,
//	AttributeNotFinishedError = 40,
//	AttributeHasNoValueError = 41,
//	AttributeRedefinedError = 42,
//	LiteralNotStartedError = 43,
//	LiteralNotFinishedError = 44,
//	CommentNotFinishedError = 45,
//	ProcessingInstructionNotStartedError = 46,
//	ProcessingInstructionNotFinishedError = 47,
//	NotationNotStartedError = 48,
//	NotationNotFinishedError = 49,
//	AttributeListNotStartedError = 50,
//	AttributeListNotFinishedError = 51,
//	MixedContentDeclNotStartedError = 52,
//	MixedContentDeclNotFinishedError = 53,
//	ElementContentDeclNotStartedError = 54,
//	ElementContentDeclNotFinishedError = 55,
//	XMLDeclNotStartedError = 56,
//	XMLDeclNotFinishedError = 57,
//	ConditionalSectionNotStartedError = 58,
//	ConditionalSectionNotFinishedError = 59,
//	ExternalSubsetNotFinishedError = 60,
//	DOCTYPEDeclNotFinishedError = 61,
//	MisplacedCDATAEndStringError = 62,
//	CDATANotFinishedError = 63,
//	MisplacedXMLDeclarationError = 64,
//	SpaceRequiredError = 65,
//	SeparatorRequiredError = 66,
//	NMTOKENRequiredError = 67,
//	NAMERequiredError = 68,
//	PCDATARequiredError = 69,
//	URIRequiredError = 70,
//	PublicIdentifierRequiredError = 71,
//	LTRequiredError = 72,
//	GTRequiredError = 73,
//	LTSlashRequiredError = 74,
//	EqualExpectedError = 75,
//	TagNameMismatchError = 76,
//	UnfinishedTagError = 77,
//	StandaloneValueError = 78,
//	InvalidEncodingNameError = 79,
//	CommentContainsDoubleHyphenError = 80,
//	InvalidEncodingError = 81,
//	ExternalStandaloneEntityError = 82,
//	InvalidConditionalSectionError = 83,
//	EntityValueRequiredError = 84,
//	NotWellBalancedError = 85,
//	ExtraContentError = 86,
//	InvalidCharacterInEntityError = 87,
//	ParsedEntityRefInInternalError = 88,
//	EntityRefLoopError = 89,
//	EntityBoundaryError = 90,
//	InvalidURIError = 91,
//	URIFragmentError = 92,
//	NoDTDError = 94,
//	DelegateAbortedParseError = 512
//}

//[Watch (2,0), TV (9,0), Mac (10,8), iOS (6,0)]
//[Native]
//public enum NSXPCConnectionOptions : nuint
//{
//	NSXPCConnectionPrivileged = (1 << 12)
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum Ns : nint
//{
//	FileNoSuchFileError = 4,
//	FileLockingError = 255,
//	FileReadUnknownError = 256,
//	FileReadNoPermissionError = 257,
//	FileReadInvalidFileNameError = 258,
//	FileReadCorruptFileError = 259,
//	FileReadNoSuchFileError = 260,
//	FileReadInapplicableStringEncodingError = 261,
//	FileReadUnsupportedSchemeError = 262,
//	FileReadTooLargeError = 263,
//	FileReadUnknownStringEncodingError = 264,
//	FileWriteUnknownError = 512,
//	FileWriteNoPermissionError = 513,
//	FileWriteInvalidFileNameError = 514,
//	FileWriteFileExistsError = 516,
//	FileWriteInapplicableStringEncodingError = 517,
//	FileWriteUnsupportedSchemeError = 518,
//	FileWriteOutOfSpaceError = 640,
//	FileWriteVolumeReadOnlyError = 642,
//	FileManagerUnmountUnknownError = 768,
//	FileManagerUnmountBusyError = 769,
//	KeyValueValidationError = 1024,
//	FormattingError = 2048,
//	UserCancelledError = 3072,
//	FeatureUnsupportedError = 3328,
//	ExecutableNotLoadableError = 3584,
//	ExecutableArchitectureMismatchError = 3585,
//	ExecutableRuntimeMismatchError = 3586,
//	ExecutableLoadError = 3587,
//	ExecutableLinkError = 3588,
//	FileErrorMinimum = 0,
//	FileErrorMaximum = 1023,
//	ValidationErrorMinimum = 1024,
//	ValidationErrorMaximum = 2047,
//	ExecutableErrorMinimum = 3584,
//	ExecutableErrorMaximum = 3839,
//	FormattingErrorMinimum = 2048,
//	FormattingErrorMaximum = 2559,
//	PropertyListReadCorruptError = 3840,
//	PropertyListReadUnknownVersionError = 3841,
//	PropertyListReadStreamError = 3842,
//	PropertyListWriteStreamError = 3851,
//	PropertyListWriteInvalidError = 3852,
//	PropertyListErrorMinimum = 3840,
//	PropertyListErrorMaximum = 4095,
//	XPCConnectionInterrupted = 4097,
//	XPCConnectionInvalid = 4099,
//	XPCConnectionReplyInvalid = 4101,
//	XPCConnectionErrorMinimum = 4096,
//	XPCConnectionErrorMaximum = 4224,
//	UbiquitousFileUnavailableError = 4353,
//	UbiquitousFileNotUploadedDueToQuotaError = 4354,
//	UbiquitousFileUbiquityServerNotAvailable = 4355,
//	UbiquitousFileErrorMinimum = 4352,
//	UbiquitousFileErrorMaximum = 4607,
//	UserActivityHandoffFailedError = 4608,
//	UserActivityConnectionUnavailableError = 4609,
//	UserActivityRemoteApplicationTimedOutError = 4610,
//	UserActivityHandoffUserInfoTooLargeError = 4611,
//	UserActivityErrorMinimum = 4608,
//	UserActivityErrorMaximum = 4863,
//	CoderReadCorruptError = 4864,
//	CoderValueNotFoundError = 4865,
//	CoderInvalidValueError = 4866,
//	CoderErrorMinimum = 4864,
//	CoderErrorMaximum = 4991,
//	BundleErrorMinimum = 4992,
//	BundleErrorMaximum = 5119,
//	BundleOnDemandResourceOutOfSpaceError = 4992,
//	BundleOnDemandResourceExceededMaximumSizeError = 4993,
//	BundleOnDemandResourceInvalidTagError = 4994,
//	CloudSharingNetworkFailureError = 5120,
//	CloudSharingQuotaExceededError = 5121,
//	CloudSharingTooManyParticipantsError = 5122,
//	CloudSharingConflictError = 5123,
//	CloudSharingNoPermissionError = 5124,
//	CloudSharingOtherError = 5375,
//	CloudSharingErrorMinimum = 5120,
//	CloudSharingErrorMaximum = 5375
//}

//[Native]
//public enum NSByteCountFormatterUnits : nuint
//{
//	Default = 0,
//	Bytes = 1 << 0,
//	Kb = 1 << 1,
//	Mb = 1 << 2,
//	Gb = 1 << 3,
//	Tb = 1 << 4,
//	Pb = 1 << 5,
//	Eb = 1 << 6,
//	Zb = 1 << 7,
//	YBOrHigher = 255 << 8,
//	All = 65535
//}

//[Native]
//public enum NSByteCountFormatterCountStyle : nint
//{
//	File = 0,
//	Memory = 1,
//	Decimal = 2,
//	Binary = 3
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _predicateFlags
//{
//	public uint _evaluationBlocked;

//	public uint _reservedPredicateFlags;
//}

//[Native]
//public enum NSComparisonPredicateOptions : nuint
//{
//	CaseInsensitivePredicateOption = 1,
//	DiacriticInsensitivePredicateOption = 2,
//	NormalizedPredicateOption = 4
//}

//[Native]
//public enum NSComparisonPredicateModifier : nuint
//{
//	DirectPredicateModifier = 0,
//	AllPredicateModifier,
//	AnyPredicateModifier
//}

//[Native]
//public enum NSPredicateOperatorType : nuint
//{
//	LessThanPredicateOperatorType = 0,
//	LessThanOrEqualToPredicateOperatorType,
//	GreaterThanPredicateOperatorType,
//	GreaterThanOrEqualToPredicateOperatorType,
//	EqualToPredicateOperatorType,
//	NotEqualToPredicateOperatorType,
//	MatchesPredicateOperatorType,
//	LikePredicateOperatorType,
//	BeginsWithPredicateOperatorType,
//	EndsWithPredicateOperatorType,
//	InPredicateOperatorType,
//	CustomSelectorPredicateOperatorType,
//	ContainsPredicateOperatorType = 99,
//	BetweenPredicateOperatorType
//}

//[Native]
//public enum NSCompoundPredicateType : nuint
//{
//	NotPredicateType = 0,
//	AndPredicateType,
//	OrPredicateType
//}

//[Native]
//public enum NSDateComponentsFormatterUnitsStyle : nint
//{
//	Positional = 0,
//	Abbreviated,
//	Short,
//	Full,
//	SpellOut,
//	Brief
//}

//[Native]
//public enum NSDateComponentsFormatterZeroFormattingBehavior : nuint
//{
//	None = (0),
//	Default = (1 << 0),
//	DropLeading = (1 << 1),
//	DropMiddle = (1 << 2),
//	DropTrailing = (1 << 3),
//	DropAll = (DropLeading | DropMiddle | DropTrailing),
//	Pad = (1 << 16)
//}

//[Native]
//public enum NSExpressionType : nuint
//{
//	ConstantValueExpressionType = 0,
//	EvaluatedObjectExpressionType,
//	VariableExpressionType,
//	KeyPathExpressionType,
//	FunctionExpressionType,
//	UnionSetExpressionType,
//	IntersectSetExpressionType,
//	MinusSetExpressionType,
//	SubqueryExpressionType = 13,
//	AggregateExpressionType = 14,
//	AnyKeyExpressionType = 15,
//	BlockExpressionType = 19,
//	ConditionalExpressionType = 20
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _expressionFlags
//{
//	public uint _evaluationBlocked;

//	public uint _reservedExpressionFlags;
//}

//[Native]
//public enum NSFileCoordinatorReadingOptions : nuint
//{
//	WithoutChanges = 1 << 0,
//	ResolvesSymbolicLink = 1 << 1,
//	ImmediatelyAvailableMetadataOnly = 1 << 2,
//	ForUploading = 1 << 3
//}

//[Native]
//public enum NSFileCoordinatorWritingOptions : nuint
//{
//	ForDeleting = 1 << 0,
//	ForMoving = 1 << 1,
//	ForMerging = 1 << 2,
//	ForReplacing = 1 << 3,
//	ContentIndependentMetadataOnly = 1 << 4
//}

//[Native]
//public enum NSFileVersionAddingOptions : nuint
//{
//	NSFileVersionAddingByMoving = 1 << 0
//}

//[Native]
//public enum NSFileVersionReplacingOptions : nuint
//{
//	NSFileVersionReplacingByMoving = 1 << 0
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSFileWrapperReadingOptions : nuint
//{
//	Immediate = 1 << 0,
//	WithoutMapping = 1 << 1
//}

//[Watch (2,0), TV (9,0), Mac (10,6), iOS (4,0)]
//[Native]
//public enum NSFileWrapperWritingOptions : nuint
//{
//	Atomic = 1 << 0,
//	WithNameUpdating = 1 << 1
//}

//[Native]
//public enum NSLinguisticTaggerUnit : nint
//{
//	Word,
//	Sentence,
//	Paragraph,
//	Document
//}

//[Native]
//public enum NSLinguisticTaggerOptions : nuint
//{
//	OmitWords = 1 << 0,
//	OmitPunctuation = 1 << 1,
//	OmitWhitespace = 1 << 2,
//	OmitOther = 1 << 3,
//	JoinNames = 1 << 4
//}

//[Native]
//public enum NSNetServicesError : nint
//{
//	UnknownError = -72000,
//	CollisionError = -72001,
//	NotFoundError = -72002,
//	ActivityInProgress = -72003,
//	BadArgumentError = -72004,
//	CancelledError = -72005,
//	InvalidError = -72006,
//	TimeoutError = -72007
//}

//[Native]
//public enum NSNetServiceOptions : nuint
//{
//	NoAutoRename = 1 << 0,
//	ListenForConnections = 1 << 1
//}

//[Native]
//[Verify (InferredFromMemberPrefix)]
//public enum NSUbiquitousKeyValueStore : nint
//{
//	ServerChange,
//	InitialSyncChange,
//	QuotaViolationChange,
//	AccountChange
//}

//[iOS (7,0)]
//[Native]
//public enum NSURLSessionTaskState : nint
//{
//	Running = 0,
//	Suspended = 1,
//	Canceling = 2,
//	Completed = 3
//}

//[NoWatch, NoTV, NoMac, iOS (11,0)]
//[Native]
//public enum NSURLSessionMultipathServiceType : nint
//{
//	None = 0,
//	Handover = 1,
//	Interactive = 2,
//	Aggregate = 3
//}

//[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
//[Native]
//public enum NSURLSessionDelayedRequestDisposition : nint
//{
//	ContinueLoading = 0,
//	UseNewRequest = 1,
//	Cancel = 2
//}

//[iOS (7,0)]
//[Native]
//public enum NSURLSessionAuthChallengeDisposition : nint
//{
//	UseCredential = 0,
//	PerformDefaultHandling = 1,
//	CancelAuthenticationChallenge = 2,
//	RejectProtectionSpace = 3
//}

//[iOS (7,0)]
//[Native]
//public enum NSURLSessionResponseDisposition : nint
//{
//	Cancel = 0,
//	Allow = 1,
//	BecomeDownload = 2,
//	BecomeStream = 3
//}

//[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
//[Native]
//public enum NSURLSessionTaskMetricsResourceFetchType : nint
//{
//	Unknown,
//	NetworkLoad,
//	ServerPush,
//	LocalCache
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGPoint
//{
//	public nfloat x;

//	public nfloat y;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGSize
//{
//	public nfloat width;

//	public nfloat height;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGVector
//{
//	public nfloat dx;

//	public nfloat dy;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGRect
//{
//	public CGPoint origin;

//	public CGSize size;
//}

//public enum CGRectEdge : uint
//{
//	inXEdge,
//	inYEdge,
//	axXEdge,
//	axYEdge
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGAffineTransform
//{
//	public nfloat a;

//	public nfloat b;

//	public nfloat c;

//	public nfloat d;

//	public nfloat tx;

//	public nfloat ty;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGDataProviderSequentialCallbacks
//{
//	public uint version;

//	public unsafe CGDataProviderGetBytesCallback* getBytes;

//	public unsafe CGDataProviderSkipForwardCallback* skipForward;

//	public unsafe CGDataProviderRewindCallback* rewind;

//	public unsafe CGDataProviderReleaseInfoCallback* releaseInfo;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGDataProviderDirectCallbacks
//{
//	public uint version;

//	public unsafe CGDataProviderGetBytePointerCallback* getBytePointer;

//	public unsafe CGDataProviderReleaseBytePointerCallback* releaseBytePointer;

//	public unsafe CGDataProviderGetBytesAtPositionCallback* getBytesAtPosition;

//	public unsafe CGDataProviderReleaseInfoCallback* releaseInfo;
//}

//public enum CGColorRenderingIntent
//{
//	Default,
//	AbsoluteColorimetric,
//	RelativeColorimetric,
//	Perceptual,
//	Saturation
//}

//public enum CGColorSpaceModel
//{
//	Unknown = -1,
//	Monochrome,
//	Rgb,
//	Cmyk,
//	Lab,
//	DeviceN,
//	Indexed,
//	Pattern
//}

//public enum CGPatternTiling
//{
//	NoDistortion,
//	ConstantSpacingMinimalDistortion,
//	ConstantSpacing
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGPatternCallbacks
//{
//	public uint version;

//	public unsafe CGPatternDrawPatternCallback* drawPattern;

//	public unsafe CGPatternReleaseInfoCallback* releaseInfo;
//}

//public enum CGFontPostScriptFormat
//{
//	kCGFontPostScriptFormatType1 = 1,
//	kCGFontPostScriptFormatType3 = 3,
//	kCGFontPostScriptFormatType42 = 42
//}

//public enum CGGlyphDeprecatedEnum
//{
//	@in,
//	ax
//}

//public enum CGGradientDrawingOptions : uint
//{
//	BeforeStartLocation = (1 << 0),
//	AfterEndLocation = (1 << 1)
//}

//public enum CGImageAlphaInfo : uint
//{
//	None,
//	PremultipliedLast,
//	PremultipliedFirst,
//	Last,
//	First,
//	NoneSkipLast,
//	NoneSkipFirst,
//	Only
//}

//[iOS (2,0)]
//public enum CGImageByteOrderInfo : uint
//{
//	Mask = 28672,
//	kCGImageByteOrder16Little = (1 << 12),
//	kCGImageByteOrder32Little = (2 << 12),
//	kCGImageByteOrder16Big = (3 << 12),
//	kCGImageByteOrder32Big = (4 << 12)
//}

//[iOS (2,0)]
//public enum CGBitmapInfo : uint
//{
//	AlphaInfoMask = 31,
//	FloatInfoMask = 3840,
//	FloatComponents = (1 << 8),
//	ByteOrderMask = kCGImageByteOrderMask,
//	ByteOrderDefault = (0 << 12),
//	ByteOrder16Little = kCGImageByteOrder16Little,
//	ByteOrder32Little = kCGImageByteOrder32Little,
//	ByteOrder16Big = kCGImageByteOrder16Big,
//	ByteOrder32Big = kCGImageByteOrder32Big
//}

//public enum CGLineJoin
//{
//	Miter,
//	Round,
//	Bevel
//}

//public enum CGLineCap
//{
//	Butt,
//	Round,
//	Square
//}

//public enum CGPathElementType
//{
//	MoveToPoint,
//	AddLineToPoint,
//	AddQuadCurveToPoint,
//	AddCurveToPoint,
//	CloseSubpath
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGPathElement
//{
//	public CGPathElementType type;

//	public unsafe CGPoint* points;
//}

//public enum CGPDFObjectType
//{
//	Null = 1,
//	Boolean,
//	Integer,
//	Real,
//	Name,
//	String,
//	Array,
//	Dictionary,
//	Stream
//}

//public enum CGPDFDataFormat
//{
//	Raw,
//	JPEGEncoded,
//	Jpeg2000
//}

//public enum CGPDFBox
//{
//	MediaBox = 0,
//	CropBox = 1,
//	BleedBox = 2,
//	TrimBox = 3,
//	ArtBox = 4
//}

//public enum CGPDFAccessPermissions : uint
//{
//	LowQualityPrinting = (1 << 0),
//	HighQualityPrinting = (1 << 1),
//	DocumentChanges = (1 << 2),
//	DocumentAssembly = (1 << 3),
//	ContentCopying = (1 << 4),
//	ContentAccessibility = (1 << 5),
//	Commenting = (1 << 6),
//	FormFieldEntry = (1 << 7)
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGFunctionCallbacks
//{
//	public uint version;

//	public unsafe CGFunctionEvaluateCallback* evaluate;

//	public unsafe CGFunctionReleaseInfoCallback* releaseInfo;
//}

//public enum CGPathDrawingMode
//{
//	Fill,
//	EOFill,
//	Stroke,
//	FillStroke,
//	EOFillStroke
//}

//public enum CGTextDrawingMode
//{
//	Fill,
//	Stroke,
//	FillStroke,
//	Invisible,
//	FillClip,
//	StrokeClip,
//	FillStrokeClip,
//	Clip
//}

//[Introduced (PlatformName.iOS, 2, 0)]
//[Deprecated (PlatformName.iOS, 7, 0)]
//public enum CGTextEncoding
//{
//	FontSpecific,
//	MacRoman
//}

//public enum CGInterpolationQuality
//{
//	Default = 0,
//	None = 1,
//	Low = 2,
//	Medium = 4,
//	High = 3
//}

//public enum CGBlendMode
//{
//	Normal,
//	Multiply,
//	Screen,
//	Overlay,
//	Darken,
//	Lighten,
//	ColorDodge,
//	ColorBurn,
//	SoftLight,
//	HardLight,
//	Difference,
//	Exclusion,
//	Hue,
//	Saturation,
//	Color,
//	Luminosity,
//	Clear,
//	Copy,
//	SourceIn,
//	SourceOut,
//	SourceAtop,
//	DestinationOver,
//	DestinationIn,
//	DestinationOut,
//	DestinationAtop,
//	Xor,
//	PlusDarker,
//	PlusLighter
//}

//public enum CGColorConversionInfoTransformType : uint
//{
//	FromSpace = 0,
//	ToSpace,
//	ApplySpace
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CGDataConsumerCallbacks
//{
//	public unsafe CGDataConsumerPutBytesCallback* putBytes;

//	public unsafe CGDataConsumerReleaseInfoCallback* releaseConsumer;
//}

//public enum CGError
//{
//	Success = 0,
//	Failure = 1000,
//	IllegalArgument = 1001,
//	InvalidConnection = 1002,
//	InvalidContext = 1003,
//	CannotComplete = 1004,
//	NotImplemented = 1006,
//	RangeCheck = 1007,
//	TypeCheck = 1008,
//	InvalidOperation = 1010,
//	NoneAvailable = 1011
//}

//public enum IOSurfaceLockOptions : uint
//{
//	ReadOnly = 1,
//	AvoidSync = 2
//}

//public enum IOSurfacePurgeabilityState : uint
//{
//	NonVolatile = 0,
//	Volatile = 1,
//	Empty = 2,
//	KeepCurrent = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kIOSurface : uint
//{
//	DefaultCache = 0,
//	InhibitCache = 1,
//	WriteThruCache = 2,
//	CopybackCache = 3,
//	WriteCombineCache = 4,
//	CopybackInnerCache = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kIOSurfaceMap : uint
//{
//	CacheShift = 8,
//	DefaultCache = kIOSurfaceDefaultCache << CacheShift,
//	InhibitCache = kIOSurfaceInhibitCache << CacheShift,
//	WriteThruCache = kIOSurfaceWriteThruCache << CacheShift,
//	CopybackCache = kIOSurfaceCopybackCache << CacheShift,
//	WriteCombineCache = kIOSurfaceWriteCombineCache << CacheShift,
//	CopybackInnerCache = kIOSurfaceCopybackInnerCache << CacheShift
//}

//public enum IOSurfaceComponentName
//{
//	Unknown = 0,
//	Alpha = 1,
//	Red = 2,
//	Green = 3,
//	Blue = 4,
//	Luma = 5,
//	ChromaRed = 6,
//	ChromaBlue = 7
//}

//public enum IOSurfaceComponentType
//{
//	Unknown = 0,
//	UnsignedInteger = 1,
//	SignedInteger = 2,
//	Float = 3
//}

//public enum IOSurfaceComponentRange
//{
//	Unknown = 0,
//	FullRange = 1,
//	VideoRange = 2,
//	WideRange = 3
//}

//public enum IOSurfaceSubsampling
//{
//	Unknown = 0,
//	None = 1,
//	kIOSurfaceSubsampling422 = 2,
//	kIOSurfaceSubsampling420 = 3,
//	kIOSurfaceSubsampling411 = 4
//}

//[Native]
//public enum EAGLRenderingAPI : nuint
//{
//	kEAGLRenderingAPIOpenGLES1 = 1,
//	kEAGLRenderingAPIOpenGLES2 = 2,
//	kEAGLRenderingAPIOpenGLES3 = 3
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLOrigin
//{
//	public nuint x;

//	public nuint y;

//	public nuint z;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLSize
//{
//	public nuint width;

//	public nuint height;

//	public nuint depth;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLRegion
//{
//	public MTLOrigin origin;

//	public MTLSize size;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLSamplePosition
//{
//	public float x;

//	public float y;
//}

//[iOS (11,0)]
//[Native]
//public enum MTLResourceUsage : nuint
//{
//	Read = 1 << 0,
//	Write = 1 << 1,
//	Sample = 1 << 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLPixelFormat : nuint
//{
//	Invalid = 0,
//	A8Unorm = 1,
//	R8Unorm = 10,
//	R8Unorm_sRGB = 11,
//	R8Snorm = 12,
//	R8Uint = 13,
//	R8Sint = 14,
//	R16Unorm = 20,
//	R16Snorm = 22,
//	R16Uint = 23,
//	R16Sint = 24,
//	R16Float = 25,
//	RG8Unorm = 30,
//	RG8Unorm_sRGB = 31,
//	RG8Snorm = 32,
//	RG8Uint = 33,
//	RG8Sint = 34,
//	B5G6R5Unorm = 40,
//	A1BGR5Unorm = 41,
//	ABGR4Unorm = 42,
//	BGR5A1Unorm = 43,
//	R32Uint = 53,
//	R32Sint = 54,
//	R32Float = 55,
//	RG16Unorm = 60,
//	RG16Snorm = 62,
//	RG16Uint = 63,
//	RG16Sint = 64,
//	RG16Float = 65,
//	RGBA8Unorm = 70,
//	RGBA8Unorm_sRGB = 71,
//	RGBA8Snorm = 72,
//	RGBA8Uint = 73,
//	RGBA8Sint = 74,
//	BGRA8Unorm = 80,
//	BGRA8Unorm_sRGB = 81,
//	RGB10A2Unorm = 90,
//	RGB10A2Uint = 91,
//	RG11B10Float = 92,
//	RGB9E5Float = 93,
//	BGR10A2Unorm = 94,
//	Bgr10Xr = 554,
//	BGR10_XR_sRGB = 555,
//	RG32Uint = 103,
//	RG32Sint = 104,
//	RG32Float = 105,
//	RGBA16Unorm = 110,
//	RGBA16Snorm = 112,
//	RGBA16Uint = 113,
//	RGBA16Sint = 114,
//	RGBA16Float = 115,
//	Bgra10Xr = 552,
//	BGRA10_XR_sRGB = 553,
//	RGBA32Uint = 123,
//	RGBA32Sint = 124,
//	RGBA32Float = 125,
//	Bc1Rgba = 130,
//	BC1_RGBA_sRGB = 131,
//	Bc2Rgba = 132,
//	BC2_RGBA_sRGB = 133,
//	Bc3Rgba = 134,
//	BC3_RGBA_sRGB = 135,
//	BC4_RUnorm = 140,
//	BC4_RSnorm = 141,
//	BC5_RGUnorm = 142,
//	BC5_RGSnorm = 143,
//	BC6H_RGBFloat = 150,
//	BC6H_RGBUfloat = 151,
//	BC7_RGBAUnorm = 152,
//	BC7_RGBAUnorm_sRGB = 153,
//	PvrtcRgb2bpp = 160,
//	PVRTC_RGB_2BPP_sRGB = 161,
//	PvrtcRgb4bpp = 162,
//	PVRTC_RGB_4BPP_sRGB = 163,
//	PvrtcRgba2bpp = 164,
//	PVRTC_RGBA_2BPP_sRGB = 165,
//	PvrtcRgba4bpp = 166,
//	PVRTC_RGBA_4BPP_sRGB = 167,
//	EAC_R11Unorm = 170,
//	EAC_R11Snorm = 172,
//	EAC_RG11Unorm = 174,
//	EAC_RG11Snorm = 176,
//	EacRgba8 = 178,
//	EAC_RGBA8_sRGB = 179,
//	Etc2Rgb8 = 180,
//	ETC2_RGB8_sRGB = 181,
//	Etc2Rgb8a1 = 182,
//	ETC2_RGB8A1_sRGB = 183,
//	ASTC_4x4_sRGB = 186,
//	ASTC_5x4_sRGB = 187,
//	ASTC_5x5_sRGB = 188,
//	ASTC_6x5_sRGB = 189,
//	ASTC_6x6_sRGB = 190,
//	ASTC_8x5_sRGB = 192,
//	ASTC_8x6_sRGB = 193,
//	ASTC_8x8_sRGB = 194,
//	ASTC_10x5_sRGB = 195,
//	ASTC_10x6_sRGB = 196,
//	ASTC_10x8_sRGB = 197,
//	ASTC_10x10_sRGB = 198,
//	ASTC_12x10_sRGB = 199,
//	ASTC_12x12_sRGB = 200,
//	ASTC_4x4_LDR = 204,
//	ASTC_5x4_LDR = 205,
//	ASTC_5x5_LDR = 206,
//	ASTC_6x5_LDR = 207,
//	ASTC_6x6_LDR = 208,
//	ASTC_8x5_LDR = 210,
//	ASTC_8x6_LDR = 211,
//	ASTC_8x8_LDR = 212,
//	ASTC_10x5_LDR = 213,
//	ASTC_10x6_LDR = 214,
//	ASTC_10x8_LDR = 215,
//	ASTC_10x10_LDR = 216,
//	ASTC_12x10_LDR = 217,
//	ASTC_12x12_LDR = 218,
//	Gbgr422 = 240,
//	Bgrg422 = 241,
//	Depth16Unorm = 250,
//	Depth32Float = 252,
//	Stencil8 = 253,
//	Depth24Unorm_Stencil8 = 255,
//	Depth32Float_Stencil8 = 260,
//	X32_Stencil8 = 261,
//	X24_Stencil8 = 262
//}

//[iOS (8,0)]
//[Native]
//public enum MTLPurgeableState : nuint
//{
//	KeepCurrent = 1,
//	NonVolatile = 2,
//	Volatile = 3,
//	Empty = 4
//}

//[iOS (8,0)]
//[Native]
//public enum MTLCPUCacheMode : nuint
//{
//	DefaultCache = 0,
//	WriteCombined = 1
//}

//[iOS (9,0)]
//[Native]
//public enum MTLStorageMode : nuint
//{
//	Shared = 0,
//	Managed = 1,
//	Private = 2,
//	Memoryless = 3
//}

//[iOS (8,0)]
//[Native]
//public enum MTLResourceOptions : nuint
//{
//	CPUCacheModeDefaultCache = MTLCPUCacheModeDefaultCache << 0,
//	CPUCacheModeWriteCombined = MTLCPUCacheModeWriteCombined << 0,
//	StorageModeShared = MTLStorageModeShared << 4,
//	StorageModeManaged = MTLStorageModeManaged << 4,
//	StorageModePrivate = MTLStorageModePrivate << 4,
//	StorageModeMemoryless = MTLStorageModeMemoryless << 4,
//	HazardTrackingModeUntracked = 1 << 8,
//	OptionCPUCacheModeDefault = CPUCacheModeDefaultCache,
//	OptionCPUCacheModeWriteCombined = CPUCacheModeWriteCombined
//}

//[iOS (8,0)]
//[Native]
//public enum MTLTextureType : nuint
//{
//	MTLTextureType1D = 0,
//	MTLTextureType1DArray = 1,
//	MTLTextureType2D = 2,
//	MTLTextureType2DArray = 3,
//	MTLTextureType2DMultisample = 4,
//	Cube = 5,
//	CubeArray = 6,
//	MTLTextureType3D = 7
//}

//[iOS (9,0)]
//[Native]
//public enum MTLTextureUsage : nuint
//{
//	Unknown = 0,
//	ShaderRead = 1,
//	ShaderWrite = 2,
//	RenderTarget = 4,
//	PixelFormatView = 16
//}

//[iOS (8,0)]
//[Native]
//public enum MTLDataType : nuint
//{
//	None = 0,
//	Struct = 1,
//	Array = 2,
//	Float = 3,
//	Float2 = 4,
//	Float3 = 5,
//	Float4 = 6,
//	Float2x2 = 7,
//	Float2x3 = 8,
//	Float2x4 = 9,
//	Float3x2 = 10,
//	Float3x3 = 11,
//	Float3x4 = 12,
//	Float4x2 = 13,
//	Float4x3 = 14,
//	Float4x4 = 15,
//	Half = 16,
//	Half2 = 17,
//	Half3 = 18,
//	Half4 = 19,
//	Half2x2 = 20,
//	Half2x3 = 21,
//	Half2x4 = 22,
//	Half3x2 = 23,
//	Half3x3 = 24,
//	Half3x4 = 25,
//	Half4x2 = 26,
//	Half4x3 = 27,
//	Half4x4 = 28,
//	Int = 29,
//	Int2 = 30,
//	Int3 = 31,
//	Int4 = 32,
//	UInt = 33,
//	UInt2 = 34,
//	UInt3 = 35,
//	UInt4 = 36,
//	Short = 37,
//	Short2 = 38,
//	Short3 = 39,
//	Short4 = 40,
//	UShort = 41,
//	UShort2 = 42,
//	UShort3 = 43,
//	UShort4 = 44,
//	Char = 45,
//	Char2 = 46,
//	Char3 = 47,
//	Char4 = 48,
//	UChar = 49,
//	UChar2 = 50,
//	UChar3 = 51,
//	UChar4 = 52,
//	Bool = 53,
//	Bool2 = 54,
//	Bool3 = 55,
//	Bool4 = 56,
//	Texture = 58,
//	Sampler = 59,
//	Pointer = 60,
//	R8Unorm = 62,
//	R8Snorm = 63,
//	R16Unorm = 64,
//	R16Snorm = 65,
//	RG8Unorm = 66,
//	RG8Snorm = 67,
//	RG16Unorm = 68,
//	RG16Snorm = 69,
//	RGBA8Unorm = 70,
//	RGBA8Unorm_sRGB = 71,
//	RGBA8Snorm = 72,
//	RGBA16Unorm = 73,
//	RGBA16Snorm = 74,
//	RGB10A2Unorm = 75,
//	RG11B10Float = 76,
//	RGB9E5Float = 77
//}

//[iOS (8,0)]
//[Native]
//public enum MTLArgumentType : nuint
//{
//	Buffer = 0,
//	ThreadgroupMemory = 1,
//	Texture = 2,
//	Sampler = 3,
//	ImageblockData = 16,
//	Imageblock = 17
//}

//[iOS (8,0)]
//[Native]
//public enum MTLArgumentAccess : nuint
//{
//	ReadOnly = 0,
//	ReadWrite = 1,
//	WriteOnly = 2
//}

//[iOS (10,0)]
//[Native]
//public enum MTLPatchType : nuint
//{
//	None = 0,
//	Triangle = 1,
//	Quad = 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLFunctionType : nuint
//{
//	Vertex = 1,
//	Fragment = 2,
//	Kernel = 3
//}

//[iOS (9,0)]
//[Native]
//public enum MTLLanguageVersion : nuint
//{
//	MTLLanguageVersion1_0 = (1 << 16),
//	MTLLanguageVersion1_1 = (1 << 16) + 1,
//	MTLLanguageVersion1_2 = (1 << 16) + 2,
//	MTLLanguageVersion2_0 = (2 << 16)
//}

//[iOS (8,0)]
//[Native]
//public enum MTLLibraryError : nuint
//{
//	Unsupported = 1,
//	Internal = 2,
//	CompileFailure = 3,
//	CompileWarning = 4,
//	FunctionNotFound = 5,
//	FileNotFound = 6
//}

//[TV (9,0), iOS (8,0)]
//[Native]
//public enum MTLFeatureSet : nuint
//{
//	iOS_GPUFamily1_v1 = 0,
//	iOS_GPUFamily2_v1 = 1,
//	iOS_GPUFamily1_v2 = 2,
//	iOS_GPUFamily2_v2 = 3,
//	iOS_GPUFamily3_v1 = 4,
//	iOS_GPUFamily1_v3 = 5,
//	iOS_GPUFamily2_v3 = 6,
//	iOS_GPUFamily3_v2 = 7,
//	iOS_GPUFamily1_v4 = 8,
//	iOS_GPUFamily2_v4 = 9,
//	iOS_GPUFamily3_v3 = 10,
//	iOS_GPUFamily4_v1 = 11,
//	macOS_GPUFamily1_v1 = 10000,
//	OSX_GPUFamily1_v1 = macOS_GPUFamily1_v1,
//	macOS_GPUFamily1_v2 = 10001,
//	OSX_GPUFamily1_v2 = macOS_GPUFamily1_v2,
//	macOS_ReadWriteTextureTier2 = 10002,
//	OSX_ReadWriteTextureTier2 = macOS_ReadWriteTextureTier2,
//	macOS_GPUFamily1_v3 = 10003,
//	tvOS_GPUFamily1_v1 = 30000,
//	TVOS_GPUFamily1_v1 = tvOS_GPUFamily1_v1,
//	tvOS_GPUFamily1_v2 = 30001,
//	tvOS_GPUFamily1_v3 = 30002
//}

//[iOS (8,0)]
//[Native]
//public enum MTLPipelineOption : nuint
//{
//	None = 0,
//	ArgumentInfo = 1 << 0,
//	BufferTypeInfo = 1 << 1
//}

//[iOS (11,0)]
//[Native]
//public enum MTLReadWriteTextureTier : nuint
//{
//	None = 0,
//	MTLReadWriteTextureTier1 = 1,
//	MTLReadWriteTextureTier2 = 2
//}

//[iOS (11,0)]
//[Native]
//public enum MTLArgumentBuffersTier : nuint
//{
//	MTLArgumentBuffersTier1 = 0,
//	MTLArgumentBuffersTier2 = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLSizeAndAlign
//{
//	public nuint size;

//	public nuint align;
//}

//[iOS (9,0)]
//[Native]
//public enum MTLBlitOption : nuint
//{
//	None = 0,
//	DepthFromDepthStencil = 1 << 0,
//	StencilFromDepthStencil = 1 << 1,
//	RowLinearPVRTC = 1 << 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLCommandBufferStatus : nuint
//{
//	NotEnqueued = 0,
//	Enqueued = 1,
//	Committed = 2,
//	Scheduled = 3,
//	Completed = 4,
//	Error = 5
//}

//[iOS (8,0)]
//[Native]
//public enum MTLCommandBufferError : nuint
//{
//	None = 0,
//	Internal = 1,
//	Timeout = 2,
//	PageFault = 3,
//	Blacklisted = 4,
//	NotPermitted = 7,
//	OutOfMemory = 8,
//	InvalidResource = 9,
//	Memoryless = 10,
//	DeviceRemoved = 11
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLDispatchThreadgroupsIndirectArguments
//{
//	public uint[] threadgroupsPerGrid;
//}

//[iOS (8,0)]
//[Native]
//public enum MTLCompareFunction : nuint
//{
//	Never = 0,
//	Less = 1,
//	Equal = 2,
//	LessEqual = 3,
//	Greater = 4,
//	NotEqual = 5,
//	GreaterEqual = 6,
//	Always = 7
//}

//[iOS (8,0)]
//[Native]
//public enum MTLStencilOperation : nuint
//{
//	Keep = 0,
//	Zero = 1,
//	Replace = 2,
//	IncrementClamp = 3,
//	DecrementClamp = 4,
//	Invert = 5,
//	IncrementWrap = 6,
//	DecrementWrap = 7
//}

//[iOS (8,0)]
//[Native]
//public enum MTLLoadAction : nuint
//{
//	DontCare = 0,
//	Load = 1,
//	Clear = 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLStoreAction : nuint
//{
//	DontCare = 0,
//	Store = 1,
//	MultisampleResolve = 2,
//	StoreAndMultisampleResolve = 3,
//	Unknown = 4,
//	CustomSampleDepthStore = 5
//}

//[iOS (11,0)]
//[Native]
//public enum MTLStoreActionOptions : nuint
//{
//	None = 0,
//	CustomSamplePositions = 1 << 0
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLClearColor
//{
//	public double red;

//	public double green;

//	public double blue;

//	public double alpha;
//}

//[iOS (9,0)]
//[Native]
//public enum MTLMultisampleDepthResolveFilter : nuint
//{
//	Sample0 = 0,
//	Min = 1,
//	Max = 2
//}

//[iOS (10,0)]
//[Native]
//public enum MTLAttributeFormat : nuint
//{
//	Invalid = 0,
//	UChar2 = 1,
//	UChar3 = 2,
//	UChar4 = 3,
//	Char2 = 4,
//	Char3 = 5,
//	Char4 = 6,
//	UChar2Normalized = 7,
//	UChar3Normalized = 8,
//	UChar4Normalized = 9,
//	Char2Normalized = 10,
//	Char3Normalized = 11,
//	Char4Normalized = 12,
//	UShort2 = 13,
//	UShort3 = 14,
//	UShort4 = 15,
//	Short2 = 16,
//	Short3 = 17,
//	Short4 = 18,
//	UShort2Normalized = 19,
//	UShort3Normalized = 20,
//	UShort4Normalized = 21,
//	Short2Normalized = 22,
//	Short3Normalized = 23,
//	Short4Normalized = 24,
//	Half2 = 25,
//	Half3 = 26,
//	Half4 = 27,
//	Float = 28,
//	Float2 = 29,
//	Float3 = 30,
//	Float4 = 31,
//	Int = 32,
//	Int2 = 33,
//	Int3 = 34,
//	Int4 = 35,
//	UInt = 36,
//	UInt2 = 37,
//	UInt3 = 38,
//	UInt4 = 39,
//	Int1010102Normalized = 40,
//	UInt1010102Normalized = 41,
//	UChar4Normalized_BGRA = 42,
//	UChar = 45,
//	Char = 46,
//	UCharNormalized = 47,
//	CharNormalized = 48,
//	UShort = 49,
//	Short = 50,
//	UShortNormalized = 51,
//	ShortNormalized = 52,
//	Half = 53
//}

//[iOS (8,0)]
//[Native]
//public enum MTLIndexType : nuint
//{
//	MTLIndexTypeUInt16 = 0,
//	MTLIndexTypeUInt32 = 1
//}

//[iOS (10,0)]
//[Native]
//public enum MTLStepFunction : nuint
//{
//	Constant = 0,
//	PerVertex = 1,
//	PerInstance = 2,
//	PerPatch = 3,
//	PerPatchControlPoint = 4,
//	ThreadPositionInGridX = 5,
//	ThreadPositionInGridY = 6,
//	ThreadPositionInGridXIndexed = 7,
//	ThreadPositionInGridYIndexed = 8
//}

//[iOS (11,0)]
//[Native]
//public enum MTLMutability : nuint
//{
//	Default = 0,
//	Mutable = 1,
//	Immutable = 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLPrimitiveType : nuint
//{
//	Point = 0,
//	Line = 1,
//	LineStrip = 2,
//	Triangle = 3,
//	TriangleStrip = 4
//}

//[iOS (8,0)]
//[Native]
//public enum MTLVisibilityResultMode : nuint
//{
//	Disabled = 0,
//	Boolean = 1,
//	Counting = 2
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLScissorRect
//{
//	public nuint x;

//	public nuint y;

//	public nuint width;

//	public nuint height;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLViewport
//{
//	public double originX;

//	public double originY;

//	public double width;

//	public double height;

//	public double znear;

//	public double zfar;
//}

//[iOS (8,0)]
//[Native]
//public enum MTLCullMode : nuint
//{
//	None = 0,
//	Front = 1,
//	Back = 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLWinding : nuint
//{
//	lockwise = 0,
//	ounterClockwise = 1
//}

//[iOS (9,0)]
//[Native]
//public enum MTLDepthClipMode : nuint
//{
//	ip = 0,
//	amp = 1
//}

//[iOS (8,0)]
//[Native]
//public enum MTLTriangleFillMode : nuint
//{
//	Fill = 0,
//	Lines = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLDrawPrimitivesIndirectArguments
//{
//	public uint vertexCount;

//	public uint instanceCount;

//	public uint vertexStart;

//	public uint baseInstance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLDrawIndexedPrimitivesIndirectArguments
//{
//	public uint indexCount;

//	public uint instanceCount;

//	public uint indexStart;

//	public int baseVertex;

//	public uint baseInstance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLDrawPatchIndirectArguments
//{
//	public uint patchCount;

//	public uint instanceCount;

//	public uint patchStart;

//	public uint baseInstance;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLQuadTessellationFactorsHalf
//{
//	public ushort[] edgeTessellationFactor;

//	public ushort[] insideTessellationFactor;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MTLTriangleTessellationFactorsHalf
//{
//	public ushort[] edgeTessellationFactor;

//	public ushort insideTessellationFactor;
//}

//[iOS (10,0)]
//[Native]
//public enum MTLRenderStages : nuint
//{
//	Vertex = (1 << 0),
//	Fragment = (1 << 1)
//}

//[iOS (8,0)]
//[Native]
//public enum MTLBlendFactor : nuint
//{
//	Zero = 0,
//	One = 1,
//	SourceColor = 2,
//	OneMinusSourceColor = 3,
//	SourceAlpha = 4,
//	OneMinusSourceAlpha = 5,
//	DestinationColor = 6,
//	OneMinusDestinationColor = 7,
//	DestinationAlpha = 8,
//	OneMinusDestinationAlpha = 9,
//	SourceAlphaSaturated = 10,
//	BlendColor = 11,
//	OneMinusBlendColor = 12,
//	BlendAlpha = 13,
//	OneMinusBlendAlpha = 14,
//	Source1Color = 15,
//	OneMinusSource1Color = 16,
//	Source1Alpha = 17,
//	OneMinusSource1Alpha = 18
//}

//[iOS (8,0)]
//[Native]
//public enum MTLBlendOperation : nuint
//{
//	Add = 0,
//	Subtract = 1,
//	ReverseSubtract = 2,
//	Min = 3,
//	Max = 4
//}

//[iOS (8,0)]
//[Native]
//public enum MTLColorWriteMask : nuint
//{
//	None = 0,
//	Red = 1 << 3,
//	Green = 1 << 2,
//	Blue = 1 << 1,
//	Alpha = 1 << 0,
//	All = 15
//}

//[NoiOS]
//[Native]
//public enum MTLPrimitiveTopologyClass : nuint
//{
//	Unspecified = 0,
//	Point = 1,
//	Line = 2,
//	Triangle = 3
//}

//[iOS (10,0)]
//[Native]
//public enum MTLTessellationPartitionMode : nuint
//{
//	Pow2 = 0,
//	Integer = 1,
//	FractionalOdd = 2,
//	FractionalEven = 3
//}

//[iOS (10,0)]
//[Native]
//public enum MTLTessellationFactorStepFunction : nuint
//{
//	Constant = 0,
//	PerPatch = 1,
//	PerInstance = 2,
//	PerPatchAndPerInstance = 3
//}

//[iOS (10,0)]
//[Native]
//public enum MTLTessellationFactorFormat : nuint
//{
//	MTLTessellationFactorFormatHalf = 0
//}

//[iOS (10,0)]
//[Native]
//public enum MTLTessellationControlPointIndexType : nuint
//{
//	None = 0,
//	UInt16 = 1,
//	UInt32 = 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLVertexFormat : nuint
//{
//	Invalid = 0,
//	UChar2 = 1,
//	UChar3 = 2,
//	UChar4 = 3,
//	Char2 = 4,
//	Char3 = 5,
//	Char4 = 6,
//	UChar2Normalized = 7,
//	UChar3Normalized = 8,
//	UChar4Normalized = 9,
//	Char2Normalized = 10,
//	Char3Normalized = 11,
//	Char4Normalized = 12,
//	UShort2 = 13,
//	UShort3 = 14,
//	UShort4 = 15,
//	Short2 = 16,
//	Short3 = 17,
//	Short4 = 18,
//	UShort2Normalized = 19,
//	UShort3Normalized = 20,
//	UShort4Normalized = 21,
//	Short2Normalized = 22,
//	Short3Normalized = 23,
//	Short4Normalized = 24,
//	Half2 = 25,
//	Half3 = 26,
//	Half4 = 27,
//	Float = 28,
//	Float2 = 29,
//	Float3 = 30,
//	Float4 = 31,
//	Int = 32,
//	Int2 = 33,
//	Int3 = 34,
//	Int4 = 35,
//	UInt = 36,
//	UInt2 = 37,
//	UInt3 = 38,
//	UInt4 = 39,
//	Int1010102Normalized = 40,
//	UInt1010102Normalized = 41,
//	UChar4Normalized_BGRA = 42,
//	UChar = 45,
//	Char = 46,
//	UCharNormalized = 47,
//	CharNormalized = 48,
//	UShort = 49,
//	Short = 50,
//	UShortNormalized = 51,
//	ShortNormalized = 52,
//	Half = 53
//}

//[iOS (8,0)]
//[Native]
//public enum MTLVertexStepFunction : nuint
//{
//	Constant = 0,
//	PerVertex = 1,
//	PerInstance = 2,
//	PerPatch = 3,
//	PerPatchControlPoint = 4
//}

//[iOS (8,0)]
//[Native]
//public enum MTLSamplerMinMagFilter : nuint
//{
//	Nearest = 0,
//	Linear = 1
//}

//[iOS (8,0)]
//[Native]
//public enum MTLSamplerMipFilter : nuint
//{
//	NotMipmapped = 0,
//	Nearest = 1,
//	Linear = 2
//}

//[iOS (8,0)]
//[Native]
//public enum MTLSamplerAddressMode : nuint
//{
//	ClampToEdge = 0,
//	MirrorClampToEdge = 1,
//	Repeat = 2,
//	MirrorRepeat = 3,
//	ClampToZero = 4,
//	ClampToBorderColor = 5
//}

//[NoiOS]
//[Native]
//public enum MTLSamplerBorderColor : nuint
//{
//	TransparentBlack = 0,
//	OpaqueBlack = 1,
//	OpaqueWhite = 2
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CATransform3D
//{
//	public nfloat m11;

//	public nfloat m12;

//	public nfloat m13;

//	public nfloat m14;

//	public nfloat m21;

//	public nfloat m22;

//	public nfloat m23;

//	public nfloat m24;

//	public nfloat m31;

//	public nfloat m32;

//	public nfloat m33;

//	public nfloat m34;

//	public nfloat m41;

//	public nfloat m42;

//	public nfloat m43;

//	public nfloat m44;
//}

//public enum CAEdgeAntialiasingMask : uint
//{
//	LeftEdge = 1 << 0,
//	RightEdge = 1 << 1,
//	BottomEdge = 1 << 2,
//	TopEdge = 1 << 3
//}

//[Native]
//public enum CACornerMask : nuint
//{
//	inXMinYCorner = 1 << 0,
//	axXMinYCorner = 1 << 1,
//	inXMaxYCorner = 1 << 2,
//	axXMaxYCorner = 1 << 3
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct _CALayerIvars
//{
//	public int refcount;

//	public uint magic;

//	public unsafe void* layer;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVSMPTETime
//{
//	public short subframes;

//	public short subframeDivisor;

//	public uint counter;

//	public uint type;

//	public uint flags;

//	public short hours;

//	public short minutes;

//	public short seconds;

//	public short frames;
//}

//public enum CVSMPTETimeType : uint
//{
//	kCVSMPTETimeType24 = 0,
//	kCVSMPTETimeType25 = 1,
//	kCVSMPTETimeType30Drop = 2,
//	kCVSMPTETimeType30 = 3,
//	kCVSMPTETimeType2997 = 4,
//	kCVSMPTETimeType2997Drop = 5,
//	kCVSMPTETimeType60 = 6,
//	kCVSMPTETimeType5994 = 7
//}

//public enum CVSMPTETimeFlags : uint
//{
//	Valid = (1 << 0),
//	Running = (1 << 1)
//}

//public enum CVTimeFlags
//{
//	CVTimeIsIndefinite = 1 << 0
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVTime
//{
//	public long timeValue;

//	public int timeScale;

//	public int flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVTimeStamp
//{
//	public uint version;

//	public int videoTimeScale;

//	public long videoTime;

//	public ulong hostTime;

//	public double rateScalar;

//	public long videoRefreshPeriod;

//	public CVSMPTETime smpteTime;

//	public ulong flags;

//	public ulong reserved;
//}

//public enum CVTimeStampFlags : ulong
//{
//	VideoTimeValid = (1 << 0),
//	HostTimeValid = (1 << 1),
//	SMPTETimeValid = (1 << 2),
//	VideoRefreshPeriodValid = (1 << 3),
//	RateScalarValid = (1 << 4),
//	TopField = (1 << 16),
//	BottomField = (1 << 17),
//	VideoHostTimeValid = (VideoTimeValid | HostTimeValid),
//	IsInterlaced = (TopField | BottomField)
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCVReturn
//{
//	Success = 0,
//	First = -6660,
//	Error = First,
//	InvalidArgument = -6661,
//	AllocationFailed = -6662,
//	Unsupported = -6663,
//	InvalidDisplay = -6670,
//	DisplayLinkAlreadyRunning = -6671,
//	DisplayLinkNotRunning = -6672,
//	DisplayLinkCallbacksNotSet = -6673,
//	InvalidPixelFormat = -6680,
//	InvalidSize = -6681,
//	InvalidPixelBufferAttributes = -6682,
//	PixelBufferNotOpenGLCompatible = -6683,
//	PixelBufferNotMetalCompatible = -6684,
//	WouldExceedAllocationThreshold = -6689,
//	PoolAllocationFailed = -6690,
//	InvalidPoolAttributes = -6691,
//	Retry = -6692,
//	Last = -6699
//}

//public enum CVAttachmentMode : uint
//{
//	NotPropagate = 0,
//	Propagate = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCVPixelFormatType_ : uint
//{
//	kCVPixelFormatType_1Monochrome = 1,
//	kCVPixelFormatType_2Indexed = 2,
//	kCVPixelFormatType_4Indexed = 4,
//	kCVPixelFormatType_8Indexed = 8,
//	kCVPixelFormatType_1IndexedGray_WhiteIsZero = 33,
//	kCVPixelFormatType_2IndexedGray_WhiteIsZero = 34,
//	kCVPixelFormatType_4IndexedGray_WhiteIsZero = 36,
//	kCVPixelFormatType_8IndexedGray_WhiteIsZero = 40,
//	kCVPixelFormatType_16BE555 = 16,
//	kCVPixelFormatType_16LE555 = 1278555445,
//	kCVPixelFormatType_16LE5551 = 892679473,
//	kCVPixelFormatType_16BE565 = 1110783541,
//	kCVPixelFormatType_16LE565 = 1278555701,
//	kCVPixelFormatType_24RGB = 24,
//	kCVPixelFormatType_24BGR = 842285639,
//	kCVPixelFormatType_32ARGB = 32,
//	kCVPixelFormatType_32BGRA = 1111970369,
//	kCVPixelFormatType_32ABGR = 1094862674,
//	kCVPixelFormatType_32RGBA = 1380401729,
//	kCVPixelFormatType_64ARGB = 1647719521,
//	kCVPixelFormatType_48RGB = 1647589490,
//	kCVPixelFormatType_32AlphaGray = 1647522401,
//	kCVPixelFormatType_16Gray = 1647392359,
//	kCVPixelFormatType_30RGB = 1378955371,
//	kCVPixelFormatType_422YpCbCr8 = 846624121,
//	kCVPixelFormatType_4444YpCbCrA8 = 1983131704,
//	kCVPixelFormatType_4444YpCbCrA8R = 1916022840,
//	kCVPixelFormatType_4444AYpCbCr8 = 2033463352,
//	kCVPixelFormatType_4444AYpCbCr16 = 2033463606,
//	kCVPixelFormatType_444YpCbCr8 = 1983066168,
//	kCVPixelFormatType_422YpCbCr16 = 1983000886,
//	kCVPixelFormatType_422YpCbCr10 = 1983000880,
//	kCVPixelFormatType_444YpCbCr10 = 1983131952,
//	kCVPixelFormatType_420YpCbCr8Planar = 2033463856,
//	kCVPixelFormatType_420YpCbCr8PlanarFullRange = 1714696752,
//	kCVPixelFormatType_422YpCbCr_4A_8BiPlanar = 1630697081,
//	kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange = 875704438,
//	kCVPixelFormatType_420YpCbCr8BiPlanarFullRange = 875704422,
//	kCVPixelFormatType_422YpCbCr8_yuvs = 2037741171,
//	kCVPixelFormatType_422YpCbCr8FullRange = 2037741158,
//	OneComponent8 = 1278226488,
//	TwoComponent8 = 843264056,
//	kCVPixelFormatType_30RGBLEPackedWideGamut = 1999843442,
//	ARGB2101010LEPacked = 1815162994,
//	OneComponent16Half = 1278226536,
//	OneComponent32Float = 1278226534,
//	TwoComponent16Half = 843264104,
//	TwoComponent32Float = 843264102,
//	kCVPixelFormatType_64RGBAHalf = 1380411457,
//	kCVPixelFormatType_128RGBAFloat = 1380410945,
//	kCVPixelFormatType_14Bayer_GRBG = 1735549492,
//	kCVPixelFormatType_14Bayer_RGGB = 1919379252,
//	kCVPixelFormatType_14Bayer_BGGR = 1650943796,
//	kCVPixelFormatType_14Bayer_GBRG = 1734505012,
//	DisparityFloat16 = 1751411059,
//	DisparityFloat32 = 1717856627,
//	DepthFloat16 = 1751410032,
//	DepthFloat32 = 1717855600,
//	kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange = 2016686640,
//	kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange = 2016686642,
//	kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange = 2016687156,
//	kCVPixelFormatType_420YpCbCr10BiPlanarFullRange = 2019963440,
//	kCVPixelFormatType_422YpCbCr10BiPlanarFullRange = 2019963442,
//	kCVPixelFormatType_444YpCbCr10BiPlanarFullRange = 2019963956
//}

//public enum CVPixelBufferLockFlags : ulong
//{
//	CVPixelBufferLock_ReadOnly = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVPlanarComponentInfo
//{
//	public int offset;

//	public uint rowBytes;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVPlanarPixelBufferInfo
//{
//	public CVPlanarComponentInfo[] componentInfo;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVPlanarPixelBufferInfo_YCbCrPlanar
//{
//	public CVPlanarComponentInfo componentInfoY;

//	public CVPlanarComponentInfo componentInfoCb;

//	public CVPlanarComponentInfo componentInfoCr;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVPlanarPixelBufferInfo_YCbCrBiPlanar
//{
//	public CVPlanarComponentInfo componentInfoY;

//	public CVPlanarComponentInfo componentInfoCbCr;
//}

//public enum CVPixelBufferPoolFlushFlags : ulong
//{
//	CVPixelBufferPoolFlushExcessBuffers = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CVFillExtendedPixelsCallBackData
//{
//	public nint version;

//	public unsafe CVFillExtendedPixelsCallBack* fillCallBack;

//	public unsafe void* refCon;
//}

//public enum CGImageMetadataType
//{
//	Invalid = -1,
//	Default = 0,
//	String = 1,
//	ArrayUnordered = 2,
//	ArrayOrdered = 3,
//	AlternateArray = 4,
//	AlternateText = 5,
//	Structure = 6
//}

//public enum CGImageMetadataErrors
//{
//	Unknown = 0,
//	UnsupportedFormat = 1,
//	BadArgument = 2,
//	ConflictingArguments = 3,
//	PrefixConflict = 4
//}

//public enum CGImageSourceStatus
//{
//	UnexpectedEOF = -5,
//	InvalidData = -4,
//	UnknownType = -3,
//	ReadingHeader = -2,
//	Incomplete = -1,
//	Complete = 0
//}

//public enum CGImagePropertyOrientation : uint
//{
//	Up = 1,
//	UpMirrored,
//	Down,
//	DownMirrored,
//	LeftMirrored,
//	Right,
//	RightMirrored,
//	Left
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct 
//{
//	[FieldOffset (0)]
//	public nfloat[] vec;

//	[FieldOffset (0)]
//	public unsafe nfloat* ptr;
//}

//[Native]
//public enum CIRenderDestinationAlphaMode : nuint
//{
//	None = 0,
//	Premultiplied = 1,
//	Unpremultiplied = 2
//}

//[Native]
//public enum CIQRCodeErrorCorrectionLevel : nint
//{
//	L = 76,
//	M = 77,
//	Q = 81,
//	H = 72
//}

//[Native]
//public enum CIDataMatrixCodeECCVersion : nint
//{
//	CIDataMatrixCodeECCVersion000 = 0,
//	CIDataMatrixCodeECCVersion050 = 50,
//	CIDataMatrixCodeECCVersion080 = 80,
//	CIDataMatrixCodeECCVersion100 = 100,
//	CIDataMatrixCodeECCVersion140 = 140,
//	CIDataMatrixCodeECCVersion200 = 200
//}

//public enum  : uint
//{
//	CTFontClassMaskShift = 28
//}

//public enum CTFontSymbolicTraits : uint
//{
//	TraitItalic = (1 << 0),
//	TraitBold = (1 << 1),
//	TraitExpanded = (1 << 5),
//	TraitCondensed = (1 << 6),
//	TraitMonoSpace = (1 << 10),
//	TraitVertical = (1 << 11),
//	TraitUIOptimized = (1 << 12),
//	TraitColorGlyphs = (1 << 13),
//	TraitComposite = (1 << 14),
//	TraitClassMask = (15 << kCTFontClassMaskShift),
//	ItalicTrait = TraitItalic,
//	BoldTrait = TraitBold,
//	ExpandedTrait = TraitExpanded,
//	CondensedTrait = TraitCondensed,
//	MonoSpaceTrait = TraitMonoSpace,
//	VerticalTrait = TraitVertical,
//	UIOptimizedTrait = TraitUIOptimized,
//	ColorGlyphsTrait = TraitColorGlyphs,
//	CompositeTrait = TraitComposite,
//	ClassMaskTrait = TraitClassMask
//}

//public enum CTFontStylisticClass : uint
//{
//	ClassUnknown = (0 << kCTFontClassMaskShift),
//	ClassOldStyleSerifs = (1 << kCTFontClassMaskShift),
//	ClassTransitionalSerifs = (2 << kCTFontClassMaskShift),
//	ClassModernSerifs = (3 << kCTFontClassMaskShift),
//	ClassClarendonSerifs = (4 << kCTFontClassMaskShift),
//	ClassSlabSerifs = (5 << kCTFontClassMaskShift),
//	ClassFreeformSerifs = (7 << kCTFontClassMaskShift),
//	ClassSansSerif = (8 << kCTFontClassMaskShift),
//	ClassOrnamentals = (9 << kCTFontClassMaskShift),
//	ClassScripts = (10 << kCTFontClassMaskShift),
//	ClassSymbolic = (12 << kCTFontClassMaskShift),
//	UnknownClass = ClassUnknown,
//	OldStyleSerifsClass = ClassOldStyleSerifs,
//	TransitionalSerifsClass = ClassTransitionalSerifs,
//	ModernSerifsClass = ClassModernSerifs,
//	ClarendonSerifsClass = ClassClarendonSerifs,
//	SlabSerifsClass = ClassSlabSerifs,
//	FreeformSerifsClass = ClassFreeformSerifs,
//	SansSerifClass = ClassSansSerif,
//	OrnamentalsClass = ClassOrnamentals,
//	ScriptsClass = ClassScripts,
//	SymbolicClass = ClassSymbolic
//}

//public enum CTFontOrientation : uint
//{
//	OrientationDefault = 0,
//	OrientationHorizontal = 1,
//	OrientationVertical = 2,
//	DefaultOrientation = OrientationDefault,
//	HorizontalOrientation = OrientationHorizontal,
//	VerticalOrientation = OrientationVertical
//}

//public enum CTFontFormat : uint
//{
//	Unrecognized = 0,
//	OpenTypePostScript = 1,
//	OpenTypeTrueType = 2,
//	TrueType = 3,
//	PostScript = 4,
//	Bitmap = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCTFontPriority : uint
//{
//	System = 10000,
//	Network = 20000,
//	Computer = 30000,
//	User = 40000,
//	Dynamic = 50000,
//	Process = 60000
//}

//public enum CTFontDescriptorMatchingState : uint
//{
//	DidBegin,
//	DidFinish,
//	WillBeginQuerying,
//	Stalled,
//	WillBeginDownloading,
//	Downloading,
//	DidFinishDownloading,
//	DidMatch,
//	DidFailWithError
//}

//[Native]
//public enum CTFontOptions : nuint
//{
//	Default = 0,
//	PreventAutoActivation = 1 << 0,
//	PreferSystemFont = 1 << 2
//}

//public enum CTFontUIFontType : uint
//{
//	UIFontNone = (uint)-1,
//	UIFontUser = 0,
//	UIFontUserFixedPitch = 1,
//	UIFontSystem = 2,
//	UIFontEmphasizedSystem = 3,
//	UIFontSmallSystem = 4,
//	UIFontSmallEmphasizedSystem = 5,
//	UIFontMiniSystem = 6,
//	UIFontMiniEmphasizedSystem = 7,
//	UIFontViews = 8,
//	UIFontApplication = 9,
//	UIFontLabel = 10,
//	UIFontMenuTitle = 11,
//	UIFontMenuItem = 12,
//	UIFontMenuItemMark = 13,
//	UIFontMenuItemCmdKey = 14,
//	UIFontWindowTitle = 15,
//	UIFontPushButton = 16,
//	UIFontUtilityWindowTitle = 17,
//	UIFontAlertHeader = 18,
//	UIFontSystemDetail = 19,
//	UIFontEmphasizedSystemDetail = 20,
//	UIFontToolbar = 21,
//	UIFontSmallToolbar = 22,
//	UIFontMessage = 23,
//	UIFontPalette = 24,
//	UIFontToolTip = 25,
//	UIFontControlContent = 26,
//	NoFontType = UIFontNone,
//	UserFontType = UIFontUser,
//	UserFixedPitchFontType = UIFontUserFixedPitch,
//	SystemFontType = UIFontSystem,
//	EmphasizedSystemFontType = UIFontEmphasizedSystem,
//	SmallSystemFontType = UIFontSmallSystem,
//	SmallEmphasizedSystemFontType = UIFontSmallEmphasizedSystem,
//	MiniSystemFontType = UIFontMiniSystem,
//	MiniEmphasizedSystemFontType = UIFontMiniEmphasizedSystem,
//	ViewsFontType = UIFontViews,
//	ApplicationFontType = UIFontApplication,
//	LabelFontType = UIFontLabel,
//	MenuTitleFontType = UIFontMenuTitle,
//	MenuItemFontType = UIFontMenuItem,
//	MenuItemMarkFontType = UIFontMenuItemMark,
//	MenuItemCmdKeyFontType = UIFontMenuItemCmdKey,
//	WindowTitleFontType = UIFontWindowTitle,
//	PushButtonFontType = UIFontPushButton,
//	UtilityWindowTitleFontType = UIFontUtilityWindowTitle,
//	AlertHeaderFontType = UIFontAlertHeader,
//	SystemDetailFontType = UIFontSystemDetail,
//	EmphasizedSystemDetailFontType = UIFontEmphasizedSystemDetail,
//	ToolbarFontType = UIFontToolbar,
//	SmallToolbarFontType = UIFontSmallToolbar,
//	MessageFontType = UIFontMessage,
//	PaletteFontType = UIFontPalette,
//	ToolTipFontType = UIFontToolTip,
//	ControlContentFontType = UIFontControlContent
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCTFontTable : uint
//{
//	Base = 1111577413,
//	Cbdt = 1128416340,
//	Cblc = 1128418371,
//	Cff = 1128678944,
//	Cff2 = 1128678962,
//	Colr = 1129270354,
//	Cpal = 1129333068,
//	Dsig = 1146308935,
//	Ebdt = 1161970772,
//	Eblc = 1161972803,
//	Ebsc = 1161974595,
//	Gdef = 1195656518,
//	Gpos = 1196445523,
//	Gsub = 1196643650,
//	Hvar = 1213612370,
//	Jstf = 1246975046,
//	Ltsh = 1280594760,
//	Math = 1296127048,
//	Merg = 1296388679,
//	Mvar = 1297498450,
//	Os2 = 1330851634,
//	Pclt = 1346587732,
//	Stat = 1398030676,
//	Svg = 1398163232,
//	Vdmx = 1447316824,
//	Vorg = 1448038983,
//	Vvar = 1448493394,
//	Zapf = 1516335206,
//	Acnt = 1633906292,
//	Ankr = 1634626418,
//	Avar = 1635148146,
//	Bdat = 1650745716,
//	Bhed = 1651008868,
//	Bloc = 1651273571,
//	Bsln = 1651731566,
//	Cidg = 1667851367,
//	Cmap = 1668112752,
//	Cvar = 1668702578,
//	Cvt = 1668707360,
//	Fdsc = 1717859171,
//	Feat = 1717920116,
//	Fmtx = 1718449272,
//	Fond = 1718578788,
//	Fpgm = 1718642541,
//	Fvar = 1719034226,
//	Gasp = 1734439792,
//	Glyf = 1735162214,
//	Gvar = 1735811442,
//	Hdmx = 1751412088,
//	Head = 1751474532,
//	Hhea = 1751672161,
//	Hmtx = 1752003704,
//	Hsty = 1752396921,
//	Just = 1786082164,
//	Kern = 1801810542,
//	Kerx = 1801810552,
//	Lcar = 1818452338,
//	Loca = 1819239265,
//	Ltag = 1819566439,
//	Maxp = 1835104368,
//	Meta = 1835365473,
//	Mort = 1836020340,
//	Morx = 1836020344,
//	Name = 1851878757,
//	Opbd = 1869636196,
//	Post = 1886352244,
//	Prep = 1886545264,
//	Prop = 1886547824,
//	Sbit = 1935829364,
//	Sbix = 1935829368,
//	Trak = 1953653099,
//	Vhea = 1986553185,
//	Vmtx = 1986884728,
//	Xref = 2020762982
//}

//public enum CTFontTableOptions : uint
//{
//	NoOptions = 0,
//	ExcludeSynthetic = (1 << 0)
//}

//[Mac (10,7)]
//public enum CTFontCollectionCopyOptions : uint
//{
//	DefaultOptions = 0,
//	Unique = (1 << 0),
//	StandardSort = (1 << 1)
//}

//[Native]
//public enum CTFontManagerError : nint
//{
//	FileNotFound = 101,
//	InsufficientPermissions = 102,
//	UnrecognizedFormat = 103,
//	InvalidFontData = 104,
//	AlreadyRegistered = 105,
//	NotRegistered = 201,
//	InUse = 202,
//	SystemRequired = 203
//}

//public enum CTFontManagerScope : uint
//{
//	None = 0,
//	Process = 1,
//	User = 2,
//	Session = 3
//}

//public enum CTFontManagerAutoActivationSetting : uint
//{
//	Default = 0,
//	Disabled = 1,
//	Enabled = 2,
//	PromptUser = 3
//}

//public enum CTFrameProgression : uint
//{
//	TopToBottom = 0,
//	RightToLeft = 1,
//	LeftToRight = 2
//}

//public enum CTFramePathFillRule : uint
//{
//	EvenOdd = 0,
//	WindingNumber = 1
//}

//[Native]
//public enum CTLineBoundsOptions : nuint
//{
//	ExcludeTypographicLeading = 1 << 0,
//	ExcludeTypographicShifts = 1 << 1,
//	UseHangingPunctuation = 1 << 2,
//	UseGlyphPathBounds = 1 << 3,
//	UseOpticalBounds = 1 << 4,
//	IncludeLanguageExtents = 1 << 5
//}

//public enum CTLineTruncationType : uint
//{
//	Start = 0,
//	End = 1,
//	Middle = 2
//}

//public enum CTCharacterCollection : ushort
//{
//	CharacterCollectionIdentityMapping = 0,
//	CharacterCollectionAdobeCNS1 = 1,
//	CharacterCollectionAdobeGB1 = 2,
//	CharacterCollectionAdobeJapan1 = 3,
//	CharacterCollectionAdobeJapan2 = 4,
//	CharacterCollectionAdobeKorea1 = 5,
//	IdentityMappingCharacterCollection = CharacterCollectionIdentityMapping,
//	AdobeCNS1CharacterCollection = CharacterCollectionAdobeCNS1,
//	AdobeGB1CharacterCollection = CharacterCollectionAdobeGB1,
//	AdobeJapan1CharacterCollection = CharacterCollectionAdobeJapan1,
//	AdobeJapan2CharacterCollection = CharacterCollectionAdobeJapan2,
//	AdobeKorea1CharacterCollection = CharacterCollectionAdobeKorea1
//}

//public enum CTTextAlignment : byte
//{
//	TextAlignmentLeft = 0,
//	TextAlignmentRight = 1,
//	TextAlignmentCenter = 2,
//	TextAlignmentJustified = 3,
//	TextAlignmentNatural = 4,
//	LeftTextAlignment = TextAlignmentLeft,
//	RightTextAlignment = TextAlignmentRight,
//	CenterTextAlignment = TextAlignmentCenter,
//	JustifiedTextAlignment = TextAlignmentJustified,
//	NaturalTextAlignment = TextAlignmentNatural
//}

//public enum CTLineBreakMode : byte
//{
//	WordWrapping = 0,
//	CharWrapping = 1,
//	Clipping = 2,
//	TruncatingHead = 3,
//	TruncatingTail = 4,
//	TruncatingMiddle = 5
//}

//public enum CTWritingDirection : sbyte
//{
//	Natural = -1,
//	LeftToRight = 0,
//	RightToLeft = 1
//}

//public enum CTParagraphStyleSpecifier : uint
//{
//	Alignment = 0,
//	FirstLineHeadIndent = 1,
//	HeadIndent = 2,
//	TailIndent = 3,
//	TabStops = 4,
//	DefaultTabInterval = 5,
//	LineBreakMode = 6,
//	LineHeightMultiple = 7,
//	MaximumLineHeight = 8,
//	MinimumLineHeight = 9,
//	LineSpacing = 10,
//	ParagraphSpacing = 11,
//	ParagraphSpacingBefore = 12,
//	BaseWritingDirection = 13,
//	MaximumLineSpacing = 14,
//	MinimumLineSpacing = 15,
//	LineSpacingAdjustment = 16,
//	LineBoundsOptions = 17,
//	Count
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CTParagraphStyleSetting
//{
//	public CTParagraphStyleSpecifier spec;

//	public nuint valueSize;

//	public unsafe void* value;
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//public enum CTRubyAlignment : byte
//{
//	Invalid = (byte)-1,
//	Auto = 0,
//	Start = 1,
//	Center = 2,
//	End = 3,
//	DistributeLetter = 4,
//	DistributeSpace = 5,
//	LineEdge = 6
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//public enum CTRubyOverhang : byte
//{
//	Invalid = (byte)-1,
//	Auto = 0,
//	Start = 1,
//	End = 2,
//	None = 3
//}

//[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
//public enum CTRubyPosition : byte
//{
//	Before = 0,
//	After = 1,
//	InterCharacter = 2,
//	Inline = 3,
//	Count
//}

//public enum CTRunStatus : uint
//{
//	NoStatus = 0,
//	RightToLeft = (1 << 0),
//	NonMonotonic = (1 << 1),
//	HasNonIdentityMatrix = (1 << 2)
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct CTRunDelegateCallbacks
//{
//	public nint version;

//	public unsafe CTRunDelegateDeallocateCallback* dealloc;

//	public unsafe CTRunDelegateGetAscentCallback* getAscent;

//	public unsafe CTRunDelegateGetDescentCallback* getDescent;

//	public unsafe CTRunDelegateGetWidthCallback* getWidth;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCTRunDelegate : uint
//{
//	Version1 = 1,
//	CurrentVersion = Version1
//}

//public enum CTUnderlineStyle
//{
//	None = 0,
//	Single = 1,
//	Thick = 2,
//	Double = 9
//}

//public enum CTUnderlineStyleModifiers
//{
//	Solid = 0,
//	Dot = 256,
//	Dash = 512,
//	DashDot = 768,
//	DashDotDot = 1024
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCTWritingDirection : uint
//{
//	Embedding = (0 << 1),
//	Override = (1 << 1)
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k
//{
//	AllTypographicFeaturesType = 0,
//	LigaturesType = 1,
//	CursiveConnectionType = 2,
//	LetterCaseType = 3,
//	VerticalSubstitutionType = 4,
//	LinguisticRearrangementType = 5,
//	NumberSpacingType = 6,
//	SmartSwashType = 8,
//	DiacriticsType = 9,
//	VerticalPositionType = 10,
//	FractionsType = 11,
//	OverlappingCharactersType = 13,
//	TypographicExtrasType = 14,
//	MathematicalExtrasType = 15,
//	OrnamentSetsType = 16,
//	CharacterAlternativesType = 17,
//	DesignComplexityType = 18,
//	StyleOptionsType = 19,
//	CharacterShapeType = 20,
//	NumberCaseType = 21,
//	TextSpacingType = 22,
//	TransliterationType = 23,
//	AnnotationType = 24,
//	KanaSpacingType = 25,
//	IdeographicSpacingType = 26,
//	UnicodeDecompositionType = 27,
//	RubyKanaType = 28,
//	CJKSymbolAlternativesType = 29,
//	IdeographicAlternativesType = 30,
//	CJKVerticalRomanPlacementType = 31,
//	ItalicCJKRomanType = 32,
//	CaseSensitiveLayoutType = 33,
//	AlternateKanaType = 34,
//	StylisticAlternativesType = 35,
//	ContextualAlternatesType = 36,
//	LowerCaseType = 37,
//	UpperCaseType = 38,
//	LanguageTagType = 39,
//	CJKRomanSpacingType = 103,
//	LastFeatureType = -1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kAllTypeFeaturesO : uint
//{
//	nSelector = 0,
//	ffSelector = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	RequiredLigaturesOnSelector = 0,
//	RequiredLigaturesOffSelector = 1,
//	CommonLigaturesOnSelector = 2,
//	CommonLigaturesOffSelector = 3,
//	RareLigaturesOnSelector = 4,
//	RareLigaturesOffSelector = 5,
//	LogosOnSelector = 6,
//	LogosOffSelector = 7,
//	RebusPicturesOnSelector = 8,
//	RebusPicturesOffSelector = 9,
//	DiphthongLigaturesOnSelector = 10,
//	DiphthongLigaturesOffSelector = 11,
//	SquaredLigaturesOnSelector = 12,
//	SquaredLigaturesOffSelector = 13,
//	AbbrevSquaredLigaturesOnSelector = 14,
//	AbbrevSquaredLigaturesOffSelector = 15,
//	SymbolLigaturesOnSelector = 16,
//	SymbolLigaturesOffSelector = 17,
//	ContextualLigaturesOnSelector = 18,
//	ContextualLigaturesOffSelector = 19,
//	HistoricalLigaturesOnSelector = 20,
//	HistoricalLigaturesOffSelector = 21
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	UnconnectedSelector = 0,
//	PartiallyConnectedSelector = 1,
//	CursiveSelector = 2
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	UpperAndLowerCaseSelector = 0,
//	AllCapsSelector = 1,
//	AllLowerCaseSelector = 2,
//	SmallCapsSelector = 3,
//	InitialCapsSelector = 4,
//	InitialCapsAndSmallCapsSelector = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kSubstituteVerticalFormsO : uint
//{
//	nSelector = 0,
//	ffSelector = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kLinguisticRearrangementO : uint
//{
//	nSelector = 0,
//	ffSelector = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	MonospacedNumbersSelector = 0,
//	ProportionalNumbersSelector = 1,
//	ThirdWidthNumbersSelector = 2,
//	QuarterWidthNumbersSelector = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	WordInitialSwashesOnSelector = 0,
//	WordInitialSwashesOffSelector = 1,
//	WordFinalSwashesOnSelector = 2,
//	WordFinalSwashesOffSelector = 3,
//	LineInitialSwashesOnSelector = 4,
//	LineInitialSwashesOffSelector = 5,
//	LineFinalSwashesOnSelector = 6,
//	LineFinalSwashesOffSelector = 7,
//	NonFinalSwashesOnSelector = 8,
//	NonFinalSwashesOffSelector = 9
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	ShowDiacriticsSelector = 0,
//	HideDiacriticsSelector = 1,
//	DecomposeDiacriticsSelector = 2
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NormalPositionSelector = 0,
//	SuperiorsSelector = 1,
//	InferiorsSelector = 2,
//	OrdinalsSelector = 3,
//	ScientificInferiorsSelector = 4
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoFractionsSelector = 0,
//	VerticalFractionsSelector = 1,
//	DiagonalFractionsSelector = 2
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kPreventOverlapO : uint
//{
//	nSelector = 0,
//	ffSelector = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	HyphensToEmDashOnSelector = 0,
//	HyphensToEmDashOffSelector = 1,
//	HyphenToEnDashOnSelector = 2,
//	HyphenToEnDashOffSelector = 3,
//	SlashedZeroOnSelector = 4,
//	SlashedZeroOffSelector = 5,
//	FormInterrobangOnSelector = 6,
//	FormInterrobangOffSelector = 7,
//	SmartQuotesOnSelector = 8,
//	SmartQuotesOffSelector = 9,
//	PeriodsToEllipsisOnSelector = 10,
//	PeriodsToEllipsisOffSelector = 11
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	HyphenToMinusOnSelector = 0,
//	HyphenToMinusOffSelector = 1,
//	AsteriskToMultiplyOnSelector = 2,
//	AsteriskToMultiplyOffSelector = 3,
//	SlashToDivideOnSelector = 4,
//	SlashToDivideOffSelector = 5,
//	InequalityLigaturesOnSelector = 6,
//	InequalityLigaturesOffSelector = 7,
//	ExponentsOnSelector = 8,
//	ExponentsOffSelector = 9,
//	MathematicalGreekOnSelector = 10,
//	MathematicalGreekOffSelector = 11
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoOrnamentsSelector = 0,
//	DingbatsSelector = 1,
//	PiCharactersSelector = 2,
//	FleuronsSelector = 3,
//	DecorativeBordersSelector = 4,
//	InternationalSymbolsSelector = 5,
//	MathSymbolsSelector = 6
//}

//public enum  : uint
//{
//	NoAlternatesSelector = 0
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kDesignLevel : uint
//{
//	kDesignLevel1Selector = 0,
//	kDesignLevel2Selector = 1,
//	kDesignLevel3Selector = 2,
//	kDesignLevel4Selector = 3,
//	kDesignLevel5Selector = 4
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoStyleOptionsSelector = 0,
//	DisplayTextSelector = 1,
//	EngravedTextSelector = 2,
//	IlluminatedCapsSelector = 3,
//	TitlingCapsSelector = 4,
//	TallCapsSelector = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	TraditionalCharactersSelector = 0,
//	SimplifiedCharactersSelector = 1,
//	JIS1978CharactersSelector = 2,
//	JIS1983CharactersSelector = 3,
//	JIS1990CharactersSelector = 4,
//	TraditionalAltOneSelector = 5,
//	TraditionalAltTwoSelector = 6,
//	TraditionalAltThreeSelector = 7,
//	TraditionalAltFourSelector = 8,
//	TraditionalAltFiveSelector = 9,
//	ExpertCharactersSelector = 10,
//	JIS2004CharactersSelector = 11,
//	HojoCharactersSelector = 12,
//	NLCCharactersSelector = 13,
//	TraditionalNamesCharactersSelector = 14
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	LowerCaseNumbersSelector = 0,
//	UpperCaseNumbersSelector = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	ProportionalTextSelector = 0,
//	MonospacedTextSelector = 1,
//	HalfWidthTextSelector = 2,
//	ThirdWidthTextSelector = 3,
//	QuarterWidthTextSelector = 4,
//	AltProportionalTextSelector = 5,
//	AltHalfWidthTextSelector = 6
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoTransliterationSelector = 0,
//	HanjaToHangulSelector = 1,
//	HiraganaToKatakanaSelector = 2,
//	KatakanaToHiraganaSelector = 3,
//	KanaToRomanizationSelector = 4,
//	RomanizationToHiraganaSelector = 5,
//	RomanizationToKatakanaSelector = 6,
//	HanjaToHangulAltOneSelector = 7,
//	HanjaToHangulAltTwoSelector = 8,
//	HanjaToHangulAltThreeSelector = 9
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoAnnotationSelector = 0,
//	BoxAnnotationSelector = 1,
//	RoundedBoxAnnotationSelector = 2,
//	CircleAnnotationSelector = 3,
//	InvertedCircleAnnotationSelector = 4,
//	ParenthesisAnnotationSelector = 5,
//	PeriodAnnotationSelector = 6,
//	RomanNumeralAnnotationSelector = 7,
//	DiamondAnnotationSelector = 8,
//	InvertedBoxAnnotationSelector = 9,
//	InvertedRoundedBoxAnnotationSelector = 10
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	FullWidthKanaSelector = 0,
//	ProportionalKanaSelector = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	FullWidthIdeographsSelector = 0,
//	ProportionalIdeographsSelector = 1,
//	HalfWidthIdeographsSelector = 2
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	CanonicalCompositionOnSelector = 0,
//	CanonicalCompositionOffSelector = 1,
//	CompatibilityCompositionOnSelector = 2,
//	CompatibilityCompositionOffSelector = 3,
//	TranscodingCompositionOnSelector = 4,
//	TranscodingCompositionOffSelector = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoRubyKanaSelector = 0,
//	RubyKanaSelector = 1,
//	RubyKanaOnSelector = 2,
//	RubyKanaOffSelector = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoCJKSymbolAlternativesSelector = 0,
//	CJKSymbolAltOneSelector = 1,
//	CJKSymbolAltTwoSelector = 2,
//	CJKSymbolAltThreeSelector = 3,
//	CJKSymbolAltFourSelector = 4,
//	CJKSymbolAltFiveSelector = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoIdeographicAlternativesSelector = 0,
//	IdeographicAltOneSelector = 1,
//	IdeographicAltTwoSelector = 2,
//	IdeographicAltThreeSelector = 3,
//	IdeographicAltFourSelector = 4,
//	IdeographicAltFiveSelector = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCJKVerticalRoman : uint
//{
//	CenteredSelector = 0,
//	HBaselineSelector = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoCJKItalicRomanSelector = 0,
//	CJKItalicRomanSelector = 1,
//	CJKItalicRomanOnSelector = 2,
//	CJKItalicRomanOffSelector = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kCaseSensitive : uint
//{
//	LayoutOnSelector = 0,
//	LayoutOffSelector = 1,
//	SpacingOnSelector = 2,
//	SpacingOffSelector = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kAlternate : uint
//{
//	HorizKanaOnSelector = 0,
//	HorizKanaOffSelector = 1,
//	VertKanaOnSelector = 2,
//	VertKanaOffSelector = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	NoStylisticAlternatesSelector = 0,
//	StylisticAltOneOnSelector = 2,
//	StylisticAltOneOffSelector = 3,
//	StylisticAltTwoOnSelector = 4,
//	StylisticAltTwoOffSelector = 5,
//	StylisticAltThreeOnSelector = 6,
//	StylisticAltThreeOffSelector = 7,
//	StylisticAltFourOnSelector = 8,
//	StylisticAltFourOffSelector = 9,
//	StylisticAltFiveOnSelector = 10,
//	StylisticAltFiveOffSelector = 11,
//	StylisticAltSixOnSelector = 12,
//	StylisticAltSixOffSelector = 13,
//	StylisticAltSevenOnSelector = 14,
//	StylisticAltSevenOffSelector = 15,
//	StylisticAltEightOnSelector = 16,
//	StylisticAltEightOffSelector = 17,
//	StylisticAltNineOnSelector = 18,
//	StylisticAltNineOffSelector = 19,
//	StylisticAltTenOnSelector = 20,
//	StylisticAltTenOffSelector = 21,
//	StylisticAltElevenOnSelector = 22,
//	StylisticAltElevenOffSelector = 23,
//	StylisticAltTwelveOnSelector = 24,
//	StylisticAltTwelveOffSelector = 25,
//	StylisticAltThirteenOnSelector = 26,
//	StylisticAltThirteenOffSelector = 27,
//	StylisticAltFourteenOnSelector = 28,
//	StylisticAltFourteenOffSelector = 29,
//	StylisticAltFifteenOnSelector = 30,
//	StylisticAltFifteenOffSelector = 31,
//	StylisticAltSixteenOnSelector = 32,
//	StylisticAltSixteenOffSelector = 33,
//	StylisticAltSeventeenOnSelector = 34,
//	StylisticAltSeventeenOffSelector = 35,
//	StylisticAltEighteenOnSelector = 36,
//	StylisticAltEighteenOffSelector = 37,
//	StylisticAltNineteenOnSelector = 38,
//	StylisticAltNineteenOffSelector = 39,
//	StylisticAltTwentyOnSelector = 40,
//	StylisticAltTwentyOffSelector = 41
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	ContextualAlternatesOnSelector = 0,
//	ContextualAlternatesOffSelector = 1,
//	SwashAlternatesOnSelector = 2,
//	SwashAlternatesOffSelector = 3,
//	ContextualSwashAlternatesOnSelector = 4,
//	ContextualSwashAlternatesOffSelector = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	DefaultLowerCaseSelector = 0,
//	LowerCaseSmallCapsSelector = 1,
//	LowerCasePetiteCapsSelector = 2
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	DefaultUpperCaseSelector = 0,
//	UpperCaseSmallCapsSelector = 1,
//	UpperCasePetiteCapsSelector = 2
//}

//[Verify (InferredFromMemberPrefix)]
//public enum k : uint
//{
//	HalfWidthCJKRomanSelector = 0,
//	ProportionalCJKRomanSelector = 1,
//	DefaultCJKRomanSelector = 2,
//	FullWidthCJKRomanSelector = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kSFNTLookup : uint
//{
//	SimpleArray = 0,
//	SegmentSingle = 2,
//	SegmentArray = 4,
//	SingleTable = 6,
//	TrimmedArray = 8,
//	Vector = 10
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupBinarySearchHeader
//{
//	public ushort unitSize;

//	public ushort nUnits;

//	public ushort searchRange;

//	public ushort entrySelector;

//	public ushort rangeShift;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupArrayHeader
//{
//	public ushort[] lookupValues;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupTrimmedArrayHeader
//{
//	public ushort firstGlyph;

//	public ushort count;

//	public ushort[] valueArray;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupVectorHeader
//{
//	public ushort valueSize;

//	public ushort firstGlyph;

//	public ushort count;

//	public byte[] values;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupSegment
//{
//	public ushort lastGlyph;

//	public ushort firstGlyph;

//	public ushort[] value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupSegmentHeader
//{
//	public SFNTLookupBinarySearchHeader binSearch;

//	public SFNTLookupSegment[] segments;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupSingle
//{
//	public ushort glyph;

//	public ushort[] value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct SFNTLookupSingleHeader
//{
//	public SFNTLookupBinarySearchHeader binSearch;

//	public SFNTLookupSingle[] entries;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct SFNTLookupFormatSpecificHeader
//{
//	[FieldOffset (0)]
//	public SFNTLookupArrayHeader theArray;

//	[FieldOffset (0)]
//	public SFNTLookupSegmentHeader segment;

//	[FieldOffset (0)]
//	public SFNTLookupSingleHeader single;

//	[FieldOffset (0)]
//	public SFNTLookupTrimmedArrayHeader trimmedArray;

//	[FieldOffset (0)]
//	public SFNTLookupVectorHeader vector;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STXClassTable
//{
//	public ushort format;

//	public SFNTLookupFormatSpecificHeader fsHeader;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kST : uint
//{
//	ClassEndOfText = 0,
//	ClassOutOfBounds = 1,
//	ClassDeletedGlyph = 2,
//	ClassEndOfLine = 3,
//	SetMark = 32768,
//	NoAdvance = 16384,
//	MarkEnd = 8192,
//	LigActionMask = 16383,
//	RearrVerbMask = 15
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STHeader
//{
//	public byte filler;

//	public byte nClasses;

//	public ushort classTableOffset;

//	public ushort stateArrayOffset;

//	public ushort entryTableOffset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STClassTable
//{
//	public ushort firstGlyph;

//	public ushort nGlyphs;

//	public byte[] classes;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STEntryZero
//{
//	public ushort newState;

//	public ushort flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STEntryOne
//{
//	public ushort newState;

//	public ushort flags;

//	public ushort offset1;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STEntryTwo
//{
//	public ushort newState;

//	public ushort flags;

//	public ushort offset1;

//	public ushort offset2;
//}

//public enum  : uint
//{
//	STXHasLigAction = 8192
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STXHeader
//{
//	public uint nClasses;

//	public uint classTableOffset;

//	public uint stateArrayOffset;

//	public uint entryTableOffset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STXEntryZero
//{
//	public ushort newState;

//	public ushort flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STXEntryOne
//{
//	public ushort newState;

//	public ushort flags;

//	public ushort index1;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct STXEntryTwo
//{
//	public ushort newState;

//	public ushort flags;

//	public ushort index1;

//	public ushort index2;
//}

//public enum  : uint
//{
//	STKCrossStreamReset = 8192
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kLCAR : uint
//{
//	Tag = 1818452338,
//	CurrentVersion = 65536,
//	LinearFormat = 0,
//	CtlPointFormat = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct LcarCaretClassEntry
//{
//	public ushort count;

//	public ushort[] partials;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct LcarCaretTable
//{
//	public int version;

//	public ushort format;

//	public SFNTLookupTable lookup;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kJUST : uint
//{
//	Tag = 1786082164,
//	CurrentVersion = 65536,
//	StandardFormat = 0,
//	noGlyphcode = 65535,
//	pcDecompositionAction = 0,
//	pcUnconditionalAddAction = 1,
//	pcConditionalAddAction = 2,
//	pcGlyphStretchAction = 3,
//	pcDuctilityAction = 4,
//	pcGlyphRepeatAddAction = 5
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kJUST : uint
//{
//	KashidaPriority = 0,
//	SpacePriority = 1,
//	LetterPriority = 2,
//	NullPriority = 3,
//	PriorityCount = 4
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kJUST : uint
//{
//	OverridePriority = 32768,
//	OverrideLimits = 16384,
//	OverrideUnlimited = 8192,
//	Unlimited = 4096,
//	PriorityMask = 3
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustPCDecompositionAction
//{
//	public int lowerLimit;

//	public int upperLimit;

//	public ushort order;

//	public ushort count;

//	public ushort[] glyphs;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustPCConditionalAddAction
//{
//	public int substThreshold;

//	public ushort addGlyph;

//	public ushort substGlyph;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustPCDuctilityAction
//{
//	public uint ductilityAxis;

//	public int minimumLimit;

//	public int noStretchValue;

//	public int maximumLimit;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustPCGlyphRepeatAddAction
//{
//	public ushort flags;

//	public ushort glyph;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustPCActionSubrecord
//{
//	public ushort theClass;

//	public ushort theType;

//	public uint length;

//	public uint data;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustPCAction
//{
//	public uint actionCount;

//	public JustPCActionSubrecord[] actions;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustWidthDeltaEntry
//{
//	public uint justClass;

//	public int beforeGrowLimit;

//	public int beforeShrinkLimit;

//	public int afterGrowLimit;

//	public int afterShrinkLimit;

//	public ushort growFlags;

//	public ushort shrinkFlags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustWidthDeltaGroup
//{
//	public uint count;

//	public JustWidthDeltaEntry[] entries;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustPostcompTable
//{
//	public SFNTLookupTable lookupTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustDirectionTable
//{
//	public ushort justClass;

//	public ushort widthDeltaClusters;

//	public ushort postcomp;

//	public SFNTLookupTable lookup;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct JustTable
//{
//	public int version;

//	public ushort format;

//	public ushort horizHeaderOffset;

//	public ushort vertHeaderOffset;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kOPBD : uint
//{
//	Tag = 1869636196,
//	CurrentVersion = 65536,
//	DistanceFormat = 0,
//	ControlPointFormat = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct OpbdSideValues
//{
//	public short leftSideShift;

//	public short topSideShift;

//	public short rightSideShift;

//	public short bottomSideShift;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct OpbdTable
//{
//	public int version;

//	public ushort format;

//	public SFNTLookupTable lookupTable;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kMORT
//{
//	Tag = 1836020340,
//	CurrentVersion = 65536,
//	CoverVertical = 32768,
//	CoverDescending = 16384,
//	CoverIgnoreVertical = 8192,
//	CoverTypeMask = 15,
//	RearrangementType = 0,
//	ContextualType = 1,
//	LigatureType = 2,
//	SwashType = 4,
//	InsertionType = 5,
//	LigLastAction = (int)-2147483648,
//	LigStoreLigature = 1073741824,
//	LigFormOffsetMask = 1073741823,
//	LigFormOffsetShift = 2,
//	raNoAction = 0,
//	raxA = 1,
//	raDx = 2,
//	raDxA = 3,
//	raxAB = 4,
//	raxBA = 5,
//	raCDx = 6,
//	raDCx = 7,
//	raCDxA = 8,
//	raDCxA = 9,
//	raDxAB = 10,
//	raDxBA = 11,
//	raCDxAB = 12,
//	raCDxBA = 13,
//	raDCxAB = 14,
//	raDCxBA = 15,
//	DoInsertionsBefore = 128,
//	IsSplitVowelPiece = 64,
//	InsertionsCountMask = 63,
//	CurrInsertKashidaLike = 8192,
//	MarkInsertKashidaLike = 4096,
//	CurrInsertBefore = 2048,
//	MarkInsertBefore = 1024,
//	MarkJustTableCountMask = 16256,
//	MarkJustTableCountShift = 7,
//	CurrJustTableCountMask = 127,
//	CurrJustTableCountShift = 0,
//	CurrInsertCountMask = 992,
//	CurrInsertCountShift = 5,
//	MarkInsertCountMask = 31,
//	MarkInsertCountShift = 0
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortRearrangementSubtable
//{
//	public STHeader header;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortContextualSubtable
//{
//	public STHeader header;

//	public ushort substitutionTableOffset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortLigatureSubtable
//{
//	public STHeader header;

//	public ushort ligatureActionTableOffset;

//	public ushort componentTableOffset;

//	public ushort ligatureTableOffset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortSwashSubtable
//{
//	public SFNTLookupTable lookup;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortInsertionSubtable
//{
//	public STHeader header;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct MortSpecificSubtable
//{
//	[FieldOffset (0)]
//	public MortRearrangementSubtable rearrangement;

//	[FieldOffset (0)]
//	public MortContextualSubtable contextual;

//	[FieldOffset (0)]
//	public MortLigatureSubtable ligature;

//	[FieldOffset (0)]
//	public MortSwashSubtable swash;

//	[FieldOffset (0)]
//	public MortInsertionSubtable insertion;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortSubtable
//{
//	public ushort length;

//	public ushort coverage;

//	public uint flags;

//	public MortSpecificSubtable u;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortFeatureEntry
//{
//	public ushort featureType;

//	public ushort featureSelector;

//	public uint enableFlags;

//	public uint disableFlags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortChain
//{
//	public uint defaultFlags;

//	public uint length;

//	public ushort nFeatures;

//	public ushort nSubtables;

//	public MortFeatureEntry[] featureEntries;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MortTable
//{
//	public int version;

//	public uint nChains;

//	public MortChain[] chains;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kMORX
//{
//	Tag = 1836020344,
//	CurrentVersion = 131072,
//	CoverVertical = (int)-2147483648,
//	CoverDescending = 1073741824,
//	CoverIgnoreVertical = 536870912,
//	CoverLogicalOrder = 268435456,
//	CoverTypeMask = 255
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MorxRearrangementSubtable
//{
//	public STXHeader header;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MorxContextualSubtable
//{
//	public STXHeader header;

//	public uint substitutionTableOffset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MorxLigatureSubtable
//{
//	public STXHeader header;

//	public uint ligatureActionTableOffset;

//	public uint componentTableOffset;

//	public uint ligatureTableOffset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MorxInsertionSubtable
//{
//	public STXHeader header;

//	public uint insertionGlyphTableOffset;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct MorxSpecificSubtable
//{
//	[FieldOffset (0)]
//	public MorxRearrangementSubtable rearrangement;

//	[FieldOffset (0)]
//	public MorxContextualSubtable contextual;

//	[FieldOffset (0)]
//	public MorxLigatureSubtable ligature;

//	[FieldOffset (0)]
//	public MortSwashSubtable swash;

//	[FieldOffset (0)]
//	public MorxInsertionSubtable insertion;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MorxSubtable
//{
//	public uint length;

//	public uint coverage;

//	public uint flags;

//	public MorxSpecificSubtable u;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MorxChain
//{
//	public uint defaultFlags;

//	public uint length;

//	public uint nFeatures;

//	public uint nSubtables;

//	public MortFeatureEntry[] featureEntries;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct MorxTable
//{
//	public int version;

//	public uint nChains;

//	public MorxChain[] chains;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kPROP : uint
//{
//	Tag = 1886547824,
//	CurrentVersion = 196608,
//	PairOffsetShift = 8,
//	PairOffsetSign = 7,
//	IsFloaterMask = 32768,
//	CanHangLTMask = 16384,
//	CanHangRBMask = 8192,
//	UseRLPairMask = 4096,
//	PairOffsetMask = 3840,
//	RightConnectMask = 128,
//	ZeroReserved = 96,
//	DirectionMask = 31
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kPROP : uint
//{
//	LDirectionClass = 0,
//	RDirectionClass = 1,
//	ALDirectionClass = 2,
//	ENDirectionClass = 3,
//	ESDirectionClass = 4,
//	ETDirectionClass = 5,
//	ANDirectionClass = 6,
//	CSDirectionClass = 7,
//	PSDirectionClass = 8,
//	SDirectionClass = 9,
//	WSDirectionClass = 10,
//	ONDirectionClass = 11,
//	SENDirectionClass = 12,
//	LREDirectionClass = 13,
//	LRODirectionClass = 14,
//	RLEDirectionClass = 15,
//	RLODirectionClass = 16,
//	PDFDirectionClass = 17,
//	NSMDirectionClass = 18,
//	BNDirectionClass = 19,
//	NumDirectionClasses = 20
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct PropTable
//{
//	public int version;

//	public ushort format;

//	public ushort defaultProps;

//	public SFNTLookupTable lookup;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct PropLookupSegment
//{
//	public ushort lastGlyph;

//	public ushort firstGlyph;

//	public ushort value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct PropLookupSingle
//{
//	public ushort glyph;

//	public ushort props;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kTRAK : uint
//{
//	Tag = 1953653099,
//	CurrentVersion = 65536,
//	UniformFormat = 0
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct TrakTableEntry
//{
//	public int track;

//	public ushort nameTableIndex;

//	public ushort sizesOffset;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct TrakTableData
//{
//	public ushort nTracks;

//	public ushort nSizes;

//	public uint sizeTableOffset;

//	public TrakTableEntry[] trakTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct TrakTable
//{
//	public int version;

//	public ushort format;

//	public ushort horizOffset;

//	public ushort vertOffset;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kKERN : uint
//{
//	Tag = 1801810542,
//	CurrentVersion = 65536,
//	Vertical = 32768,
//	ResetCrossStream = 32768,
//	CrossStream = 16384,
//	Variation = 8192,
//	UnusedBits = 7936,
//	FormatMask = 255
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kKERN : uint
//{
//	OrderedList = 0,
//	StateTable = 1,
//	SimpleArray = 2,
//	IndexArray = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kKERN : uint
//{
//	LineStart = 1,
//	LineEndKerning = 2,
//	NoCrossKerning = 4,
//	NotesRequested = 8,
//	NoStakeNote = 1,
//	CrossStreamResetNote = 2,
//	NotApplied = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernVersion0Header
//{
//	public ushort version;

//	public ushort nTables;

//	public ushort[] firstSubtable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernTableHeader
//{
//	public int version;

//	public int nTables;

//	public ushort[] firstSubtable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernKerningPair
//{
//	public ushort left;

//	public ushort right;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernOrderedListEntry
//{
//	public KernKerningPair pair;

//	public short value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernOrderedListHeader
//{
//	public ushort nPairs;

//	public ushort searchRange;

//	public ushort entrySelector;

//	public ushort rangeShift;

//	public ushort[] table;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernStateHeader
//{
//	public STHeader header;

//	public ushort valueTable;

//	public byte[] firstTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernStateEntry
//{
//	public ushort newState;

//	public ushort flags;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernOffsetTable
//{
//	public ushort firstGlyph;

//	public ushort nGlyphs;

//	public ushort[] offsetTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernSimpleArrayHeader
//{
//	public ushort rowWidth;

//	public ushort leftOffsetTable;

//	public ushort rightOffsetTable;

//	public ushort theArray;

//	public ushort[] firstTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernIndexArrayHeader
//{
//	public ushort glyphCount;

//	public byte kernValueCount;

//	public byte leftClassCount;

//	public byte rightClassCount;

//	public byte flags;

//	public short[] kernValue;

//	public byte[] leftClass;

//	public byte[] rightClass;

//	public byte[] kernIndex;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct KernFormatSpecificHeader
//{
//	[FieldOffset (0)]
//	public KernOrderedListHeader orderedList;

//	[FieldOffset (0)]
//	public KernStateHeader stateTable;

//	[FieldOffset (0)]
//	public KernSimpleArrayHeader simpleArray;

//	[FieldOffset (0)]
//	public KernIndexArrayHeader indexArray;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernVersion0SubtableHeader
//{
//	public ushort version;

//	public ushort length;

//	public ushort stInfo;

//	public KernFormatSpecificHeader fsHeader;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KernSubtableHeader
//{
//	public int length;

//	public ushort stInfo;

//	public short tupleIndex;

//	public KernFormatSpecificHeader fsHeader;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kKERX
//{
//	Tag = 1801810552,
//	CurrentVersion = 131072,
//	Vertical = (int)-2147483648,
//	ResetCrossStream = 32768,
//	CrossStream = 1073741824,
//	Variation = 536870912,
//	Descending = 268435456,
//	UnusedBits = 268435200,
//	FormatMask = 255
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kKERX : uint
//{
//	OrderedList = 0,
//	StateTable = 1,
//	SimpleArray = 2,
//	ControlPoint = 4,
//	IndexArray = 6
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kKERX : uint
//{
//	LineStart = 1,
//	LineEndKerning = 2,
//	NoCrossKerning = 4,
//	NotesRequested = 8,
//	NoStakeNote = 1,
//	CrossStreamResetNote = 2,
//	NotApplied = 1
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kKERX : uint
//{
//	ActionTypeMask = (3 << 30),
//	ActionTypeControlPoints = (0 << 30),
//	ActionTypeAnchorPoints = (1 << 30),
//	ActionTypeCoordinates = (2 << 30),
//	UnusedFlags = 1056964608,
//	ActionOffsetMask = 16777215
//}

//public enum  : uint
//{
//	KERXValuesAreLong = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxTableHeader
//{
//	public int version;

//	public uint nTables;

//	public uint[] firstSubtable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxKerningPair
//{
//	public ushort left;

//	public ushort right;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxOrderedListEntry
//{
//	public KerxKerningPair pair;

//	public short value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxOrderedListHeader
//{
//	public uint nPairs;

//	public uint searchRange;

//	public uint entrySelector;

//	public uint rangeShift;

//	public uint[] table;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxStateHeader
//{
//	public STXHeader header;

//	public uint valueTable;

//	public byte[] firstTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxStateEntry
//{
//	public ushort newState;

//	public ushort flags;

//	public ushort valueIndex;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxControlPointHeader
//{
//	public STXHeader header;

//	public uint flags;

//	public byte[] firstTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxControlPointEntry
//{
//	public ushort newState;

//	public ushort flags;

//	public ushort actionIndex;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxControlPointAction
//{
//	public ushort markControlPoint;

//	public ushort currControlPoint;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxAnchorPointAction
//{
//	public ushort markAnchorPoint;

//	public ushort currAnchorPoint;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxCoordinateAction
//{
//	public ushort markX;

//	public ushort markY;

//	public ushort currX;

//	public ushort currY;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxSimpleArrayHeader
//{
//	public uint rowWidth;

//	public uint leftOffsetTable;

//	public uint rightOffsetTable;

//	public uint theArray;

//	public uint[] firstTable;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxIndexArrayHeader
//{
//	public uint flags;

//	public ushort rowCount;

//	public ushort columnCount;

//	public uint rowIndexTableOffset;

//	public uint columnIndexTableOffset;

//	public uint kerningArrayOffset;

//	public uint kerningVectorOffset;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct KerxFormatSpecificHeader
//{
//	[FieldOffset (0)]
//	public KerxOrderedListHeader orderedList;

//	[FieldOffset (0)]
//	public KerxStateHeader stateTable;

//	[FieldOffset (0)]
//	public KerxSimpleArrayHeader simpleArray;

//	[FieldOffset (0)]
//	public KerxIndexArrayHeader indexArray;

//	[FieldOffset (0)]
//	public KerxControlPointHeader controlPoint;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct KerxSubtableHeader
//{
//	public uint length;

//	public uint stInfo;

//	public uint tupleCount;

//	public KerxFormatSpecificHeader fsHeader;
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kBSLN : uint
//{
//	Tag = 1651731566,
//	CurrentVersion = 65536,
//	DistanceFormatNoMap = 0,
//	DistanceFormatWithMap = 1,
//	ControlPointFormatNoMap = 2,
//	ControlPointFormatWithMap = 3
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kBSLN : uint
//{
//	RomanBaseline = 0,
//	IdeographicCenterBaseline = 1,
//	IdeographicLowBaseline = 2,
//	HangingBaseline = 3,
//	MathBaseline = 4,
//	IdeographicHighBaseline = 5,
//	LastBaseline = 31,
//	NumBaselineClasses = LastBaseline + 1,
//	NoBaseline = 255,
//	NoBaselineOverride = 255
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct BslnFormat0Part
//{
//	public short[] deltas;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct BslnFormat1Part
//{
//	public short[] deltas;

//	public SFNTLookupTable mappingData;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct BslnFormat2Part
//{
//	public ushort stdGlyph;

//	public short[] ctlPoints;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct BslnFormat3Part
//{
//	public ushort stdGlyph;

//	public short[] ctlPoints;

//	public SFNTLookupTable mappingData;
//}

//[StructLayout (LayoutKind.Explicit)]
//public struct BslnFormatUnion
//{
//	[FieldOffset (0)]
//	public BslnFormat0Part fmt0Part;

//	[FieldOffset (0)]
//	public BslnFormat1Part fmt1Part;

//	[FieldOffset (0)]
//	public BslnFormat2Part fmt2Part;

//	[FieldOffset (0)]
//	public BslnFormat3Part fmt3Part;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct BslnTable
//{
//	public int version;

//	public ushort format;

//	public ushort defaultBaseline;

//	public BslnFormatUnion parts;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ALMXHeader
//{
//	public int Version;

//	public ushort Flags;

//	public ushort NMasters;

//	public ushort FirstGlyph;

//	public ushort LastGlyph;

//	public SFNTLookupTable lookup;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ALMXGlyphEntry
//{
//	public short GlyphIndexOffset;

//	public short HorizontalAdvance;

//	public short XOffsetToHOrigin;

//	public short VerticalAdvance;

//	public short YOffsetToVOrigin;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ROTAHeader
//{
//	public int Version;

//	public ushort Flags;

//	public ushort NMasters;

//	public ushort FirstGlyph;

//	public ushort LastGlyph;

//	public SFNTLookupTable lookup;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct ROTAGlyphEntry
//{
//	public short GlyphIndexOffset;

//	public short HBaselineOffset;

//	public short VBaselineOffset;
//}

//public enum  : uint
//{
//	ANKRCurrentVersion = 0
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct AnchorPoint
//{
//	public short x;

//	public short y;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct AnchorPointTable
//{
//	public uint nPoints;

//	public AnchorPoint[] points;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct AnkrTable
//{
//	public ushort version;

//	public ushort flags;

//	public uint lookupTableOffset;

//	public uint anchorPointTableOffset;
//}

//public enum  : uint
//{
//	LTAGCurrentVersion = 1
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct LtagStringRange
//{
//	public ushort offset;

//	public ushort length;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct LtagTable
//{
//	public uint version;

//	public uint flags;

//	public uint numTags;

//	public LtagStringRange[] tagRange;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntDirectoryEntry
//{
//	public uint tableTag;

//	public uint checkSum;

//	public uint offset;

//	public uint length;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntDirectory
//{
//	public uint format;

//	public ushort numOffsets;

//	public ushort searchRange;

//	public ushort entrySelector;

//	public ushort rangeShift;

//	public sfntDirectoryEntry[] table;
//}

//public enum  : uint
//{
//	sizeof_sfntDirectory = 12
//}

//public enum  : uint
//{
//	cmapFontTableTag = 1668112752
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFont : uint
//{
//	UnicodePlatform = 0,
//	MacintoshPlatform = 1,
//	ReservedPlatform = 2,
//	MicrosoftPlatform = 3,
//	CustomPlatform = 4
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFont : uint
//{
//	UnicodeDefaultSemantics = 0,
//	UnicodeV1_1Semantics = 1,
//	ISO10646_1993Semantics = 2,
//	UnicodeV2_0BMPOnlySemantics = 3,
//	UnicodeV2_0FullCoverageSemantics = 4,
//	UnicodeV4_0VariationSequenceSemantics = 5,
//	Unicode_FullRepertoire = 6
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFont : uint
//{
//	RomanScript = 0,
//	JapaneseScript = 1,
//	TraditionalChineseScript = 2,
//	ChineseScript = TraditionalChineseScript,
//	KoreanScript = 3,
//	ArabicScript = 4,
//	HebrewScript = 5,
//	GreekScript = 6,
//	CyrillicScript = 7,
//	Russian = CyrillicScript,
//	RSymbolScript = 8,
//	DevanagariScript = 9,
//	GurmukhiScript = 10,
//	GujaratiScript = 11,
//	OriyaScript = 12,
//	BengaliScript = 13,
//	TamilScript = 14,
//	TeluguScript = 15,
//	KannadaScript = 16,
//	MalayalamScript = 17,
//	SinhaleseScript = 18,
//	BurmeseScript = 19,
//	KhmerScript = 20,
//	ThaiScript = 21,
//	LaotianScript = 22,
//	GeorgianScript = 23,
//	ArmenianScript = 24,
//	SimpleChineseScript = 25,
//	TibetanScript = 26,
//	MongolianScript = 27,
//	GeezScript = 28,
//	EthiopicScript = GeezScript,
//	AmharicScript = GeezScript,
//	SlavicScript = 29,
//	EastEuropeanRomanScript = SlavicScript,
//	VietnameseScript = 30,
//	ExtendedArabicScript = 31,
//	SindhiScript = ExtendedArabicScript,
//	UninterpretedScript = 32
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFontMicrosoft : uint
//{
//	SymbolScript = 0,
//	StandardScript = 1,
//	UCS4Script = 10
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFontCustom : uint
//{
//	kFontCustom8BitScript = 0,
//	kFontCustom816BitScript = 1,
//	kFontCustom16BitScript = 2
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFont : uint
//{
//	EnglishLanguage = 0,
//	FrenchLanguage = 1,
//	GermanLanguage = 2,
//	ItalianLanguage = 3,
//	DutchLanguage = 4,
//	SwedishLanguage = 5,
//	SpanishLanguage = 6,
//	DanishLanguage = 7,
//	PortugueseLanguage = 8,
//	NorwegianLanguage = 9,
//	HebrewLanguage = 10,
//	JapaneseLanguage = 11,
//	ArabicLanguage = 12,
//	FinnishLanguage = 13,
//	GreekLanguage = 14,
//	IcelandicLanguage = 15,
//	MalteseLanguage = 16,
//	TurkishLanguage = 17,
//	CroatianLanguage = 18,
//	TradChineseLanguage = 19,
//	UrduLanguage = 20,
//	HindiLanguage = 21,
//	ThaiLanguage = 22,
//	KoreanLanguage = 23,
//	LithuanianLanguage = 24,
//	PolishLanguage = 25,
//	HungarianLanguage = 26,
//	EstonianLanguage = 27,
//	LettishLanguage = 28,
//	LatvianLanguage = LettishLanguage,
//	SaamiskLanguage = 29,
//	LappishLanguage = SaamiskLanguage,
//	FaeroeseLanguage = 30,
//	FarsiLanguage = 31,
//	PersianLanguage = FarsiLanguage,
//	RussianLanguage = 32,
//	SimpChineseLanguage = 33,
//	FlemishLanguage = 34,
//	IrishLanguage = 35,
//	AlbanianLanguage = 36,
//	RomanianLanguage = 37,
//	CzechLanguage = 38,
//	SlovakLanguage = 39,
//	SlovenianLanguage = 40,
//	YiddishLanguage = 41,
//	SerbianLanguage = 42,
//	MacedonianLanguage = 43,
//	BulgarianLanguage = 44,
//	UkrainianLanguage = 45,
//	ByelorussianLanguage = 46,
//	UzbekLanguage = 47,
//	KazakhLanguage = 48,
//	AzerbaijaniLanguage = 49,
//	AzerbaijanArLanguage = 50,
//	ArmenianLanguage = 51,
//	GeorgianLanguage = 52,
//	MoldavianLanguage = 53,
//	KirghizLanguage = 54,
//	TajikiLanguage = 55,
//	TurkmenLanguage = 56,
//	MongolianLanguage = 57,
//	MongolianCyrLanguage = 58,
//	PashtoLanguage = 59,
//	KurdishLanguage = 60,
//	KashmiriLanguage = 61,
//	SindhiLanguage = 62,
//	TibetanLanguage = 63,
//	NepaliLanguage = 64,
//	SanskritLanguage = 65,
//	MarathiLanguage = 66,
//	BengaliLanguage = 67,
//	AssameseLanguage = 68,
//	GujaratiLanguage = 69,
//	PunjabiLanguage = 70,
//	OriyaLanguage = 71,
//	MalayalamLanguage = 72,
//	KannadaLanguage = 73,
//	TamilLanguage = 74,
//	TeluguLanguage = 75,
//	SinhaleseLanguage = 76,
//	BurmeseLanguage = 77,
//	KhmerLanguage = 78,
//	LaoLanguage = 79,
//	VietnameseLanguage = 80,
//	IndonesianLanguage = 81,
//	TagalogLanguage = 82,
//	MalayRomanLanguage = 83,
//	MalayArabicLanguage = 84,
//	AmharicLanguage = 85,
//	TigrinyaLanguage = 86,
//	GallaLanguage = 87,
//	OromoLanguage = GallaLanguage,
//	SomaliLanguage = 88,
//	SwahiliLanguage = 89,
//	RuandaLanguage = 90,
//	RundiLanguage = 91,
//	ChewaLanguage = 92,
//	MalagasyLanguage = 93,
//	EsperantoLanguage = 94,
//	WelshLanguage = 128,
//	BasqueLanguage = 129,
//	CatalanLanguage = 130,
//	LatinLanguage = 131,
//	QuechuaLanguage = 132,
//	GuaraniLanguage = 133,
//	AymaraLanguage = 134,
//	TatarLanguage = 135,
//	UighurLanguage = 136,
//	DzongkhaLanguage = 137,
//	JavaneseRomLanguage = 138,
//	SundaneseRomLanguage = 139
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFontNo : uint
//{
//	PlatformCode = (uint)(~0),
//	ScriptCode = (uint)(~0),
//	LanguageCode = (uint)(~0)
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntCMapSubHeader
//{
//	public ushort format;

//	public ushort length;

//	public ushort languageID;
//}

//public enum  : uint
//{
//	sizeof_sfntCMapSubHeader = 6
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntCMapExtendedSubHeader
//{
//	public ushort format;

//	public ushort reserved;

//	public uint length;

//	public uint language;
//}

//public enum  : uint
//{
//	sizeof_sfntCMapExtendedSubHeader = 12
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntCMapEncoding
//{
//	public ushort platformID;

//	public ushort scriptID;

//	public uint offset;
//}

//public enum  : uint
//{
//	sizeof_sfntCMapEncoding = 8
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntCMapHeader
//{
//	public ushort version;

//	public ushort numTables;

//	public sfntCMapEncoding[] encoding;
//}

//public enum  : uint
//{
//	sizeof_sfntCMapHeader = 4
//}

//public enum  : uint
//{
//	nameFontTableTag = 1851878757
//}

//[Verify (InferredFromMemberPrefix)]
//public enum kFont : uint
//{
//	CopyrightName = 0,
//	FamilyName = 1,
//	StyleName = 2,
//	UniqueName = 3,
//	FullName = 4,
//	VersionName = 5,
//	PostscriptName = 6,
//	TrademarkName = 7,
//	ManufacturerName = 8,
//	DesignerName = 9,
//	DescriptionName = 10,
//	VendorURLName = 11,
//	DesignerURLName = 12,
//	LicenseDescriptionName = 13,
//	LicenseInfoURLName = 14,
//	PreferredFamilyName = 16,
//	PreferredSubfamilyName = 17,
//	MacCompatibleFullName = 18,
//	SampleTextName = 19,
//	PostScriptCIDName = 20,
//	LastReservedName = 255
//}

//public enum  : uint
//{
//	FontNoNameCode = (uint)(~0)
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntNameRecord
//{
//	public ushort platformID;

//	public ushort scriptID;

//	public ushort languageID;

//	public ushort nameID;

//	public ushort length;

//	public ushort offset;
//}

//public enum  : uint
//{
//	sizeof_sfntNameRecord = 12
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntNameHeader
//{
//	public ushort format;

//	public ushort count;

//	public ushort stringOffset;

//	public sfntNameRecord[] rec;
//}

//public enum  : uint
//{
//	sizeof_sfntNameHeader = 6
//}

//public enum  : uint
//{
//	variationFontTableTag = 1719034226
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntVariationAxis
//{
//	public uint axisTag;

//	public int minValue;

//	public int defaultValue;

//	public int maxValue;

//	public short flags;

//	public short nameID;
//}

//public enum  : uint
//{
//	sizeof_sfntVariationAxis = 20
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntInstance
//{
//	public short nameID;

//	public short flags;

//	public int[] coord;
//}

//public enum  : uint
//{
//	sizeof_sfntInstance = 4
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntVariationHeader
//{
//	public int version;

//	public ushort offsetToData;

//	public ushort countSizePairs;

//	public ushort axisCount;

//	public ushort axisSize;

//	public ushort instanceCount;

//	public ushort instanceSize;

//	public sfntVariationAxis[] axis;

//	public sfntInstance[] instance;
//}

//public enum  : uint
//{
//	sizeof_sfntVariationHeader = 16
//}

//public enum  : uint
//{
//	descriptorFontTableTag = 1717859171
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntFontDescriptor
//{
//	public uint name;

//	public int value;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntDescriptorHeader
//{
//	public int version;

//	public int descriptorCount;

//	public sfntFontDescriptor[] descriptor;
//}

//public enum  : uint
//{
//	sizeof_sfntDescriptorHeader = 8
//}

//public enum  : uint
//{
//	featureFontTableTag = 1717920116
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntFeatureName
//{
//	public ushort featureType;

//	public ushort settingCount;

//	public int offsetToSettings;

//	public ushort featureFlags;

//	public short nameID;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntFontFeatureSetting
//{
//	public ushort setting;

//	public short nameID;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntFontRunFeature
//{
//	public ushort featureType;

//	public ushort setting;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct sfntFeatureHeader
//{
//	public int version;

//	public ushort featureNameCount;

//	public ushort featureSetCount;

//	public int reserved;

//	public sfntFeatureName[] names;

//	public sfntFontFeatureSetting[] settings;

//	public sfntFontRunFeature[] runs;
//}

//public enum  : uint
//{
//	os2FontTableTag = 1330851634
//}

//public enum  : uint
//{
//	nonGlyphID = 65535
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct FontVariation
//{
//	public uint name;

//	public int value;
//}

//[Native]
//public enum NSFileProviderItemCapabilities : nuint
//{
//	Reading = 1 << 0,
//	Writing = 1 << 1,
//	Reparenting = 1 << 2,
//	Renaming = 1 << 3,
//	Trashing = 1 << 4,
//	Deleting = 1 << 5,
//	AddingSubItems = Writing,
//	ContentEnumerating = Reading,
//	All = Reading | Writing | Reparenting | Renaming | Trashing | Deleting
//}

//[NoWatch, NoTV, NoMac, iOS (11,0)]
//[Native]
//public enum NSFileProviderErrorCode : nint
//{
//	NotAuthenticated = -1000,
//	FilenameCollision = -1001,
//	SyncAnchorExpired = -1002,
//	PageExpired = SyncAnchorExpired,
//	InsufficientQuota = -1003,
//	ServerUnreachable = -1004,
//	NoSuchItem = -1005
//}

//[Native]
//public enum UIRectCorner : nuint
//{
//	TopLeft = 1 << 0,
//	TopRight = 1 << 1,
//	BottomLeft = 1 << 2,
//	BottomRight = 1 << 3,
//	AllCorners = ~0
//}

//[Native]
//public enum UIEventType : nint
//{
//	Touches,
//	Motion,
//	RemoteControl,
//	Presses
//}

//[Native]
//public enum UIEventSubtype : nint
//{
//	None = 0,
//	MotionShake = 1,
//	RemoteControlPlay = 100,
//	RemoteControlPause = 101,
//	RemoteControlStop = 102,
//	RemoteControlTogglePlayPause = 103,
//	RemoteControlNextTrack = 104,
//	RemoteControlPreviousTrack = 105,
//	RemoteControlBeginSeekingBackward = 106,
//	RemoteControlEndSeekingBackward = 107,
//	RemoteControlBeginSeekingForward = 108,
//	RemoteControlEndSeekingForward = 109
//}

//[iOS (7,0)]
//[Native]
//public enum UIKeyModifierFlags : nint
//{
//	AlphaShift = 1 << 16,
//	Shift = 1 << 17,
//	Control = 1 << 18,
//	Alternate = 1 << 19,
//	Command = 1 << 20,
//	NumericPad = 1 << 21
//}

//[iOS (7,0)]
//public enum UIFontDescriptorSymbolicTraits : uint
//{
//	TraitItalic = 1 << 0,
//	TraitBold = 1 << 1,
//	TraitExpanded = 1 << 5,
//	TraitCondensed = 1 << 6,
//	TraitMonoSpace = 1 << 10,
//	TraitVertical = 1 << 11,
//	TraitUIOptimized = 1 << 12,
//	TraitTightLeading = 1 << 15,
//	TraitLooseLeading = 1 << 16,
//	ClassMask = 4026531840u,
//	ClassUnknown = 0 << 28,
//	ClassOldStyleSerifs = 1 << 28,
//	ClassTransitionalSerifs = 2 << 28,
//	ClassModernSerifs = 3 << 28,
//	ClassClarendonSerifs = 4 << 28,
//	ClassSlabSerifs = 5 << 28,
//	ClassFreeformSerifs = 7 << 28,
//	ClassSansSerif = 8 << 28,
//	ClassOrnamentals = 9 << 28,
//	ClassScripts = 10 << 28,
//	ClassSymbolic = 12 << 28
//}

//[NoTV]
//[Native]
//public enum UIBarStyle : nint
//{
//	Default = 0,
//	Black = 1,
//	BlackOpaque = 1,
//	BlackTranslucent = 2
//}

//[iOS (8,0)]
//[Native]
//public enum UIUserInterfaceSizeClass : nint
//{
//	Unspecified = 0,
//	Compact = 1,
//	Regular = 2
//}

//[TV (10,0), NoWatch, NoiOS]
//[Native]
//public enum UIUserInterfaceStyle : nint
//{
//	Unspecified,
//	Light,
//	Dark
//}

//[iOS (5,0)]
//[Native]
//public enum UIUserInterfaceLayoutDirection : nint
//{
//	LeftToRight,
//	RightToLeft
//}

//[iOS (10,0)]
//[Native]
//public enum UITraitEnvironmentLayoutDirection : nint
//{
//	Unspecified = -1,
//	LeftToRight = UIUserInterfaceLayoutDirectionLeftToRight,
//	RightToLeft = UIUserInterfaceLayoutDirectionRightToLeft
//}

//[iOS (10,0)]
//[Native]
//public enum UIDisplayGamut : nint
//{
//	Unspecified = -1,
//	Srgb,
//	P3
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct UIEdgeInsets
//{
//	public nfloat top;

//	public nfloat left;

//	public nfloat bottom;

//	public nfloat right;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct NSDirectionalEdgeInsets
//{
//	public nfloat top;

//	public nfloat leading;

//	public nfloat bottom;

//	public nfloat trailing;
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct UIOffset
//{
//	public nfloat horizontal;

//	public nfloat vertical;
//}

//[iOS (7,0)]
//[Native]
//public enum UIRectEdge : nuint
//{
//	None = 0,
//	Top = 1 << 0,
//	Left = 1 << 1,
//	Bottom = 1 << 2,
//	Right = 1 << 3,
//	All = Top | Left | Bottom | Right
//}

//[iOS (9,0)]
//[Native]
//public enum UIDynamicItemCollisionBoundsType : nuint
//{
//	Rectangle,
//	Ellipse,
//	Path
//}

//[Native]
//public enum NSLayoutRelation : nint
//{
//	LessThanOrEqual = -1,
//	Equal = 0,
//	GreaterThanOrEqual = 1
//}

//[Native]
//public enum NSLayoutAttribute : nint
//{
//	Left = 1,
//	Right,
//	Top,
//	Bottom,
//	Leading,
//	Trailing,
//	Width,
//	Height,
//	CenterX,
//	CenterY,
//	LastBaseline,
//	Baseline = LastBaseline,
//	FirstBaseline,
//	LeftMargin,
//	RightMargin,
//	TopMargin,
//	BottomMargin,
//	LeadingMargin,
//	TrailingMargin,
//	CenterXWithinMargins,
//	CenterYWithinMargins,
//	NotAnAttribute = 0
//}

//[Native]
//public enum NSLayoutFormatOptions : nuint
//{
//	AlignAllLeft = (1 << NSLayoutAttributeLeft),
//	AlignAllRight = (1 << NSLayoutAttributeRight),
//	AlignAllTop = (1 << NSLayoutAttributeTop),
//	AlignAllBottom = (1 << NSLayoutAttributeBottom),
//	AlignAllLeading = (1 << NSLayoutAttributeLeading),
//	AlignAllTrailing = (1 << NSLayoutAttributeTrailing),
//	AlignAllCenterX = (1 << NSLayoutAttributeCenterX),
//	AlignAllCenterY = (1 << NSLayoutAttributeCenterY),
//	AlignAllLastBaseline = (1 << NSLayoutAttributeLastBaseline),
//	AlignAllBaseline = AlignAllLastBaseline,
//	AlignAllFirstBaseline = (1 << NSLayoutAttributeFirstBaseline),
//	AlignmentMask = 65535,
//	DirectionLeadingToTrailing = 0 << 16,
//	DirectionLeftToRight = 1 << 16,
//	DirectionRightToLeft = 2 << 16,
//	DirectionMask = 3 << 16,
//	SpacingEdgeToEdge = 0 << 19,
//	SpacingBaselineToBaseline = 1 << 19,
//	SpacingMask = 1 << 19
//}

//[NoTV]
//[Native]
//public enum UIDeviceOrientation : nint
//{
//	Unknown,
//	Portrait,
//	PortraitUpsideDown,
//	LandscapeLeft,
//	LandscapeRight,
//	FaceUp,
//	FaceDown
//}

//[NoTV]
//[Native]
//public enum UIDeviceBatteryState : nint
//{
//	Unknown,
//	Unplugged,
//	Charging,
//	Full
//}

//[Native]
//public enum UIUserInterfaceIdiom : nint
//{
//	Unspecified = -1,
//	Phone,
//	Pad,
//	Tv,
//	CarPlay
//}

//[Native]
//public enum UITouchPhase : nint
//{
//	Began,
//	Moved,
//	Stationary,
//	Ended,
//	Cancelled
//}

//[Native]
//public enum UIForceTouchCapability : nint
//{
//	Unknown = 0,
//	Unavailable = 1,
//	Available = 2
//}

//[iOS (9,0)]
//[Native]
//public enum UITouchType : nint
//{
//	Direct,
//	Indirect,
//	Stylus
//}

//[iOS (9,1)]
//[Native]
//public enum UITouchProperties : nint
//{
//	Force = (1 << 0),
//	Azimuth = (1 << 1),
//	Altitude = (1 << 2),
//	Location = (1 << 3)
//}

//[iOS (9,0)]
//[Native]
//public enum UIFocusHeading : nuint
//{
//	None = 0,
//	Up = 1 << 0,
//	Down = 1 << 1,
//	Left = 1 << 2,
//	Right = 1 << 3,
//	Next = 1 << 4,
//	Previous = 1 << 5
//}

//[Native]
//public enum UIViewAnimationCurve : nint
//{
//	EaseInOut,
//	EaseIn,
//	EaseOut,
//	Linear
//}

//[Native]
//public enum UIViewContentMode : nint
//{
//	ScaleToFill,
//	ScaleAspectFit,
//	ScaleAspectFill,
//	Redraw,
//	Center,
//	Top,
//	Bottom,
//	Left,
//	Right,
//	TopLeft,
//	TopRight,
//	BottomLeft,
//	BottomRight
//}

//[Native]
//public enum UIViewAnimationTransition : nint
//{
//	None,
//	FlipFromLeft,
//	FlipFromRight,
//	CurlUp,
//	CurlDown
//}

//[Native]
//public enum UIViewAutoresizing : nuint
//{
//	None = 0,
//	FlexibleLeftMargin = 1 << 0,
//	FlexibleWidth = 1 << 1,
//	FlexibleRightMargin = 1 << 2,
//	FlexibleTopMargin = 1 << 3,
//	FlexibleHeight = 1 << 4,
//	FlexibleBottomMargin = 1 << 5
//}

//[iOS (4,0)]
//[Native]
//public enum UIViewAnimationOptions : nuint
//{
//	LayoutSubviews = 1 << 0,
//	AllowUserInteraction = 1 << 1,
//	BeginFromCurrentState = 1 << 2,
//	Repeat = 1 << 3,
//	Autoreverse = 1 << 4,
//	OverrideInheritedDuration = 1 << 5,
//	OverrideInheritedCurve = 1 << 6,
//	AllowAnimatedContent = 1 << 7,
//	ShowHideTransitionViews = 1 << 8,
//	OverrideInheritedOptions = 1 << 9,
//	CurveEaseInOut = 0 << 16,
//	CurveEaseIn = 1 << 16,
//	CurveEaseOut = 2 << 16,
//	CurveLinear = 3 << 16,
//	TransitionNone = 0 << 20,
//	TransitionFlipFromLeft = 1 << 20,
//	TransitionFlipFromRight = 2 << 20,
//	TransitionCurlUp = 3 << 20,
//	TransitionCurlDown = 4 << 20,
//	TransitionCrossDissolve = 5 << 20,
//	TransitionFlipFromTop = 6 << 20,
//	TransitionFlipFromBottom = 7 << 20,
//	PreferredFramesPerSecondDefault = 0 << 24,
//	PreferredFramesPerSecond60 = 3 << 24,
//	PreferredFramesPerSecond30 = 7 << 24
//}

//[iOS (7,0)]
//[Native]
//public enum UIViewKeyframeAnimationOptions : nuint
//{
//	LayoutSubviews = UIViewAnimationOptionLayoutSubviews,
//	AllowUserInteraction = UIViewAnimationOptionAllowUserInteraction,
//	BeginFromCurrentState = UIViewAnimationOptionBeginFromCurrentState,
//	Repeat = UIViewAnimationOptionRepeat,
//	Autoreverse = UIViewAnimationOptionAutoreverse,
//	OverrideInheritedDuration = UIViewAnimationOptionOverrideInheritedDuration,
//	OverrideInheritedOptions = UIViewAnimationOptionOverrideInheritedOptions,
//	CalculationModeLinear = 0 << 10,
//	CalculationModeDiscrete = 1 << 10,
//	CalculationModePaced = 2 << 10,
//	CalculationModeCubic = 3 << 10,
//	CalculationModeCubicPaced = 4 << 10
//}

//[iOS (7,0)]
//[Native]
//public enum UISystemAnimation : nuint
//{
//	UISystemAnimationDelete
//}

//[iOS (7,0)]
//[Native]
//public enum UIViewTintAdjustmentMode : nint
//{
//	Automatic,
//	Normal,
//	Dimmed
//}

//[iOS (9,0)]
//[Native]
//public enum UISemanticContentAttribute : nint
//{
//	Unspecified = 0,
//	Playback,
//	Spatial,
//	ForceLeftToRight,
//	ForceRightToLeft
//}

//[Native]
//public enum UILayoutConstraintAxis : nint
//{
//	Horizontal = 0,
//	Vertical = 1
//}

//[Native]
//public enum UIControlEvents : nuint
//{
//	TouchDown = 1 << 0,
//	TouchDownRepeat = 1 << 1,
//	TouchDragInside = 1 << 2,
//	TouchDragOutside = 1 << 3,
//	TouchDragEnter = 1 << 4,
//	TouchDragExit = 1 << 5,
//	TouchUpInside = 1 << 6,
//	TouchUpOutside = 1 << 7,
//	TouchCancel = 1 << 8,
//	ValueChanged = 1 << 12,
//	PrimaryActionTriggered = 1 << 13,
//	EditingDidBegin = 1 << 16,
//	EditingChanged = 1 << 17,
//	EditingDidEnd = 1 << 18,
//	EditingDidEndOnExit = 1 << 19,
//	AllTouchEvents = 4095,
//	AllEditingEvents = 983040,
//	ApplicationReserved = 251658240,
//	SystemReserved = 4026531840L,
//	AllEvents = 4294967295L
//}

//[Native]
//public enum UIControlContentVerticalAlignment : nint
//{
//	Center = 0,
//	Top = 1,
//	Bottom = 2,
//	Fill = 3
//}

//[Native]
//public enum UIControlContentHorizontalAlignment : nint
//{
//	Center = 0,
//	Left = 1,
//	Right = 2,
//	Fill = 3,
//	Leading = 4,
//	Trailing = 5
//}

//[Native]
//public enum UIControlState : nuint
//{
//	Normal = 0,
//	Highlighted = 1 << 0,
//	Disabled = 1 << 1,
//	Selected = 1 << 2,
//	Focused = 1 << 3,
//	Application = 16711680,
//	Reserved = 4278190080L
//}

//[Native]
//public enum UIScrollViewIndicatorStyle : nint
//{
//	Default,
//	Black,
//	White
//}

//[iOS (7,0)]
//[Native]
//public enum UIScrollViewKeyboardDismissMode : nint
//{
//	None,
//	OnDrag,
//	Interactive
//}

//[TV (10,2)]
//[Native]
//public enum UIScrollViewIndexDisplayMode : nint
//{
//	utomatic,
//	lwaysHidden
//}

//[TV (11,0), iOS (11,0)]
//[Native]
//public enum UIScrollViewContentInsetAdjustmentBehavior : nint
//{
//	Automatic,
//	ScrollableAxes,
//	Never,
//	Always
//}

//[iOS (8,0)]
//[Native]
//public enum UIAccessibilityNavigationStyle : nint
//{
//	Automatic = 0,
//	Separate = 1,
//	Combined = 2
//}

//[iOS (11,0)]
//[Native]
//public enum UIAccessibilityContainerType : nint
//{
//	None = 0,
//	DataTable,
//	List,
//	Landmark
//}

//[Native]
//public enum UITextAutocapitalizationType : nint
//{
//	None,
//	Words,
//	Sentences,
//	AllCharacters
//}

//[Native]
//public enum UITextAutocorrectionType : nint
//{
//	Default,
//	No,
//	Yes
//}

//[iOS (5,0)]
//[Native]
//public enum UITextSpellCheckingType : nint
//{
//	Default,
//	No,
//	Yes
//}

//[iOS (11,0)]
//[Native]
//public enum UITextSmartQuotesType : nint
//{
//	Default,
//	No,
//	Yes
//}

//[iOS (11,0)]
//[Native]
//public enum UITextSmartDashesType : nint
//{
//	Default,
//	No,
//	Yes
//}

//[iOS (11,0)]
//[Native]
//public enum UITextSmartInsertDeleteType : nint
//{
//	Default,
//	No,
//	Yes
//}

//[Native]
//public enum UIKeyboardType : nint
//{
//	Default,
//	ASCIICapable,
//	NumbersAndPunctuation,
//	Url,
//	NumberPad,
//	PhonePad,
//	NamePhonePad,
//	EmailAddress,
//	DecimalPad,
//	Twitter,
//	WebSearch,
//	ASCIICapableNumberPad,
//	Alphabet = ASCIICapable
//}

//[Native]
//public enum UIKeyboardAppearance : nint
//{
//	Default,
//	Dark,
//	Light,
//	Alert = Dark
//}

//[Native]
//public enum UIReturnKeyType : nint
//{
//	Default,
//	Go,
//	Google,
//	Join,
//	Next,
//	Route,
//	Search,
//	Send,
//	Yahoo,
//	Done,
//	EmergencyCall,
//	Continue
//}

//[Native]
//public enum UITextStorageDirection : nint
//{
//	Forward = 0,
//	Backward
//}

//[Native]
//public enum UITextLayoutDirection : nint
//{
//	Right = 2,
//	Left,
//	Up,
//	Down
//}

//[Native]
//public enum UITextWritingDirection : nint
//{
//	Natural = -1,
//	LeftToRight = 0,
//	RightToLeft
//}

//[Native]
//public enum UITextGranularity : nint
//{
//	Character,
//	Word,
//	Sentence,
//	Paragraph,
//	Line,
//	Document
//}

//[Native]
//public enum UIAccessibilityCustomRotorDirection : nint
//{
//	Previous,
//	Next
//}

//[iOS (11,0)]
//[Native]
//public enum UIAccessibilityCustomSystemRotorType : nint
//{
//	None = 0,
//	Link,
//	VisitedLink,
//	Heading,
//	HeadingLevel1,
//	HeadingLevel2,
//	HeadingLevel3,
//	HeadingLevel4,
//	HeadingLevel5,
//	HeadingLevel6,
//	BoldText,
//	ItalicText,
//	UnderlineText,
//	MisspelledWord,
//	Image,
//	TextField,
//	Table,
//	List,
//	Landmark
//}

//[Native]
//public enum UIPreferredPresentationStyle : nint
//{
//	Unspecified = 0,
//	Inline,
//	Attachment
//}

//[Native]
//public enum UIImageOrientation : nint
//{
//	Up,
//	Down,
//	Left,
//	Right,
//	UpMirrored,
//	DownMirrored,
//	LeftMirrored,
//	RightMirrored
//}

//[Native]
//public enum UIImageResizingMode : nint
//{
//	Tile,
//	Stretch
//}

//[iOS (7,0)]
//[Native]
//public enum UIImageRenderingMode : nint
//{
//	utomatic,
//	lwaysOriginal,
//	lwaysTemplate
//}

//[iOS (5,0)]
//[Native]
//public enum UIAccessibilityZoomType : nint
//{
//	UIAccessibilityZoomTypeInsertionPoint
//}

//[Native]
//public enum UIGuidedAccessRestrictionState : nint
//{
//	Allow,
//	Deny
//}

//[Native]
//public enum UIAccessibilityScrollDirection : nint
//{
//	Right = 1,
//	Left,
//	Up,
//	Down,
//	Next,
//	Previous
//}

//[NoTV, iOS (10,0)]
//[Native]
//public enum UIAccessibilityHearingDeviceEar : nuint
//{
//	None = 0,
//	Left = 1 << 1,
//	Right = 1 << 2,
//	Both = Left | Right
//}

//[iOS (6,0)]
//[Native]
//public enum NSTextAlignment : nint
//{
//	Left = 0,
//	Center = 1,
//	Right = 2,
//	Justified = 3,
//	Natural = 4
//}

//[iOS (6,0)]
//[Native]
//public enum NSWritingDirection : nint
//{
//	Natural = -1,
//	LeftToRight = 0,
//	RightToLeft = 1
//}

//[iOS (6,0)]
//[Native]
//public enum NSLineBreakMode : nint
//{
//	WordWrapping = 0,
//	CharWrapping,
//	Clipping,
//	TruncatingHead,
//	TruncatingTail,
//	TruncatingMiddle
//}

//[Introduced (PlatformName.iOS, 2, 0)]
//[Deprecated (PlatformName.iOS, 6, 0)]
//[NoTV]
//[Native]
//public enum UILineBreakMode : nint
//{
//	WordWrap = 0,
//	CharacterWrap,
//	Clip,
//	HeadTruncation,
//	TailTruncation,
//	MiddleTruncation
//}

//[Introduced (PlatformName.iOS, 2, 0)]
//[Deprecated (PlatformName.iOS, 6, 0)]
//[NoTV]
//[Native]
//public enum UITextAlignment : nint
//{
//	Left = 0,
//	Center,
//	Right
//}

//[Native]
//public enum UIBaselineAdjustment : nint
//{
//	AlignBaselines = 0,
//	AlignCenters,
//	None
//}

//[Native]
//public enum UIButtonType : nint
//{
//	Custom = 0,
//	System,
//	DetailDisclosure,
//	InfoLight,
//	InfoDark,
//	ContactAdd,
//	Plain,
//	RoundedRect = System
//}

//public enum  : uint
//{
//	NSAttachmentCharacter = 65532
//}

//[Native]
//public enum UIActivityIndicatorViewStyle : nint
//{
//	WhiteLarge,
//	White,
//	Gray
//}

//[NoTV, iOS (7,0)]
//[Native]
//public enum UIActivityCategory : nint
//{
//	Action,
//	Share
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UIDropOperation : nuint
//{
//	Cancel = 0,
//	Forbidden = 1,
//	Copy = 2,
//	Move = 3
//}

//[iOS (10,0)]
//[Native]
//public enum UIViewAnimatingState : nint
//{
//	Inactive,
//	Active,
//	Stopped
//}

//[iOS (10,0)]
//[Native]
//public enum UIViewAnimatingPosition : nint
//{
//	End,
//	Start,
//	Current
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UITextDragOptions : nint
//{
//	sNone = 0,
//	StripTextColorFromPreviews = (1 << 0)
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UITextDropAction : nuint
//{
//	Insert = 0,
//	ReplaceSelection,
//	ReplaceAll
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UITextDropProgressMode : nuint
//{
//	System = 0,
//	Custom
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UITextDropPerformer : nuint
//{
//	View = 0,
//	Delegate
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UITextDropEditability : nuint
//{
//	No = 0,
//	Temporary,
//	Yes
//}

//[Native]
//public enum UITextBorderStyle : nint
//{
//	None,
//	Line,
//	Bezel,
//	RoundedRect
//}

//[Native]
//public enum UITextFieldViewMode : nint
//{
//	Never,
//	WhileEditing,
//	UnlessEditing,
//	Always
//}

//[iOS (10,0)]
//[Native]
//public enum UITextFieldDidEndEditingReason : nint
//{
//	ommitted,
//	ancelled
//}

//[NoTV]
//[Native]
//public enum UIActionSheetStyle : nint
//{
//	Automatic = -1,
//	Default = UIBarStyleDefault,
//	BlackTranslucent = UIBarStyleBlackTranslucent,
//	BlackOpaque = UIBarStyleBlackOpaque
//}

//[NoTV]
//[Native]
//public enum UIAlertViewStyle : nint
//{
//	Default = 0,
//	SecureTextInput,
//	PlainTextInput,
//	LoginAndPasswordInput
//}

//[NoTV]
//[Native]
//public enum UIStatusBarStyle : nint
//{
//	Default = 0,
//	LightContent = 1,
//	BlackTranslucent = 1,
//	BlackOpaque = 2
//}

//[NoTV]
//[Native]
//public enum UIStatusBarAnimation : nint
//{
//	None,
//	Fade,
//	Slide
//}

//[NoTV]
//[Native]
//public enum UIInterfaceOrientation : nint
//{
//	Unknown = UIDeviceOrientationUnknown,
//	Portrait = UIDeviceOrientationPortrait,
//	PortraitUpsideDown = UIDeviceOrientationPortraitUpsideDown,
//	LandscapeLeft = UIDeviceOrientationLandscapeRight,
//	LandscapeRight = UIDeviceOrientationLandscapeLeft
//}

//[NoTV]
//[Native]
//public enum UIInterfaceOrientationMask : nuint
//{
//	Portrait = (1 << UIInterfaceOrientationPortrait),
//	LandscapeLeft = (1 << UIInterfaceOrientationLandscapeLeft),
//	LandscapeRight = (1 << UIInterfaceOrientationLandscapeRight),
//	PortraitUpsideDown = (1 << UIInterfaceOrientationPortraitUpsideDown),
//	Landscape = (LandscapeLeft | LandscapeRight),
//	All = (Portrait | LandscapeLeft | LandscapeRight | PortraitUpsideDown),
//	AllButUpsideDown = (Portrait | LandscapeLeft | LandscapeRight)
//}

//[Introduced (PlatformName.iOS, 3, 0, message: "Use UserNotifications Framework's UNAuthorizationOptions for user notifications and registerForRemoteNotifications for receiving remote notifications instead.")]
//[Deprecated (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNAuthorizationOptions for user notifications and registerForRemoteNotifications for receiving remote notifications instead.")]
//[NoTV]
//[Native]
//public enum UIRemoteNotificationType : nuint
//{
//	None = 0,
//	Badge = 1 << 0,
//	Sound = 1 << 1,
//	Alert = 1 << 2,
//	NewsstandContentAvailability = 1 << 3
//}

//[iOS (7,0)]
//[Native]
//public enum UIBackgroundFetchResult : nuint
//{
//	NewData,
//	NoData,
//	Failed
//}

//[TV (11,0), iOS (7,0)]
//[Native]
//public enum UIBackgroundRefreshStatus : nint
//{
//	Restricted,
//	Denied,
//	Available
//}

//[iOS (4,0)]
//[Native]
//public enum UIApplicationState : nint
//{
//	Active,
//	Inactive,
//	Background
//}

//[Native]
//public enum UIModalTransitionStyle : nint
//{
//	CoverVertical = 0,
//	FlipHorizontal,
//	CrossDissolve,
//	PartialCurl
//}

//[Native]
//public enum UIModalPresentationStyle : nint
//{
//	FullScreen = 0,
//	PageSheet,
//	FormSheet,
//	CurrentContext,
//	Custom,
//	OverFullScreen,
//	OverCurrentContext,
//	Popover,
//	BlurOverFullScreen,
//	None = -1
//}

//[iOS (9,0)]
//[Native]
//public enum UIPreviewActionStyle : nint
//{
//	Default = 0,
//	Selected,
//	Destructive
//}

//[iOS (8,0)]
//[Native]
//public enum UIAlertActionStyle : nint
//{
//	Default = 0,
//	Cancel,
//	Destructive
//}

//[iOS (8,0)]
//[Native]
//public enum UIAlertControllerStyle : nint
//{
//	ctionSheet = 0,
//	lert
//}

//[Native]
//public enum UIBarMetrics : nint
//{
//	Default,
//	Compact,
//	DefaultPrompt = 101,
//	CompactPrompt,
//	LandscapePhone = Compact,
//	LandscapePhonePrompt = CompactPrompt
//}

//[iOS (7,0)]
//[Native]
//public enum UIBarPosition : nint
//{
//	Any = 0,
//	Bottom = 1,
//	Top = 2,
//	TopAttached = 3
//}

//[Native]
//public enum UIBarButtonItemStyle : nint
//{
//	Plain,
//	Bordered,
//	Done
//}

//[Native]
//public enum UIBarButtonSystemItem : nint
//{
//	Done,
//	Cancel,
//	Edit,
//	Save,
//	Add,
//	FlexibleSpace,
//	FixedSpace,
//	Compose,
//	Reply,
//	Action,
//	Organize,
//	Bookmarks,
//	Search,
//	Refresh,
//	Stop,
//	Camera,
//	Trash,
//	Play,
//	Pause,
//	Rewind,
//	FastForward,
//	Undo,
//	Redo,
//	PageCurl
//}

//[Native]
//public enum UICollectionViewScrollPosition : nuint
//{
//	None = 0,
//	Top = 1 << 0,
//	CenteredVertically = 1 << 1,
//	Bottom = 1 << 2,
//	Left = 1 << 3,
//	CenteredHorizontally = 1 << 4,
//	Right = 1 << 5
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UICollectionViewReorderingCadence : nint
//{
//	Immediate,
//	Fast,
//	Slow
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UICollectionViewDropIntent : nint
//{
//	Unspecified,
//	InsertAtDestinationIndexPath,
//	InsertIntoDestinationIndexPath
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UICollectionViewCellDragState : nint
//{
//	None,
//	Lifting,
//	Dragging
//}

//[Native]
//public enum UICollectionElementCategory : nuint
//{
//	Cell,
//	SupplementaryView,
//	DecorationView
//}

//[Native]
//public enum UICollectionUpdateAction : nint
//{
//	Insert,
//	Delete,
//	Reload,
//	Move,
//	None
//}

//[Native]
//public enum UICollectionViewScrollDirection : nint
//{
//	Vertical,
//	Horizontal
//}

//[TV (11,0), NoWatch, iOS (11,0)]
//[Native]
//public enum UICollectionViewFlowLayoutSectionInsetReference : nint
//{
//	ContentInset,
//	SafeArea,
//	LayoutMargins
//}

//[NoTV]
//[Native]
//public enum UIDataDetectorTypes : nuint
//{
//	PhoneNumber = 1 << 0,
//	Link = 1 << 1,
//	Address = 1 << 2,
//	CalendarEvent = 1 << 3,
//	ShipmentTrackingNumber = 1 << 4,
//	FlightNumber = 1 << 5,
//	LookupSuggestion = 1 << 6,
//	None = 0,
//	All = (9223372036854775807L * 2 + 1)
//}

//[NoTV]
//[Native]
//public enum UIDatePickerMode : nint
//{
//	Time,
//	Date,
//	DateAndTime,
//	CountDownTimer
//}

//[NoTV]
//[Native]
//public enum UIDocumentChangeKind : nint
//{
//	Done,
//	Undone,
//	Redone,
//	Cleared
//}

//[NoTV]
//[Native]
//public enum UIDocumentSaveOperation : nint
//{
//	Creating,
//	Overwriting
//}

//[NoTV]
//[Native]
//public enum UIDocumentState : nuint
//{
//	Normal = 0,
//	Closed = 1 << 0,
//	InConflict = 1 << 1,
//	SavingError = 1 << 2,
//	EditingDisabled = 1 << 3,
//	ProgressAvailable = 1 << 4
//}

//[NoTV, iOS (8,0)]
//[Native]
//public enum UIDocumentPickerMode : nuint
//{
//	Import,
//	Open,
//	ExportToService,
//	MoveToService
//}

//[Introduced (PlatformName.iOS, 8, 0)]
//[Deprecated (PlatformName.iOS, 11, 0)]
//[NoTV]
//[Native]
//public enum UIDocumentMenuOrder : nuint
//{
//	First,
//	Last
//}

//[NoWatch, NoTV, iOS (10,0)]
//[Native]
//public enum UICloudSharingPermissionOptions : nuint
//{
//	Standard = 0,
//	AllowPublic = 1 << 0,
//	AllowPrivate = 1 << 1,
//	AllowReadOnly = 1 << 2,
//	AllowReadWrite = 1 << 3
//}

//[iOS (8,0)]
//[Native]
//public enum UIBlurEffectStyle : nint
//{
//	ExtraLight,
//	Light,
//	Dark,
//	ExtraDark,
//	Regular,
//	Prominent
//}

//[Native]
//public enum UIGestureRecognizerState : nint
//{
//	Possible,
//	Began,
//	Changed,
//	Ended,
//	Cancelled,
//	Failed,
//	Recognized = Ended
//}

//[Native]
//public enum UINavigationControllerOperation : nint
//{
//	None,
//	Push,
//	Pop
//}

//[NoTV]
//[Native]
//public enum UIImagePickerControllerSourceType : nint
//{
//	PhotoLibrary,
//	Camera,
//	SavedPhotosAlbum
//}

//[NoTV]
//[Native]
//public enum UIImagePickerControllerQualityType : nint
//{
//	High = 0,
//	Medium = 1,
//	Low = 2,
//	UIImagePickerControllerQualityType640x480 = 3,
//	IFrame1280x720 = 4,
//	IFrame960x540 = 5
//}

//[NoTV]
//[Native]
//public enum UIImagePickerControllerCameraCaptureMode : nint
//{
//	Photo,
//	Video
//}

//[NoTV]
//[Native]
//public enum UIImagePickerControllerCameraDevice : nint
//{
//	Rear,
//	Front
//}

//[NoTV]
//[Native]
//public enum UIImagePickerControllerCameraFlashMode : nint
//{
//	Off = -1,
//	Auto = 0,
//	On = 1
//}

//[NoTV, iOS (11,0)]
//[Native]
//public enum UIImagePickerControllerImageURLExportPreset : nint
//{
//	ompatible = 0,
//	urrent
//}

//[iOS (7,0)]
//[Native]
//public enum UIInputViewStyle : nint
//{
//	Default,
//	Keyboard
//}

//[NoTV, iOS (9,0)]
//[Native]
//public enum UIApplicationShortcutIconType : nint
//{
//	Compose,
//	Play,
//	Pause,
//	Add,
//	Location,
//	Search,
//	Share,
//	Prohibit,
//	Contact,
//	Home,
//	MarkLocation,
//	Favorite,
//	Love,
//	Cloud,
//	Invitation,
//	Confirmation,
//	Mail,
//	Message,
//	Date,
//	Time,
//	CapturePhoto,
//	CaptureVideo,
//	Task,
//	TaskCompleted,
//	Alarm,
//	Bookmark,
//	Shuffle,
//	Audio,
//	Update
//}

//[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNAuthorizationOptions")]
//[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNAuthorizationOptions")]
//[NoTV]
//[Native]
//public enum UIUserNotificationType : nuint
//{
//	None = 0,
//	Badge = 1 << 0,
//	Sound = 1 << 1,
//	Alert = 1 << 2
//}

//[Introduced (PlatformName.iOS, 9, 0, message: "Use UserNotifications Framework's UNNotificationAction or UNTextInputNotificationAction")]
//[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationAction or UNTextInputNotificationAction")]
//[NoTV]
//[Native]
//public enum UIUserNotificationActionBehavior : nuint
//{
//	Default,
//	TextInput
//}

//[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNNotificationActionOptions")]
//[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationActionOptions")]
//[NoTV]
//[Native]
//public enum UIUserNotificationActivationMode : nuint
//{
//	Foreground,
//	Background
//}

//[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's -[UNNotificationCategory actions] or -[UNNotificationCategory minimalActions]")]
//[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNNotificationCategory actions] or -[UNNotificationCategory minimalActions]")]
//[NoTV]
//[Native]
//public enum UIUserNotificationActionContext : nuint
//{
//	Default,
//	Minimal
//}

//[NoTV]
//[Native]
//public enum UIMenuControllerArrowDirection : nint
//{
//	Default,
//	Up,
//	Down,
//	Left,
//	Right
//}

//[Native]
//public enum UIInterpolatingMotionEffectType : nint
//{
//	HorizontalAxis,
//	VerticalAxis
//}

//[Native]
//public enum UINavigationItemLargeTitleDisplayMode : nint
//{
//	Automatic,
//	Always,
//	Never
//}

//[Native]
//public enum UIPageViewControllerNavigationOrientation : nint
//{
//	Horizontal = 0,
//	Vertical = 1
//}

//[Native]
//public enum UIPageViewControllerSpineLocation : nint
//{
//	None = 0,
//	Min = 1,
//	Mid = 2,
//	Max = 3
//}

//[Native]
//public enum UIPageViewControllerNavigationDirection : nint
//{
//	Forward,
//	Reverse
//}

//[Native]
//public enum UIPageViewControllerTransitionStyle : nint
//{
//	PageCurl = 0,
//	Scroll = 1
//}

//[Native]
//public enum UIPopoverArrowDirection : nuint
//{
//	Up = 1 << 0,
//	Down = 1 << 1,
//	Left = 1 << 2,
//	Right = 1 << 3,
//	Any = Up | Down | Left | Right,
//	Unknown = (9223372036854775807L * 2 + 1)
//}

//[Native]
//public enum UIPressPhase : nint
//{
//	Began,
//	Changed,
//	Stationary,
//	Ended,
//	Cancelled
//}

//[Native]
//public enum UIPressType : nint
//{
//	UpArrow,
//	DownArrow,
//	LeftArrow,
//	RightArrow,
//	Select,
//	Menu,
//	PlayPause
//}

//[NoTV, iOS (8,0)]
//[Native]
//public enum UIPrinterJobTypes : nint
//{
//	Unknown = 0,
//	Document = 1 << 0,
//	Envelope = 1 << 1,
//	Label = 1 << 2,
//	Photo = 1 << 3,
//	Receipt = 1 << 4,
//	Roll = 1 << 5,
//	LargeFormat = 1 << 6,
//	Postcard = 1 << 7
//}

//[NoTV]
//[Verify (InferredFromMemberPrefix)]
//public enum UIPrint : uint
//{
//	ingNotAvailableError = 1,
//	NoContentError,
//	UnknownImageFormatError,
//	JobFailedError
//}

//[NoTV]
//[Native]
//public enum UIPrintInfoOutputType : nint
//{
//	General,
//	Photo,
//	Grayscale,
//	PhotoGrayscale
//}

//[NoTV]
//[Native]
//public enum UIPrintInfoOrientation : nint
//{
//	Portrait,
//	Landscape
//}

//[NoTV]
//[Native]
//public enum UIPrintInfoDuplex : nint
//{
//	None,
//	LongEdge,
//	ShortEdge
//}

//[NoTV]
//[Native]
//public enum UIPrinterCutterBehavior : nint
//{
//	NoCut,
//	PrinterDefault,
//	CutAfterEachPage,
//	CutAfterEachCopy,
//	CutAfterEachJob
//}

//[Native]
//public enum UIProgressViewStyle : nint
//{
//	Default,
//	Bar
//}

//[Native]
//public enum UIScreenOverscanCompensation : nint
//{
//	Scale,
//	InsetBounds,
//	None,
//	InsetApplicationFrame = 2
//}

//[Native]
//public enum UISearchBarIcon : nint
//{
//	Search,
//	Clear,
//	Bookmark,
//	ResultsList
//}

//[iOS (7,0)]
//[Native]
//public enum UISearchBarStyle : nuint
//{
//	Default,
//	Prominent,
//	Minimal
//}

//[iOS (10,0)]
//[Native]
//public enum UITimingCurveType : nint
//{
//	Builtin,
//	Cubic,
//	Spring,
//	Composed
//}

//[Native]
//public enum UISwipeGestureRecognizerDirection : nuint
//{
//	Right = 1 << 0,
//	Left = 1 << 1,
//	Up = 1 << 2,
//	Down = 1 << 3
//}

//[NoTV, iOS (11,0)]
//[Native]
//public enum UIContextualActionStyle : nint
//{
//	Normal,
//	Destructive
//}

//[Native]
//public enum UITableViewCellStyle : nint
//{
//	Default,
//	Value1,
//	Value2,
//	Subtitle
//}

//[NoTV]
//[Native]
//public enum UITableViewCellSeparatorStyle : nint
//{
//	None,
//	SingleLine,
//	SingleLineEtched
//}

//[Native]
//public enum UITableViewCellSelectionStyle : nint
//{
//	None,
//	Blue,
//	Gray,
//	Default
//}

//[iOS (9,0)]
//[Native]
//public enum UITableViewCellFocusStyle : nint
//{
//	Default,
//	Custom
//}

//[Native]
//public enum UITableViewCellEditingStyle : nint
//{
//	None,
//	Delete,
//	Insert
//}

//[Native]
//public enum UITableViewCellAccessoryType : nint
//{
//	None,
//	DisclosureIndicator,
//	DetailDisclosureButton,
//	Checkmark,
//	DetailButton
//}

//[Native]
//public enum UITableViewCellStateMask : nuint
//{
//	DefaultMask = 0,
//	ShowingEditControlMask = 1 << 0,
//	ShowingDeleteConfirmationMask = 1 << 1
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UITableViewCellDragState : nint
//{
//	None,
//	Lifting,
//	Dragging
//}

//[Native]
//public enum UITableViewStyle : nint
//{
//	Plain,
//	Grouped
//}

//[Native]
//public enum UITableViewScrollPosition : nint
//{
//	None,
//	Top,
//	Middle,
//	Bottom
//}

//[Native]
//public enum UITableViewRowAnimation : nint
//{
//	Fade,
//	Right,
//	Left,
//	Top,
//	Bottom,
//	None,
//	Middle,
//	Automatic = 100
//}

//[NoTV, iOS (8,0)]
//[Native]
//public enum UITableViewRowActionStyle : nint
//{
//	Default = 0,
//	Destructive = Default,
//	Normal
//}

//[TV (11,0), iOS (11,0)]
//[Native]
//public enum UITableViewSeparatorInsetReference : nint
//{
//	CellEdges,
//	AutomaticInsets
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UITableViewDropIntent : nint
//{
//	Unspecified,
//	InsertAtDestinationIndexPath,
//	InsertIntoDestinationIndexPath,
//	Automatic
//}

//[Introduced (PlatformName.iOS, 2, 0, message: "The segmentedControlStyle property no longer has any effect")]
//[Deprecated (PlatformName.iOS, 7, 0, message: "The segmentedControlStyle property no longer has any effect")]
//[NoTV]
//[Native]
//public enum UISegmentedControlStyle : nint
//{
//	Plain,
//	Bordered,
//	Bar,
//	Bezeled
//}

//public enum 
//{
//	UISegmentedControlNoSegment = -1
//}

//[Native]
//public enum UISegmentedControlSegment : nint
//{
//	Any = 0,
//	Left = 1,
//	Center = 2,
//	Right = 3,
//	Alone = 4
//}

//[iOS (8,0)]
//[Native]
//public enum UISplitViewControllerDisplayMode : nint
//{
//	Automatic,
//	PrimaryHidden,
//	AllVisible,
//	PrimaryOverlay
//}

//[TV (11,0), iOS (11,0)]
//[Native]
//public enum UISplitViewControllerPrimaryEdge : nint
//{
//	Leading,
//	Trailing
//}

//[iOS (7,0)]
//[Native]
//public enum UITabBarItemPositioning : nint
//{
//	Automatic,
//	Fill,
//	Centered
//}

//[Native]
//public enum UITabBarSystemItem : nint
//{
//	More,
//	Favorites,
//	Featured,
//	TopRated,
//	Recents,
//	Contacts,
//	History,
//	Bookmarks,
//	Search,
//	Downloads,
//	MostRecent,
//	MostViewed
//}

//[iOS (10,0)]
//[Native]
//public enum UITextItemInteraction : nint
//{
//	InvokeDefaultAction,
//	PresentActions,
//	Preview
//}

//[NoTV]
//[Native]
//public enum UIWebViewNavigationType : nint
//{
//	LinkClicked,
//	FormSubmitted,
//	BackForward,
//	Reload,
//	FormResubmitted,
//	Other
//}

//[NoTV]
//[Native]
//public enum UIWebPaginationMode : nint
//{
//	Unpaginated,
//	LeftToRight,
//	TopToBottom,
//	BottomToTop,
//	RightToLeft
//}

//[NoTV]
//[Native]
//public enum UIWebPaginationBreakingMode : nint
//{
//	Page,
//	Column
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UIDropSessionProgressIndicatorStyle : nuint
//{
//	None,
//	Default
//}

//[NoWatch, NoTV, iOS (11,0)]
//[Native]
//public enum UISpringLoadedInteractionEffectState : nint
//{
//	Inactive,
//	Possible,
//	Activating,
//	Activated
//}

//[iOS (6,0)]
//[Native]
//public enum NSUnderlineStyle : nint
//{
//	StyleNone = 0,
//	StyleSingle = 1,
//	StyleThick = 2,
//	StyleDouble = 9,
//	PatternSolid = 0,
//	PatternDot = 256,
//	PatternDash = 512,
//	PatternDashDot = 768,
//	PatternDashDotDot = 1024,
//	ByWord = 32768
//}

//[iOS (9,0)]
//[Native]
//public enum NSWritingDirectionFormatType : nint
//{
//	Embedding = (0 << 1),
//	Override = (1 << 1)
//}

//[Introduced (PlatformName.iOS, 7, 0, message: "Use NSWritingDirectionFormatType instead")]
//[Deprecated (PlatformName.iOS, 9, 0, message: "Use NSWritingDirectionFormatType instead")]
//[NoTV]
//[Native]
//public enum NSTextWritingDirection : nint
//{
//	Embedding = (0 << 1),
//	Override = (1 << 1)
//}

//[iOS (9,0)]
//[Native]
//public enum UIStackViewDistribution : nint
//{
//	Fill = 0,
//	FillEqually,
//	FillProportionally,
//	EqualSpacing,
//	EqualCentering
//}

//[iOS (9,0)]
//[Native]
//public enum UIStackViewAlignment : nint
//{
//	Fill,
//	Leading,
//	Top = Leading,
//	FirstBaseline,
//	Center,
//	Trailing,
//	Bottom = Trailing,
//	LastBaseline
//}

//[iOS (7,0)]
//[Native]
//public enum NSTextStorageEditActions : nuint
//{
//	Attributes = (1 << 0),
//	Characters = (1 << 1)
//}

//[iOS (7,0)]
//[Native]
//public enum NSTextLayoutOrientation : nint
//{
//	Horizontal = 0,
//	Vertical = 1
//}

//[iOS (7,0)]
//[Native]
//public enum NSGlyphProperty : nint
//{
//	Null = (1 << 0),
//	ControlCharacter = (1 << 1),
//	Elastic = (1 << 2),
//	NonBaseCharacter = (1 << 3)
//}

//[iOS (7,0)]
//[Native]
//public enum NSControlCharacterAction : nint
//{
//	ZeroAdvancement = (1 << 0),
//	Whitespace = (1 << 1),
//	HorizontalTab = (1 << 2),
//	LineBreak = (1 << 3),
//	ParagraphBreak = (1 << 4),
//	ContainerBreak = (1 << 5)
//}

//[Verify (InferredFromMemberPrefix)]
//public enum NSControlCharacter : uint
//{
//	ZeroAdvancementAction = NSControlCharacterActionZeroAdvancement,
//	WhitespaceAction = NSControlCharacterActionWhitespace,
//	HorizontalTabAction = NSControlCharacterActionHorizontalTab,
//	LineBreakAction = NSControlCharacterActionLineBreak,
//	ParagraphBreakAction = NSControlCharacterActionParagraphBreak,
//	ContainerBreakAction = NSControlCharacterActionContainerBreak
//}

//[iOS (6,0)]
//[Native]
//public enum NSStringDrawingOptions : nint
//{
//	UsesLineFragmentOrigin = 1 << 0,
//	UsesFontLeading = 1 << 1,
//	UsesDeviceMetrics = 1 << 3,
//	TruncatesLastVisibleLine = 1 << 5
//}

//[iOS (7,0)]
//[Native]
//public enum UIPushBehaviorMode : nint
//{
//	Continuous,
//	Instantaneous
//}

//[iOS (7,0)]
//[Native]
//public enum UIAttachmentBehaviorType : nint
//{
//	Items,
//	Anchor
//}

//[StructLayout (LayoutKind.Sequential)]
//public struct UIFloatRange
//{
//	public nfloat minimum;

//	public nfloat maximum;
//}

//[iOS (7,0)]
//[Native]
//public enum UICollisionBehaviorMode : nuint
//{
//	Items = 1 << 0,
//	Boundaries = 1 << 1,
//	Everything = (9223372036854775807L * 2 + 1)
//}

//[Native]
//public enum UIImpactFeedbackStyle : nint
//{
//	Light,
//	Medium,
//	Heavy
//}

//[Native]
//public enum UINotificationFeedbackType : nint
//{
//	Success,
//	Warning,
//	Error
//}

//[NoWatch, NoTV, NoMac, iOS (11,0)]
//[Native]
//public enum UIDocumentBrowserErrorCode : nint
//{
//	UIDocumentBrowserErrorGeneric = 1
//}

//[NoTV, iOS (11,0)]
//[Native]
//public enum UIDocumentBrowserImportMode : nuint
//{
//	None,
//	Copy,
//	Move
//}

//[NoTV, iOS (11,0)]
//[Native]
//public enum UIDocumentBrowserUserInterfaceStyle : nuint
//{
//	White = 0,
//	Light,
//	Dark
//}

//[NoTV, iOS (11,0)]
//[Native]
//public enum UIDocumentBrowserActionAvailability : nint
//{
//	Menu = 1,
//	NavigationBar = 1 << 1
//}

//[Native]
//public enum ScreenAction : nint
//{
//	ScreenActionView = 0
//}

//[Native]
//public enum RichMediaAction : nint
//{
//	Play = 0,
//	Pause = 1,
//	Stop = 2,
//	Move = 3,
//	Refresh = 4
//}

//[Native]
//public enum BackgroundMode : nint
//{
//	Normal = 0,
//	Task = 1,
//	Fetch = 2
//}

//[Native]
//public enum CustomVarType : nint
//{
//	App = 0,
//	Screen = 1
//}

//[Native]
//public enum GestureEventType : nint
//{
//	Unknown = 0,
//	Tap = 1,
//	Swipe = 2,
//	Scroll = 3,
//	Pinch = 4,
//	Pan = 5,
//	Rotate = 6,
//	Refresh = 7,
//	DeviceRotate = 8
//}

//[Native]
//public enum GestureAction : nint
//{
//	Touch = 0,
//	Navigate = 1,
//	Download = 2,
//	Exit = 3,
//	Search = 4
//}

//[Native]
//public enum HitType : nint
//{
//	Unknown = 0,
//	Screen = 1,
//	Touch = 2,
//	Audio = 3,
//	Video = 4,
//	Animation = 5,
//	PodCast = 6,
//	Rss = 7,
//	Email = 8,
//	Advertising = 9,
//	AdTracking = 10,
//	ProductDisplay = 11,
//	Weborama = 12,
//	MvTesting = 13
//}

//[Native]
//public enum HitStatus : nint
//{
//	Failed = 0,
//	Success = 1
//}

//[Native]
//public enum OnAppAdAction : nint
//{
//	View = 0,
//	Touch = 1
//}

//[Native]
//public enum ProductAction : nint
//{
//	ProductActionView = 0
//}

//[Native]
//public enum SocketEnginePacketType : nint
//{
//	Open = 0,
//	Close = 1,
//	Ping = 2,
//	Pong = 3,
//	Message = 4,
//	Upgrade = 5,
//	Noop = 6
//}

//[Native]
//public enum SocketIOClientStatus : nint
//{
//	NotConnected = 0,
//	Disconnected = 1,
//	Connecting = 2,
//	Connected = 3
//}
